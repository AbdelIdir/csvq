//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import "github.com/mithrandie/csvq/lib/value"

//line parser.y:7
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const CASE = 57416
const IF = 57417
const ELSEIF = 57418
const WHILE = 57419
const WHEN = 57420
const THEN = 57421
const ELSE = 57422
const DO = 57423
const END = 57424
const DECLARE = 57425
const CURSOR = 57426
const FOR = 57427
const FETCH = 57428
const OPEN = 57429
const CLOSE = 57430
const DISPOSE = 57431
const NEXT = 57432
const PRIOR = 57433
const ABSOLUTE = 57434
const RELATIVE = 57435
const RANGE = 57436
const SEPARATOR = 57437
const PARTITION = 57438
const OVER = 57439
const COMMIT = 57440
const ROLLBACK = 57441
const CONTINUE = 57442
const BREAK = 57443
const EXIT = 57444
const PRINT = 57445
const PRINTF = 57446
const SOURCE = 57447
const TRIGGER = 57448
const FUNCTION = 57449
const AGGREGATE = 57450
const BEGIN = 57451
const RETURN = 57452
const IGNORE = 57453
const WITHIN = 57454
const VAR = 57455
const SHOW = 57456
const TIES = 57457
const NULLS = 57458
const TABLES = 57459
const VIEWS = 57460
const FIELDS = 57461
const CURSORS = 57462
const FUNCTIONS = 57463
const ERROR = 57464
const COUNT = 57465
const LISTAGG = 57466
const AGGREGATE_FUNCTION = 57467
const FUNCTION_WITH_INS = 57468
const COMPARISON_OP = 57469
const STRING_OP = 57470
const SUBSTITUTION_OP = 57471
const UMINUS = 57472
const UPLUS = 57473

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"RANGE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"TABLES",
	"VIEWS",
	"FIELDS",
	"CURSORS",
	"FUNCTIONS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2088

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 164,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	13, 164,
	15, 164,
	17, 164,
	19, 164,
	138, 164,
	-2, 1,
	-1, 61,
	139, 245,
	-2, 164,
	-1, 99,
	78, 295,
	-2, 377,
	-1, 101,
	58, 144,
	59, 144,
	60, 144,
	-2, 155,
	-1, 138,
	64, 377,
	68, 377,
	69, 377,
	-2, 127,
	-1, 139,
	64, 377,
	68, 377,
	69, 377,
	-2, 128,
	-1, 140,
	64, 377,
	68, 377,
	69, 377,
	-2, 130,
	-1, 155,
	76, 1,
	80, 1,
	82, 1,
	-2, 164,
	-1, 214,
	64, 377,
	68, 377,
	69, 377,
	-2, 302,
	-1, 227,
	64, 377,
	68, 377,
	69, 377,
	-2, 120,
	-1, 228,
	64, 377,
	68, 377,
	69, 377,
	-2, 121,
	-1, 232,
	64, 377,
	68, 377,
	69, 377,
	-2, 137,
	-1, 234,
	82, 4,
	-2, 164,
	-1, 245,
	70, 0,
	127, 0,
	134, 0,
	-2, 215,
	-1, 246,
	70, 0,
	127, 0,
	134, 0,
	-2, 217,
	-1, 286,
	82, 1,
	-2, 164,
	-1, 296,
	48, 379,
	-2, 304,
	-1, 315,
	64, 377,
	68, 377,
	69, 377,
	-2, 288,
	-1, 331,
	64, 377,
	68, 377,
	69, 377,
	-2, 372,
	-1, 341,
	64, 377,
	68, 377,
	69, 377,
	-2, 138,
	-1, 364,
	82, 1,
	-2, 164,
	-1, 370,
	70, 0,
	127, 0,
	134, 0,
	-2, 226,
	-1, 392,
	78, 1,
	80, 1,
	82, 1,
	-2, 164,
	-1, 395,
	64, 377,
	68, 377,
	69, 377,
	-2, 160,
	-1, 399,
	64, 377,
	68, 377,
	69, 377,
	-2, 206,
	-1, 427,
	64, 377,
	68, 377,
	69, 377,
	-2, 150,
	-1, 461,
	76, 4,
	78, 4,
	80, 4,
	82, 4,
	-2, 164,
	-1, 464,
	82, 4,
	-2, 164,
	-1, 465,
	82, 4,
	-2, 164,
	-1, 480,
	82, 299,
	-2, 377,
	-1, 492,
	64, 377,
	68, 377,
	69, 377,
	-2, 163,
	-1, 529,
	13, 389,
	73, 389,
	138, 389,
	-2, 75,
	-1, 551,
	76, 4,
	80, 4,
	82, 4,
	-2, 164,
	-1, 556,
	82, 4,
	-2, 164,
	-1, 557,
	82, 4,
	-2, 164,
	-1, 562,
	76, 1,
	80, 1,
	82, 1,
	-2, 164,
	-1, 564,
	80, 296,
	82, 296,
	-2, 377,
	-1, 581,
	64, 377,
	68, 377,
	69, 377,
	-2, 317,
	-1, 588,
	64, 377,
	68, 377,
	69, 377,
	-2, 154,
	-1, 603,
	64, 377,
	68, 377,
	69, 377,
	-2, 84,
	-1, 607,
	82, 6,
	-2, 164,
	-1, 613,
	139, 104,
	142, 104,
	-2, 377,
	-1, 618,
	82, 4,
	-2, 164,
	-1, 666,
	82, 6,
	-2, 164,
	-1, 667,
	82, 6,
	-2, 164,
	-1, 671,
	82, 4,
	-2, 164,
	-1, 675,
	78, 4,
	80, 4,
	82, 4,
	-2, 164,
	-1, 684,
	64, 377,
	68, 377,
	69, 377,
	-2, 286,
	-1, 698,
	76, 6,
	78, 6,
	80, 6,
	82, 6,
	-2, 164,
	-1, 704,
	132, 55,
	-2, 377,
	-1, 719,
	64, 377,
	68, 377,
	69, 377,
	-2, 283,
	-1, 731,
	76, 6,
	80, 6,
	82, 6,
	-2, 164,
	-1, 734,
	82, 8,
	-2, 164,
	-1, 739,
	82, 6,
	-2, 164,
	-1, 742,
	76, 4,
	80, 4,
	82, 4,
	-2, 164,
	-1, 759,
	82, 6,
	-2, 164,
	-1, 784,
	82, 6,
	-2, 164,
	-1, 788,
	78, 6,
	80, 6,
	82, 6,
	-2, 164,
	-1, 790,
	76, 8,
	78, 8,
	80, 8,
	82, 8,
	-2, 164,
	-1, 793,
	82, 8,
	-2, 164,
	-1, 794,
	82, 8,
	-2, 164,
	-1, 806,
	76, 8,
	80, 8,
	82, 8,
	-2, 164,
	-1, 813,
	76, 6,
	80, 6,
	82, 6,
	-2, 164,
	-1, 817,
	82, 8,
	-2, 164,
	-1, 825,
	82, 8,
	-2, 164,
	-1, 829,
	78, 8,
	80, 8,
	82, 8,
	-2, 164,
	-1, 841,
	76, 8,
	80, 8,
	82, 8,
	-2, 164,
}

const yyPrivate = 57344

const yyLast = 2963

var yyAct = [...]int{

	75, 23, 824, 782, 807, 670, 823, 656, 732, 98,
	783, 196, 669, 637, 552, 439, 213, 536, 363, 296,
	483, 531, 663, 144, 272, 452, 342, 406, 117, 325,
	454, 122, 123, 501, 314, 455, 295, 62, 193, 509,
	311, 316, 304, 396, 493, 362, 414, 413, 537, 205,
	199, 63, 82, 292, 113, 80, 160, 149, 307, 1,
	23, 168, 297, 169, 210, 175, 159, 357, 662, 429,
	735, 177, 418, 106, 419, 420, 415, 412, 171, 602,
	416, 578, 116, 434, 349, 21, 348, 20, 175, 235,
	547, 176, 101, 548, 567, 191, 175, 545, 544, 183,
	530, 505, 22, 156, 201, 201, 496, 236, 164, 432,
	163, 162, 215, 201, 294, 165, 166, 195, 240, 154,
	223, 224, 225, 157, 156, 226, 350, 217, 58, 164,
	158, 163, 162, 72, 57, 153, 165, 166, 797, 780,
	779, 778, 164, 777, 21, 236, 20, 186, 236, 165,
	166, 776, 241, 401, 153, 204, 23, 200, 200, 169,
	115, 115, 159, 118, 174, 417, 216, 236, 755, 239,
	747, 746, 745, 744, 668, 143, 265, 649, 268, 418,
	648, 419, 420, 415, 412, 647, 646, 416, 164, 645,
	163, 162, 624, 57, 43, 165, 166, 761, 44, 201,
	604, 601, 596, 174, 201, 43, 590, 201, 203, 577,
	720, 318, 174, 569, 568, 243, 247, 566, 202, 157,
	156, 559, 543, 541, 529, 164, 158, 163, 162, 489,
	478, 339, 165, 166, 477, 23, 353, 476, 356, 475,
	21, 267, 20, 306, 101, 323, 270, 271, 340, 107,
	107, 103, 262, 104, 264, 102, 451, 284, 263, 275,
	354, 291, 756, 360, 334, 727, 726, 309, 310, 516,
	402, 326, 330, 725, 724, 723, 695, 689, 373, 238,
	685, 338, 275, 682, 680, 468, 438, 23, 437, 57,
	436, 318, 195, 404, 409, 201, 435, 386, 359, 421,
	367, 384, 201, 366, 201, 382, 377, 336, 335, 45,
	46, 47, 48, 51, 49, 50, 56, 52, 53, 54,
	55, 423, 344, 3, 192, 440, 109, 182, 444, 409,
	409, 408, 400, 181, 440, 180, 110, 458, 411, 388,
	424, 169, 506, 229, 790, 410, 391, 698, 200, 449,
	461, 115, 59, 218, 153, 141, 696, 463, 466, 467,
	282, 459, 440, 576, 571, 23, 445, 447, 57, 574,
	355, 21, 650, 20, 109, 109, 442, 469, 174, 361,
	333, 428, 3, 430, 431, 58, 651, 324, 739, 667,
	220, 666, 607, 23, 174, 694, 729, 693, 692, 691,
	44, 184, 690, 409, 174, 485, 503, 486, 185, 471,
	571, 644, 120, 283, 722, 570, 161, 332, 201, 488,
	57, 840, 500, 515, 472, 833, 827, 820, 174, 819,
	812, 798, 795, 318, 522, 174, 219, 174, 789, 786,
	502, 741, 487, 738, 444, 737, 708, 409, 697, 21,
	679, 20, 491, 678, 514, 511, 504, 673, 119, 221,
	222, 621, 23, 513, 512, 23, 23, 517, 620, 457,
	561, 355, 479, 521, 470, 460, 390, 21, 3, 20,
	539, 121, 826, 794, 502, 174, 825, 174, 550, 174,
	793, 554, 555, 557, 556, 465, 464, 318, 57, 524,
	525, 526, 527, 825, 817, 784, 409, 187, 201, 201,
	759, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55, 671, 618, 785, 57, 582, 583, 784,
	572, 440, 364, 580, 443, 409, 409, 589, 400, 573,
	575, 605, 379, 408, 672, 365, 598, 579, 671, 364,
	286, 132, 23, 587, 808, 733, 553, 23, 23, 597,
	194, 594, 273, 23, 168, 167, 169, 831, 830, 159,
	804, 174, 599, 600, 615, 610, 611, 715, 616, 409,
	609, 714, 677, 622, 623, 201, 201, 201, 629, 628,
	676, 549, 826, 73, 28, 57, 785, 672, 57, 57,
	365, 843, 839, 444, 640, 641, 642, 821, 23, 3,
	811, 773, 636, 740, 634, 626, 502, 560, 837, 23,
	654, 802, 627, 653, 712, 490, 157, 156, 43, 495,
	211, 96, 164, 158, 163, 162, 169, 482, 260, 165,
	166, 261, 736, 358, 201, 674, 681, 21, 237, 20,
	308, 127, 128, 28, 686, 683, 133, 134, 137, 135,
	136, 281, 280, 688, 208, 249, 43, 23, 23, 248,
	250, 700, 23, 279, 705, 706, 23, 278, 457, 612,
	174, 510, 457, 709, 643, 57, 440, 3, 703, 586,
	57, 57, 585, 97, 717, 584, 57, 508, 710, 23,
	174, 718, 713, 252, 251, 418, 730, 419, 420, 174,
	125, 126, 129, 130, 507, 3, 77, 78, 79, 394,
	96, 81, 207, 208, 209, 289, 67, 9, 743, 498,
	499, 749, 23, 748, 520, 23, 770, 771, 290, 757,
	23, 57, 519, 23, 630, 426, 197, 772, 5, 28,
	327, 328, 57, 540, 546, 538, 90, 768, 112, 329,
	23, 532, 533, 534, 535, 111, 775, 787, 152, 774,
	632, 633, 707, 625, 614, 608, 792, 606, 326, 542,
	796, 433, 97, 174, 337, 23, 9, 799, 198, 23,
	305, 23, 800, 293, 23, 23, 803, 206, 702, 303,
	57, 57, 230, 767, 131, 57, 58, 23, 148, 57,
	172, 151, 814, 768, 23, 214, 768, 768, 23, 114,
	816, 822, 758, 617, 285, 8, 23, 407, 28, 768,
	23, 834, 57, 832, 60, 99, 7, 6, 378, 69,
	768, 312, 23, 842, 313, 299, 298, 845, 768, 172,
	721, 88, 768, 138, 139, 140, 68, 142, 172, 767,
	71, 769, 767, 767, 768, 57, 64, 70, 57, 65,
	631, 497, 398, 57, 397, 767, 57, 170, 150, 393,
	28, 288, 9, 518, 425, 3, 767, 105, 17, 16,
	74, 124, 14, 57, 767, 456, 453, 13, 767, 178,
	179, 12, 10, 15, 11, 99, 728, 764, 189, 190,
	767, 659, 762, 657, 345, 343, 170, 769, 57, 4,
	769, 769, 57, 145, 57, 2, 0, 57, 57, 0,
	658, 0, 0, 769, 750, 751, 752, 753, 754, 0,
	57, 274, 277, 0, 769, 227, 228, 57, 0, 0,
	0, 57, 769, 0, 0, 0, 769, 232, 28, 57,
	0, 9, 0, 57, 0, 0, 0, 781, 769, 242,
	0, 0, 244, 245, 246, 57, 0, 0, 253, 254,
	255, 256, 257, 258, 259, 0, 28, 0, 805, 658,
	658, 809, 810, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 815, 0, 369, 0, 371, 372,
	287, 0, 0, 9, 0, 828, 0, 168, 167, 169,
	0, 658, 159, 835, 172, 495, 315, 838, 0, 0,
	0, 0, 0, 0, 331, 381, 0, 0, 0, 844,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	172, 0, 0, 0, 658, 28, 44, 763, 28, 28,
	0, 0, 658, 0, 368, 418, 370, 419, 420, 415,
	412, 638, 639, 416, 441, 300, 202, 0, 0, 157,
	156, 448, 658, 450, 0, 164, 158, 163, 162, 380,
	0, 9, 165, 166, 418, 173, 419, 420, 415, 412,
	687, 0, 416, 0, 0, 395, 399, 658, 0, 0,
	0, 658, 0, 763, 0, 0, 763, 763, 0, 9,
	0, 427, 0, 0, 0, 43, 0, 0, 0, 763,
	0, 172, 0, 172, 0, 172, 658, 0, 0, 484,
	763, 484, 0, 484, 0, 28, 0, 0, 763, 0,
	28, 28, 763, 0, 0, 0, 28, 0, 484, 0,
	0, 0, 462, 99, 763, 0, 0, 45, 46, 47,
	48, 51, 49, 50, 56, 52, 53, 54, 55, 0,
	0, 473, 168, 167, 169, 0, 0, 159, 9, 0,
	301, 9, 9, 0, 0, 480, 0, 0, 0, 0,
	0, 28, 0, 0, 0, 0, 212, 0, 0, 0,
	492, 0, 28, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 168, 167, 169, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	0, 0, 0, 0, 157, 156, 0, 0, 315, 0,
	164, 158, 163, 162, 0, 0, 66, 165, 166, 261,
	28, 28, 0, 0, 0, 28, 0, 0, 0, 28,
	0, 0, 212, 0, 0, 0, 0, 0, 9, 108,
	0, 0, 0, 9, 9, 0, 0, 157, 156, 9,
	563, 0, 28, 164, 158, 163, 162, 564, 0, 0,
	165, 166, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 0, 484, 28, 635, 0, 28, 0,
	0, 0, 0, 28, 9, 588, 28, 0, 0, 0,
	0, 0, 0, 0, 0, 9, 652, 0, 188, 0,
	0, 0, 0, 28, 603, 655, 0, 0, 0, 0,
	0, 0, 613, 374, 0, 0, 375, 376, 0, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 28, 44,
	389, 0, 28, 0, 28, 0, 0, 28, 28, 0,
	0, 484, 0, 9, 9, 0, 0, 0, 9, 76,
	28, 0, 9, 0, 0, 0, 0, 28, 0, 0,
	0, 28, 0, 0, 0, 0, 0, 0, 0, 28,
	0, 0, 0, 28, 0, 9, 0, 0, 0, 716,
	0, 108, 0, 0, 0, 28, 0, 0, 0, 0,
	0, 276, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 684, 0, 0, 0, 9, 0,
	302, 9, 0, 302, 0, 0, 9, 0, 0, 9,
	0, 0, 0, 0, 0, 0, 699, 99, 0, 0,
	701, 704, 0, 0, 0, 0, 9, 0, 711, 0,
	45, 46, 47, 48, 51, 49, 50, 56, 52, 53,
	54, 55, 0, 719, 0, 0, 276, 0, 276, 276,
	0, 9, 0, 446, 0, 9, 0, 9, 0, 0,
	9, 9, 0, 0, 0, 0, 0, 0, 0, 0,
	523, 0, 0, 9, 528, 276, 383, 385, 387, 0,
	9, 0, 0, 0, 9, 0, 0, 0, 0, 760,
	0, 0, 9, 0, 0, 0, 9, 0, 302, 0,
	302, 0, 0, 0, 108, 0, 108, 108, 9, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 99, 0, 0, 44, 77, 78, 79, 0,
	96, 81, 58, 0, 0, 0, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 76, 0, 0, 0, 44,
	77, 78, 79, 0, 96, 81, 58, 0, 0, 0,
	591, 592, 593, 595, 818, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 276, 836, 276, 91, 0, 0, 0, 92, 0,
	0, 0, 97, 0, 0, 89, 85, 0, 276, 0,
	0, 0, 44, 0, 147, 94, 0, 0, 91, 0,
	0, 0, 92, 0, 302, 0, 97, 0, 0, 89,
	85, 300, 202, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 146, 0, 45, 46, 47, 48,
	51, 49, 50, 56, 87, 95, 86, 55, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 84, 93, 100,
	45, 46, 47, 48, 51, 49, 50, 56, 87, 95,
	86, 55, 168, 167, 169, 0, 0, 159, 317, 276,
	83, 84, 93, 100, 0, 273, 44, 77, 78, 79,
	0, 96, 81, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 302, 76, 0, 0, 0,
	0, 0, 0, 45, 46, 47, 48, 51, 49, 50,
	56, 52, 53, 54, 55, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 156, 301, 0, 0, 0,
	164, 158, 163, 162, 0, 91, 0, 165, 166, 92,
	0, 0, 0, 97, 211, 0, 89, 85, 0, 0,
	0, 0, 0, 0, 276, 0, 94, 44, 77, 78,
	79, 0, 96, 81, 58, 0, 0, 0, 0, 0,
	0, 302, 302, 302, 0, 0, 0, 76, 0, 168,
	167, 169, 0, 0, 159, 0, 0, 45, 46, 47,
	48, 51, 49, 50, 56, 87, 95, 86, 55, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 84, 93,
	100, 0, 0, 0, 0, 0, 91, 0, 0, 0,
	92, 276, 0, 0, 97, 0, 0, 89, 85, 0,
	302, 0, 0, 44, 77, 78, 79, 94, 96, 81,
	58, 157, 156, 0, 0, 0, 0, 164, 158, 163,
	162, 0, 0, 76, 165, 166, 0, 0, 0, 0,
	44, 77, 78, 79, 0, 96, 81, 58, 45, 46,
	47, 48, 51, 49, 50, 56, 320, 321, 319, 322,
	76, 0, 0, 0, 0, 0, 317, 0, 83, 84,
	93, 100, 91, 0, 0, 0, 92, 0, 0, 0,
	97, 0, 43, 89, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 92, 0, 0, 0, 97, 0, 0,
	89, 85, 0, 0, 0, 0, 44, 77, 78, 79,
	94, 96, 81, 58, 45, 46, 47, 48, 51, 49,
	50, 56, 87, 95, 86, 55, 76, 0, 474, 167,
	169, 0, 0, 159, 83, 84, 93, 100, 0, 0,
	0, 45, 46, 47, 48, 51, 49, 50, 56, 87,
	95, 86, 55, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 84, 93, 100, 91, 0, 0, 0, 92,
	0, 0, 0, 97, 0, 0, 89, 85, 0, 0,
	0, 0, 44, 77, 78, 79, 94, 96, 81, 58,
	157, 156, 0, 0, 0, 0, 164, 158, 163, 162,
	0, 0, 76, 165, 166, 0, 0, 0, 0, 44,
	77, 233, 79, 0, 96, 81, 58, 45, 46, 47,
	48, 51, 49, 50, 56, 87, 95, 86, 55, 76,
	0, 0, 0, 0, 0, 0, 0, 83, 84, 93,
	61, 91, 0, 0, 0, 92, 0, 0, 0, 97,
	0, 0, 89, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 44, 0, 91, 0,
	0, 0, 92, 58, 0, 0, 97, 0, 35, 89,
	85, 0, 0, 0, 0, 0, 0, 0, 24, 94,
	0, 25, 0, 45, 46, 47, 48, 51, 49, 50,
	56, 320, 321, 319, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 84, 93, 100, 0, 0, 44,
	45, 46, 47, 48, 51, 49, 50, 56, 87, 95,
	86, 55, 0, 0, 0, 43, 766, 765, 0, 664,
	83, 84, 93, 100, 0, 27, 0, 0, 32, 30,
	31, 29, 0, 168, 167, 169, 0, 0, 159, 0,
	33, 34, 351, 352, 0, 37, 38, 39, 40, 734,
	0, 0, 665, 0, 0, 26, 36, 45, 46, 47,
	48, 51, 49, 50, 56, 52, 53, 54, 55, 44,
	0, 0, 0, 0, 0, 0, 58, 0, 0, 0,
	0, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 24, 0, 0, 25, 157, 156, 0, 0, 0,
	0, 164, 158, 163, 162, 0, 0, 0, 165, 166,
	45, 46, 47, 48, 51, 49, 50, 56, 52, 53,
	54, 55, 0, 0, 44, 0, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 35, 0, 43, 347,
	346, 0, 41, 0, 0, 0, 24, 0, 27, 25,
	0, 32, 30, 31, 29, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 351, 352, 42, 37, 38,
	39, 40, 0, 0, 0, 0, 0, 0, 26, 36,
	45, 46, 47, 48, 51, 49, 50, 56, 52, 53,
	54, 55, 44, 43, 661, 660, 0, 664, 0, 58,
	0, 0, 0, 27, 35, 0, 32, 30, 31, 29,
	0, 0, 0, 0, 24, 0, 0, 25, 33, 34,
	0, 0, 0, 37, 38, 39, 40, 0, 0, 0,
	665, 0, 0, 26, 36, 45, 46, 47, 48, 51,
	49, 50, 56, 52, 53, 54, 55, 0, 0, 0,
	0, 0, 0, 0, 168, 167, 169, 0, 0, 159,
	0, 43, 19, 18, 0, 41, 0, 0, 841, 0,
	0, 27, 0, 0, 32, 30, 31, 29, 0, 0,
	0, 0, 0, 168, 167, 169, 33, 34, 159, 0,
	42, 37, 38, 39, 40, 0, 0, 829, 0, 0,
	0, 26, 36, 45, 46, 47, 48, 51, 49, 50,
	56, 52, 53, 54, 55, 0, 157, 156, 0, 0,
	0, 0, 164, 158, 163, 162, 168, 167, 169, 165,
	166, 159, 0, 0, 0, 0, 168, 167, 169, 0,
	813, 159, 0, 0, 0, 157, 156, 0, 0, 0,
	806, 164, 158, 163, 162, 168, 167, 169, 165, 166,
	159, 0, 0, 0, 0, 168, 167, 169, 0, 788,
	159, 0, 0, 0, 0, 0, 168, 167, 169, 742,
	0, 159, 0, 0, 0, 0, 0, 0, 157, 156,
	731, 0, 0, 0, 164, 158, 163, 162, 157, 156,
	0, 165, 166, 0, 164, 158, 163, 162, 168, 167,
	169, 165, 166, 159, 0, 0, 0, 157, 156, 0,
	0, 0, 675, 164, 158, 163, 162, 157, 156, 0,
	165, 166, 0, 164, 158, 163, 162, 0, 157, 156,
	165, 166, 0, 0, 164, 158, 163, 162, 168, 167,
	169, 165, 166, 159, 0, 0, 0, 0, 168, 167,
	169, 0, 562, 159, 0, 0, 44, 0, 0, 0,
	157, 156, 551, 0, 0, 0, 164, 158, 163, 162,
	168, 167, 169, 165, 166, 159, 76, 0, 0, 0,
	168, 167, 169, 0, 481, 159, 0, 44, 0, 0,
	168, 167, 169, 0, 392, 159, 0, 0, 0, 0,
	157, 156, 0, 0, 155, 422, 164, 158, 163, 162,
	157, 156, 0, 165, 166, 44, 164, 158, 163, 162,
	168, 167, 169, 165, 166, 159, 0, 0, 0, 44,
	0, 0, 157, 156, 0, 202, 234, 0, 164, 158,
	163, 162, 157, 156, 0, 165, 166, 405, 164, 158,
	163, 162, 157, 156, 0, 165, 166, 0, 164, 158,
	163, 162, 44, 0, 269, 165, 166, 45, 46, 47,
	48, 51, 49, 50, 56, 52, 53, 54, 55, 44,
	0, 266, 157, 156, 0, 0, 0, 0, 164, 158,
	163, 162, 0, 0, 0, 165, 166, 0, 45, 46,
	47, 48, 51, 49, 50, 56, 52, 53, 54, 55,
	44, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 0, 0, 0, 0, 45, 46, 47, 48,
	51, 49, 50, 56, 52, 53, 54, 55, 0, 0,
	45, 46, 47, 48, 51, 49, 50, 56, 52, 53,
	54, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 46, 47, 48, 51, 49, 50,
	56, 52, 53, 54, 55, 0, 0, 0, 0, 0,
	45, 46, 47, 48, 51, 49, 50, 56, 52, 53,
	54, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55,
}
var yyPact = [...]int{

	2408, -1000, 220, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2002, 1926,
	-1000, -1000, 236, 198, 735, 728, 795, 2836, -1000, 374,
	2215, 2215, 620, -1000, -1000, 792, 539, 1926, 1926, 1926,
	233, 1581, 802, 743, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 225, -1000, 2408,
	2655, 1899, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 225, -1000, -1000, -47, -72, -1000, -1000, -1000,
	-1000, -1000, -1000, 1926, 1926, 197, 195, 189, -1000, 1926,
	274, 188, 1926, 1926, 2215, 186, -1000, -1000, 482, 1784,
	1899, 707, 768, 2741, 194, 783, 664, 558, -1000, 555,
	1926, 2215, 2741, -1000, -15, 224, -1000, 352, -1000, 2215,
	2215, 2215, -1000, -1000, 2215, -1000, -1000, -1000, -1000, 1926,
	1926, 209, -1000, -1000, -1000, -1000, -1000, 788, 1784, 1160,
	1784, 2105, 2685, 25, 584, 795, -1000, -1000, -1000, -1000,
	-24, 2215, -1000, 1926, -1000, 2408, 1926, 1926, 1926, 569,
	601, 642, 1926, 1926, 1926, 1926, 1926, 1926, 1926, -1000,
	499, 113, 119, 115, 237, 2805, 1742, 2788, -1000, -1000,
	1926, 558, 558, 484, 144, 144, 609, 600, -1000, 92,
	-1000, 290, 558, 470, 1926, 113, 680, 696, 2741, 777,
	-28, -1000, -1000, 1658, 785, 772, 1658, 589, 589, 589,
	1823, -1000, 106, -1000, 1117, 249, 723, 795, 1926, 332,
	242, 170, 169, -1000, -1000, -1000, 764, 1784, 1784, 711,
	2215, 1926, 1784, 1926, 2285, 2215, 795, 2215, 3, 579,
	743, 241, 1784, 469, 55, -25, -25, 622, 1926, 144,
	1926, 144, 144, 9, 9, -1000, -1000, -1000, -4, 92,
	-1000, 1926, -1000, -1000, -1000, -1000, -1000, 1926, -1000, -1000,
	1926, 1605, 462, 1926, -1000, 1899, -1000, -1000, 144, 167,
	163, 159, 569, -1000, 1926, 394, 2408, 2645, 673, 1926,
	2078, 132, 2755, 2682, 2741, 772, 23, -1000, 2713, -1000,
	-1000, 1052, -1000, 1658, 705, 1926, -1000, 237, -1000, 237,
	237, -1000, -33, 759, -1000, 1784, -1000, -1000, -55, 158,
	152, 150, 148, -1000, 2215, 555, -1000, 396, 1375, 2682,
	-1000, 1784, 555, 2215, 555, 117, 2215, 795, -1000, -1000,
	-1000, 1784, 393, 218, -1000, -1000, 2002, 1926, -1000, -1000,
	-1000, -1000, -1000, 415, -1000, -35, 414, 2215, 2215, -1000,
	147, 2215, 392, 452, 2408, 1926, -1000, -1000, 1963, -1000,
	-25, -1000, -1000, -1000, 100, 98, 95, 91, 390, 1926,
	2635, 572, 121, -1000, 121, -1000, 121, -1000, 355, 90,
	551, -1000, 2408, -1000, 1926, 952, -1000, -36, 686, 1784,
	-1000, 144, 2682, -1000, -1000, 2215, 783, -41, 208, -78,
	-1000, -1000, 666, 649, 631, 631, 656, 1658, -1000, -1000,
	-1000, -1000, 2215, 130, 772, 701, 692, 1784, 605, -1000,
	-1000, 605, 1823, 2215, 1742, 558, 558, 558, 1926, 85,
	-42, -1000, 730, 2215, 720, -1000, 2682, 716, -1000, 84,
	-1000, 757, 83, -44, -1000, -1000, -45, 719, -49, -1000,
	514, 2285, 2613, 478, 2285, 2285, 413, 412, 555, 82,
	542, 388, -1000, 2603, 1926, -1000, -1000, -1000, -1000, -1000,
	1784, 1926, 144, 78, -48, 75, 74, -1000, 321, 252,
	-1000, 482, 1784, -1000, 556, 254, 2078, 247, -1000, -1000,
	-1000, 70, -61, -1000, 772, 2682, 1926, 1658, 1658, 647,
	-1000, 644, 641, 631, -1000, -1000, -1000, -1000, -1000, 1926,
	1926, -1000, -1000, 67, 1926, 1926, 1605, 1926, 63, 756,
	2215, -1000, -1000, -1000, 2682, 2682, 62, -63, 1926, 61,
	2215, 755, 283, 753, 795, 795, 1926, 752, 795, -1000,
	-1000, 2285, 444, 1926, 386, 379, 2285, 2285, 53, 751,
	-1000, 540, 2408, 92, 1667, -1000, -1000, 144, -1000, -1000,
	-1000, 704, -1000, -1000, -1000, -1000, 739, 593, 2682, -1000,
	-1000, 1784, 656, 1016, 1658, 1658, 1658, 636, 1784, -1000,
	314, 50, 47, 46, 41, 38, 275, 555, -1000, -1000,
	-1000, 730, 2215, 1784, -1000, -1000, 555, 2340, 282, -1000,
	-1000, -1000, 719, 1784, 280, 35, 468, 375, 2285, 2563,
	513, 505, 371, 368, -1000, 146, -1000, 524, -1000, -1000,
	145, -1000, -1000, -1000, 144, -1000, -1000, -1000, 1926, 142,
	1016, 1045, 656, 1658, 139, 305, 302, 301, 300, 298,
	138, 240, -1000, -1000, -1000, -1000, 366, 215, -1000, -1000,
	2002, 1926, -1000, -1000, 1926, 1926, 2340, 2340, 750, 364,
	443, 2285, 1926, 550, -1000, 2285, -1000, -1000, 504, 500,
	555, -1000, 707, -1000, 1784, 2215, -1000, 1926, 656, 318,
	137, 136, 135, 128, 127, 318, 299, -1000, 2340, 2531,
	477, 2188, 6, 578, 1784, 363, 361, 279, 538, 359,
	-1000, 2520, -1000, 478, -1000, -1000, 34, 33, 32, 1784,
	31, 707, 689, 318, 318, 318, 318, 318, 29, 124,
	-1000, 2340, 430, 1926, 2162, 2215, 2215, -1000, -1000, 2340,
	-1000, 536, 2285, -1000, -1000, -1000, -1000, -1000, -1000, 1926,
	12, 4, 2, 1, 0, -1000, 318, 449, 357, 2340,
	2510, 356, 212, -1000, -1000, 2002, 1926, -1000, -1000, -1000,
	409, 402, 350, -1000, 521, -1000, -1000, -1000, -1000, -1000,
	-1000, -1, 349, 425, 2340, 1926, 547, -1000, 2340, 493,
	2162, 2491, 476, 2162, 2162, -1000, -1000, -1000, 535, 348,
	-1000, 2481, -1000, 477, -1000, -1000, 2162, 424, 1926, 347,
	345, -1000, 532, 2340, -1000, 406, 344, 2162, 2438, 491,
	490, -1000, 520, 343, 423, 2162, 1926, 544, -1000, 2162,
	-1000, -1000, -1000, 527, 339, -1000, 2409, -1000, 476, -1000,
	526, 2162, -1000, -1000, 516, -1000,
}
var yyPgo = [...]int{

	0, 59, 26, 7, 197, 322, 126, 925, 86, 923,
	84, 919, 915, 914, 913, 68, 22, 912, 911, 907,
	904, 903, 902, 48, 17, 21, 901, 897, 35, 896,
	895, 30, 25, 892, 891, 890, 889, 888, 748, 69,
	73, 887, 49, 42, 884, 883, 11, 881, 44, 879,
	102, 878, 57, 51, 55, 52, 37, 815, 34, 756,
	20, 43, 874, 872, 871, 870, 1256, 869, 867, 866,
	860, 1095, 726, 856, 851, 41, 210, 850, 53, 62,
	50, 846, 19, 845, 13, 844, 841, 839, 9, 24,
	838, 33, 16, 36, 15, 40, 837, 836, 827, 27,
	825, 18, 45, 5, 12, 10, 3, 2, 6, 38,
	824, 14, 823, 8, 822, 4, 820, 0, 133, 23,
	593, 819, 54, 64, 56, 47, 39, 46, 58, 811,
	29, 416,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 26, 27, 27, 27,
	27, 28, 29, 29, 30, 31, 31, 32, 32, 32,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 34, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 37, 37, 37, 38,
	39, 39, 39, 39, 40, 40, 41, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 53, 53, 53, 53, 54, 55, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 64, 64,
	64, 65, 65, 66, 67, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 69, 69, 69, 69, 69, 69,
	69, 70, 70, 70, 70, 71, 71, 72, 72, 73,
	73, 73, 73, 73, 74, 74, 75, 75, 75, 75,
	75, 75, 75, 75, 76, 77, 77, 78, 78, 79,
	79, 79, 81, 82, 82, 82, 82, 82, 82, 82,
	83, 83, 83, 83, 83, 83, 84, 84, 85, 85,
	86, 86, 86, 87, 88, 88, 89, 89, 90, 90,
	91, 91, 92, 92, 93, 93, 80, 80, 94, 94,
	95, 95, 96, 96, 96, 96, 97, 98, 99, 99,
	100, 100, 101, 101, 102, 102, 103, 103, 104, 104,
	105, 105, 106, 106, 107, 107, 108, 108, 109, 109,
	110, 110, 111, 111, 112, 112, 113, 113, 114, 114,
	115, 115, 116, 116, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 118, 119, 119,
	120, 121, 121, 122, 122, 123, 123, 124, 124, 125,
	125, 126, 126, 127, 127, 128, 128, 129, 129, 130,
	130, 131, 131,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 2, 2, 2, 4,
	2, 2, 2, 2, 2, 4, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 3, 1, 3, 2, 4, 1, 1, 0, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 4,
	4, 6, 6, 4, 6, 4, 4, 4, 6, 4,
	4, 6, 4, 2, 3, 3, 3, 3, 3, 2,
	2, 3, 3, 2, 2, 0, 1, 4, 4, 5,
	5, 5, 5, 1, 5, 10, 8, 9, 9, 9,
	9, 9, 8, 10, 2, 0, 3, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 3, 1, 1, 3,
	4, 5, 6, 7, 5, 6, 2, 4, 1, 1,
	1, 3, 1, 5, 0, 1, 4, 5, 0, 2,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	5, 6, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 1, 3, 1, 3, 0, 1, 0, 1, 0,
	1, 0, 1, 1, 1, 0, 1, 0, 1, 0,
	1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -96, -97, -100, -72,
	-22, -20, -26, -27, -33, -21, -36, -37, 75, 74,
	-8, -10, -50, -117, 26, 29, 113, 83, -120, 89,
	87, 88, 86, 98, 99, 16, 114, 103, 104, 105,
	106, 77, 102, 73, 4, 115, 116, 117, 118, 120,
	121, 119, 123, 124, 125, 126, 122, -118, 11, 132,
	-57, 138, -56, -53, -69, -67, -66, -72, -73, -87,
	-68, -70, -118, -120, -35, -117, 24, 5, 6, 7,
	-54, 10, -55, 135, 136, 75, 125, 123, -74, 74,
	-59, 63, 67, 137, 84, 124, 9, 71, -88, -57,
	138, -39, 19, 15, 17, -41, -40, 13, -66, 138,
	138, 30, 30, -122, -121, -118, -122, -117, -118, 84,
	38, 107, -117, -117, -34, 90, 91, 31, 32, 92,
	93, 12, 12, 117, 118, 120, 121, 119, -57, -57,
	-57, 122, -57, -118, -119, -9, 113, 83, 6, -52,
	-51, -129, 25, 129, -1, 79, 128, 127, 134, 70,
	-124, -131, 136, 135, 133, 140, 141, 66, 65, 67,
	-57, -92, -38, -71, -50, 143, 138, 143, -57, -57,
	138, 138, 138, -88, 127, 134, -124, -131, -66, -57,
	-57, -117, 138, -109, 78, -92, -46, 39, 20, -80,
	-78, -117, 24, 14, -80, -42, 14, 58, 59, 60,
	-123, 72, -71, -92, -57, -117, -78, 142, 129, 84,
	38, 107, 108, -117, -117, -117, -117, -57, -57, 134,
	14, 142, -57, 6, 81, 64, 142, 64, -118, -119,
	142, -117, -57, -1, -57, -57, -57, -124, 68, 64,
	69, 62, 61, -57, -57, -57, -57, -57, -57, -57,
	139, 142, 139, 139, 139, -117, 6, -123, -117, 6,
	-123, -123, -89, 78, -59, 138, -66, -59, 68, 64,
	62, 61, 70, 123, -123, -110, 80, -57, -47, 45,
	42, -79, -78, 16, 142, -93, -82, -79, -81, -83,
	23, 138, -66, 14, -43, 18, -93, -128, 61, -128,
	-128, -95, -86, -85, -58, -57, -75, 133, -117, 125,
	123, 124, 126, 139, 138, -130, 22, 27, 28, 36,
	-122, -57, 85, 138, 22, 138, 138, 20, -53, -117,
	-92, -57, -2, -12, -5, -13, 75, 74, -8, -10,
	-6, 100, 101, -117, -119, -118, -117, 64, 64, -52,
	22, 138, -102, -101, 80, 76, -54, -55, -57, -59,
	-57, -59, -59, -92, -71, -71, -71, -58, -90, 80,
	-57, -59, 138, -66, 138, -66, 138, -66, -124, -71,
	82, -1, 79, -49, 46, -57, -61, -62, -63, -57,
	-75, 21, 138, -38, -117, 22, -99, -98, -56, -117,
	-80, -43, 54, -125, -127, 53, 57, 142, 49, 51,
	52, -117, 22, -82, -93, -44, 40, -57, -40, -39,
	-40, -40, 142, 22, 138, 138, 138, 138, 138, -94,
	-117, -38, -23, 138, -117, -56, 138, -56, -38, -94,
	-38, 139, -32, -29, -31, -28, -30, -118, -117, -119,
	82, 132, -57, -88, 81, 81, -117, -117, 138, -94,
	82, -102, -1, -57, 65, 139, 139, 139, 139, 82,
	-57, 79, 65, -60, -59, -60, -60, 87, 64, 139,
	74, -1, -57, -48, 47, 73, 142, -64, 43, 44,
	-60, -91, -56, -117, -42, 142, 134, 48, 48, -126,
	50, -126, -125, -127, -93, -117, 139, -43, -45, 41,
	42, -95, -117, -71, -123, -123, -123, -123, -71, 139,
	142, -25, 31, 32, 33, 34, -24, -23, 35, -91,
	37, 139, 22, 139, 142, 142, 35, 139, 142, 77,
	-2, 79, -111, 78, -2, -2, 81, 81, -38, 139,
	75, 82, 79, -57, -57, -59, 139, 142, 139, 139,
	94, 112, -109, -48, 115, -61, 116, 139, 142, -43,
	-99, -57, -82, -82, 48, 48, 48, -126, -57, -92,
	139, -71, -71, -71, -58, -71, 139, -130, -94, -56,
	-56, 139, 142, -57, 139, -117, 22, 109, 22, -28,
	-31, -31, -118, -57, 22, -32, -2, -112, 80, -57,
	82, 82, -2, -2, 139, 22, 75, -1, -89, -60,
	40, -65, 31, 32, 21, -38, -91, -84, 55, 56,
	-82, -82, -82, 48, 97, 139, 139, 139, 139, 139,
	97, 111, -38, -25, -24, -38, -3, -14, -5, -18,
	75, 74, -15, -16, 77, 110, 109, 109, 139, -104,
	-103, 80, 76, 82, -2, 79, 77, 77, 82, 82,
	138, -101, 138, -60, -57, 138, -84, 55, -82, 138,
	97, 97, 97, 97, 97, 138, 116, 82, 132, -57,
	-88, -57, -118, -119, -57, -3, -3, 22, 82, -104,
	-2, -57, 74, -2, 77, 77, -38, -46, -94, -57,
	-76, -77, 96, 138, 138, 138, 138, 138, -76, 97,
	-3, 79, -113, 78, 81, 64, 64, 82, 82, 109,
	75, 82, 79, -111, 139, 139, 139, 139, -46, 42,
	-76, -76, -76, -76, -76, 139, 138, -3, -114, 80,
	-57, -4, -17, -5, -19, 75, 74, -15, -16, -6,
	-117, -117, -3, 75, -2, -92, 139, 139, 139, 139,
	139, -76, -106, -105, 80, 76, 82, -3, 79, 82,
	132, -57, -88, 81, 81, 82, -103, 139, 82, -106,
	-3, -57, 74, -3, 77, -4, 79, -115, 78, -4,
	-4, 75, 82, 79, -113, -4, -116, 80, -57, 82,
	82, 75, -3, -108, -107, 80, 76, 82, -4, 79,
	77, 77, -105, 82, -108, -4, -57, 74, -4, 75,
	82, 79, -115, 75, -4, -107,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 294,
	41, 42, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 115, 73, 74, 0, 0, 0, 0, 0,
	0, 0, 34, 387, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 0, 367, -2,
	377, -2, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 178, 0, 170, 171, 172,
	173, 174, 175, 0, 0, 0, 364, 362, 253, 294,
	377, 0, 0, 0, 0, 363, 176, 177, 0, -2,
	164, -2, 0, 0, 0, 147, 0, 375, 145, 164,
	245, 0, 0, 69, 373, 371, 70, 0, 72, 0,
	0, 0, 93, 94, 0, 116, 117, 118, 119, 0,
	0, 0, 126, 131, 132, 133, 134, 0, -2, -2,
	-2, 136, 377, 193, 0, 0, 32, 33, 35, 165,
	168, 0, 388, 0, 3, -2, 0, 391, 392, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 378,
	377, 0, 0, 0, 0, 0, 245, 0, 239, 240,
	245, 375, 375, 0, 391, 392, 0, 0, 233, 243,
	244, 0, 375, 340, 0, 0, 157, 0, 0, 0,
	306, 267, 268, 0, 0, 149, 0, 385, 385, 385,
	0, 376, 0, 246, -2, 389, 0, 0, 0, 0,
	0, 0, 0, 95, 100, 114, 0, -2, -2, 0,
	0, 0, -2, 171, -2, 0, 0, 0, 0, 0,
	387, 0, 370, 324, 214, -2, -2, 0, 0, 0,
	0, 0, 0, 234, 235, 236, 237, 238, 241, 242,
	196, 0, 198, 213, 248, 179, 181, 245, 180, 182,
	245, 245, 298, 0, 216, 164, 199, 218, 0, 0,
	0, 0, 377, 124, 245, 0, -2, 377, 162, 0,
	0, 164, 269, 0, 0, 149, -2, 273, 274, 277,
	278, 164, 272, 0, 151, 0, 148, 0, 386, 0,
	0, 146, 310, 290, 292, -2, 289, 197, 178, 364,
	362, 363, 365, 247, 0, 164, 390, 0, 0, 0,
	374, -2, 164, 0, 164, 0, 0, 0, 125, 135,
	129, -2, 0, 0, 36, 37, 0, 294, 46, 47,
	48, 23, 24, 0, 369, 368, 0, 0, 0, 169,
	0, 0, 0, 324, -2, 0, 219, 220, 377, 223,
	-2, 227, 230, 303, 0, 0, 0, 0, 0, 0,
	377, 0, 164, 225, 164, 229, 164, 232, 0, 0,
	0, 341, -2, 139, 0, -2, 156, 202, 208, -2,
	207, 0, 0, 314, 270, 0, 147, 318, 0, 178,
	307, 320, 0, 0, 381, 381, 379, 0, 380, 383,
	384, 275, 0, 379, 149, 153, 0, -2, 141, 144,
	142, 143, 0, 0, 245, 375, 375, 375, 245, 0,
	308, 77, 87, 0, 83, 80, 0, 0, 92, 0,
	99, 0, 0, 107, 108, 102, 105, 101, 0, 96,
	0, -2, 377, 0, -2, -2, 0, 0, 164, 0,
	0, 0, 325, 377, 0, 249, 250, 251, 252, 293,
	-2, 0, 0, 0, 200, 0, 0, 122, 0, 254,
	40, 338, -2, 158, 160, 0, 0, 204, 209, 210,
	312, 0, 300, 271, 149, 0, 0, 0, 0, 0,
	382, 0, 0, 381, 305, 276, 279, 321, 140, 0,
	0, 311, 291, 0, 245, 245, 245, 245, 0, -2,
	0, 78, 88, 89, 0, 0, 0, 85, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 27,
	5, -2, 344, 0, 0, 0, -2, -2, 0, 0,
	38, 0, -2, 221, -2, 222, 224, 0, 228, 231,
	123, 0, 339, 159, 161, 203, 0, 164, 0, 316,
	319, -2, 280, 379, 0, 0, 0, 0, -2, 152,
	247, 0, 0, 0, 0, 0, 0, 164, 309, 90,
	91, 87, 0, -2, 81, 82, 164, -2, 0, 103,
	109, 106, 0, -2, 0, 0, 328, 0, -2, 377,
	0, 0, 0, 0, 166, 0, 39, 322, 297, 201,
	0, 205, 211, 212, 0, 315, 301, 281, 0, 0,
	379, 379, 284, 0, 0, 249, 250, 251, 252, 254,
	0, 0, 76, 79, 86, 98, 0, 0, 49, 50,
	0, 294, 61, 62, 0, 54, -2, -2, 0, 0,
	328, -2, 0, 0, 345, -2, 28, 29, 0, 0,
	164, 323, 155, 313, -2, 0, 282, 0, 285, 265,
	0, 0, 0, 0, 0, 265, 0, 110, -2, 377,
	0, 377, 193, 0, -2, 0, 0, 0, 0, 0,
	329, 377, 45, 342, 30, 31, 0, 0, 0, -2,
	0, 155, 0, 265, 265, 265, 265, 265, 0, 0,
	7, -2, 348, 0, -2, 0, 0, 111, 112, -2,
	43, 0, -2, 343, 167, 255, 287, 256, 264, 0,
	0, 0, 0, 0, 0, 262, 265, 332, 0, -2,
	377, 0, 0, 56, 57, 0, 294, 66, 67, 68,
	0, 0, 0, 44, 326, 266, 257, 258, 259, 260,
	261, 0, 0, 332, -2, 0, 0, 349, -2, 0,
	-2, 377, 0, -2, -2, 113, 327, 263, 0, 0,
	333, 377, 60, 346, 51, 9, -2, 352, 0, 0,
	0, 58, 0, -2, 347, 336, 0, -2, 377, 0,
	0, 59, 330, 0, 336, -2, 0, 0, 353, -2,
	52, 53, 331, 0, 0, 337, 377, 65, 350, 63,
	0, -2, 351, 64, 334, 335,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 141, 3, 3,
	138, 139, 133, 136, 142, 135, 143, 140, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 132,
	3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:209
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:219
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:230
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:236
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:240
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:246
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:250
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:256
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:260
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:264
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:268
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:272
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:276
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:280
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:284
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:288
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:314
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:320
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:330
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:334
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:338
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:346
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:352
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:356
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:362
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:372
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:382
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:386
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:390
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:398
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:404
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:408
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:412
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:416
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:420
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:430
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:440
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:444
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:448
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:454
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:458
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:464
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:468
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:474
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:478
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:482
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:490
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:500
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:504
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:512
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:516
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:522
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:526
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:530
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:540
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:544
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:550
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:554
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:558
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:562
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:566
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:570
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:574
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:578
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:584
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:588
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:594
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:598
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:604
		{
			yyVAL.expression = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:608
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:612
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:616
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:620
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:630
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:634
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:638
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:642
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 97:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:648
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:652
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:656
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:660
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:666
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:672
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:676
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:682
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:688
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:692
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:698
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:702
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:706
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:712
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 111:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:716
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:720
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:724
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:728
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:734
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:738
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:742
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:746
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:750
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:754
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:758
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:764
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:768
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:772
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:778
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:782
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:786
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:790
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:794
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:798
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:802
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:806
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:810
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:814
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:818
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[4].identifier}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:824
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:828
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:832
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:838
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:850
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:860
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:869
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:878
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:889
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:893
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:899
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:905
		{
			yyVAL.queryexpr = nil
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:909
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:915
		{
			yyVAL.queryexpr = nil
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:919
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:925
		{
			yyVAL.queryexpr = nil
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:929
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:935
		{
			yyVAL.queryexpr = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:939
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:945
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:949
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:955
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:959
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:963
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:969
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:973
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:979
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:983
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:989
		{
			yyVAL.queryexpr = nil
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:993
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:999
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 167:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1003
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1013
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1019
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1023
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1027
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1031
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1035
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1045
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1051
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1057
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1061
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1065
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1069
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1073
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1079
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1083
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1087
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1091
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1095
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1099
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1103
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1107
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1111
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1115
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1119
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1123
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1127
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1137
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1147
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1157
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1177
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1187
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.token = Token{}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1197
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1201
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1211
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1223
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1246
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1262
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1270
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1278
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1282
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1286
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1290
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1298
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1302
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1306
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1310
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1314
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1318
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1324
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1328
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1332
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1336
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1340
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1344
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1348
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1354
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1358
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexprs = nil
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1376
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1401
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1405
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1409
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 257:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 258:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1433
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 259:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1437
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 260:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 261:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 262:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1449
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 263:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1453
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1459
		{
			yyVAL.queryexpr = AnalyticClause{Partition: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = nil
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = Partition{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1489
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1493
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1505
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1509
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1517
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1521
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1525
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1529
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1535
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1539
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1543
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 285:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1555
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1561
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1565
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1571
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1575
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1581
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1589
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1595
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexpr = nil
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1605
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1611
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1615
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1621
		{
			yyVAL.queryexpr = nil
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1625
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1631
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1635
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1641
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1645
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1651
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1655
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1661
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1665
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1671
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1675
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1681
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1685
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1691
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1695
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1699
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1703
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 316:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1709
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1715
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1721
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1725
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1731
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1736
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1743
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1747
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.elseexpr = Else{}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1757
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1763
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1767
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1773
		{
			yyVAL.elseexpr = Else{}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1777
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1783
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1787
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1793
		{
			yyVAL.elseexpr = Else{}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1797
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1803
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1807
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1813
		{
			yyVAL.elseexpr = Else{}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1817
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1823
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1827
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1833
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1837
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1843
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1847
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1853
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1857
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1867
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1873
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1877
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1883
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1887
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1897
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1903
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1907
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1911
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1915
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1919
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1923
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1927
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1931
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1935
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1939
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1943
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1947
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1951
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1957
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1967
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1973
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1979
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1983
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1989
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1993
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1999
		{
			yyVAL.token = Token{}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2003
		{
			yyVAL.token = yyDollar[1].token
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2009
		{
			yyVAL.token = Token{}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2013
		{
			yyVAL.token = yyDollar[1].token
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2019
		{
			yyVAL.token = Token{}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2023
		{
			yyVAL.token = yyDollar[1].token
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2029
		{
			yyVAL.token = Token{}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2033
		{
			yyVAL.token = yyDollar[1].token
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2039
		{
			yyVAL.token = yyDollar[1].token
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2043
		{
			yyVAL.token = yyDollar[1].token
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2049
		{
			yyVAL.token = Token{}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2053
		{
			yyVAL.token = yyDollar[1].token
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2059
		{
			yyVAL.token = Token{}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2063
		{
			yyVAL.token = yyDollar[1].token
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2069
		{
			yyVAL.token = Token{}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2073
		{
			yyVAL.token = yyDollar[1].token
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2079
		{
			yyVAL.token = yyDollar[1].token
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2083
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
