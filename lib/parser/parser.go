// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const TRIGGER = 57453
const FUNCTION = 57454
const AGGREGATE = 57455
const BEGIN = 57456
const RETURN = 57457
const IGNORE = 57458
const WITHIN = 57459
const VAR = 57460
const SHOW = 57461
const TIES = 57462
const NULLS = 57463
const TABLES = 57464
const VIEWS = 57465
const FIELDS = 57466
const CURSORS = 57467
const FUNCTIONS = 57468
const ROWS = 57469
const ERROR = 57470
const JSON_ROW = 57471
const JSON_TABLE = 57472
const COUNT = 57473
const JSON_OBJECT = 57474
const AGGREGATE_FUNCTION = 57475
const LISTAGG = 57476
const ANALYTIC_FUNCTION = 57477
const FUNCTION_NTH = 57478
const FUNCTION_WITH_INS = 57479
const COMPARISON_OP = 57480
const STRING_OP = 57481
const SUBSTITUTION_OP = 57482
const UMINUS = 57483
const UPLUS = 57484

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"TABLES",
	"VIEWS",
	"FIELDS",
	"CURSORS",
	"FUNCTIONS",
	"ROWS",
	"ERROR",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LISTAGG",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2243

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 164,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 65,
	13, 164,
	15, 164,
	17, 164,
	19, 164,
	149, 164,
	-2, 1,
	-1, 67,
	150, 249,
	-2, 164,
	-1, 108,
	58, 144,
	59, 144,
	60, 144,
	-2, 155,
	-1, 164,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 262,
	88, 4,
	-2, 164,
	-1, 273,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 219,
	-1, 274,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 221,
	-1, 284,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 231,
	-1, 319,
	88, 1,
	-2, 164,
	-1, 329,
	48, 410,
	-2, 329,
	-1, 397,
	88, 1,
	-2, 164,
	-1, 404,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 232,
	-1, 427,
	84, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 500,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 503,
	88, 4,
	-2, 164,
	-1, 504,
	88, 4,
	-2, 164,
	-1, 571,
	13, 420,
	73, 420,
	149, 420,
	-2, 75,
	-1, 593,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 598,
	88, 4,
	-2, 164,
	-1, 599,
	88, 4,
	-2, 164,
	-1, 604,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 654,
	88, 6,
	-2, 164,
	-1, 665,
	88, 4,
	-2, 164,
	-1, 719,
	88, 6,
	-2, 164,
	-1, 720,
	88, 6,
	-2, 164,
	-1, 724,
	88, 4,
	-2, 164,
	-1, 728,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 761,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 799,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 802,
	88, 8,
	-2, 164,
	-1, 807,
	88, 6,
	-2, 164,
	-1, 810,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 826,
	88, 6,
	-2, 164,
	-1, 847,
	88, 6,
	-2, 164,
	-1, 851,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 853,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 856,
	88, 8,
	-2, 164,
	-1, 857,
	88, 8,
	-2, 164,
	-1, 870,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 882,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 886,
	88, 8,
	-2, 164,
	-1, 902,
	88, 8,
	-2, 164,
	-1, 906,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 926,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
}

const yyPrivate = 57344

const yyLast = 3784

var yyAct = [...]int{

	81, 23, 871, 901, 892, 800, 900, 234, 845, 846,
	431, 723, 105, 153, 226, 747, 329, 594, 785, 722,
	478, 396, 523, 685, 578, 541, 491, 573, 1, 125,
	306, 493, 131, 132, 716, 358, 382, 21, 68, 494,
	745, 549, 441, 96, 381, 20, 533, 338, 206, 232,
	328, 218, 746, 395, 449, 22, 223, 375, 448, 715,
	113, 579, 229, 197, 88, 158, 23, 86, 416, 325,
	121, 212, 341, 330, 465, 187, 743, 803, 69, 186,
	186, 453, 182, 454, 455, 450, 447, 350, 176, 451,
	175, 174, 186, 263, 163, 177, 178, 108, 187, 124,
	188, 203, 21, 186, 589, 390, 176, 590, 194, 649,
	20, 214, 214, 177, 178, 44, 620, 609, 587, 236,
	243, 214, 208, 185, 586, 572, 545, 209, 165, 251,
	252, 253, 536, 176, 254, 175, 174, 264, 348, 327,
	177, 178, 64, 268, 453, 245, 454, 455, 450, 447,
	383, 436, 451, 162, 114, 828, 110, 844, 111, 843,
	109, 269, 821, 185, 820, 23, 264, 819, 267, 162,
	818, 283, 185, 817, 814, 813, 377, 3, 812, 283,
	213, 213, 264, 217, 796, 452, 794, 299, 793, 302,
	244, 281, 393, 271, 264, 784, 721, 671, 651, 281,
	797, 21, 648, 44, 638, 637, 636, 635, 634, 20,
	619, 608, 214, 601, 585, 280, 583, 214, 571, 570,
	214, 569, 568, 562, 236, 171, 180, 179, 170, 169,
	172, 168, 275, 529, 518, 517, 516, 515, 114, 308,
	309, 419, 3, 347, 301, 556, 367, 346, 359, 304,
	305, 296, 298, 297, 795, 753, 752, 751, 750, 372,
	108, 417, 317, 23, 386, 749, 389, 79, 29, 739,
	340, 736, 733, 703, 373, 701, 700, 694, 387, 437,
	853, 490, 525, 507, 459, 324, 345, 204, 369, 368,
	116, 356, 355, 354, 343, 344, 208, 353, 352, 166,
	165, 351, 205, 116, 193, 176, 167, 175, 174, 192,
	407, 294, 177, 178, 295, 191, 363, 118, 117, 394,
	23, 546, 403, 257, 236, 199, 439, 444, 214, 405,
	406, 435, 456, 29, 392, 214, 371, 185, 214, 761,
	400, 3, 500, 399, 65, 709, 246, 162, 426, 236,
	469, 458, 314, 704, 415, 411, 21, 141, 479, 150,
	861, 483, 444, 444, 20, 443, 702, 479, 618, 616,
	497, 699, 613, 366, 116, 357, 446, 248, 422, 807,
	185, 420, 421, 759, 498, 720, 613, 488, 460, 719,
	185, 505, 506, 502, 654, 479, 195, 213, 23, 445,
	484, 486, 464, 196, 466, 467, 642, 471, 472, 473,
	474, 468, 64, 315, 185, 508, 640, 757, 698, 697,
	643, 185, 481, 185, 696, 695, 511, 639, 23, 247,
	641, 633, 29, 748, 21, 173, 527, 365, 444, 129,
	925, 543, 20, 915, 904, 889, 888, 881, 862, 858,
	510, 249, 250, 214, 136, 137, 531, 852, 555, 540,
	857, 524, 849, 809, 21, 526, 806, 142, 143, 146,
	144, 145, 20, 185, 805, 771, 542, 760, 732, 731,
	524, 726, 668, 483, 667, 603, 444, 519, 509, 902,
	499, 128, 551, 544, 425, 903, 3, 856, 848, 902,
	886, 23, 847, 554, 23, 23, 553, 599, 558, 598,
	552, 581, 725, 130, 504, 503, 724, 847, 826, 134,
	135, 138, 139, 566, 542, 398, 724, 665, 397, 397,
	29, 413, 198, 319, 872, 801, 595, 236, 207, 307,
	908, 907, 868, 778, 435, 777, 444, 617, 214, 214,
	730, 729, 591, 903, 848, 725, 398, 929, 592, 924,
	898, 596, 597, 185, 624, 625, 607, 880, 840, 808,
	673, 227, 602, 479, 3, 919, 632, 444, 444, 866,
	614, 615, 775, 652, 443, 530, 913, 29, 622, 897,
	66, 106, 621, 645, 23, 629, 911, 912, 928, 23,
	23, 910, 896, 895, 3, 23, 682, 644, 893, 893,
	147, 148, 149, 611, 151, 646, 647, 662, 657, 658,
	44, 444, 73, 9, 535, 878, 656, 214, 214, 214,
	224, 692, 676, 674, 311, 199, 103, 675, 310, 181,
	909, 21, 522, 688, 689, 690, 684, 804, 391, 20,
	483, 663, 265, 524, 342, 23, 669, 670, 44, 542,
	221, 189, 190, 550, 278, 29, 23, 106, 277, 279,
	201, 202, 313, 312, 707, 185, 706, 922, 891, 181,
	894, 894, 286, 285, 220, 221, 222, 876, 9, 691,
	233, 628, 214, 627, 877, 29, 734, 879, 104, 453,
	185, 454, 455, 626, 548, 737, 547, 429, 742, 185,
	255, 256, 740, 538, 539, 815, 755, 322, 787, 755,
	23, 23, 260, 727, 561, 23, 524, 763, 323, 23,
	560, 766, 678, 462, 270, 78, 63, 272, 273, 274,
	479, 276, 756, 772, 284, 210, 287, 288, 289, 290,
	291, 292, 293, 754, 786, 781, 758, 582, 360, 361,
	782, 588, 23, 123, 123, 580, 127, 362, 29, 755,
	120, 29, 29, 680, 681, 119, 316, 161, 152, 320,
	770, 3, 773, 672, 661, 655, 776, 9, 653, 185,
	788, 789, 790, 791, 811, 233, 574, 575, 576, 577,
	23, 63, 816, 23, 837, 838, 792, 359, 23, 584,
	349, 23, 370, 755, 211, 339, 236, 326, 364, 219,
	83, 84, 85, 435, 103, 87, 842, 23, 337, 184,
	258, 711, 140, 374, 64, 157, 822, 835, 160, 453,
	122, 454, 455, 450, 447, 741, 855, 451, 23, 402,
	823, 404, 23, 859, 23, 863, 885, 23, 23, 825,
	664, 29, 834, 318, 8, 442, 29, 29, 841, 7,
	6, 23, 29, 883, 412, 75, 230, 231, 332, 414,
	331, 921, 890, 23, 875, 9, 104, 23, 835, 860,
	266, 835, 835, 94, 430, 434, 711, 711, 74, 77,
	63, 70, 76, 23, 71, 835, 5, 23, 916, 914,
	679, 463, 537, 834, 923, 433, 834, 834, 432, 159,
	233, 835, 29, 927, 428, 321, 559, 23, 461, 112,
	834, 17, 16, 29, 931, 80, 133, 835, 711, 14,
	495, 835, 9, 492, 13, 12, 834, 225, 10, 15,
	11, 501, 106, 836, 831, 712, 829, 710, 378, 376,
	4, 835, 834, 154, 2, 0, 834, 0, 0, 0,
	512, 0, 0, 513, 183, 0, 711, 0, 0, 830,
	0, 123, 0, 0, 711, 520, 834, 29, 29, 0,
	0, 0, 29, 0, 0, 528, 29, 0, 63, 0,
	388, 532, 0, 711, 836, 0, 0, 836, 836, 869,
	0, 0, 873, 874, 183, 0, 0, 225, 0, 0,
	9, 836, 0, 183, 711, 0, 884, 0, 711, 29,
	830, 557, 0, 830, 830, 0, 0, 836, 0, 0,
	0, 0, 905, 0, 0, 0, 0, 830, 0, 0,
	9, 72, 0, 836, 0, 63, 0, 836, 917, 711,
	0, 0, 920, 830, 0, 768, 769, 29, 0, 0,
	29, 0, 0, 0, 115, 29, 0, 836, 29, 830,
	0, 0, 930, 830, 0, 0, 605, 0, 0, 0,
	0, 0, 0, 606, 29, 0, 0, 610, 0, 0,
	0, 0, 0, 830, 496, 0, 388, 798, 434, 0,
	0, 0, 0, 0, 0, 29, 0, 0, 623, 29,
	0, 29, 0, 9, 29, 29, 9, 9, 0, 0,
	0, 408, 631, 63, 409, 410, 0, 171, 29, 0,
	170, 169, 172, 168, 0, 824, 0, 424, 0, 200,
	29, 0, 650, 839, 29, 0, 0, 0, 0, 0,
	660, 0, 0, 63, 0, 0, 0, 666, 0, 0,
	29, 0, 850, 0, 29, 0, 0, 0, 0, 0,
	470, 0, 0, 0, 475, 476, 477, 0, 183, 0,
	0, 0, 0, 864, 29, 0, 0, 867, 0, 0,
	0, 453, 693, 454, 455, 450, 447, 686, 687, 451,
	0, 166, 165, 0, 0, 0, 9, 176, 167, 175,
	174, 9, 9, 282, 177, 178, 0, 9, 899, 0,
	0, 438, 0, 0, 0, 0, 63, 115, 0, 63,
	63, 183, 0, 0, 0, 0, 0, 282, 282, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 335, 0,
	0, 335, 487, 0, 489, 0, 0, 9, 0, 0,
	0, 0, 0, 0, 0, 762, 106, 0, 9, 764,
	767, 0, 0, 0, 0, 0, 0, 774, 0, 0,
	0, 563, 564, 565, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 659, 183, 0, 496, 0, 0, 63,
	282, 0, 0, 0, 63, 63, 0, 282, 282, 0,
	63, 0, 9, 9, 0, 0, 0, 9, 0, 0,
	0, 9, 0, 0, 171, 180, 179, 170, 169, 172,
	168, 0, 282, 418, 418, 418, 0, 0, 0, 0,
	0, 0, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 9, 0, 335, 434, 0, 335,
	63, 0, 0, 115, 0, 115, 115, 0, 0, 0,
	0, 63, 0, 0, 854, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	865, 0, 9, 0, 0, 9, 0, 0, 166, 165,
	9, 0, 0, 9, 176, 167, 175, 174, 0, 0,
	0, 177, 178, 677, 887, 0, 0, 0, 0, 9,
	0, 0, 0, 765, 0, 63, 63, 0, 0, 0,
	63, 0, 0, 0, 63, 0, 0, 0, 0, 282,
	9, 0, 0, 0, 9, 918, 9, 0, 0, 9,
	9, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 9, 0, 0, 0, 63, 0, 0,
	0, 0, 0, 0, 335, 9, 0, 0, 0, 9,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 9, 683, 171, 180, 9,
	170, 169, 172, 168, 0, 63, 0, 0, 63, 0,
	0, 0, 0, 63, 0, 0, 63, 0, 0, 9,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	708, 0, 63, 0, 0, 0, 0, 0, 0, 0,
	45, 83, 84, 85, 282, 103, 87, 64, 0, 0,
	0, 0, 0, 63, 0, 0, 0, 63, 0, 63,
	82, 0, 63, 63, 0, 0, 0, 0, 0, 335,
	335, 166, 165, 0, 0, 0, 63, 176, 167, 175,
	174, 0, 0, 0, 177, 178, 0, 0, 63, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 98, 0, 0, 0, 104, 63, 0,
	779, 0, 63, 0, 0, 0, 95, 91, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 282, 63, 45, 83, 84, 85, 0, 103, 87,
	64, 0, 0, 0, 0, 0, 0, 0, 335, 335,
	335, 0, 0, 82, 0, 0, 46, 47, 48, 49,
	53, 50, 51, 52, 62, 101, 55, 238, 24, 237,
	239, 240, 241, 242, 0, 0, 0, 0, 0, 0,
	235, 0, 89, 90, 99, 107, 228, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 98, 0, 0, 0,
	104, 0, 0, 0, 282, 0, 0, 0, 0, 95,
	91, 0, 0, 335, 0, 0, 0, 0, 156, 100,
	45, 83, 84, 85, 0, 103, 87, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 0, 0, 0, 0, 0, 155, 0, 46,
	47, 48, 49, 53, 50, 51, 52, 62, 101, 55,
	93, 24, 92, 102, 59, 60, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 90, 99, 107, 97,
	0, 0, 0, 98, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 91, 171, 180,
	179, 170, 169, 172, 168, 0, 100, 45, 83, 84,
	85, 0, 103, 87, 64, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 171, 180,
	179, 170, 169, 172, 168, 0, 46, 47, 48, 49,
	53, 50, 51, 52, 62, 101, 55, 93, 24, 92,
	102, 59, 60, 61, 0, 0, 0, 0, 0, 0,
	235, 0, 89, 90, 99, 107, 97, 0, 0, 0,
	98, 0, 166, 165, 104, 224, 0, 0, 176, 167,
	175, 174, 0, 95, 91, 177, 178, 630, 0, 0,
	0, 0, 0, 100, 45, 83, 84, 85, 0, 103,
	87, 64, 166, 165, 0, 0, 0, 0, 176, 167,
	175, 174, 0, 0, 82, 177, 178, 423, 0, 0,
	0, 0, 0, 46, 47, 48, 49, 53, 50, 51,
	52, 62, 101, 55, 93, 24, 92, 102, 59, 60,
	61, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	90, 99, 107, 97, 0, 0, 0, 98, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 91, 171, 180, 179, 170, 169, 172, 168, 0,
	100, 45, 83, 84, 85, 0, 103, 87, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 171, 180, 179, 170, 169, 172, 168, 0,
	46, 47, 48, 49, 53, 50, 51, 52, 62, 101,
	55, 238, 24, 237, 239, 240, 241, 242, 0, 0,
	0, 0, 0, 0, 235, 0, 89, 90, 99, 107,
	97, 0, 0, 0, 98, 0, 166, 165, 104, 0,
	44, 0, 176, 167, 175, 174, 0, 95, 91, 177,
	178, 295, 0, 0, 0, 0, 0, 100, 45, 83,
	84, 85, 0, 103, 87, 64, 166, 165, 0, 0,
	0, 0, 176, 167, 175, 174, 0, 0, 82, 177,
	178, 259, 0, 0, 0, 0, 0, 46, 47, 48,
	49, 53, 50, 51, 52, 62, 101, 55, 93, 24,
	92, 102, 59, 60, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 90, 99, 107, 97, 0, 0,
	0, 98, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 91, 171, 180, 179, 170,
	169, 172, 168, 0, 100, 45, 83, 84, 85, 0,
	103, 87, 64, 0, 0, 0, 0, 926, 0, 0,
	0, 0, 0, 0, 0, 82, 0, 171, 180, 179,
	170, 169, 172, 168, 46, 47, 48, 49, 53, 50,
	51, 52, 62, 101, 55, 93, 24, 92, 102, 59,
	60, 61, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 90, 99, 107, 97, 0, 0, 0, 98, 0,
	166, 165, 104, 0, 0, 0, 176, 167, 175, 174,
	0, 95, 91, 177, 178, 0, 0, 0, 0, 0,
	0, 100, 45, 83, 84, 85, 0, 103, 87, 64,
	0, 166, 165, 0, 0, 0, 0, 176, 167, 175,
	174, 0, 82, 780, 177, 178, 0, 0, 0, 0,
	0, 46, 47, 48, 49, 53, 50, 51, 52, 62,
	101, 55, 93, 24, 92, 102, 59, 60, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 90, 99,
	67, 97, 0, 0, 0, 98, 0, 0, 0, 104,
	45, 0, 303, 0, 0, 0, 0, 0, 95, 91,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 45,
	83, 261, 85, 0, 103, 87, 64, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 47,
	48, 49, 53, 50, 51, 52, 62, 101, 55, 238,
	24, 237, 239, 240, 241, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 90, 99, 107, 97, 0,
	0, 0, 98, 0, 0, 0, 104, 0, 0, 0,
	45, 0, 0, 0, 0, 95, 91, 64, 0, 0,
	0, 0, 36, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 25, 0, 0, 26, 46, 47, 48, 49,
	53, 50, 51, 52, 62, 54, 55, 56, 126, 58,
	57, 59, 60, 61, 45, 46, 47, 48, 49, 53,
	50, 51, 52, 62, 101, 55, 93, 24, 92, 102,
	59, 60, 61, 333, 215, 0, 0, 0, 0, 44,
	0, 89, 90, 99, 107, 0, 833, 832, 0, 717,
	0, 0, 0, 0, 0, 28, 0, 0, 33, 31,
	32, 30, 0, 0, 0, 0, 0, 0, 0, 34,
	35, 384, 385, 0, 38, 39, 40, 41, 0, 0,
	0, 718, 0, 44, 27, 37, 46, 47, 48, 49,
	53, 50, 51, 52, 62, 54, 55, 56, 24, 58,
	57, 59, 60, 61, 45, 0, 0, 0, 0, 0,
	0, 64, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 25, 0, 0, 26,
	46, 47, 48, 49, 53, 50, 51, 52, 62, 54,
	336, 56, 126, 58, 57, 59, 60, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 45, 0, 0, 0, 0,
	380, 379, 64, 42, 0, 0, 0, 36, 0, 28,
	0, 0, 33, 31, 32, 30, 0, 25, 0, 0,
	26, 0, 0, 34, 35, 384, 385, 43, 38, 39,
	40, 41, 0, 0, 0, 0, 0, 0, 27, 37,
	46, 47, 48, 49, 53, 50, 51, 52, 62, 54,
	55, 56, 24, 58, 57, 59, 60, 61, 0, 0,
	0, 0, 0, 0, 44, 0, 45, 0, 0, 0,
	0, 714, 713, 64, 717, 0, 0, 0, 36, 0,
	28, 0, 0, 33, 31, 32, 30, 45, 25, 0,
	0, 26, 0, 0, 34, 35, 0, 0, 0, 38,
	39, 40, 41, 0, 0, 0, 718, 82, 0, 27,
	37, 46, 47, 48, 49, 53, 50, 51, 52, 62,
	54, 55, 56, 24, 58, 57, 59, 60, 61, 45,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 19, 18, 0, 42, 0, 0, 333, 215,
	0, 28, 0, 0, 33, 31, 32, 30, 0, 0,
	0, 0, 0, 0, 0, 34, 35, 0, 0, 43,
	38, 39, 40, 41, 45, 0, 0, 0, 0, 0,
	27, 37, 46, 47, 48, 49, 53, 50, 51, 52,
	62, 54, 55, 56, 24, 58, 57, 59, 60, 61,
	0, 0, 0, 46, 47, 48, 49, 53, 50, 51,
	52, 62, 54, 55, 56, 126, 58, 57, 59, 60,
	61, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 46, 47, 48, 49, 53,
	50, 51, 52, 62, 54, 336, 56, 126, 58, 57,
	59, 60, 61, 534, 0, 171, 180, 179, 170, 169,
	172, 168, 0, 0, 334, 0, 0, 0, 0, 0,
	171, 180, 179, 170, 169, 172, 168, 0, 802, 535,
	46, 47, 48, 49, 53, 50, 51, 52, 62, 54,
	55, 56, 126, 58, 57, 59, 60, 61, 171, 180,
	179, 170, 169, 172, 168, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 906,
	171, 180, 179, 170, 169, 172, 168, 0, 0, 166,
	165, 0, 0, 0, 0, 176, 167, 175, 174, 0,
	0, 882, 177, 178, 166, 165, 0, 0, 0, 0,
	176, 167, 175, 174, 0, 0, 0, 177, 178, 0,
	0, 171, 180, 179, 170, 169, 172, 168, 0, 0,
	0, 0, 166, 165, 0, 0, 0, 0, 176, 167,
	175, 174, 870, 0, 0, 177, 178, 171, 180, 179,
	170, 169, 172, 168, 166, 165, 0, 0, 0, 0,
	176, 167, 175, 174, 0, 0, 0, 177, 178, 171,
	180, 179, 170, 169, 172, 168, 0, 0, 0, 171,
	180, 179, 170, 169, 172, 168, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 166, 165, 0, 0, 0,
	810, 176, 167, 175, 174, 0, 0, 0, 177, 178,
	171, 180, 179, 170, 169, 172, 168, 0, 0, 0,
	0, 166, 165, 0, 0, 0, 0, 176, 167, 175,
	174, 799, 0, 744, 177, 178, 0, 0, 0, 0,
	0, 0, 0, 166, 165, 0, 0, 0, 0, 176,
	167, 175, 174, 166, 165, 0, 177, 178, 0, 176,
	167, 175, 174, 0, 0, 0, 177, 178, 171, 180,
	179, 170, 169, 172, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 165, 0, 0, 0, 728,
	176, 167, 175, 174, 0, 0, 0, 177, 178, 171,
	180, 179, 170, 169, 172, 168, 0, 0, 0, 171,
	180, 179, 170, 169, 172, 168, 0, 0, 0, 307,
	0, 0, 0, 0, 171, 180, 179, 170, 169, 172,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 165, 0, 604, 0, 0, 176, 167,
	175, 174, 0, 0, 0, 177, 178, 171, 180, 179,
	170, 169, 172, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 165, 0, 0, 0, 593, 176,
	167, 175, 174, 166, 165, 0, 177, 178, 0, 176,
	167, 175, 174, 0, 0, 612, 177, 178, 166, 165,
	0, 0, 0, 0, 176, 167, 175, 174, 0, 0,
	0, 177, 178, 171, 180, 179, 170, 169, 172, 168,
	0, 0, 0, 171, 180, 179, 170, 169, 172, 168,
	0, 166, 165, 0, 521, 0, 0, 176, 167, 175,
	174, 0, 0, 0, 177, 178, 171, 180, 179, 170,
	169, 172, 168, 0, 0, 0, 171, 180, 179, 170,
	169, 172, 168, 0, 0, 0, 0, 427, 0, 0,
	0, 171, 180, 179, 170, 169, 172, 168, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 166, 165, 45,
	0, 0, 164, 176, 167, 175, 174, 166, 165, 216,
	177, 178, 0, 176, 167, 175, 174, 0, 0, 215,
	177, 178, 171, 514, 179, 170, 169, 172, 168, 0,
	166, 165, 0, 0, 0, 0, 176, 167, 175, 174,
	166, 165, 0, 177, 178, 45, 176, 167, 175, 174,
	0, 0, 0, 177, 178, 166, 165, 0, 0, 0,
	0, 176, 167, 175, 174, 82, 45, 0, 177, 178,
	171, 401, 179, 170, 169, 172, 168, 0, 0, 0,
	0, 0, 0, 0, 457, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 165, 0, 0,
	0, 0, 176, 167, 175, 174, 215, 0, 0, 177,
	178, 45, 0, 300, 0, 46, 47, 48, 49, 53,
	50, 51, 52, 62, 54, 55, 56, 126, 58, 57,
	59, 60, 61, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 166, 165, 0, 0, 0, 0,
	176, 167, 175, 174, 440, 0, 0, 177, 178, 0,
	0, 46, 47, 48, 49, 53, 50, 51, 52, 62,
	54, 55, 56, 126, 58, 57, 59, 60, 61, 45,
	0, 0, 46, 47, 48, 49, 53, 50, 51, 52,
	62, 54, 55, 56, 126, 58, 57, 59, 60, 61,
	0, 0, 46, 47, 48, 49, 53, 50, 51, 52,
	62, 54, 55, 56, 126, 58, 57, 59, 60, 61,
	0, 0, 0, 0, 0, 0, 0, 46, 47, 48,
	49, 53, 50, 51, 52, 62, 54, 55, 56, 126,
	58, 57, 59, 60, 61, 0, 0, 0, 0, 0,
	0, 0, 46, 47, 48, 49, 53, 50, 51, 52,
	62, 54, 55, 56, 126, 58, 57, 59, 60, 61,
	45, 0, 0, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 46, 47, 48, 49, 53,
	50, 51, 52, 62, 54, 55, 56, 126, 58, 57,
	59, 60, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 46, 47, 48, 49,
	53, 50, 51, 52, 62, 54, 55, 56, 126, 58,
	57, 59, 60, 61,
}
var yyPact = [...]int{

	2702, -1000, 201, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2181, 2094,
	-1000, -1000, 141, 169, 168, 745, 740, 823, 3646, -1000,
	401, 3555, 3555, 423, -1000, -1000, 820, 345, 2094, 2094,
	2094, 231, 1659, 829, 752, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 207, -1000, 2702, 3297, 2007, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 207, -1000,
	-1000, -51, -54, -1000, -1000, -1000, -1000, -1000, -1000, 2094,
	2094, 166, 160, 155, -1000, 2094, 258, 154, 2094, 2094,
	3555, 138, 153, -1000, -1000, 454, 3249, 2007, 706, 794,
	3462, 3375, 805, 626, 558, -1000, 547, 2094, 1566, 3555,
	3462, -1000, -8, 206, -1000, 339, -1000, -1000, 3555, 3555,
	3555, -1000, -1000, 3555, -1000, -1000, -1000, -1000, 2094, 2094,
	178, -1000, -1000, -1000, -1000, -1000, 816, 3249, 1968, 3249,
	2355, 3282, 29, 588, 823, -1000, -1000, -1000, -1000, -10,
	3555, -1000, 2094, -1000, 2702, 2094, 2094, 2094, 568, 2094,
	600, 50, 2094, 621, 2094, 2094, 2094, 2094, 2094, 2094,
	2094, 161, 101, 103, 102, 225, 3487, 1833, 2336, -1000,
	-1000, 2094, 558, 558, 455, 50, 50, 570, 611, -1000,
	-1000, 1073, -1000, 282, 2094, 558, 447, 2094, 101, 672,
	686, 3462, 801, -14, -1000, -1000, 2765, 814, 797, 2765,
	593, 593, 593, 1920, -1000, 97, -1000, 1938, -1000, 93,
	-15, 788, -1000, 3249, -1000, -1000, -62, 152, 149, 148,
	144, 143, 142, 226, 731, 823, 2094, 346, 224, 140,
	139, -1000, -1000, -1000, 792, 3249, 3249, 815, 3555, 2094,
	3249, 2094, 2560, 3555, 823, 3555, 41, 584, 752, 170,
	3249, 443, -56, -11, -11, 627, 3386, 2094, 50, 2094,
	-1000, 2007, -1000, 138, -11, 50, 50, -38, -38, -1000,
	-1000, -1000, 1463, 1073, -1000, 2094, -1000, -1000, -1000, -1000,
	-1000, 2094, -1000, -1000, 2094, 1746, 445, 2094, -1000, -1000,
	50, 112, 112, 112, 568, -1000, 1794, 2094, 406, 2702,
	3272, 661, 2094, 2268, 130, 3512, 3421, 3462, 797, 32,
	-1000, 3442, -1000, -1000, 2470, -1000, 135, 2765, 693, 2094,
	-1000, 225, -1000, 225, 225, -1000, -1000, -1000, 1920, 3555,
	1833, 558, 558, 558, 2094, 2094, 2094, 3555, 547, -1000,
	2810, 2723, 3421, -1000, 3249, 547, 3555, 547, 131, 3555,
	823, -1000, -1000, -1000, 3249, 402, 199, -1000, -1000, 2181,
	2094, -1000, -1000, -1000, -1000, -1000, 428, -1000, -16, 427,
	3555, 3555, -1000, 134, 3555, 400, 442, 2702, 2094, -1000,
	-1000, 2094, 3338, -1000, -11, -1000, -1000, -1000, 87, 86,
	85, 84, 399, 2094, 3239, 577, -1000, 42, -1000, 133,
	-1000, -1000, 372, 2094, 83, 505, -1000, 2702, -1000, 2094,
	2856, -1000, -21, 670, 3249, -1000, 50, 3421, -1000, -1000,
	3555, 805, -27, 176, -75, -1000, -1000, 658, 656, 613,
	613, 650, 2765, -1000, -1000, -1000, -1000, 3555, 95, 2094,
	797, 689, 682, 3249, 601, -1000, -1000, 601, -1000, -1000,
	73, 2094, 2094, 1746, 2094, 72, 71, 69, 68, -28,
	-1000, 765, 3555, 730, -1000, 3421, 720, -1000, 66, -1000,
	787, 64, -29, -1000, -1000, -35, 726, -46, -1000, 469,
	2560, 3183, 452, 2560, 2560, 422, 420, 547, 63, 491,
	397, -1000, 3150, 1073, 2094, -1000, -1000, -1000, -1000, -1000,
	3249, 2094, 50, 61, -36, 2094, -1000, 539, 3135, 255,
	-1000, 454, 3249, -1000, 551, 249, 2268, 247, -1000, -1000,
	-1000, 60, -37, -1000, 797, 3421, 2094, 2765, 2765, 655,
	-1000, 645, 643, 613, -1000, -1000, -1000, 1764, -1000, -1000,
	2094, 2094, 329, 58, 57, 56, 55, 54, 325, 314,
	304, 785, 3555, -1000, -1000, -1000, 3421, 3421, 52, -44,
	2094, 48, 3555, 766, 280, 763, 823, 823, 2094, 762,
	823, -1000, -1000, 2560, 441, 2094, 396, 394, 2560, 2560,
	47, 761, -1000, 489, 2702, 1073, 3125, -1000, -1000, 50,
	1290, -1000, -1000, 692, -1000, -1000, -1000, -1000, 742, 585,
	3421, -1000, -1000, 3249, 650, 1152, 2765, 2765, 2765, 641,
	2094, 3249, -1000, 128, 323, 322, 317, 316, 269, 127,
	126, 245, 124, 232, 547, -1000, -1000, -1000, 765, 3555,
	3249, -1000, -1000, 547, 2631, 275, -1000, -1000, -1000, 726,
	3249, 271, 46, 430, 393, 2560, 3094, 468, 467, 391,
	390, -1000, 123, -1000, 474, -1000, -1000, 2094, 122, -1000,
	-1000, -1000, 50, -1000, -1000, -1000, 2094, 120, 1152, 790,
	650, 2765, -74, 2973, 332, 116, 109, 108, 107, 106,
	332, 332, 315, 332, 281, -1000, -1000, -1000, -1000, 389,
	196, -1000, -1000, 2181, 2094, -1000, -1000, 2094, 2094, 2631,
	2631, 758, 387, 440, 2560, 2094, 502, -1000, 2560, -1000,
	-1000, 462, 460, 547, -1000, 2143, 706, -1000, 3249, 3555,
	-1000, 2094, 650, -1000, -1000, 45, -1000, 715, 676, 332,
	332, 332, 332, 332, 38, 706, 36, 105, 34, 51,
	-1000, 2631, 3036, 451, 2841, 13, 583, 3249, 386, 378,
	265, 488, 375, -1000, 3005, -1000, 452, -1000, -1000, 28,
	-1000, 25, 24, 3249, -1000, -1000, 673, 2094, 23, 20,
	17, 14, 12, -1000, -1000, 332, -1000, 332, -1000, 2631,
	432, 2094, 2426, 3555, 3555, -1000, -1000, 2631, -1000, 487,
	2560, -1000, -1000, -1000, -1000, 2268, -1000, -1000, -1000, -1000,
	-1000, -1000, 9, 7, 416, 374, 2631, 2995, 369, 137,
	-1000, -1000, 2181, 2094, -1000, -1000, -1000, 410, 373, 361,
	-1000, 473, 233, -1000, -1000, 360, 431, 2631, 2094, 499,
	-1000, 2631, 459, 2426, 2947, 450, 2426, 2426, -1000, -1000,
	-1000, 619, 486, 359, -1000, 2906, -1000, 451, -1000, -1000,
	2426, 414, 2094, 358, 357, -1000, 603, 527, 526, 510,
	-1000, 479, 2631, -1000, 413, 356, 2426, 2884, 458, 457,
	575, 525, -1000, 520, 507, -1000, -1000, -1000, -1000, 472,
	355, 403, 2426, 2094, 495, -1000, 2426, -1000, -1000, 602,
	-1000, -1000, -1000, -1000, -1000, 478, 352, -1000, 2112, -1000,
	450, -1000, 521, -1000, -1000, 476, 2426, -1000, -1000, -1000,
	471, -1000,
}
var yyPgo = [...]int{

	0, 28, 57, 345, 155, 176, 150, 964, 44, 963,
	36, 960, 959, 958, 957, 59, 34, 956, 955, 954,
	950, 949, 948, 61, 24, 27, 945, 944, 39, 943,
	940, 31, 26, 939, 936, 935, 932, 931, 906, 74,
	60, 929, 51, 47, 928, 926, 18, 925, 46, 924,
	55, 919, 65, 78, 67, 64, 38, 571, 49, 43,
	22, 10, 918, 915, 912, 910, 1051, 904, 68, 902,
	901, 899, 829, 622, 898, 893, 7, 52, 40, 15,
	889, 884, 4, 882, 881, 69, 73, 71, 880, 16,
	878, 23, 877, 876, 875, 12, 30, 874, 25, 14,
	50, 20, 62, 870, 869, 865, 42, 864, 21, 53,
	11, 19, 9, 8, 3, 6, 48, 863, 17, 860,
	5, 859, 2, 856, 0, 735, 13, 267, 840, 70,
	56, 63, 58, 41, 54, 72, 838, 35, 435,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 26, 27, 27, 27,
	27, 28, 29, 29, 30, 31, 31, 32, 32, 32,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 34, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 37, 37, 37, 38,
	39, 39, 39, 39, 40, 40, 41, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 53, 53, 53, 53, 54, 55, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 58, 59, 59,
	59, 60, 60, 61, 61, 62, 62, 63, 63, 64,
	64, 64, 65, 65, 66, 67, 68, 68, 68, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 71, 71, 71, 71, 72,
	72, 73, 73, 73, 73, 74, 74, 74, 74, 74,
	75, 75, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 77, 78, 78, 79, 79, 80, 80,
	81, 81, 81, 82, 82, 82, 83, 83, 84, 84,
	85, 85, 86, 86, 86, 88, 88, 88, 89, 89,
	89, 89, 89, 89, 89, 90, 90, 90, 90, 90,
	90, 91, 91, 92, 92, 93, 93, 93, 94, 95,
	95, 96, 96, 97, 97, 98, 98, 99, 99, 100,
	100, 87, 87, 101, 101, 102, 102, 103, 103, 103,
	103, 104, 105, 106, 106, 107, 107, 108, 108, 109,
	109, 110, 110, 111, 111, 112, 112, 113, 113, 114,
	114, 115, 115, 116, 116, 117, 117, 118, 118, 119,
	119, 120, 120, 121, 121, 122, 122, 123, 123, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 125, 126,
	126, 127, 128, 128, 129, 129, 130, 130, 131, 131,
	132, 132, 133, 133, 134, 134, 135, 135, 136, 136,
	137, 137, 138, 138,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 2, 2, 2, 4,
	2, 2, 2, 2, 2, 4, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	6, 1, 3, 1, 3, 2, 4, 1, 1, 0,
	1, 1, 1, 1, 3, 3, 3, 1, 6, 3,
	3, 3, 3, 4, 4, 5, 6, 6, 3, 4,
	4, 3, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 2, 2, 3, 3, 2, 2, 0,
	1, 4, 3, 4, 4, 5, 5, 5, 5, 1,
	5, 10, 8, 9, 9, 9, 9, 9, 8, 8,
	10, 8, 10, 2, 1, 5, 0, 3, 2, 5,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 1,
	1, 1, 1, 2, 3, 1, 6, 6, 1, 1,
	2, 3, 1, 1, 3, 4, 5, 6, 7, 5,
	6, 2, 4, 1, 1, 1, 3, 1, 5, 0,
	1, 4, 5, 0, 2, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 6, 9, 5,
	8, 7, 3, 1, 3, 5, 6, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 1, 3, 1, 3, 0, 1, 0, 1,
	0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
	0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -103, -104, -107, -73,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -124, 132, 26, 29, 118, 89, -127,
	95, 93, 94, 92, 103, 104, 16, 119, 108, 109,
	110, 111, 83, 107, 73, 4, 120, 121, 122, 123,
	125, 126, 127, 124, 129, 130, 131, 134, 133, 135,
	136, 137, 128, -125, 11, 143, -57, 149, -56, -53,
	-70, -67, -66, -73, -74, -94, -69, -71, -125, -127,
	-35, -124, 24, 5, 6, 7, -54, 10, -55, 146,
	147, 81, 133, 131, -75, 80, -59, 63, 67, 148,
	90, 129, 134, 9, 71, -95, -57, 149, -39, 19,
	15, 17, -41, -40, 13, -66, 149, 149, 149, 30,
	30, -129, -128, -125, -129, -124, 132, -125, 90, 38,
	112, -124, -124, -34, 96, 97, 31, 32, 98, 99,
	12, 12, 122, 123, 125, 126, 124, -57, -57, -57,
	128, -57, -125, -126, -9, 118, 89, 6, -52, -51,
	-136, 25, 140, -1, 85, 139, 138, 145, 70, 68,
	67, 64, 69, -138, 147, 146, 144, 151, 152, 66,
	65, -57, -99, -38, -72, -50, 154, 149, 154, -57,
	-57, 149, 149, 149, -95, 138, 145, -131, -138, 67,
	-66, -57, -57, -124, 149, 149, -116, 84, -99, -46,
	39, 20, -87, -85, -124, 24, 14, -87, -42, 14,
	58, 59, 60, -130, 72, -72, -99, -57, 150, -102,
	-93, -92, -58, -57, -76, 144, -124, 133, 131, 134,
	135, 136, 137, -124, -85, 153, 140, 90, 38, 112,
	113, -124, -124, -124, -124, -57, -57, 145, 14, 153,
	-57, 6, 87, 64, 153, 64, -125, -126, 153, -124,
	-57, -1, -57, -57, -57, -131, -57, 68, 64, 69,
	-59, 149, -66, 129, -57, 62, 61, -57, -57, -57,
	-57, -57, -57, -57, 150, 153, 150, 150, 150, -124,
	6, -130, -124, 6, -130, -130, -96, 84, -59, -59,
	68, 64, 62, 61, 70, 131, -57, -130, -117, 86,
	-57, -47, 45, 42, -86, -85, 16, 153, -100, -89,
	-86, -88, -90, 23, 149, -66, 130, 14, -43, 18,
	-100, -135, 61, -135, -135, -102, 150, 150, 153, 22,
	149, 149, 149, 149, 149, 149, 149, 149, -137, 22,
	27, 28, 36, -129, -57, 91, 149, 22, 149, 149,
	20, -53, -124, -99, -57, -2, -12, -5, -13, 81,
	80, -8, -10, -6, 105, 106, -124, -126, -125, -124,
	64, 64, -52, 22, 149, -109, -108, 86, 82, -54,
	-55, 65, -57, -59, -57, -59, -59, -99, -72, -72,
	-72, -58, -97, 86, -57, -59, -68, 149, -66, 129,
	-68, -68, -131, 153, -72, 88, -1, 85, -49, 46,
	-57, -61, -62, -63, -57, -76, 21, 149, -38, -124,
	22, -106, -105, -56, -124, -87, -43, 54, -132, -134,
	53, 57, 153, 49, 51, 52, -124, 22, -89, 149,
	-100, -44, 40, -57, -40, -39, -40, -40, -102, -124,
	-72, -130, -130, -130, -130, -72, -72, -72, -101, -124,
	-38, -23, 149, -124, -56, 149, -56, -38, -101, -38,
	150, -32, -29, -31, -28, -30, -125, -124, -126, 88,
	143, -57, -95, 87, 87, -124, -124, 149, -101, 88,
	-109, -1, -57, -57, 65, 150, 150, 150, 150, 88,
	-57, 85, 65, -60, -59, 149, 93, 64, -57, 150,
	80, -1, -57, -48, 47, 73, 153, -64, 43, 44,
	-60, -98, -56, -124, -42, 153, 145, 48, 48, -133,
	50, -133, -132, -134, -100, -124, 150, -57, -43, -45,
	41, 42, 150, -72, -72, -72, -58, -72, 150, 150,
	150, 150, 153, -25, 31, 32, 33, 34, -24, -23,
	35, -98, 37, 150, 22, 150, 153, 153, 35, 150,
	153, 83, -2, 85, -118, 84, -2, -2, 87, 87,
	-38, 150, 81, 88, 85, -57, -57, -59, 150, 153,
	-57, 74, 150, 117, -116, -48, 120, -61, 121, 150,
	153, -43, -106, -57, -89, -89, 48, 48, 48, -133,
	153, -57, -99, 102, 150, 150, 150, 150, 150, 102,
	102, 116, 102, 116, -137, -101, -56, -56, 150, 153,
	-57, 150, -124, 22, 114, 22, -28, -31, -31, -125,
	-57, 22, -32, -2, -119, 86, -57, 88, 88, -2,
	-2, 150, 22, 81, -1, -96, -60, 153, 40, -65,
	31, 32, 21, -38, -98, -91, 55, 56, -89, -89,
	-89, 48, -124, -57, 149, 102, 102, 102, 102, 102,
	149, 149, 121, 149, 121, -38, -25, -24, -38, -3,
	-14, -5, -18, 81, 80, -15, -16, 83, 115, 114,
	114, 150, -111, -110, 86, 82, 88, -2, 85, 83,
	83, 88, 88, 149, -108, -57, 149, -60, -57, 149,
	-91, 55, -89, 150, 150, -78, -77, -79, 101, 149,
	149, 149, 149, 149, -77, -79, -78, 102, -77, 102,
	88, 143, -57, -95, -57, -125, -126, -57, -3, -3,
	22, 88, -111, -2, -57, 80, -2, 83, 83, -38,
	150, -46, -101, -57, 150, -46, 39, 42, -78, -78,
	-78, -78, -77, 150, 150, 149, 150, 149, -3, 85,
	-120, 84, 87, 64, 64, 88, 88, 114, 81, 88,
	85, -118, 150, 150, 150, 42, -99, 150, 150, 150,
	150, 150, -78, -77, -3, -121, 86, -57, -4, -17,
	-5, -19, 81, 80, -15, -16, -6, -124, -124, -3,
	81, -2, -61, 150, 150, -113, -112, 86, 82, 88,
	-3, 85, 88, 143, -57, -95, 87, 87, 88, -110,
	-80, 127, 88, -113, -3, -57, 80, -3, 83, -4,
	85, -122, 84, -4, -4, -81, 68, 75, 6, 78,
	81, 88, 85, -120, -4, -123, 86, -57, 88, 88,
	-83, 75, -82, 6, 78, 76, 76, 79, 81, -3,
	-115, -114, 86, 82, 88, -4, 85, 83, 83, 65,
	76, 76, 77, 79, -112, 88, -115, -4, -57, 80,
	-4, -84, 75, -82, 81, 88, 85, -122, 77, 81,
	-4, -114,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 319,
	41, 42, 0, 0, 391, 0, 0, 0, 0, 71,
	0, 0, 0, 115, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 34, 418, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 392, 393, 394,
	395, 396, 397, 0, 398, -2, 0, -2, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 178, 0, 170, 171, 172, 173, 174, 175, 0,
	0, 0, 393, 390, 259, 319, 408, 0, 0, 0,
	0, 388, 392, 176, 177, 0, 320, 164, -2, 0,
	0, 0, 147, 0, 406, 145, 164, 249, 0, 0,
	0, 69, 404, 402, 70, 0, 391, 72, 0, 0,
	0, 93, 94, 0, 116, 117, 118, 119, 0, 0,
	0, 126, 131, 132, 133, 134, 0, 127, 128, 130,
	136, 0, 193, 0, 0, 32, 33, 35, 165, 168,
	0, 419, 0, 3, -2, 0, 422, 423, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 243,
	244, 249, 406, 406, 0, 422, 423, 0, 0, 409,
	237, 247, 248, 0, 0, 406, 365, 0, 0, 157,
	0, 0, 0, 331, 290, 291, 0, 0, 149, 0,
	416, 416, 416, 0, 407, 0, 250, 327, 252, 0,
	335, 315, 317, 313, 314, 197, 178, 393, 390, 392,
	394, 395, 396, 420, 0, 0, 0, 0, 0, 0,
	0, 95, 100, 114, 0, 120, 121, 0, 0, 0,
	137, 171, -2, 0, 0, 0, 0, 0, 418, 0,
	401, 349, 215, -2, -2, 0, 0, 0, 0, 0,
	228, 164, 199, 0, -2, 0, 0, 238, 239, 240,
	241, 242, 245, 246, 196, 0, 198, 214, 254, 179,
	181, 249, 180, 182, 249, 249, 323, 0, 220, 222,
	0, 0, 0, 0, 408, 124, 0, 249, 0, -2,
	0, 162, 0, 0, 164, 292, 0, 0, 149, -2,
	298, 299, 302, 303, 164, 295, 389, 0, 151, 0,
	148, 0, 417, 0, 0, 146, 251, 253, 0, 0,
	249, 406, 406, 406, 249, 249, 249, 0, 164, 421,
	0, 0, 0, 405, 403, 164, 0, 164, 0, 0,
	0, 125, 135, 129, 138, 0, 0, 36, 37, 0,
	319, 46, 47, 48, 23, 24, 0, 400, 399, 0,
	0, 0, 169, 0, 0, 0, 349, -2, 0, 223,
	224, 0, 0, 229, -2, 233, 235, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 164, 217, 0,
	234, 236, 0, 0, 0, 0, 366, -2, 139, 0,
	160, 156, 203, 209, 207, 208, 0, 0, 339, 293,
	0, 147, 343, 0, 178, 332, 345, 0, 0, 412,
	412, 410, 0, 411, 414, 415, 300, 0, 410, 0,
	149, 153, 0, 150, 141, 144, 142, 143, 336, 316,
	0, 249, 249, 249, 249, 0, 0, 0, 0, 333,
	77, 87, 0, 83, 80, 0, 0, 92, 0, 99,
	0, 0, 107, 108, 102, 105, 101, 0, 96, 0,
	-2, 0, 0, -2, -2, 0, 0, 164, 0, 0,
	0, 350, 0, 225, 0, 255, 256, 257, 258, 318,
	324, 0, 0, 0, 201, 0, 122, 0, 0, 260,
	40, 363, 163, 158, 160, 0, 0, 205, 210, 211,
	337, 0, 325, 294, 149, 0, 0, 0, 0, 0,
	413, 0, 0, 412, 330, 301, 304, 0, 346, 140,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 78, 88, 89, 0, 0, 0, 85,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 27, 5, -2, 369, 0, 0, 0, -2, -2,
	0, 0, 38, 0, -2, 226, 321, 227, 216, 0,
	0, 123, 200, 0, 364, 159, 161, 204, 0, 164,
	0, 341, 344, 342, 305, 410, 0, 0, 0, 0,
	0, 154, 152, 0, 255, 256, 257, 258, 260, 0,
	0, 0, 0, 0, 164, 334, 90, 91, 87, 0,
	84, 81, 82, 164, -2, 0, 103, 109, 106, 0,
	104, 0, 0, 353, 0, -2, 0, 0, 0, 0,
	0, 166, 0, 39, 347, 322, 202, 0, 0, 206,
	212, 213, 0, 340, 326, 306, 0, 0, 410, 410,
	309, 0, 178, 0, 276, 0, 0, 0, 0, 0,
	276, 276, 0, 276, 0, 76, 79, 86, 98, 0,
	0, 49, 50, 0, 319, 61, 62, 0, 54, -2,
	-2, 0, 0, 353, -2, 0, 0, 370, -2, 28,
	29, 0, 0, 164, 348, 0, 155, 338, 311, 0,
	307, 0, 310, 296, 297, 0, 274, 155, 0, 276,
	276, 276, 276, 276, 0, 155, 0, 0, 0, 0,
	110, -2, 0, 0, 0, 193, 0, 55, 0, 0,
	0, 0, 0, 354, 0, 45, 367, 30, 31, 0,
	218, 0, 0, 308, 262, 273, 0, 0, 0, 0,
	0, 0, 0, 268, 269, 276, 271, 276, 7, -2,
	373, 0, -2, 0, 0, 111, 112, -2, 43, 0,
	-2, 368, 167, 261, 312, 0, 277, 263, 264, 265,
	266, 267, 0, 0, 357, 0, -2, 0, 0, 0,
	56, 57, 0, 319, 66, 67, 68, 0, 0, 0,
	44, 351, 156, 270, 272, 0, 357, -2, 0, 0,
	374, -2, 0, -2, 0, 0, -2, -2, 113, 352,
	275, 0, 0, 0, 358, 0, 60, 371, 51, 9,
	-2, 377, 0, 0, 0, 278, 0, 0, 0, 0,
	58, 0, -2, 372, 361, 0, -2, 0, 0, 0,
	0, 0, 287, 0, 0, 280, 281, 282, 59, 355,
	0, 361, -2, 0, 0, 378, -2, 52, 53, 0,
	286, 283, 284, 285, 356, 0, 0, 362, 0, 65,
	375, 279, 0, 289, 63, 0, -2, 376, 288, 64,
	359, 360,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 148, 3, 3, 3, 152, 3, 3,
	149, 150, 144, 147, 153, 146, 154, 151, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 143,
	3, 145,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:222
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:227
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:232
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:259
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:269
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:365
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:369
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:517
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:575
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:597
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:601
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:607
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:611
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:617
		{
			yyVAL.expression = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:621
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:625
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:629
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:633
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:639
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:643
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:647
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:651
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:655
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 97:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:661
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:665
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:669
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:673
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:679
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:685
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:689
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:695
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:701
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:705
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:711
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:715
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:719
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:725
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 111:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:729
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:733
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:737
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:741
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:747
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:751
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:755
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:759
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:763
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:767
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:771
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:777
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:781
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:785
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:791
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:795
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:799
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:803
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:807
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:811
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:815
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:819
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:823
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:827
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:831
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[4].identifier}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:851
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:863
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:873
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:882
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:891
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:902
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:906
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:912
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:918
		{
			yyVAL.queryexpr = nil
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:922
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:928
		{
			yyVAL.queryexpr = nil
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:932
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:938
		{
			yyVAL.queryexpr = nil
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:942
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:948
		{
			yyVAL.queryexpr = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:952
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:958
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:962
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:972
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:982
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:992
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.queryexpr = nil
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 167:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1082
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1086
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1112
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1200
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.token = Token{}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1240
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1271
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1355
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexprs = nil
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1413
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1417
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1444
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1448
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1454
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 261:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1458
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1464
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 263:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 265:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 268:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 269:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 270:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 271:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 272:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1510
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1516
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1520
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = nil
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1537
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1541
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1551
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1562
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1567
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1572
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1588
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1706
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.queryexpr = nil
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1736
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = nil
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1766
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1772
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1782
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1786
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1796
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 338:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 340:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1862
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1867
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.elseexpr = Else{}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1898
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.elseexpr = Else{}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1914
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.elseexpr = Else{}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1938
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.elseexpr = Else{}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1964
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1968
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1974
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1978
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1984
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1988
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1998
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2008
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2024
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2028
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2038
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2112
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2118
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2122
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2128
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2134
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2138
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2144
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2154
		{
			yyVAL.token = Token{}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.token = yyDollar[1].token
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2164
		{
			yyVAL.token = Token{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.token = yyDollar[1].token
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2174
		{
			yyVAL.token = Token{}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2184
		{
			yyVAL.token = Token{}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.token = yyDollar[1].token
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2194
		{
			yyVAL.token = yyDollar[1].token
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.token = yyDollar[1].token
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2204
		{
			yyVAL.token = Token{}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.token = yyDollar[1].token
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2214
		{
			yyVAL.token = Token{}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.token = yyDollar[1].token
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2224
		{
			yyVAL.token = Token{}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2238
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
