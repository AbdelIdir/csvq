//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const TRIGGER = 57453
const FUNCTION = 57454
const AGGREGATE = 57455
const BEGIN = 57456
const RETURN = 57457
const IGNORE = 57458
const WITHIN = 57459
const VAR = 57460
const SHOW = 57461
const TIES = 57462
const NULLS = 57463
const TABLES = 57464
const VIEWS = 57465
const FIELDS = 57466
const CURSORS = 57467
const FUNCTIONS = 57468
const ROWS = 57469
const ERROR = 57470
const COUNT = 57471
const LISTAGG = 57472
const AGGREGATE_FUNCTION = 57473
const ANALYTIC_FUNCTION = 57474
const FUNCTION_NTH = 57475
const FUNCTION_WITH_INS = 57476
const COMPARISON_OP = 57477
const STRING_OP = 57478
const SUBSTITUTION_OP = 57479
const UMINUS = 57480
const UPLUS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"TABLES",
	"VIEWS",
	"FIELDS",
	"CURSORS",
	"FUNCTIONS",
	"ROWS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2195

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 164,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 62,
	13, 164,
	15, 164,
	17, 164,
	19, 164,
	146, 164,
	-2, 1,
	-1, 64,
	147, 245,
	-2, 164,
	-1, 102,
	84, 312,
	-2, 397,
	-1, 104,
	58, 144,
	59, 144,
	60, 144,
	-2, 155,
	-1, 141,
	64, 397,
	68, 397,
	69, 397,
	-2, 127,
	-1, 142,
	64, 397,
	68, 397,
	69, 397,
	-2, 128,
	-1, 143,
	64, 397,
	68, 397,
	69, 397,
	-2, 130,
	-1, 158,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 217,
	64, 397,
	68, 397,
	69, 397,
	-2, 319,
	-1, 230,
	64, 397,
	68, 397,
	69, 397,
	-2, 120,
	-1, 231,
	64, 397,
	68, 397,
	69, 397,
	-2, 121,
	-1, 235,
	64, 397,
	68, 397,
	69, 397,
	-2, 137,
	-1, 237,
	88, 4,
	-2, 164,
	-1, 248,
	70, 0,
	135, 0,
	142, 0,
	-2, 215,
	-1, 249,
	70, 0,
	135, 0,
	142, 0,
	-2, 217,
	-1, 289,
	88, 1,
	-2, 164,
	-1, 299,
	48, 399,
	-2, 321,
	-1, 318,
	64, 397,
	68, 397,
	69, 397,
	-2, 305,
	-1, 336,
	64, 397,
	68, 397,
	69, 397,
	-2, 392,
	-1, 346,
	64, 397,
	68, 397,
	69, 397,
	-2, 138,
	-1, 369,
	88, 1,
	-2, 164,
	-1, 375,
	70, 0,
	135, 0,
	142, 0,
	-2, 226,
	-1, 397,
	84, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 400,
	64, 397,
	68, 397,
	69, 397,
	-2, 160,
	-1, 404,
	64, 397,
	68, 397,
	69, 397,
	-2, 206,
	-1, 432,
	64, 397,
	68, 397,
	69, 397,
	-2, 150,
	-1, 468,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 471,
	88, 4,
	-2, 164,
	-1, 472,
	88, 4,
	-2, 164,
	-1, 487,
	88, 316,
	-2, 397,
	-1, 499,
	64, 397,
	68, 397,
	69, 397,
	-2, 163,
	-1, 538,
	13, 409,
	73, 409,
	146, 409,
	-2, 75,
	-1, 560,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 565,
	88, 4,
	-2, 164,
	-1, 566,
	88, 4,
	-2, 164,
	-1, 571,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 573,
	86, 313,
	88, 313,
	-2, 397,
	-1, 590,
	64, 397,
	68, 397,
	69, 397,
	-2, 334,
	-1, 597,
	64, 397,
	68, 397,
	69, 397,
	-2, 154,
	-1, 614,
	64, 397,
	68, 397,
	69, 397,
	-2, 84,
	-1, 618,
	88, 6,
	-2, 164,
	-1, 624,
	147, 104,
	150, 104,
	-2, 397,
	-1, 629,
	88, 4,
	-2, 164,
	-1, 680,
	88, 6,
	-2, 164,
	-1, 681,
	88, 6,
	-2, 164,
	-1, 685,
	88, 4,
	-2, 164,
	-1, 689,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 698,
	64, 397,
	68, 397,
	69, 397,
	-2, 303,
	-1, 715,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 721,
	140, 55,
	-2, 397,
	-1, 736,
	64, 397,
	68, 397,
	69, 397,
	-2, 300,
	-1, 753,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 756,
	88, 8,
	-2, 164,
	-1, 761,
	88, 6,
	-2, 164,
	-1, 764,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 785,
	88, 6,
	-2, 164,
	-1, 812,
	88, 6,
	-2, 164,
	-1, 816,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 818,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 821,
	88, 8,
	-2, 164,
	-1, 822,
	88, 8,
	-2, 164,
	-1, 836,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 845,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 849,
	88, 8,
	-2, 164,
	-1, 862,
	88, 8,
	-2, 164,
	-1, 866,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 891,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
}

const yyPrivate = 57344

const yyLast = 3293

var yyAct = [...]int{

	78, 23, 861, 871, 860, 837, 754, 401, 811, 810,
	739, 684, 101, 561, 683, 738, 147, 770, 347, 446,
	648, 368, 22, 490, 545, 670, 540, 508, 120, 93,
	216, 125, 126, 354, 21, 677, 275, 461, 330, 459,
	317, 299, 196, 298, 462, 500, 353, 20, 208, 516,
	1, 546, 737, 307, 419, 411, 405, 314, 418, 295,
	367, 109, 163, 23, 152, 85, 213, 83, 202, 300,
	66, 116, 178, 159, 310, 757, 238, 434, 167, 556,
	166, 165, 557, 362, 676, 168, 169, 177, 613, 439,
	180, 75, 60, 787, 178, 174, 21, 179, 194, 119,
	104, 61, 178, 167, 587, 186, 576, 204, 204, 20,
	168, 169, 827, 157, 554, 218, 204, 553, 118, 118,
	539, 121, 199, 226, 227, 228, 177, 512, 229, 167,
	503, 166, 165, 146, 198, 177, 168, 169, 513, 239,
	355, 437, 297, 243, 220, 171, 170, 172, 156, 156,
	162, 406, 826, 807, 60, 244, 189, 806, 110, 23,
	805, 239, 239, 804, 803, 242, 203, 203, 781, 239,
	779, 778, 769, 768, 767, 219, 207, 766, 501, 268,
	682, 271, 423, 660, 424, 425, 420, 417, 659, 658,
	421, 657, 21, 656, 635, 615, 171, 170, 172, 612,
	607, 162, 204, 43, 502, 20, 606, 204, 605, 246,
	204, 599, 586, 578, 321, 160, 159, 277, 280, 577,
	575, 167, 161, 166, 165, 250, 568, 263, 168, 169,
	264, 552, 550, 538, 344, 496, 485, 458, 23, 358,
	241, 361, 484, 110, 483, 106, 270, 107, 43, 105,
	60, 273, 274, 309, 482, 104, 359, 328, 365, 339,
	265, 331, 287, 76, 28, 345, 160, 159, 267, 266,
	319, 294, 167, 161, 166, 165, 407, 818, 782, 168,
	169, 780, 374, 422, 376, 377, 312, 313, 745, 744,
	23, 112, 335, 743, 321, 378, 409, 414, 204, 742,
	741, 177, 426, 343, 712, 204, 710, 204, 364, 198,
	709, 386, 118, 703, 699, 382, 372, 177, 371, 172,
	278, 278, 162, 21, 696, 694, 28, 177, 475, 60,
	447, 360, 445, 451, 414, 414, 20, 444, 443, 447,
	396, 442, 465, 441, 440, 391, 428, 389, 393, 387,
	429, 341, 416, 177, 340, 195, 112, 203, 456, 466,
	177, 185, 177, 473, 474, 470, 415, 447, 184, 183,
	23, 113, 433, 232, 435, 436, 112, 713, 172, 221,
	715, 60, 366, 338, 449, 329, 476, 160, 159, 468,
	62, 156, 144, 167, 161, 166, 165, 285, 23, 842,
	168, 169, 711, 21, 585, 583, 580, 761, 414, 708,
	177, 510, 177, 492, 177, 493, 20, 491, 681, 491,
	479, 491, 28, 204, 580, 135, 664, 662, 522, 478,
	507, 21, 464, 680, 360, 618, 491, 751, 321, 529,
	665, 663, 749, 707, 20, 706, 187, 705, 498, 704,
	171, 451, 172, 188, 414, 162, 286, 130, 131, 661,
	511, 60, 655, 740, 337, 890, 521, 495, 164, 23,
	518, 878, 23, 23, 864, 61, 520, 852, 851, 844,
	519, 548, 828, 524, 823, 349, 3, 559, 817, 60,
	563, 564, 70, 9, 319, 528, 494, 814, 177, 763,
	760, 28, 123, 759, 321, 725, 531, 532, 533, 534,
	714, 584, 693, 414, 822, 204, 204, 692, 687, 574,
	160, 159, 128, 129, 132, 133, 167, 161, 166, 165,
	65, 632, 631, 168, 169, 136, 137, 140, 138, 139,
	447, 581, 570, 486, 414, 414, 477, 582, 3, 223,
	616, 467, 821, 28, 122, 9, 591, 592, 598, 609,
	60, 23, 190, 60, 60, 588, 23, 23, 589, 395,
	596, 863, 23, 566, 603, 862, 124, 608, 423, 627,
	424, 425, 420, 417, 633, 634, 421, 565, 414, 813,
	472, 621, 622, 812, 204, 204, 204, 626, 620, 686,
	640, 222, 471, 685, 370, 21, 491, 862, 369, 177,
	639, 849, 812, 785, 451, 647, 685, 629, 20, 23,
	369, 384, 638, 224, 225, 289, 838, 755, 562, 197,
	23, 177, 276, 28, 868, 651, 652, 653, 668, 667,
	177, 867, 834, 732, 3, 464, 623, 731, 688, 464,
	691, 9, 60, 690, 558, 204, 863, 60, 60, 813,
	695, 28, 686, 60, 370, 896, 889, 858, 843, 697,
	799, 856, 700, 762, 637, 491, 523, 569, 872, 882,
	872, 23, 23, 832, 729, 497, 23, 888, 717, 876,
	23, 886, 887, 898, 885, 720, 702, 875, 874, 726,
	447, 645, 579, 43, 727, 502, 722, 723, 730, 214,
	60, 282, 99, 172, 734, 281, 23, 177, 884, 735,
	747, 60, 252, 747, 489, 746, 251, 253, 750, 311,
	9, 758, 28, 854, 363, 28, 28, 240, 284, 283,
	855, 752, 211, 857, 765, 255, 254, 894, 517, 870,
	873, 399, 873, 43, 23, 654, 747, 23, 796, 797,
	595, 777, 23, 748, 594, 23, 210, 211, 212, 593,
	719, 515, 60, 60, 100, 3, 514, 60, 292, 783,
	801, 60, 9, 800, 505, 506, 23, 798, 423, 772,
	424, 425, 794, 747, 773, 774, 775, 776, 809, 527,
	293, 526, 321, 802, 641, 820, 431, 60, 200, 825,
	771, 815, 824, 23, 549, 555, 547, 23, 115, 23,
	114, 829, 23, 23, 28, 332, 333, 413, 155, 28,
	28, 643, 644, 808, 334, 28, 724, 23, 830, 636,
	846, 793, 833, 625, 619, 60, 23, 617, 60, 331,
	23, 551, 438, 60, 794, 3, 60, 794, 794, 342,
	201, 308, 9, 23, 452, 454, 879, 23, 877, 209,
	296, 859, 794, 541, 542, 543, 544, 60, 306, 233,
	134, 61, 28, 3, 151, 794, 154, 117, 895, 892,
	9, 848, 23, 28, 784, 628, 288, 795, 794, 8,
	899, 412, 794, 793, 60, 7, 793, 793, 60, 6,
	60, 383, 835, 60, 60, 839, 840, 72, 171, 170,
	172, 793, 315, 162, 316, 302, 301, 794, 60, 893,
	847, 869, 853, 841, 793, 5, 91, 60, 509, 71,
	756, 60, 74, 865, 28, 28, 67, 793, 73, 28,
	68, 793, 642, 28, 60, 504, 880, 403, 60, 795,
	883, 9, 795, 795, 9, 9, 402, 153, 80, 81,
	82, 398, 99, 84, 291, 525, 793, 795, 430, 28,
	108, 17, 16, 60, 509, 897, 77, 127, 160, 159,
	795, 217, 14, 463, 167, 161, 166, 165, 460, 13,
	175, 168, 169, 795, 12, 10, 15, 795, 11, 790,
	63, 102, 673, 788, 671, 350, 348, 28, 4, 148,
	28, 2, 0, 0, 0, 28, 0, 0, 28, 141,
	142, 143, 795, 145, 100, 0, 0, 0, 0, 175,
	0, 0, 0, 413, 0, 0, 0, 0, 175, 28,
	0, 0, 0, 9, 0, 0, 173, 3, 9, 9,
	0, 171, 170, 172, 9, 423, 162, 424, 425, 420,
	417, 649, 650, 421, 610, 611, 28, 0, 181, 182,
	28, 0, 28, 176, 102, 28, 28, 192, 193, 0,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	28, 0, 0, 0, 672, 0, 0, 0, 0, 28,
	0, 9, 0, 28, 0, 171, 170, 172, 509, 0,
	162, 0, 9, 0, 230, 231, 28, 0, 0, 0,
	28, 160, 159, 0, 0, 0, 235, 167, 161, 166,
	165, 0, 0, 0, 168, 169, 264, 0, 245, 0,
	0, 247, 248, 249, 0, 28, 0, 256, 257, 258,
	259, 260, 261, 262, 0, 0, 672, 672, 0, 0,
	0, 0, 69, 9, 9, 0, 0, 0, 9, 0,
	0, 0, 9, 0, 0, 160, 159, 0, 0, 290,
	0, 167, 161, 166, 165, 111, 0, 215, 168, 169,
	234, 672, 0, 0, 0, 318, 0, 0, 9, 0,
	171, 170, 172, 336, 175, 162, 423, 0, 424, 425,
	420, 417, 701, 0, 421, 0, 0, 0, 346, 276,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	175, 0, 789, 373, 0, 375, 9, 672, 0, 9,
	0, 0, 0, 0, 9, 0, 0, 9, 0, 0,
	0, 0, 0, 215, 0, 0, 448, 191, 385, 0,
	0, 672, 0, 455, 0, 457, 44, 0, 9, 0,
	160, 159, 0, 0, 400, 404, 167, 161, 166, 165,
	0, 0, 0, 168, 169, 303, 205, 0, 672, 0,
	432, 0, 672, 0, 789, 9, 0, 789, 789, 9,
	0, 9, 0, 0, 9, 9, 0, 44, 0, 0,
	0, 0, 789, 175, 0, 175, 0, 175, 0, 9,
	0, 672, 0, 0, 0, 789, 303, 205, 9, 0,
	0, 0, 9, 469, 102, 43, 0, 0, 789, 0,
	111, 0, 789, 0, 379, 9, 0, 380, 381, 9,
	279, 279, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 487, 789, 0, 305,
	0, 0, 305, 0, 9, 0, 0, 0, 0, 0,
	0, 499, 45, 46, 47, 48, 52, 49, 50, 51,
	59, 53, 54, 55, 56, 57, 58, 0, 0, 0,
	0, 567, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 279, 0, 279, 279, 318,
	0, 0, 0, 45, 46, 47, 48, 52, 49, 50,
	51, 59, 53, 54, 55, 56, 57, 58, 0, 0,
	0, 0, 0, 0, 279, 388, 390, 392, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 572, 0, 0, 0, 305, 0, 305,
	573, 0, 0, 111, 0, 111, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 171, 170, 172,
	0, 0, 162, 0, 0, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 891, 597, 0,
	0, 0, 646, 530, 0, 0, 0, 535, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 666, 0, 0, 624, 0, 0,
	0, 0, 0, 669, 630, 0, 0, 0, 0, 0,
	279, 0, 279, 0, 279, 0, 0, 160, 159, 0,
	0, 0, 0, 167, 161, 166, 165, 0, 0, 279,
	168, 169, 0, 44, 80, 81, 82, 0, 99, 84,
	61, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 171, 170, 172, 0,
	0, 162, 0, 0, 44, 600, 601, 602, 604, 0,
	0, 0, 0, 0, 0, 0, 866, 0, 0, 0,
	733, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 698, 94, 0, 0, 0, 95, 0, 0, 0,
	100, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	88, 0, 279, 0, 0, 0, 716, 102, 150, 97,
	718, 721, 0, 0, 0, 0, 160, 159, 728, 0,
	0, 0, 167, 161, 166, 165, 0, 305, 305, 168,
	169, 0, 0, 736, 0, 0, 0, 149, 0, 45,
	46, 47, 48, 52, 49, 50, 51, 59, 90, 98,
	89, 56, 57, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 87, 96, 103, 0, 0, 0, 0,
	45, 46, 47, 48, 52, 49, 50, 51, 59, 53,
	54, 55, 56, 57, 58, 0, 0, 786, 0, 279,
	0, 0, 44, 80, 81, 82, 453, 99, 84, 61,
	0, 0, 0, 0, 0, 0, 305, 305, 305, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 819, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 831, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 95, 0, 0, 279, 100,
	0, 0, 0, 0, 0, 0, 0, 305, 92, 88,
	850, 0, 0, 0, 0, 0, 0, 0, 97, 44,
	80, 81, 82, 0, 99, 84, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 881, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 45, 46,
	47, 48, 52, 49, 50, 51, 59, 90, 98, 89,
	56, 57, 58, 0, 0, 0, 0, 0, 0, 320,
	0, 86, 87, 96, 103, 0, 0, 0, 94, 0,
	0, 0, 95, 0, 0, 0, 100, 214, 0, 0,
	0, 0, 0, 0, 0, 92, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 44, 80, 81, 82,
	0, 99, 84, 61, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 46, 47, 48, 52,
	49, 50, 51, 59, 90, 98, 89, 56, 57, 58,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 87,
	96, 103, 0, 0, 0, 94, 0, 0, 0, 95,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 44, 80, 81, 82, 0, 99, 84,
	61, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 45, 46, 47, 48, 52, 49, 50, 51,
	59, 323, 324, 322, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 320, 0, 86, 87, 96, 103, 0,
	0, 0, 94, 0, 0, 0, 95, 0, 0, 0,
	100, 0, 43, 0, 0, 0, 0, 0, 0, 92,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	44, 80, 81, 82, 0, 99, 84, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 45,
	46, 47, 48, 52, 49, 50, 51, 59, 90, 98,
	89, 56, 57, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 87, 96, 103, 0, 0, 0, 94,
	0, 0, 0, 95, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 44, 80, 81,
	82, 0, 99, 84, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 90, 98, 89, 56, 57,
	58, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	87, 96, 103, 0, 0, 0, 94, 0, 0, 0,
	95, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 88, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 44, 80, 81, 82, 0, 99,
	84, 61, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 46, 47, 48, 52, 49, 50,
	51, 59, 323, 324, 322, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 87, 96, 103,
	0, 0, 0, 94, 0, 0, 0, 95, 0, 0,
	0, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 44, 80, 236, 82, 0, 99, 84, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 171, 170, 172, 0, 0, 162, 0, 0,
	45, 46, 47, 48, 52, 49, 50, 51, 59, 90,
	98, 89, 56, 57, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 87, 96, 64, 0, 0, 0,
	94, 0, 0, 0, 95, 0, 0, 0, 100, 44,
	0, 0, 0, 0, 0, 0, 61, 92, 88, 0,
	0, 35, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 24, 160, 159, 25, 0, 0, 0, 167, 161,
	166, 165, 0, 0, 0, 168, 169, 0, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 45, 46, 47,
	48, 52, 49, 50, 51, 59, 90, 98, 89, 56,
	57, 58, 171, 170, 172, 0, 0, 162, 43, 0,
	86, 87, 96, 103, 0, 792, 791, 0, 678, 0,
	0, 0, 845, 0, 27, 0, 0, 32, 30, 31,
	29, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	356, 357, 0, 37, 38, 39, 40, 481, 170, 172,
	679, 0, 162, 26, 36, 45, 46, 47, 48, 52,
	49, 50, 51, 59, 53, 54, 55, 56, 57, 58,
	44, 0, 160, 159, 0, 0, 0, 61, 167, 161,
	166, 165, 35, 0, 0, 168, 169, 0, 0, 0,
	0, 0, 24, 0, 0, 25, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 53, 54, 55, 56, 57,
	58, 0, 0, 0, 0, 0, 0, 160, 159, 0,
	0, 0, 450, 167, 161, 166, 165, 0, 0, 0,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 43,
	0, 44, 0, 0, 0, 0, 352, 351, 61, 41,
	0, 0, 0, 35, 0, 27, 0, 0, 32, 30,
	31, 29, 0, 24, 0, 0, 25, 0, 0, 33,
	34, 356, 357, 42, 37, 38, 39, 40, 0, 0,
	0, 0, 0, 0, 26, 36, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 53, 54, 55, 56, 57,
	58, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 0, 44, 0, 0, 0, 0, 675, 674, 61,
	678, 0, 0, 0, 35, 0, 27, 0, 0, 32,
	30, 31, 29, 0, 24, 0, 0, 25, 0, 0,
	33, 34, 0, 0, 0, 37, 38, 39, 40, 0,
	0, 0, 679, 0, 0, 26, 36, 45, 46, 47,
	48, 52, 49, 50, 51, 59, 53, 54, 55, 56,
	57, 58, 0, 0, 171, 170, 172, 0, 0, 162,
	0, 43, 0, 0, 0, 171, 170, 172, 19, 18,
	162, 41, 0, 0, 836, 0, 0, 27, 0, 0,
	32, 30, 31, 29, 0, 816, 0, 0, 0, 0,
	0, 33, 34, 0, 0, 42, 37, 38, 39, 40,
	0, 0, 0, 0, 0, 0, 26, 36, 45, 46,
	47, 48, 52, 49, 50, 51, 59, 53, 54, 55,
	56, 57, 58, 0, 160, 159, 0, 0, 0, 0,
	167, 161, 166, 165, 0, 160, 159, 168, 169, 0,
	0, 167, 161, 166, 165, 171, 170, 172, 168, 169,
	162, 0, 0, 0, 0, 171, 170, 172, 0, 0,
	162, 0, 0, 0, 0, 764, 171, 170, 172, 0,
	0, 162, 0, 0, 0, 753, 171, 170, 172, 0,
	0, 162, 0, 0, 0, 0, 689, 171, 170, 172,
	0, 0, 162, 0, 0, 0, 571, 171, 170, 172,
	0, 0, 162, 0, 0, 0, 0, 560, 0, 0,
	44, 0, 0, 0, 0, 160, 159, 488, 0, 0,
	206, 167, 161, 166, 165, 160, 159, 0, 168, 169,
	205, 167, 161, 166, 165, 0, 160, 159, 168, 169,
	0, 0, 167, 161, 166, 165, 160, 159, 0, 168,
	169, 0, 167, 161, 166, 165, 0, 160, 159, 168,
	169, 0, 0, 167, 161, 166, 165, 160, 159, 0,
	168, 169, 0, 167, 161, 166, 165, 171, 170, 172,
	168, 169, 162, 0, 44, 0, 0, 171, 170, 172,
	0, 0, 162, 0, 0, 0, 0, 397, 171, 170,
	172, 44, 0, 162, 79, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 427,
	0, 44, 0, 0, 0, 0, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 53, 54, 55, 56, 57,
	58, 205, 0, 0, 44, 0, 0, 160, 159, 0,
	0, 0, 0, 167, 161, 166, 165, 160, 159, 44,
	168, 169, 410, 167, 161, 166, 165, 0, 160, 159,
	168, 169, 0, 0, 167, 161, 166, 165, 44, 0,
	272, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 44, 0, 269, 0, 0, 0, 0,
	45, 46, 47, 48, 52, 49, 50, 51, 59, 53,
	54, 55, 56, 57, 58, 0, 0, 45, 46, 47,
	48, 52, 49, 50, 51, 59, 53, 54, 55, 56,
	57, 58, 0, 0, 0, 0, 0, 45, 46, 47,
	48, 52, 49, 50, 51, 59, 53, 54, 55, 56,
	57, 58, 44, 0, 0, 0, 0, 0, 0, 61,
	45, 46, 47, 48, 52, 49, 50, 51, 59, 53,
	54, 55, 56, 57, 58, 45, 46, 47, 48, 52,
	49, 50, 51, 59, 53, 54, 55, 56, 57, 58,
	0, 0, 0, 0, 45, 46, 47, 48, 52, 49,
	50, 51, 59, 53, 54, 55, 56, 57, 58, 45,
	46, 47, 48, 52, 49, 50, 51, 59, 53, 54,
	55, 56, 57, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 45, 46,
	47, 48, 52, 49, 50, 51, 59, 53, 54, 55,
	56, 57, 58,
}
var yyPact = [...]int{

	2698, -1000, 250, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2270, 2096,
	-1000, -1000, 230, 225, 790, 788, 870, 3158, -1000, 464,
	3065, 3065, 426, -1000, -1000, 868, 413, 2096, 2096, 2096,
	264, 1579, 878, 803, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	254, -1000, 2698, 2943, 2009, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 254, -1000, -1000, -49, -61,
	-1000, -1000, -1000, -1000, -1000, -1000, 2096, 2096, 223, 222,
	215, -1000, 2096, 311, 210, 2096, 2096, 3065, 209, -1000,
	-1000, 545, 2317, 2009, 769, 840, 3027, 2916, 855, 708,
	637, -1000, 630, 2096, 3065, 3027, -1000, -6, 242, -1000,
	511, -1000, 3065, 3065, 3065, -1000, -1000, 3065, -1000, -1000,
	-1000, -1000, 2096, 2096, 231, -1000, -1000, -1000, -1000, -1000,
	865, 2317, 1050, 2317, 2357, 2932, 12, 673, 870, -1000,
	-1000, -1000, -1000, -7, 3065, -1000, 2096, -1000, 2698, 2096,
	2096, 2096, 646, 658, 684, 2096, 2096, 2096, 2096, 2096,
	2096, 2096, -1000, 80, 113, 122, 121, 145, 3099, 1835,
	3084, -1000, -1000, 2096, 637, 637, 548, 174, 174, 647,
	677, -1000, 252, -1000, 327, 637, 539, 2096, 113, 733,
	758, 3027, 854, -8, -1000, -1000, 1313, 864, 843, 1313,
	668, 668, 668, 1922, -1000, 110, -1000, 996, 239, 798,
	870, 2096, 373, 237, 208, 205, -1000, -1000, -1000, 839,
	2317, 2317, 963, 3065, 2096, 2317, 2096, 2556, 3065, 870,
	3065, 19, 670, 803, 236, 2317, 522, -12, -63, -63,
	703, 2096, 174, 2096, 174, 174, -38, -38, -1000, -1000,
	-1000, 385, 252, -1000, 2096, -1000, -1000, -1000, -1000, -1000,
	2096, -1000, -1000, 2096, 1748, 535, 2096, -1000, 2009, -1000,
	-1000, 174, 203, 201, 199, 646, -1000, 2096, 481, 2698,
	2922, 705, 2096, 2183, 130, 3050, 2990, 3027, 843, 133,
	-1000, 3007, -1000, -1000, 1272, -1000, 1313, 766, 2096, -1000,
	145, -1000, 145, 145, -1000, -9, 830, -1000, 2317, -1000,
	-1000, -57, 198, 197, 195, 192, 191, 186, -1000, 3065,
	630, -1000, 2466, 1610, 2990, -1000, 2317, 630, 3065, 630,
	90, 3065, 870, -1000, -1000, -1000, 2317, 463, 249, -1000,
	-1000, 2270, 2096, -1000, -1000, -1000, -1000, -1000, 515, -1000,
	-11, 503, 3065, 3065, -1000, 182, 3065, 458, 534, 2698,
	2096, -1000, -1000, 2472, -1000, -63, -1000, -1000, -1000, 107,
	97, 95, 89, 455, 2096, 2842, 659, 175, -1000, 175,
	-1000, 175, -1000, 403, 88, 605, -1000, 2698, -1000, 2096,
	131, -1000, -20, 741, 2317, -1000, 174, 2990, -1000, -1000,
	3065, 855, -23, -4, -79, -1000, -1000, 728, 723, 698,
	698, 739, 1313, -1000, -1000, -1000, -1000, 3065, 529, 843,
	760, 757, 2317, 683, -1000, -1000, 683, 1922, 3065, 1835,
	637, 637, 637, 2096, 2096, 2096, 86, -30, -1000, 842,
	3065, 781, -1000, 2990, 777, -1000, 85, -1000, 829, 84,
	-33, -1000, -1000, -36, 780, -68, -1000, 571, 2556, 2832,
	544, 2556, 2556, 500, 486, 630, 79, 596, 454, -1000,
	2821, 2096, -1000, -1000, -1000, -1000, -1000, 2317, 2096, 174,
	73, -44, 72, 66, -1000, 628, 289, -1000, 545, 2317,
	-1000, 632, 285, 2183, 283, -1000, -1000, -1000, 65, -46,
	-1000, 843, 2990, 2096, 1313, 1313, 721, -1000, 716, 712,
	698, -1000, -1000, -1000, -1000, -1000, 2096, 2096, -1000, -1000,
	64, 2096, 2096, 1748, 2096, 61, 59, 53, 827, 3065,
	-1000, -1000, -1000, 2990, 2990, 52, -62, 2096, 48, 3065,
	825, 321, 822, 870, 870, 2096, 821, 870, -1000, -1000,
	2556, 531, 2096, 444, 443, 2556, 2556, 47, 817, -1000,
	593, 2698, 252, 1145, -1000, -1000, 174, -1000, -1000, -1000,
	764, -1000, -1000, -1000, -1000, 800, 680, 2990, -1000, -1000,
	2317, 739, 1016, 1313, 1313, 1313, 707, 2317, -1000, 360,
	46, 44, 42, 41, 36, 357, 325, 324, 630, -1000,
	-1000, -1000, 842, 3065, 2317, -1000, -1000, 630, 2627, 319,
	-1000, -1000, -1000, 780, 2317, 304, 33, 517, 430, 2556,
	2811, 570, 567, 429, 424, -1000, 179, -1000, 582, -1000,
	-1000, 178, -1000, -1000, -1000, 174, -1000, -1000, -1000, 2096,
	168, 1016, 1167, 739, 1313, 167, 347, 345, 343, 341,
	307, 164, 160, 281, 158, 256, -1000, -1000, -1000, -1000,
	422, 240, -1000, -1000, 2270, 2096, -1000, -1000, 2096, 2096,
	2627, 2627, 814, 417, 530, 2556, 2096, 604, -1000, 2556,
	-1000, -1000, 564, 560, 630, -1000, 769, -1000, 2317, 3065,
	-1000, 2096, 739, 362, 154, 153, 147, 143, 142, 362,
	362, 340, 362, 335, -1000, 2627, 2800, 543, 853, 11,
	667, 2317, 415, 412, 293, 592, 411, -1000, 2790, -1000,
	544, -1000, -1000, 30, 27, 26, 2317, 25, -1000, 771,
	747, 362, 362, 362, 362, 362, 24, 769, 23, 135,
	21, 132, -1000, 2627, 527, 2096, 2425, 3065, 3065, -1000,
	-1000, 2627, -1000, 589, 2556, -1000, -1000, -1000, -1000, -1000,
	-1000, 738, 2096, 17, 16, 13, 10, 6, -1000, -1000,
	362, -1000, 362, 507, 409, 2627, 2710, 400, 137, -1000,
	-1000, 2270, 2096, -1000, -1000, -1000, 465, 427, 396, -1000,
	580, 2183, -1000, -1000, -1000, -1000, -1000, -1000, 5, -35,
	394, 526, 2627, 2096, 603, -1000, 2627, 559, 2425, 2699,
	542, 2425, 2425, -1000, -1000, 272, -1000, -1000, 587, 391,
	-1000, 2427, -1000, 543, -1000, -1000, 2425, 525, 2096, 390,
	389, -1000, 665, -1000, 586, 2627, -1000, 489, 386, 2425,
	1541, 558, 551, -1000, 674, 622, 621, 610, -1000, 577,
	383, 521, 2425, 2096, 599, -1000, 2425, -1000, -1000, 653,
	618, -1000, 615, 608, -1000, -1000, -1000, -1000, 585, 377,
	-1000, 1432, -1000, 542, 672, -1000, -1000, -1000, -1000, -1000,
	584, 2425, -1000, -1000, 616, -1000, -1000, 574, -1000, -1000,
}
var yyPgo = [...]int{

	0, 50, 18, 25, 93, 485, 140, 1021, 46, 1019,
	33, 1018, 1016, 1015, 1014, 84, 35, 1013, 1012, 1009,
	1008, 1006, 1005, 51, 24, 26, 1004, 999, 44, 998,
	993, 37, 39, 992, 987, 986, 982, 981, 935, 77,
	61, 980, 48, 53, 978, 975, 17, 974, 45, 971,
	22, 967, 64, 70, 67, 65, 530, 991, 40, 29,
	23, 7, 966, 957, 955, 952, 1172, 950, 948, 946,
	942, 1083, 492, 939, 936, 56, 15, 52, 10, 933,
	932, 3, 931, 929, 59, 69, 68, 926, 41, 925,
	20, 924, 922, 917, 12, 36, 911, 27, 30, 43,
	19, 57, 909, 905, 901, 55, 899, 21, 60, 11,
	14, 8, 9, 2, 4, 42, 896, 13, 895, 6,
	894, 5, 891, 0, 91, 16, 263, 887, 71, 66,
	62, 58, 49, 54, 74, 886, 38, 468,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 26, 27, 27, 27,
	27, 28, 29, 29, 30, 31, 31, 32, 32, 32,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 34, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 37, 37, 37, 38,
	39, 39, 39, 39, 40, 40, 41, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 53, 53, 53, 53, 54, 55, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 64, 64,
	64, 65, 65, 66, 67, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 69, 69, 69, 69, 69, 69,
	69, 70, 70, 70, 70, 71, 71, 72, 72, 73,
	73, 73, 73, 73, 74, 74, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 76, 77, 77,
	78, 78, 79, 79, 80, 80, 80, 81, 81, 81,
	82, 82, 83, 83, 84, 84, 85, 85, 85, 87,
	88, 88, 88, 88, 88, 88, 88, 89, 89, 89,
	89, 89, 89, 90, 90, 91, 91, 92, 92, 92,
	93, 94, 94, 95, 95, 96, 96, 97, 97, 98,
	98, 99, 99, 86, 86, 100, 100, 101, 101, 102,
	102, 102, 102, 103, 104, 105, 105, 106, 106, 107,
	107, 108, 108, 109, 109, 110, 110, 111, 111, 112,
	112, 113, 113, 114, 114, 115, 115, 116, 116, 117,
	117, 118, 118, 119, 119, 120, 120, 121, 121, 122,
	122, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 124, 125, 125,
	126, 127, 127, 128, 128, 129, 129, 130, 130, 131,
	131, 132, 132, 133, 133, 134, 134, 135, 135, 136,
	136, 137, 137,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 2, 2, 2, 4,
	2, 2, 2, 2, 2, 4, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 3, 1, 3, 2, 4, 1, 1, 0, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 4,
	4, 6, 6, 4, 6, 4, 4, 4, 6, 4,
	4, 6, 4, 2, 3, 3, 3, 3, 3, 2,
	2, 3, 3, 2, 2, 0, 1, 4, 4, 5,
	5, 5, 5, 1, 5, 10, 8, 9, 9, 9,
	9, 9, 8, 8, 10, 8, 10, 2, 1, 5,
	0, 3, 2, 5, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 1, 1, 1, 1, 2, 3, 1,
	1, 1, 2, 3, 1, 1, 3, 4, 5, 6,
	7, 5, 6, 2, 4, 1, 1, 1, 3, 1,
	5, 0, 1, 4, 5, 0, 2, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 6,
	9, 5, 8, 7, 3, 1, 3, 5, 6, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 1, 3, 1, 3, 0, 1, 0, 1, 0,
	1, 0, 1, 1, 1, 0, 1, 0, 1, 0,
	1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -102, -103, -106, -72,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -123, 26, 29, 118, 89, -126, 95,
	93, 94, 92, 103, 104, 16, 119, 108, 109, 110,
	111, 83, 107, 73, 4, 120, 121, 122, 123, 125,
	126, 127, 124, 129, 130, 131, 132, 133, 134, 128,
	-124, 11, 140, -57, 146, -56, -53, -69, -67, -66,
	-72, -73, -93, -68, -70, -124, -126, -35, -123, 24,
	5, 6, 7, -54, 10, -55, 143, 144, 81, 131,
	129, -74, 80, -59, 63, 67, 145, 90, 130, 9,
	71, -94, -57, 146, -39, 19, 15, 17, -41, -40,
	13, -66, 146, 146, 30, 30, -128, -127, -124, -128,
	-123, -124, 90, 38, 112, -123, -123, -34, 96, 97,
	31, 32, 98, 99, 12, 12, 122, 123, 125, 126,
	124, -57, -57, -57, 128, -57, -124, -125, -9, 118,
	89, 6, -52, -51, -135, 25, 137, -1, 85, 136,
	135, 142, 70, -130, -137, 144, 143, 141, 148, 149,
	66, 65, 67, -57, -98, -38, -71, -50, 151, 146,
	151, -57, -57, 146, 146, 146, -94, 135, 142, -130,
	-137, -66, -57, -57, -123, 146, -115, 84, -98, -46,
	39, 20, -86, -84, -123, 24, 14, -86, -42, 14,
	58, 59, 60, -129, 72, -71, -98, -57, -123, -84,
	150, 137, 90, 38, 112, 113, -123, -123, -123, -123,
	-57, -57, 142, 14, 150, -57, 6, 87, 64, 150,
	64, -124, -125, 150, -123, -57, -1, -57, -57, -57,
	-130, 68, 64, 69, 62, 61, -57, -57, -57, -57,
	-57, -57, -57, 147, 150, 147, 147, 147, -123, 6,
	-129, -123, 6, -129, -129, -95, 84, -59, 146, -66,
	-59, 68, 64, 62, 61, 70, 129, -129, -116, 86,
	-57, -47, 45, 42, -85, -84, 16, 150, -99, -88,
	-85, -87, -89, 23, 146, -66, 14, -43, 18, -99,
	-134, 61, -134, -134, -101, -92, -91, -58, -57, -75,
	141, -123, 131, 129, 130, 132, 133, 134, 147, 146,
	-136, 22, 27, 28, 36, -128, -57, 91, 146, 22,
	146, 146, 20, -53, -123, -98, -57, -2, -12, -5,
	-13, 81, 80, -8, -10, -6, 105, 106, -123, -125,
	-124, -123, 64, 64, -52, 22, 146, -108, -107, 86,
	82, -54, -55, -57, -59, -57, -59, -59, -98, -71,
	-71, -71, -58, -96, 86, -57, -59, 146, -66, 146,
	-66, 146, -66, -130, -71, 88, -1, 85, -49, 46,
	-57, -61, -62, -63, -57, -75, 21, 146, -38, -123,
	22, -105, -104, -56, -123, -86, -43, 54, -131, -133,
	53, 57, 150, 49, 51, 52, -123, 22, -88, -99,
	-44, 40, -57, -40, -39, -40, -40, 150, 22, 146,
	146, 146, 146, 146, 146, 146, -100, -123, -38, -23,
	146, -123, -56, 146, -56, -38, -100, -38, 147, -32,
	-29, -31, -28, -30, -124, -123, -125, 88, 140, -57,
	-94, 87, 87, -123, -123, 146, -100, 88, -108, -1,
	-57, 65, 147, 147, 147, 147, 88, -57, 85, 65,
	-60, -59, -60, -60, 93, 64, 147, 80, -1, -57,
	-48, 47, 73, 150, -64, 43, 44, -60, -97, -56,
	-123, -42, 150, 142, 48, 48, -132, 50, -132, -131,
	-133, -99, -123, 147, -43, -45, 41, 42, -101, -123,
	-71, -129, -129, -129, -129, -71, -71, -71, 147, 150,
	-25, 31, 32, 33, 34, -24, -23, 35, -97, 37,
	147, 22, 147, 150, 150, 35, 147, 150, 83, -2,
	85, -117, 84, -2, -2, 87, 87, -38, 147, 81,
	88, 85, -57, -57, -59, 147, 150, 147, 147, 74,
	117, -115, -48, 120, -61, 121, 147, 150, -43, -105,
	-57, -88, -88, 48, 48, 48, -132, -57, -98, 147,
	-71, -71, -71, -58, -71, 147, 147, 147, -136, -100,
	-56, -56, 147, 150, -57, 147, -123, 22, 114, 22,
	-28, -31, -31, -124, -57, 22, -32, -2, -118, 86,
	-57, 88, 88, -2, -2, 147, 22, 81, -1, -95,
	-60, 40, -65, 31, 32, 21, -38, -97, -90, 55,
	56, -88, -88, -88, 48, 102, 147, 147, 147, 147,
	147, 102, 102, 116, 102, 116, -38, -25, -24, -38,
	-3, -14, -5, -18, 81, 80, -15, -16, 83, 115,
	114, 114, 147, -110, -109, 86, 82, 88, -2, 85,
	83, 83, 88, 88, 146, -107, 146, -60, -57, 146,
	-90, 55, -88, 146, 102, 102, 102, 102, 102, 146,
	146, 121, 146, 121, 88, 140, -57, -94, -57, -124,
	-125, -57, -3, -3, 22, 88, -110, -2, -57, 80,
	-2, 83, 83, -38, -46, -100, -57, -77, -76, -78,
	101, 146, 146, 146, 146, 146, -76, -78, -77, 102,
	-76, 102, -3, 85, -119, 84, 87, 64, 64, 88,
	88, 114, 81, 88, 85, -117, 147, 147, 147, 147,
	-46, 39, 42, -77, -77, -77, -77, -76, 147, 147,
	146, 147, 146, -3, -120, 86, -57, -4, -17, -5,
	-19, 81, 80, -15, -16, -6, -123, -123, -3, 81,
	-2, 42, -98, 147, 147, 147, 147, 147, -77, -76,
	-112, -111, 86, 82, 88, -3, 85, 88, 140, -57,
	-94, 87, 87, 88, -109, -61, 147, 147, 88, -112,
	-3, -57, 80, -3, 83, -4, 85, -121, 84, -4,
	-4, -79, 127, 81, 88, 85, -119, -4, -122, 86,
	-57, 88, 88, -80, 68, 75, 6, 78, 81, -3,
	-114, -113, 86, 82, 88, -4, 85, 83, 83, -82,
	75, -81, 6, 78, 76, 76, 79, -111, 88, -114,
	-4, -57, 80, -4, 65, 76, 76, 77, 79, 81,
	88, 85, -121, -83, 75, -81, 81, -4, 77, -113,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 311,
	41, 42, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 115, 73, 74, 0, 0, 0, 0, 0,
	0, 0, 34, 407, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 387, -2, 397, -2, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 178, 0,
	170, 171, 172, 173, 174, 175, 0, 0, 0, 382,
	380, 253, 311, 397, 0, 0, 0, 0, 381, 176,
	177, 0, -2, 164, -2, 0, 0, 0, 147, 0,
	395, 145, 164, 245, 0, 0, 69, 393, 391, 70,
	0, 72, 0, 0, 0, 93, 94, 0, 116, 117,
	118, 119, 0, 0, 0, 126, 131, 132, 133, 134,
	0, -2, -2, -2, 136, 397, 193, 0, 0, 32,
	33, 35, 165, 168, 0, 408, 0, 3, -2, 0,
	411, 412, 397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 397, 0, 0, 0, 0, 0, 245,
	0, 239, 240, 245, 395, 395, 0, 411, 412, 0,
	0, 233, 243, 244, 0, 395, 357, 0, 0, 157,
	0, 0, 0, 323, 284, 285, 0, 0, 149, 0,
	405, 405, 405, 0, 396, 0, 246, -2, 409, 0,
	0, 0, 0, 0, 0, 0, 95, 100, 114, 0,
	-2, -2, 0, 0, 0, -2, 171, -2, 0, 0,
	0, 0, 0, 407, 0, 390, 341, 214, -2, -2,
	0, 0, 0, 0, 0, 0, 234, 235, 236, 237,
	238, 241, 242, 196, 0, 198, 213, 248, 179, 181,
	245, 180, 182, 245, 245, 315, 0, 216, 164, 199,
	218, 0, 0, 0, 0, 397, 124, 245, 0, -2,
	397, 162, 0, 0, 164, 286, 0, 0, 149, -2,
	290, 291, 294, 295, 164, 289, 0, 151, 0, 148,
	0, 406, 0, 0, 146, 327, 307, 309, -2, 306,
	197, 178, 382, 380, 381, 383, 384, 385, 247, 0,
	164, 410, 0, 0, 0, 394, -2, 164, 0, 164,
	0, 0, 0, 125, 135, 129, -2, 0, 0, 36,
	37, 0, 311, 46, 47, 48, 23, 24, 0, 389,
	388, 0, 0, 0, 169, 0, 0, 0, 341, -2,
	0, 219, 220, 397, 223, -2, 227, 230, 320, 0,
	0, 0, 0, 0, 0, 397, 0, 164, 225, 164,
	229, 164, 232, 0, 0, 0, 358, -2, 139, 0,
	-2, 156, 202, 208, -2, 207, 0, 0, 331, 287,
	0, 147, 335, 0, 178, 324, 337, 0, 0, 401,
	401, 399, 0, 400, 403, 404, 292, 0, 399, 149,
	153, 0, -2, 141, 144, 142, 143, 0, 0, 245,
	395, 395, 395, 245, 245, 245, 0, 325, 77, 87,
	0, 83, 80, 0, 0, 92, 0, 99, 0, 0,
	107, 108, 102, 105, 101, 0, 96, 0, -2, 397,
	0, -2, -2, 0, 0, 164, 0, 0, 0, 342,
	397, 0, 249, 250, 251, 252, 310, -2, 0, 0,
	0, 200, 0, 0, 122, 0, 254, 40, 355, -2,
	158, 160, 0, 0, 204, 209, 210, 329, 0, 317,
	288, 149, 0, 0, 0, 0, 0, 402, 0, 0,
	401, 322, 293, 296, 338, 140, 0, 0, 328, 308,
	0, 245, 245, 245, 245, 0, 0, 0, -2, 0,
	78, 88, 89, 0, 0, 0, 85, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 27, 5,
	-2, 361, 0, 0, 0, -2, -2, 0, 0, 38,
	0, -2, 221, -2, 222, 224, 0, 228, 231, 123,
	0, 356, 159, 161, 203, 0, 164, 0, 333, 336,
	-2, 297, 399, 0, 0, 0, 0, -2, 152, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 326,
	90, 91, 87, 0, -2, 81, 82, 164, -2, 0,
	103, 109, 106, 0, -2, 0, 0, 345, 0, -2,
	397, 0, 0, 0, 0, 166, 0, 39, 339, 314,
	201, 0, 205, 211, 212, 0, 332, 318, 298, 0,
	0, 399, 399, 301, 0, 0, 249, 250, 251, 252,
	254, 0, 0, 0, 0, 0, 76, 79, 86, 98,
	0, 0, 49, 50, 0, 311, 61, 62, 0, 54,
	-2, -2, 0, 0, 345, -2, 0, 0, 362, -2,
	28, 29, 0, 0, 164, 340, 155, 330, -2, 0,
	299, 0, 302, 270, 0, 0, 0, 0, 0, 270,
	270, 0, 270, 0, 110, -2, 397, 0, 397, 193,
	0, -2, 0, 0, 0, 0, 0, 346, 397, 45,
	359, 30, 31, 0, 0, 0, -2, 0, 268, 155,
	0, 270, 270, 270, 270, 270, 0, 155, 0, 0,
	0, 0, 7, -2, 365, 0, -2, 0, 0, 111,
	112, -2, 43, 0, -2, 360, 167, 255, 304, 256,
	267, 0, 0, 0, 0, 0, 0, 0, 262, 263,
	270, 265, 270, 349, 0, -2, 397, 0, 0, 56,
	57, 0, 311, 66, 67, 68, 0, 0, 0, 44,
	343, 0, 271, 257, 258, 259, 260, 261, 0, 0,
	0, 349, -2, 0, 0, 366, -2, 0, -2, 397,
	0, -2, -2, 113, 344, 156, 264, 266, 0, 0,
	350, 397, 60, 363, 51, 9, -2, 369, 0, 0,
	0, 269, 0, 58, 0, -2, 364, 353, 0, -2,
	397, 0, 0, 272, 0, 0, 0, 0, 59, 347,
	0, 353, -2, 0, 0, 370, -2, 52, 53, 0,
	0, 281, 0, 0, 274, 275, 276, 348, 0, 0,
	354, 397, 65, 367, 0, 280, 277, 278, 279, 63,
	0, -2, 368, 273, 0, 283, 64, 351, 282, 352,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 149, 3, 3,
	146, 147, 141, 144, 150, 143, 151, 148, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 140,
	3, 142,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:220
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:225
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:230
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:237
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:247
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:257
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:267
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:331
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:341
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:363
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:367
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:373
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:377
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:383
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:393
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:409
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:419
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:451
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:475
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:501
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:533
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:561
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:569
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:585
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:595
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:599
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:605
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:609
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:615
		{
			yyVAL.expression = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:619
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:623
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:627
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:631
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:637
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:641
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:645
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:649
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:653
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 97:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:659
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:663
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:667
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:671
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:677
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:683
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:687
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:693
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:699
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:703
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:709
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:713
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:717
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:723
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 111:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:727
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:731
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:735
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:739
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:745
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:749
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:753
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:757
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:761
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:765
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:769
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:775
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:779
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:783
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:789
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:793
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:797
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:801
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:805
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:809
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:813
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:817
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:821
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:825
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:829
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[4].identifier}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:835
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:839
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:843
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:849
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:861
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:871
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:880
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:889
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:900
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:910
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:916
		{
			yyVAL.queryexpr = nil
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:920
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:926
		{
			yyVAL.queryexpr = nil
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:930
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:936
		{
			yyVAL.queryexpr = nil
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:940
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:946
		{
			yyVAL.queryexpr = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:956
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:966
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:970
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:974
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:984
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:990
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:994
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.queryexpr = nil
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 167:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1034
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1046
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1122
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.token = Token{}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1208
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1222
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1234
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1257
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1261
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1265
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1273
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1335
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1339
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1343
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1347
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1351
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1355
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1383
		{
			yyVAL.queryexprs = nil
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1387
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1404
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1408
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1412
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1420
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1426
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1430
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 257:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 258:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1444
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 259:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1448
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 260:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1452
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 261:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1456
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 262:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1460
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 263:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1464
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 265:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1482
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1492
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexpr = nil
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1503
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1509
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1523
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1534
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1539
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1554
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1560
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1564
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1580
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1584
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1588
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1600
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1634
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 302:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1676
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1680
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1684
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = nil
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1706
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = nil
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1736
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1766
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 329:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1786
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 332:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 333:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1826
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 338:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1831
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1838
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1842
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1848
		{
			yyVAL.elseexpr = Else{}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1858
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1862
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.elseexpr = Else{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1872
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.elseexpr = Else{}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1892
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1898
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.elseexpr = Else{}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1922
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1932
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1938
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1942
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1952
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1968
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1978
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1988
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1998
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2038
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2064
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2080
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2096
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2100
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.token = Token{}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2110
		{
			yyVAL.token = yyDollar[1].token
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.token = Token{}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2120
		{
			yyVAL.token = yyDollar[1].token
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2126
		{
			yyVAL.token = Token{}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2130
		{
			yyVAL.token = yyDollar[1].token
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.token = Token{}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2140
		{
			yyVAL.token = yyDollar[1].token
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2146
		{
			yyVAL.token = yyDollar[1].token
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2150
		{
			yyVAL.token = yyDollar[1].token
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.token = Token{}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2160
		{
			yyVAL.token = yyDollar[1].token
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2166
		{
			yyVAL.token = Token{}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2170
		{
			yyVAL.token = yyDollar[1].token
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2176
		{
			yyVAL.token = Token{}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2180
		{
			yyVAL.token = yyDollar[1].token
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2186
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2190
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
