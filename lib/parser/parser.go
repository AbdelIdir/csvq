// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const UNION = 57406
const INTERSECT = 57407
const EXCEPT = 57408
const ALL = 57409
const ANY = 57410
const EXISTS = 57411
const IN = 57412
const AND = 57413
const OR = 57414
const NOT = 57415
const BETWEEN = 57416
const LIKE = 57417
const IS = 57418
const NULL = 57419
const DISTINCT = 57420
const WITH = 57421
const RANGE = 57422
const UNBOUNDED = 57423
const PRECEDING = 57424
const FOLLOWING = 57425
const CURRENT = 57426
const ROW = 57427
const CASE = 57428
const IF = 57429
const ELSEIF = 57430
const WHILE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const DO = 57435
const END = 57436
const DECLARE = 57437
const CURSOR = 57438
const FOR = 57439
const FETCH = 57440
const OPEN = 57441
const CLOSE = 57442
const DISPOSE = 57443
const PREPARE = 57444
const NEXT = 57445
const PRIOR = 57446
const ABSOLUTE = 57447
const RELATIVE = 57448
const SEPARATOR = 57449
const PARTITION = 57450
const OVER = 57451
const COMMIT = 57452
const ROLLBACK = 57453
const CONTINUE = 57454
const BREAK = 57455
const EXIT = 57456
const ECHO = 57457
const PRINT = 57458
const PRINTF = 57459
const SOURCE = 57460
const EXECUTE = 57461
const CHDIR = 57462
const PWD = 57463
const RELOAD = 57464
const REMOVE = 57465
const SYNTAX = 57466
const TRIGGER = 57467
const FUNCTION = 57468
const AGGREGATE = 57469
const BEGIN = 57470
const RETURN = 57471
const IGNORE = 57472
const WITHIN = 57473
const VAR = 57474
const SHOW = 57475
const TIES = 57476
const NULLS = 57477
const ROWS = 57478
const CSV = 57479
const JSON = 57480
const FIXED = 57481
const LTSV = 57482
const JSON_ROW = 57483
const JSON_TABLE = 57484
const COUNT = 57485
const JSON_OBJECT = 57486
const AGGREGATE_FUNCTION = 57487
const LIST_FUNCTION = 57488
const ANALYTIC_FUNCTION = 57489
const FUNCTION_NTH = 57490
const FUNCTION_WITH_INS = 57491
const COMPARISON_OP = 57492
const STRING_OP = 57493
const SUBSTITUTION_OP = 57494
const UMINUS = 57495
const UPLUS = 57496

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2518

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 201,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 20,
	1, 25,
	88, 25,
	90, 25,
	92, 25,
	94, 25,
	155, 25,
	-2, 221,
	-1, 32,
	1, 77,
	88, 77,
	90, 77,
	92, 77,
	94, 77,
	155, 77,
	-2, 233,
	-1, 111,
	17, 201,
	19, 201,
	22, 201,
	24, 201,
	-2, 1,
	-1, 113,
	162, 292,
	-2, 201,
	-1, 121,
	64, 181,
	65, 181,
	66, 181,
	-2, 192,
	-1, 158,
	1, 121,
	88, 121,
	90, 121,
	92, 121,
	94, 121,
	155, 121,
	-2, 215,
	-1, 159,
	1, 162,
	88, 162,
	90, 162,
	92, 162,
	94, 162,
	155, 162,
	-2, 221,
	-1, 164,
	1, 155,
	88, 155,
	90, 155,
	92, 155,
	94, 155,
	155, 155,
	-2, 221,
	-1, 165,
	1, 156,
	88, 156,
	90, 156,
	92, 156,
	94, 156,
	155, 156,
	-2, 221,
	-1, 166,
	1, 157,
	88, 157,
	90, 157,
	92, 157,
	94, 157,
	155, 157,
	-2, 221,
	-1, 167,
	1, 160,
	88, 160,
	90, 160,
	92, 160,
	94, 160,
	155, 160,
	-2, 215,
	-1, 168,
	1, 161,
	88, 161,
	90, 161,
	92, 161,
	94, 161,
	155, 161,
	-2, 221,
	-1, 171,
	1, 168,
	88, 168,
	90, 168,
	92, 168,
	94, 168,
	155, 168,
	-2, 215,
	-1, 172,
	1, 169,
	88, 169,
	90, 169,
	92, 169,
	94, 169,
	155, 169,
	-2, 221,
	-1, 228,
	88, 1,
	92, 1,
	94, 1,
	-2, 201,
	-1, 246,
	161, 336,
	-2, 446,
	-1, 247,
	161, 337,
	-2, 447,
	-1, 248,
	161, 338,
	-2, 448,
	-1, 249,
	161, 339,
	-2, 449,
	-1, 282,
	4, 143,
	134, 143,
	135, 143,
	136, 143,
	137, 143,
	138, 143,
	139, 143,
	140, 143,
	-2, 221,
	-1, 283,
	4, 144,
	134, 144,
	135, 144,
	136, 144,
	137, 144,
	138, 144,
	139, 144,
	140, 144,
	-2, 221,
	-1, 293,
	1, 173,
	88, 173,
	90, 173,
	92, 173,
	94, 173,
	155, 173,
	-2, 221,
	-1, 300,
	94, 4,
	-2, 201,
	-1, 309,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 262,
	-1, 310,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 264,
	-1, 319,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 274,
	-1, 366,
	94, 1,
	-2, 201,
	-1, 380,
	54, 465,
	-2, 382,
	-1, 415,
	1, 79,
	88, 79,
	90, 79,
	92, 79,
	94, 79,
	155, 79,
	-2, 221,
	-1, 416,
	1, 80,
	88, 80,
	90, 80,
	92, 80,
	94, 80,
	155, 80,
	-2, 215,
	-1, 417,
	1, 81,
	88, 81,
	90, 81,
	92, 81,
	94, 81,
	155, 81,
	-2, 221,
	-1, 418,
	1, 82,
	88, 82,
	90, 82,
	92, 82,
	94, 82,
	155, 82,
	-2, 215,
	-1, 419,
	1, 148,
	88, 148,
	90, 148,
	92, 148,
	94, 148,
	155, 148,
	-2, 215,
	-1, 420,
	1, 149,
	88, 149,
	90, 149,
	92, 149,
	94, 149,
	155, 149,
	-2, 221,
	-1, 421,
	1, 150,
	88, 150,
	90, 150,
	92, 150,
	94, 150,
	155, 150,
	-2, 215,
	-1, 422,
	1, 151,
	88, 151,
	90, 151,
	92, 151,
	94, 151,
	155, 151,
	-2, 221,
	-1, 425,
	1, 116,
	88, 116,
	90, 116,
	92, 116,
	94, 116,
	155, 116,
	165, 116,
	-2, 221,
	-1, 430,
	1, 380,
	88, 380,
	90, 380,
	92, 380,
	94, 380,
	155, 380,
	-2, 221,
	-1, 437,
	1, 174,
	88, 174,
	90, 174,
	92, 174,
	94, 174,
	155, 174,
	-2, 221,
	-1, 463,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 275,
	-1, 493,
	94, 1,
	-2, 201,
	-1, 500,
	90, 1,
	92, 1,
	94, 1,
	-2, 201,
	-1, 503,
	1, 197,
	52, 197,
	88, 197,
	90, 197,
	92, 197,
	94, 197,
	97, 197,
	155, 197,
	162, 197,
	-2, 221,
	-1, 519,
	162, 334,
	165, 334,
	-2, 215,
	-1, 576,
	88, 4,
	90, 4,
	92, 4,
	94, 4,
	-2, 201,
	-1, 579,
	94, 4,
	-2, 201,
	-1, 580,
	94, 4,
	-2, 201,
	-1, 617,
	1, 200,
	88, 200,
	90, 200,
	92, 200,
	94, 200,
	97, 200,
	155, 200,
	162, 200,
	-2, 221,
	-1, 653,
	17, 475,
	79, 475,
	161, 475,
	-2, 86,
	-1, 679,
	88, 4,
	92, 4,
	94, 4,
	-2, 201,
	-1, 684,
	94, 4,
	-2, 201,
	-1, 685,
	94, 4,
	-2, 201,
	-1, 707,
	88, 1,
	92, 1,
	94, 1,
	-2, 201,
	-1, 745,
	1, 94,
	88, 94,
	90, 94,
	92, 94,
	94, 94,
	155, 94,
	-2, 215,
	-1, 746,
	1, 95,
	88, 95,
	90, 95,
	92, 95,
	94, 95,
	155, 95,
	-2, 221,
	-1, 748,
	94, 6,
	-2, 201,
	-1, 754,
	162, 127,
	165, 127,
	-2, 221,
	-1, 759,
	94, 4,
	-2, 201,
	-1, 819,
	94, 6,
	-2, 201,
	-1, 820,
	94, 6,
	-2, 201,
	-1, 824,
	94, 4,
	-2, 201,
	-1, 828,
	90, 4,
	92, 4,
	94, 4,
	-2, 201,
	-1, 863,
	88, 6,
	90, 6,
	92, 6,
	94, 6,
	-2, 201,
	-1, 870,
	155, 61,
	-2, 221,
	-1, 907,
	88, 6,
	92, 6,
	94, 6,
	-2, 201,
	-1, 910,
	94, 8,
	-2, 201,
	-1, 917,
	94, 6,
	-2, 201,
	-1, 920,
	88, 4,
	92, 4,
	94, 4,
	-2, 201,
	-1, 945,
	94, 6,
	-2, 201,
	-1, 977,
	94, 6,
	-2, 201,
	-1, 981,
	90, 6,
	92, 6,
	94, 6,
	-2, 201,
	-1, 983,
	88, 8,
	90, 8,
	92, 8,
	94, 8,
	-2, 201,
	-1, 986,
	94, 8,
	-2, 201,
	-1, 987,
	94, 8,
	-2, 201,
	-1, 1004,
	88, 8,
	92, 8,
	94, 8,
	-2, 201,
	-1, 1009,
	94, 8,
	-2, 201,
	-1, 1010,
	94, 8,
	-2, 201,
	-1, 1015,
	88, 6,
	92, 6,
	94, 6,
	-2, 201,
	-1, 1020,
	94, 8,
	-2, 201,
	-1, 1035,
	94, 8,
	-2, 201,
	-1, 1039,
	90, 8,
	92, 8,
	94, 8,
	-2, 201,
	-1, 1068,
	88, 8,
	92, 8,
	94, 8,
	-2, 201,
}

const yyPrivate = 57344

const yyLast = 3846

var yyAct = [...]int{

	120, 20, 1034, 1046, 1005, 976, 908, 1033, 339, 975,
	504, 883, 602, 26, 114, 32, 680, 823, 118, 183,
	822, 438, 547, 112, 885, 884, 549, 262, 380, 660,
	925, 954, 655, 793, 566, 564, 184, 637, 1, 492,
	567, 159, 402, 618, 160, 161, 233, 164, 165, 166,
	168, 953, 172, 234, 445, 25, 444, 24, 230, 241,
	512, 429, 423, 379, 337, 446, 661, 390, 491, 254,
	177, 526, 181, 334, 252, 5, 127, 525, 169, 239,
	79, 393, 77, 180, 482, 958, 809, 135, 217, 88,
	385, 543, 188, 285, 211, 858, 67, 178, 530, 210,
	531, 532, 527, 524, 911, 301, 528, 226, 192, 440,
	3, 259, 20, 203, 177, 202, 201, 210, 121, 138,
	204, 205, 947, 211, 471, 100, 32, 180, 210, 210,
	291, 146, 453, 64, 741, 530, 232, 531, 532, 527,
	524, 229, 162, 528, 180, 179, 203, 730, 202, 201,
	227, 110, 236, 204, 205, 789, 282, 283, 790, 672,
	630, 700, 673, 631, 137, 137, 25, 140, 24, 670,
	669, 654, 652, 632, 203, 293, 628, 100, 621, 302,
	302, 204, 205, 73, 574, 253, 175, 175, 571, 179,
	261, 128, 211, 123, 469, 389, 125, 210, 122, 302,
	302, 124, 273, 376, 305, 182, 179, 306, 529, 266,
	109, 509, 92, 994, 240, 993, 969, 968, 967, 966,
	965, 3, 940, 263, 128, 265, 100, 302, 939, 20,
	317, 521, 938, 290, 936, 934, 370, 933, 924, 923,
	905, 900, 644, 32, 859, 109, 821, 791, 788, 772,
	771, 383, 244, 770, 769, 101, 102, 103, 104, 105,
	106, 107, 768, 765, 73, 317, 399, 362, 743, 740,
	331, 733, 121, 723, 716, 699, 697, 415, 417, 420,
	422, 425, 556, 25, 311, 24, 425, 430, 316, 696,
	695, 430, 430, 689, 687, 437, 668, 666, 653, 651,
	607, 20, 600, 599, 598, 350, 351, 101, 102, 103,
	104, 105, 106, 107, 587, 32, 468, 485, 304, 392,
	436, 466, 450, 332, 456, 348, 349, 398, 412, 374,
	522, 180, 403, 397, 553, 130, 358, 483, 3, 395,
	396, 378, 363, 298, 299, 178, 510, 132, 428, 297,
	937, 935, 434, 435, 408, 891, 101, 102, 103, 246,
	247, 248, 249, 563, 386, 400, 890, 20, 130, 889,
	888, 887, 854, 503, 852, 846, 843, 841, 518, 840,
	433, 32, 508, 384, 431, 432, 834, 833, 180, 804,
	633, 467, 459, 179, 458, 604, 583, 546, 180, 455,
	137, 536, 477, 476, 462, 496, 475, 478, 479, 474,
	464, 465, 473, 535, 480, 472, 180, 489, 414, 413,
	377, 25, 131, 24, 180, 198, 180, 231, 197, 196,
	199, 195, 225, 224, 130, 214, 451, 517, 561, 486,
	487, 213, 481, 577, 212, 488, 573, 523, 279, 253,
	511, 629, 537, 277, 219, 1012, 516, 457, 983, 267,
	179, 411, 578, 863, 538, 401, 576, 240, 111, 175,
	542, 552, 544, 545, 356, 844, 3, 842, 551, 715,
	713, 100, 839, 131, 584, 703, 559, 917, 562, 776,
	820, 100, 819, 748, 20, 612, 897, 180, 895, 774,
	838, 20, 837, 617, 703, 193, 192, 110, 32, 836,
	777, 203, 194, 202, 201, 32, 383, 244, 204, 205,
	775, 835, 625, 773, 767, 886, 269, 606, 616, 410,
	590, 215, 611, 626, 595, 596, 597, 645, 216, 615,
	1067, 357, 1053, 588, 1043, 634, 1042, 569, 25, 1037,
	24, 1070, 1023, 1022, 1014, 25, 605, 24, 996, 179,
	451, 610, 278, 990, 982, 639, 73, 276, 979, 650,
	919, 1010, 425, 603, 916, 430, 1009, 20, 268, 663,
	20, 20, 627, 591, 592, 593, 594, 915, 874, 862,
	832, 32, 831, 642, 32, 32, 826, 180, 678, 603,
	641, 682, 683, 3, 762, 646, 640, 100, 270, 271,
	3, 101, 102, 103, 104, 105, 106, 107, 761, 706,
	609, 101, 102, 103, 246, 247, 248, 249, 575, 386,
	508, 497, 714, 244, 674, 495, 676, 987, 986, 910,
	198, 207, 206, 197, 196, 199, 195, 685, 384, 684,
	690, 691, 692, 694, 580, 579, 722, 1036, 693, 686,
	92, 1035, 709, 712, 724, 725, 746, 978, 708, 825,
	494, 977, 754, 824, 493, 735, 300, 732, 1035, 729,
	20, 737, 760, 1020, 977, 20, 20, 945, 824, 718,
	720, 698, 721, 142, 32, 717, 736, 759, 493, 32,
	32, 757, 368, 366, 751, 752, 763, 764, 20, 756,
	750, 370, 1068, 778, 1039, 1015, 153, 154, 1004, 981,
	193, 192, 32, 920, 907, 828, 203, 194, 202, 201,
	180, 801, 296, 204, 205, 292, 707, 101, 102, 103,
	104, 105, 106, 107, 679, 141, 782, 180, 500, 20,
	180, 143, 100, 228, 1017, 796, 797, 798, 1006, 922,
	20, 180, 25, 32, 24, 909, 251, 710, 681, 1036,
	364, 807, 235, 806, 32, 144, 1060, 1059, 244, 1041,
	816, 827, 151, 152, 155, 156, 1040, 1002, 881, 880,
	603, 830, 787, 829, 677, 978, 825, 494, 1074, 848,
	815, 200, 1066, 569, 753, 180, 1031, 569, 1013, 803,
	961, 918, 805, 781, 864, 860, 705, 3, 866, 870,
	20, 20, 847, 808, 99, 20, 877, 861, 857, 20,
	855, 1057, 1000, 865, 32, 32, 878, 868, 613, 32,
	1065, 1051, 1076, 32, 875, 1062, 876, 180, 1050, 849,
	879, 816, 816, 894, 869, 1049, 1029, 73, 811, 1063,
	1064, 972, 702, 901, 20, 893, 892, 851, 893, 896,
	1047, 815, 815, 941, 850, 902, 603, 899, 32, 619,
	802, 903, 101, 102, 103, 104, 105, 106, 107, 914,
	218, 786, 603, 620, 260, 816, 921, 97, 219, 928,
	929, 930, 931, 1061, 601, 620, 871, 872, 20, 882,
	946, 20, 959, 912, 73, 815, 893, 932, 20, 180,
	394, 20, 32, 760, 1027, 32, 73, 73, 454, 811,
	811, 1028, 32, 73, 1030, 32, 303, 353, 257, 816,
	603, 352, 962, 792, 73, 1072, 20, 970, 1048, 816,
	906, 867, 984, 180, 974, 964, 355, 354, 734, 815,
	32, 638, 893, 971, 286, 98, 321, 320, 1047, 815,
	280, 985, 508, 811, 992, 799, 955, 816, 20, 999,
	991, 942, 20, 728, 20, 995, 997, 20, 20, 727,
	80, 726, 32, 636, 943, 314, 32, 815, 32, 313,
	315, 32, 32, 913, 960, 20, 635, 1021, 1016, 816,
	20, 20, 502, 816, 119, 973, 20, 811, 946, 32,
	949, 20, 623, 624, 32, 32, 372, 811, 963, 815,
	32, 603, 980, 815, 927, 32, 20, 1056, 1052, 649,
	20, 170, 1054, 1045, 373, 648, 1048, 816, 780, 955,
	32, 540, 955, 955, 32, 811, 256, 257, 258, 237,
	176, 926, 603, 1069, 998, 1073, 665, 815, 1001, 20,
	955, 1021, 208, 209, 664, 955, 955, 530, 1077, 531,
	532, 221, 222, 32, 287, 407, 955, 811, 671, 662,
	134, 811, 133, 949, 784, 785, 949, 949, 404, 405,
	65, 955, 1032, 191, 176, 955, 1003, 406, 119, 1007,
	1008, 873, 766, 755, 949, 656, 657, 658, 659, 949,
	949, 711, 170, 749, 747, 811, 403, 1018, 667, 572,
	949, 470, 1024, 1025, 955, 145, 147, 426, 250, 238,
	391, 375, 100, 1038, 255, 949, 388, 289, 530, 949,
	531, 532, 527, 524, 794, 795, 528, 288, 1055, 284,
	95, 93, 1058, 93, 95, 92, 295, 198, 207, 206,
	197, 196, 199, 195, 190, 187, 427, 66, 949, 136,
	1019, 944, 758, 308, 309, 310, 365, 312, 9, 8,
	319, 1075, 322, 323, 324, 325, 326, 327, 328, 513,
	514, 7, 170, 338, 6, 198, 207, 58, 197, 196,
	199, 195, 367, 61, 335, 336, 359, 73, 382, 381,
	242, 245, 170, 1071, 1044, 548, 369, 1026, 1011, 87,
	555, 557, 60, 59, 129, 63, 56, 62, 198, 207,
	206, 197, 196, 199, 195, 57, 783, 193, 192, 622,
	338, 506, 505, 203, 194, 202, 201, 55, 409, 189,
	204, 205, 779, 501, 198, 207, 206, 197, 196, 199,
	195, 371, 101, 102, 103, 104, 105, 106, 107, 647,
	539, 126, 19, 170, 18, 193, 192, 68, 150, 16,
	568, 203, 194, 202, 201, 565, 15, 220, 204, 205,
	424, 14, 13, 10, 461, 17, 463, 12, 170, 198,
	207, 206, 197, 196, 199, 195, 11, 950, 193, 192,
	812, 948, 810, 170, 203, 194, 202, 201, 441, 364,
	439, 204, 205, 490, 4, 548, 2, 0, 0, 170,
	170, 0, 0, 0, 193, 192, 0, 548, 0, 170,
	203, 194, 202, 201, 0, 369, 898, 204, 205, 498,
	0, 0, 0, 0, 507, 0, 0, 83, 0, 0,
	530, 548, 531, 532, 527, 524, 856, 0, 528, 0,
	0, 548, 541, 0, 0, 0, 0, 0, 129, 193,
	192, 0, 0, 0, 0, 203, 194, 202, 201, 139,
	0, 0, 204, 205, 148, 149, 318, 157, 158, 0,
	0, 0, 0, 163, 0, 0, 0, 167, 0, 171,
	0, 173, 174, 318, 318, 0, 0, 198, 207, 206,
	197, 196, 199, 195, 119, 0, 0, 100, 0, 0,
	0, 0, 0, 0, 198, 207, 206, 197, 196, 199,
	195, 585, 0, 514, 0, 0, 0, 0, 548, 387,
	338, 534, 170, 387, 223, 0, 170, 170, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 608, 0, 738, 739, 0, 0, 0, 0, 0,
	614, 243, 0, 243, 0, 0, 0, 0, 0, 0,
	243, 264, 243, 0, 0, 0, 0, 193, 192, 272,
	243, 274, 275, 203, 194, 202, 201, 0, 281, 704,
	204, 205, 318, 0, 193, 192, 0, 0, 318, 318,
	203, 194, 202, 201, 0, 0, 0, 204, 205, 292,
	0, 0, 0, 0, 198, 207, 206, 197, 196, 199,
	195, 0, 0, 100, 0, 0, 0, 0, 307, 0,
	318, 484, 484, 484, 100, 499, 361, 101, 102, 103,
	104, 105, 106, 107, 0, 0, 0, 688, 329, 244,
	341, 0, 170, 170, 170, 170, 0, 0, 100, 0,
	330, 0, 387, 0, 360, 701, 387, 0, 0, 0,
	0, 129, 0, 129, 129, 0, 243, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 0, 243, 243,
	719, 0, 170, 243, 193, 192, 0, 341, 100, 548,
	203, 194, 202, 201, 0, 0, 95, 204, 205, 731,
	170, 0, 0, 0, 416, 418, 419, 421, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 449,
	0, 452, 369, 0, 0, 92, 0, 548, 0, 0,
	0, 0, 0, 101, 102, 103, 246, 247, 248, 249,
	0, 318, 0, 0, 101, 102, 103, 104, 105, 106,
	107, 0, 0, 198, 207, 206, 197, 196, 199, 195,
	0, 0, 0, 0, 0, 0, 0, 318, 101, 102,
	103, 104, 105, 106, 107, 0, 198, 586, 206, 197,
	196, 199, 195, 0, 0, 100, 0, 387, 0, 0,
	0, 341, 0, 515, 243, 519, 0, 0, 0, 533,
	0, 0, 243, 0, 0, 0, 243, 243, 101, 102,
	103, 104, 105, 106, 107, 0, 0, 0, 515, 550,
	845, 0, 554, 515, 515, 558, 0, 0, 560, 550,
	0, 170, 570, 193, 192, 853, 0, 0, 0, 203,
	194, 202, 201, 0, 0, 0, 204, 205, 101, 102,
	103, 104, 105, 106, 107, 119, 193, 192, 0, 318,
	0, 0, 203, 194, 202, 201, 0, 0, 0, 204,
	205, 581, 582, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 589, 0,
	0, 0, 0, 387, 387, 0, 0, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 460,
	206, 197, 196, 199, 195, 101, 102, 103, 104, 105,
	106, 107, 0, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	369, 0, 643, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 170, 0,
	0, 554, 0, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 387, 387, 0, 193, 192,
	675, 0, 0, 119, 203, 194, 202, 201, 0, 0,
	0, 204, 205, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 318, 0, 515, 369, 0, 0,
	243, 515, 0, 243, 243, 0, 0, 387, 0, 0,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 550, 0, 0, 0, 515, 515, 0, 0,
	0, 0, 744, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 243, 243, 0, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 0, 100, 74, 75,
	76, 0, 97, 78, 92, 95, 93, 94, 21, 70,
	0, 0, 0, 34, 35, 0, 0, 0, 0, 0,
	27, 0, 0, 110, 0, 28, 43, 0, 29, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 89, 0, 0, 0, 90, 0, 0, 0,
	98, 0, 73, 0, 0, 0, 0, 0, 0, 952,
	951, 0, 817, 0, 0, 0, 0, 0, 31, 96,
	0, 38, 36, 37, 33, 39, 0, 0, 0, 0,
	515, 0, 550, 41, 42, 447, 448, 0, 46, 47,
	48, 49, 40, 51, 52, 53, 44, 50, 54, 0,
	0, 0, 818, 0, 0, 30, 45, 101, 102, 103,
	104, 105, 106, 107, 109, 0, 86, 84, 85, 108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 82, 91, 69, 0, 0, 0, 0, 956,
	957, 100, 74, 75, 76, 0, 97, 78, 92, 95,
	93, 94, 21, 70, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 27, 0, 0, 110, 0, 28,
	43, 0, 29, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 988, 989, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	90, 0, 0, 0, 98, 0, 73, 0, 0, 0,
	0, 0, 0, 443, 442, 0, 71, 0, 0, 0,
	0, 0, 31, 96, 0, 38, 36, 37, 33, 39,
	0, 0, 0, 0, 0, 0, 0, 41, 42, 447,
	448, 72, 46, 47, 48, 49, 40, 51, 52, 53,
	44, 50, 54, 0, 0, 0, 0, 0, 0, 30,
	45, 101, 102, 103, 104, 105, 106, 107, 109, 0,
	86, 84, 85, 108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 82, 91, 69, 100,
	74, 75, 76, 0, 97, 78, 92, 95, 93, 94,
	21, 70, 0, 0, 0, 34, 35, 0, 0, 0,
	0, 0, 27, 0, 0, 110, 0, 28, 43, 0,
	29, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 90, 0,
	0, 0, 98, 0, 73, 0, 0, 0, 0, 0,
	0, 814, 813, 0, 817, 0, 0, 0, 0, 0,
	31, 96, 0, 38, 36, 37, 33, 39, 0, 0,
	0, 0, 0, 0, 0, 41, 42, 0, 0, 0,
	46, 47, 48, 49, 40, 51, 52, 53, 44, 50,
	54, 0, 0, 0, 818, 0, 0, 30, 45, 101,
	102, 103, 104, 105, 106, 107, 109, 0, 86, 84,
	85, 108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 82, 91, 69, 100, 74, 75,
	76, 0, 97, 78, 92, 95, 93, 94, 21, 70,
	0, 0, 0, 34, 35, 0, 0, 0, 0, 0,
	27, 0, 0, 110, 0, 28, 43, 0, 29, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 90, 0, 0, 0,
	98, 0, 73, 0, 0, 0, 0, 0, 0, 23,
	22, 0, 71, 0, 0, 0, 0, 0, 31, 96,
	0, 38, 36, 37, 33, 39, 0, 0, 0, 0,
	0, 0, 0, 41, 42, 0, 0, 72, 46, 47,
	48, 49, 40, 51, 52, 53, 44, 50, 54, 0,
	0, 0, 0, 0, 0, 30, 45, 101, 102, 103,
	104, 105, 106, 107, 109, 0, 86, 84, 85, 108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 82, 91, 69, 100, 74, 75, 76, 0,
	97, 78, 92, 95, 93, 94, 0, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 110, 0, 0, 100, 74, 75, 76, 0, 97,
	78, 92, 95, 93, 94, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 90, 0, 0, 0, 98, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 89,
	0, 0, 0, 90, 0, 0, 0, 98, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 102, 103, 104, 105,
	106, 107, 109, 0, 343, 84, 342, 344, 345, 346,
	347, 0, 0, 0, 0, 0, 0, 340, 0, 81,
	82, 91, 69, 333, 101, 102, 103, 104, 105, 106,
	107, 109, 0, 343, 84, 342, 344, 345, 346, 347,
	0, 0, 0, 0, 0, 0, 340, 0, 81, 82,
	91, 69, 100, 74, 75, 76, 0, 97, 78, 92,
	95, 93, 94, 0, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 110, 0,
	0, 0, 100, 74, 75, 76, 0, 97, 78, 92,
	95, 93, 94, 0, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 90, 0, 0, 0, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 0, 0, 89, 0, 0,
	0, 90, 0, 0, 0, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 115, 0, 0, 0, 0,
	0, 0, 0, 186, 96, 0, 0, 0, 0, 0,
	0, 0, 101, 102, 103, 104, 105, 106, 107, 109,
	0, 343, 84, 342, 344, 345, 346, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 91, 69,
	185, 0, 101, 102, 103, 104, 105, 106, 107, 109,
	0, 86, 84, 85, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 91, 69,
	100, 74, 75, 76, 0, 97, 78, 92, 95, 93,
	94, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 110, 0, 100, 74,
	75, 76, 0, 97, 78, 92, 95, 93, 94, 0,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 90,
	0, 0, 0, 98, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 89, 0, 0, 0, 90, 0, 0,
	0, 98, 260, 0, 0, 0, 0, 0, 0, 0,
	117, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 102, 103, 104, 105, 106, 107, 109, 0, 86,
	84, 85, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 81, 82, 91, 69, 101, 102,
	103, 104, 105, 106, 107, 109, 0, 86, 84, 85,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 91, 69, 100, 74, 75, 76,
	0, 97, 78, 92, 95, 93, 94, 0, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 0, 110, 0, 100, 74, 75, 76, 0, 97,
	78, 92, 95, 93, 94, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 90, 0, 0, 0, 98,
	0, 73, 0, 0, 0, 0, 0, 0, 117, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 96, 89,
	0, 0, 0, 90, 0, 0, 0, 98, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 102, 103, 104,
	105, 106, 107, 109, 0, 86, 84, 85, 108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 91, 69, 101, 102, 103, 104, 105, 106,
	107, 109, 0, 86, 84, 85, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	91, 69, 100, 74, 75, 76, 0, 97, 78, 92,
	95, 93, 94, 0, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 110, 0,
	100, 74, 75, 76, 0, 97, 78, 92, 95, 93,
	94, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 90, 0, 0, 0, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 96, 89, 0, 0, 0, 90,
	0, 0, 0, 98, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 102, 103, 104, 105, 106, 107, 109,
	0, 86, 84, 85, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 91, 113,
	101, 102, 103, 104, 105, 106, 107, 109, 0, 86,
	84, 85, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 82, 91, 69, 100, 74,
	294, 76, 0, 97, 78, 92, 95, 93, 94, 0,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 90, 0, 0,
	0, 98, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 102,
	103, 104, 105, 106, 107, 109, 0, 86, 84, 85,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 91, 69,
}
var yyPact = [...]int{

	2593, -1000, 313, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3498, 3340, -1000, -1000, 174, 322, 1056, 1054,
	1154, 1664, -1000, 649, 1148, 1150, 1731, 1731, 679, 1731,
	3340, -1000, -1000, 3340, 3340, 1624, 3340, 3340, 3340, 3340,
	3340, 3340, -1000, 1731, 1731, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 317, -1000, -1000, -1000, -1000, 3312,
	-1000, 2968, 1169, 1072, -1000, -1000, -1000, -1000, -1000, -1000,
	1633, 3340, 3340, -38, 283, 280, 274, -1000, 381, 273,
	3340, 3340, -1000, -1000, -1000, -1000, 1731, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 272, 271,
	-59, 2593, 662, 3312, -1000, 266, 261, 3340, 682, 1633,
	-1000, 1014, 1114, 1549, 1113, 748, 1126, 992, 816, -1000,
	778, 3340, 1549, 1731, 1549, -1000, 44, 307, -1000, 482,
	-1000, 1731, 603, 1731, 1731, 410, 405, -1000, 908, -1000,
	1731, -1000, -1000, -1000, -1000, 3340, 3340, 1141, 31, 902,
	1041, 1139, -1000, 1129, -1000, -1000, 68, -38, -1000, -1000,
	1374, -38, -1000, -1000, 3684, 3340, 570, 187, 181, 182,
	207, 583, 35, 866, 1154, -1000, -1000, -1000, -1000, 42,
	1731, -1000, 3340, 3340, 3340, 825, 3340, 925, 69, 3340,
	899, 3340, 3340, 3340, 3340, 3340, 3340, 3340, -1000, -1000,
	1584, 3154, 2751, 816, 816, 69, 69, 867, 889, -1000,
	-1000, 355, -1000, 398, 816, 3340, 1560, -1000, 2593, 181,
	180, 3340, 680, 611, 610, 3340, 975, 996, 1549, 1121,
	38, -1000, -1000, -1000, -1000, 259, -1000, -1000, -1000, -1000,
	1549, 222, 1128, 30, 1117, 222, 853, 853, 853, 2780,
	-1000, 165, -1000, 204, 304, 1065, 1154, 3340, 432, 300,
	258, 257, -1000, -1000, -1000, -1000, 3340, 3340, 3340, 3340,
	3340, 1112, -1000, -1000, 1171, 3340, 3340, 1152, 1152, 1549,
	3340, 3340, 3340, -1000, 3340, 1633, -1000, -1000, -1000, -1000,
	2277, 1731, 1154, 1731, 62, 858, 1072, 296, -10, -43,
	-43, 888, 1788, 3340, 69, 3340, -1000, 3312, -1000, -43,
	69, 69, 18, 18, -1000, -1000, -1000, 1135, 355, -1000,
	-1000, 159, 3340, -1000, 154, 29, 1103, -1000, 1633, -1000,
	-1000, -37, 254, 251, 248, 245, 242, 241, 3340, 3126,
	-1000, -1000, 69, 176, 176, 176, 825, -1000, 3340, 1168,
	-1000, -1000, 582, -1000, 3340, 541, 2593, 537, 3340, 1474,
	657, 960, 3340, 2938, 185, 477, 1549, 3526, 169, 1117,
	43, 1433, -1000, -1000, 487, -1000, 240, -1000, 222, 603,
	1005, 3340, -1000, 207, -1000, 207, 207, -1000, -1000, 236,
	477, 1731, 778, -1000, 173, 121, 477, 1731, -1000, 1633,
	1138, 1731, 778, 201, 1731, -1000, -38, -1000, -38, -38,
	-1000, -38, -1000, -1000, 23, 1101, 1154, -1000, -1000, -1000,
	19, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 534, 311,
	-1000, -1000, 3498, 3340, -1000, -1000, -1000, -1000, -1000, 562,
	-1000, 14, 561, 1731, 1731, -1000, 235, 1731, -1000, -1000,
	3340, 1656, -1000, -43, -1000, -1000, -1000, 152, -1000, 2780,
	1731, 3154, 816, 816, 816, 3340, 3340, 3340, 142, 141,
	140, 833, -1000, 104, -1000, 234, -1000, -1000, 457, 138,
	3340, 526, 606, 2593, 3340, 752, -1000, -1000, 1633, 3340,
	2593, 431, 3340, 826, -1000, 13, 973, 1633, -1000, 69,
	477, -1000, 1126, 11, 294, -49, -1000, -2, 8, -38,
	-59, 229, 477, -1000, 952, 939, 905, 905, 1022, 222,
	-1000, -1000, -1000, -1000, 1731, 80, 3340, 1117, -1000, 998,
	991, 1633, 873, -1000, -1000, 873, 477, 137, 7, 136,
	6, -1000, 1078, 1731, 1048, -1000, 477, 1031, 1023, -1000,
	-1000, 135, -1000, 1100, 134, 5, -1000, -1000, 4, 1047,
	-3, 3340, 1731, -1000, 3340, 705, 2277, 653, 678, 2277,
	2277, 556, 554, 778, 132, 355, 3340, -1000, -1000, -1000,
	131, 3340, 3340, 3126, 3340, 128, 127, 114, -1000, -1000,
	-1000, 69, 113, -4, 3340, -1000, 782, 354, 1357, 729,
	525, -1000, 645, -1000, 1239, 677, 1102, -1000, -1000, 814,
	346, 2938, 344, -1000, -1000, -1000, 112, 1117, 477, 3340,
	-1000, 3340, 603, 477, 111, 222, 222, 937, -1000, 935,
	929, 905, -1000, -1000, -1000, -18, -1000, -1000, 3340, 3340,
	109, 896, 477, 1098, 1731, -1000, -1000, -1000, 477, 477,
	107, -31, 3340, 106, 1731, 3340, 1096, 365, 1095, 1154,
	1154, 3340, 1085, 1154, -1000, -1000, -1000, -1000, -1000, 2277,
	605, 3340, 524, 510, 2277, 2277, 101, 1084, 355, 415,
	100, 92, 91, 88, 87, 414, 390, 380, -1000, -1000,
	69, 1097, -1000, 1002, -1000, -1000, 726, 2593, -1000, -1000,
	3340, -1000, -1000, -1000, -1000, 1057, 865, -1000, -1000, 1633,
	86, -7, 85, 881, 1022, 1093, 222, 222, 222, 921,
	3340, 1633, -1000, 854, 228, -1000, 778, -1000, -1000, -1000,
	1078, 1731, 1633, -1000, -1000, -38, -1000, 778, 2435, 364,
	-1000, -1000, -1000, 1047, -1000, 362, 84, 581, 502, 2277,
	634, 704, 702, 498, 496, -1000, 226, 225, 412, 400,
	393, 391, 373, 218, 216, 342, 215, 340, -1000, 3340,
	214, -1000, 709, -1000, -1000, -1000, 69, -1000, -1000, -1000,
	3340, 848, 213, -1000, 3340, 211, 1093, 1315, 1022, 222,
	-67, 82, 69, -1000, 477, -1000, -1000, -1000, -1000, 495,
	308, -1000, -1000, 3498, 3340, -1000, -1000, 2968, 3340, 2435,
	2435, 1083, 494, 596, 2277, 3340, 750, -1000, 2277, -1000,
	-1000, 700, 699, 778, 417, 210, 209, 208, 205, 194,
	417, 417, 389, 417, 387, 1194, 1014, -1000, -1000, 79,
	69, -1000, 477, 1633, 1731, -1000, 3340, 1022, -1000, -1000,
	-1000, 78, -1000, 2435, 633, 675, 546, 34, 843, 1154,
	-1000, 493, 480, 359, 724, 476, -1000, 632, -1000, 669,
	-1000, -1000, 77, 76, -1000, 1016, 986, 417, 417, 417,
	417, 417, 75, 1014, 73, 190, 72, 189, -1000, 70,
	-1000, -1000, 66, 60, 1633, 847, -1000, 2435, 595, 3340,
	2113, 1731, 1731, 15, 842, -1000, -1000, 2435, -1000, 723,
	2277, -1000, 3340, -1000, -1000, -1000, 980, 3340, 58, 57,
	56, 55, 54, -1000, -1000, 417, -1000, 417, -1000, 835,
	-1000, 69, -1000, 579, 474, 2435, 628, 470, 303, -1000,
	-1000, 3498, 3340, -1000, -1000, -1000, 545, 544, 1731, 1731,
	469, -1000, 708, 2938, -1000, -1000, -1000, -1000, -1000, -1000,
	53, 51, 69, -1000, -1000, 464, 592, 2435, 3340, 746,
	-1000, 2435, 698, 2113, 627, 668, 2113, 2113, 483, 478,
	-1000, -1000, 319, -1000, -1000, -1000, 721, 460, -1000, 624,
	-1000, 664, -1000, -1000, 2113, 591, 3340, 459, 458, 2113,
	2113, -1000, 850, -1000, 719, 2435, -1000, 3340, 569, 455,
	2113, 623, 697, 690, 452, 450, -1000, 962, 773, 766,
	756, -1000, 707, 448, 586, 2113, 3340, 745, -1000, 2113,
	-1000, -1000, 688, 687, 832, 763, -1000, 777, 755, -1000,
	-1000, -1000, -1000, 715, 446, -1000, 621, -1000, 461, -1000,
	-1000, 864, -1000, -1000, -1000, -1000, -1000, 711, 2113, -1000,
	3340, -1000, 759, -1000, -1000, 681, -1000, -1000,
}
var yyPgo = [...]int{

	0, 38, 21, 86, 122, 109, 65, 1336, 56, 36,
	54, 1334, 1330, 1328, 1322, 51, 31, 1321, 1320, 1317,
	1316, 1307, 1305, 1303, 66, 29, 32, 1302, 1301, 1300,
	62, 1296, 40, 1295, 1290, 34, 35, 1289, 1288, 1287,
	1284, 1282, 75, 91, 76, 1281, 69, 67, 1280, 1279,
	30, 1271, 43, 1263, 13, 1259, 92, 1257, 82, 80,
	824, 990, 0, 64, 89, 12, 10, 1252, 1251, 1249,
	1246, 1207, 1245, 84, 1237, 1236, 1235, 58, 1233, 1232,
	1229, 8, 25, 11, 24, 1228, 1227, 3, 1224, 1223,
	59, 1221, 1220, 90, 74, 79, 1219, 28, 1218, 33,
	1215, 1214, 1213, 18, 53, 1212, 22, 27, 61, 63,
	26, 73, 1204, 1201, 1199, 60, 1189, 1188, 39, 68,
	17, 20, 5, 9, 2, 7, 46, 1186, 16, 1182,
	6, 1181, 4, 1180, 1367, 133, 19, 14, 1179, 87,
	1100, 1177, 96, 111, 88, 77, 37, 71, 81, 1174,
	42, 801,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 6, 6, 7,
	7, 8, 8, 8, 8, 8, 9, 9, 10, 10,
	12, 12, 11, 11, 11, 11, 11, 13, 13, 13,
	13, 13, 13, 14, 14, 15, 15, 15, 15, 15,
	16, 16, 17, 17, 18, 18, 18, 18, 18, 19,
	19, 19, 19, 19, 19, 20, 20, 20, 20, 21,
	21, 21, 21, 21, 22, 22, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 24, 24, 25, 25,
	26, 26, 26, 26, 26, 27, 27, 27, 27, 27,
	27, 27, 28, 28, 28, 28, 29, 29, 30, 30,
	31, 31, 31, 31, 32, 33, 33, 34, 35, 35,
	36, 36, 36, 37, 37, 37, 37, 37, 38, 38,
	38, 38, 38, 38, 38, 39, 39, 39, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 41, 41, 41, 42, 42, 43, 43, 43,
	43, 44, 44, 45, 46, 46, 47, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 51, 52, 52, 53,
	53, 54, 54, 55, 55, 56, 56, 57, 57, 57,
	57, 57, 57, 58, 59, 60, 60, 60, 60, 60,
	61, 61, 61, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	63, 64, 64, 64, 65, 65, 66, 66, 67, 67,
	68, 68, 69, 69, 69, 70, 70, 71, 72, 73,
	73, 73, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 75, 75, 76, 76,
	76, 76, 77, 77, 78, 78, 78, 78, 78, 79,
	79, 79, 79, 79, 80, 80, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 82, 83, 83,
	84, 84, 85, 85, 86, 86, 86, 87, 87, 87,
	88, 88, 89, 89, 90, 90, 91, 91, 91, 91,
	92, 92, 92, 92, 93, 93, 96, 96, 96, 96,
	97, 97, 97, 97, 97, 97, 98, 98, 98, 98,
	98, 98, 99, 99, 100, 100, 101, 101, 101, 102,
	103, 103, 104, 104, 105, 105, 106, 106, 107, 107,
	108, 108, 109, 109, 94, 94, 95, 95, 110, 110,
	111, 111, 112, 112, 112, 112, 113, 114, 115, 115,
	116, 116, 116, 116, 116, 116, 116, 116, 117, 117,
	118, 118, 119, 119, 120, 120, 121, 121, 122, 122,
	123, 123, 124, 124, 125, 125, 126, 126, 127, 127,
	128, 128, 129, 129, 130, 130, 131, 131, 132, 132,
	133, 133, 134, 134, 134, 134, 134, 134, 134, 134,
	135, 136, 136, 137, 138, 138, 139, 139, 140, 141,
	142, 143, 143, 144, 144, 145, 145, 146, 146, 147,
	147, 148, 148, 149, 149, 150, 150, 151, 151,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 8, 8, 9, 9, 1, 1, 1, 2,
	1, 1, 7, 8, 6, 1, 1, 7, 8, 6,
	1, 1, 1, 1, 1, 6, 8, 8, 9, 9,
	1, 2, 1, 1, 7, 8, 6, 1, 1, 7,
	8, 6, 1, 1, 1, 2, 2, 1, 2, 4,
	4, 4, 4, 2, 1, 1, 6, 8, 5, 6,
	8, 5, 7, 7, 7, 7, 1, 3, 1, 3,
	0, 1, 1, 2, 2, 5, 5, 2, 4, 2,
	3, 5, 6, 8, 5, 3, 1, 3, 1, 3,
	4, 2, 4, 3, 1, 1, 3, 3, 1, 3,
	1, 1, 3, 9, 10, 10, 12, 3, 0, 1,
	1, 1, 1, 2, 2, 5, 6, 3, 4, 4,
	4, 4, 4, 4, 2, 2, 2, 2, 4, 4,
	2, 2, 2, 4, 1, 2, 2, 4, 2, 2,
	1, 2, 2, 3, 4, 5, 7, 5, 4, 4,
	4, 1, 1, 3, 0, 2, 0, 2, 0, 3,
	0, 2, 0, 3, 0, 3, 4, 0, 2, 0,
	2, 0, 2, 6, 9, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 3, 1, 6, 1, 3, 1, 3, 2, 4,
	1, 1, 0, 1, 1, 1, 1, 3, 3, 3,
	1, 6, 3, 3, 3, 3, 4, 4, 5, 6,
	6, 3, 4, 4, 3, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 3, 3, 2, 2, 3, 3,
	2, 2, 0, 1, 4, 3, 4, 4, 4, 5,
	5, 5, 5, 1, 5, 10, 8, 9, 9, 9,
	9, 9, 8, 8, 10, 8, 10, 2, 1, 5,
	0, 3, 2, 5, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 6, 6, 8, 1, 1, 1, 6, 6, 1,
	1, 2, 3, 1, 1, 3, 4, 5, 6, 7,
	5, 6, 2, 4, 1, 1, 1, 3, 1, 5,
	0, 1, 4, 5, 0, 2, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	10, 13, 9, 12, 9, 12, 8, 11, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -112, -113, -116, -117,
	-23, -20, -21, -27, -28, -31, -37, -22, -40, -41,
	-62, 15, 87, 86, -8, -10, -54, 27, 32, 35,
	132, 95, -137, 101, 20, 21, 99, 100, 98, 102,
	119, 110, 111, 33, 123, 133, 115, 116, 117, 118,
	124, 120, 121, 122, 125, -57, -75, -72, -71, -78,
	-79, -102, -74, -76, -135, -140, -141, -142, -39, 161,
	16, 89, 114, 79, 5, 6, 7, -58, 10, -59,
	-61, 158, 159, -134, 144, 145, 143, -80, -64, 69,
	73, 160, 11, 13, 14, 12, 96, 9, 77, -60,
	4, 134, 135, 136, 137, 138, 139, 140, 146, 141,
	30, 155, -62, 161, -137, 87, 27, 86, -103, -61,
	-62, -43, 24, 19, 27, 22, -45, -44, 17, -71,
	161, 161, 25, 36, 36, -139, -138, -135, -139, -134,
	-135, 96, 44, 102, 126, -140, -142, -140, -134, -134,
	-38, 103, 104, 37, 38, 105, 106, -134, -134, -62,
	-62, -62, -142, -134, -62, -62, -62, -134, -62, -107,
	-61, -134, -62, -134, -134, 152, -61, -62, -107, -42,
	-54, -62, -135, -136, -9, 132, 95, 6, -56, -55,
	-149, 31, 151, 150, 157, 76, 74, 73, 70, 75,
	-151, 159, 158, 156, 163, 164, 72, 71, -61, -61,
	166, 161, 161, 161, 161, 150, 157, -144, -151, 73,
	-71, -61, -61, -134, 161, 161, 166, -1, 91, -107,
	-77, 161, -103, -126, -104, 90, -50, 45, 25, -95,
	-93, -90, -92, -134, 30, -91, 137, 138, 139, 140,
	25, 18, -94, -90, -46, 18, 64, 65, 66, -143,
	78, -77, -107, -93, -134, -93, 165, 152, 96, 44,
	126, 127, -134, -90, -134, -134, 157, 43, 157, 43,
	62, -134, -62, -62, 18, 62, 62, 43, 18, 18,
	165, 62, 165, -62, 6, -61, 162, 162, 162, 162,
	93, 70, 165, 70, -135, -136, 165, -134, -61, -61,
	-61, -144, -61, 74, 70, 75, -64, 161, -71, -61,
	68, 67, -61, -61, -61, -61, -61, -61, -61, -134,
	6, -77, -143, 162, -111, -101, -100, -63, -61, -81,
	156, -134, 145, 143, 146, 147, 148, 149, -143, -143,
	-64, -64, 74, 70, 68, 67, 76, 143, -143, -61,
	-134, 6, -1, 162, 90, -127, 92, -105, 92, -61,
	-62, -51, 51, 48, -93, 20, 165, 161, -93, -109,
	-97, -96, -98, 29, 161, -93, 142, -71, 18, 165,
	-47, 23, -109, -148, 67, -148, -148, -111, 162, 62,
	161, 161, -150, 28, 33, 34, 42, 20, -139, -61,
	97, 161, 28, 161, 161, -62, -134, -62, -134, -134,
	-62, -134, -62, -30, -29, -62, 25, 5, -30, -108,
	-62, -142, -142, -93, -108, -108, -107, -62, -2, -12,
	-5, -13, 87, 86, -8, -10, -6, 112, 113, -134,
	-136, -135, -134, 70, 70, -56, 28, 161, -58, -59,
	71, -61, -64, -61, -64, -64, 162, -77, 162, 165,
	28, 161, 161, 161, 161, 161, 161, 161, -77, -77,
	-63, -64, -73, 161, -71, 141, -73, -73, -144, -77,
	165, -119, -118, 92, 88, 94, -1, 94, -61, 91,
	91, -53, 52, -62, -66, -67, -68, -61, -81, 26,
	161, -42, -115, -114, -60, -134, -95, -90, -62, -134,
	30, 62, 161, -47, 60, -145, -147, 59, 63, 165,
	55, 57, 58, -134, 28, -97, 161, -109, -94, -48,
	46, -61, -44, -43, -44, -44, 161, -106, -60, -110,
	-134, -42, -24, 161, -134, -60, 161, -60, -134, -42,
	-134, -110, -42, 162, -36, -33, -35, -32, -34, -135,
	-134, 165, 28, -136, 165, 94, 155, -62, -103, 93,
	93, -134, -134, 161, -110, -61, 71, 162, -111, -134,
	-77, -143, -143, -143, -143, -77, -77, -77, 162, 162,
	162, 71, -65, -64, 161, 99, 70, 162, -61, 94,
	-119, -1, -62, 86, -61, -1, 97, -62, -52, 53,
	79, 165, -69, 49, 50, -65, -106, -46, 165, 157,
	162, 165, 165, 161, -106, 54, 54, -146, 56, -146,
	-145, -147, -109, -134, 162, -62, -47, -49, 47, 48,
	-106, 162, 165, 162, 165, -26, 37, 38, 39, 40,
	-25, -24, 41, -106, 43, 43, 162, 28, 162, 165,
	165, 41, 162, 165, -30, -134, -108, 89, -2, 91,
	-128, 90, -2, -2, 93, 93, -42, 162, -61, 162,
	-77, -77, -77, -63, -77, 162, 162, 162, -64, 162,
	165, -61, 80, 131, 162, 87, 94, 91, -104, -126,
	90, 19, -52, 134, -66, 135, 162, -47, -115, -61,
	-77, -90, -106, 162, -97, -97, 54, 54, 54, -146,
	165, -61, -107, 162, 62, -106, -150, -110, -60, -60,
	162, 165, -61, 162, -134, -134, -62, 28, 128, 28,
	-32, -35, -35, -135, -62, 28, -36, -2, -129, 92,
	-62, 94, 94, -2, -2, 162, 28, 109, 162, 162,
	162, 162, 162, 109, 109, 130, 109, 130, -65, 165,
	46, 87, -1, -70, 37, 38, 26, -42, 162, 162,
	165, 162, 62, -99, 61, 62, -97, -97, -97, 54,
	-134, -62, 26, -42, 161, -42, -26, -25, -42, -3,
	-14, -5, -18, 87, 86, -15, -16, 89, 129, 128,
	128, 162, -121, -120, 92, 88, 94, -2, 91, 89,
	89, 94, 94, 161, 161, 109, 109, 109, 109, 109,
	161, 161, 135, 161, 135, -61, 161, -118, -65, -77,
	26, -42, 161, -61, 161, -99, 61, -97, 162, 162,
	-65, -106, 94, 155, -62, -103, -62, -135, -136, -9,
	-62, -3, -3, 28, 94, -121, -2, -62, 86, -2,
	89, 89, -42, -83, -82, -84, 108, 161, 161, 161,
	161, 161, -82, -84, -83, 109, -82, 109, 162, -50,
	162, -65, -106, -110, -61, 162, -3, 91, -130, 90,
	93, 70, 70, -135, -136, 94, 94, 128, 87, 94,
	91, -128, 90, 162, 162, -50, 45, 48, -83, -83,
	-83, -83, -82, 162, 162, 161, 162, 161, 162, 162,
	162, 26, -42, -3, -131, 92, -62, -4, -17, -5,
	-19, 87, 86, -15, -16, -6, -134, -134, 70, 70,
	-3, 87, -2, 48, -107, 162, 162, 162, 162, 162,
	-83, -82, 26, -42, -65, -123, -122, 92, 88, 94,
	-3, 91, 94, 155, -62, -103, 93, 93, -134, -134,
	94, -120, -66, 162, 162, -65, 94, -123, -3, -62,
	86, -3, 89, -4, 91, -132, 90, -4, -4, 93,
	93, -85, 136, 87, 94, 91, -130, 90, -4, -133,
	92, -62, 94, 94, -4, -4, -86, 74, 81, 6,
	84, 87, -3, -125, -124, 92, 88, 94, -4, 91,
	89, 89, 94, 94, -88, 81, -87, 6, 84, 82,
	82, 85, -122, 94, -125, -4, -62, 86, -4, 89,
	89, 71, 82, 82, 83, 85, 87, 94, 91, -132,
	90, -89, 81, -87, 87, -4, 83, -124,
}
var yyDef = [...]int{

	-2, -2, 2, 29, 30, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	-2, 26, 0, 370, 45, 46, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 138, 0,
	0, 84, 85, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 170, 0, 0, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 234, 235, 236, 237, 201,
	239, 0, 38, 473, 207, 208, 209, 210, 211, 212,
	0, 0, 0, 215, 0, 0, 0, 303, 463, 0,
	0, 0, 450, 458, 459, 460, 0, 213, 214, 220,
	442, 443, 444, 445, 446, 447, 448, 449, 0, 0,
	0, -2, 221, -2, 233, 0, 0, 370, 0, 371,
	221, -2, 0, 0, 0, 0, 184, 0, 461, 182,
	201, 292, 0, 0, 0, 75, 456, 454, 76, 0,
	78, 0, 0, 0, 0, 0, 0, 83, 107, 109,
	0, 139, 140, 141, 142, 0, 0, 0, -2, -2,
	221, 221, 154, 166, -2, -2, -2, -2, -2, 165,
	378, -2, -2, 171, 172, 0, 0, 221, 0, 0,
	0, 221, 232, 0, 0, 36, 37, 39, 202, 205,
	0, 474, 0, 477, 478, 463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 287,
	0, 292, 0, 461, 461, 477, 478, 0, 0, 464,
	280, 290, 291, 0, 461, 0, 0, 3, -2, 0,
	0, 292, 0, 428, 374, 0, 194, 0, 0, 0,
	386, 344, 345, 334, 335, 0, -2, -2, -2, -2,
	0, 0, 0, 384, 186, 0, 471, 471, 471, 0,
	462, 0, 293, 0, 475, 0, 0, 0, 0, 0,
	0, 0, 110, 115, 123, 137, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 208, 453, 222, 238, 241, 257,
	-2, 0, 0, 0, 0, 0, 473, 0, 258, -2,
	-2, 0, 0, 0, 0, 0, 271, 201, 242, -2,
	0, 0, 281, 282, 283, 284, 285, 288, 289, 216,
	218, 0, 292, 295, 0, 390, 366, 368, 364, 365,
	240, 215, 0, 0, 0, 0, 0, 0, 292, 292,
	263, 265, 0, 0, 0, 0, 463, 147, 292, 0,
	217, 219, 412, 297, 0, 0, -2, 0, 0, 0,
	221, 199, 0, 0, 201, 0, 0, 0, 0, 186,
	-2, 350, 353, 354, 201, 346, 0, 349, 0, 0,
	188, 0, 185, 0, 472, 0, 0, 183, 298, 0,
	0, 0, 201, 476, 0, 0, 0, 0, 457, 455,
	201, 0, 201, 0, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, 108, 118, -2, 0, 120, 122, 163,
	-2, 152, 153, 167, 158, 159, 379, -2, 0, 0,
	40, 41, 0, 370, 50, 51, 52, 27, 28, 0,
	452, 451, 0, 0, 0, 206, 0, 0, 266, 267,
	0, 0, 272, -2, 276, 278, 294, 0, 296, 0,
	0, 292, 461, 461, 461, 292, 292, 292, 0, 0,
	0, 0, 273, 201, 260, 0, 277, 279, 0, 0,
	0, 0, 412, -2, 0, 0, 429, 369, 375, 0,
	-2, 175, 0, -2, 193, 246, 252, 250, 251, 0,
	0, 394, 184, 398, 0, 215, 387, 0, 221, -2,
	335, 0, 0, 408, 0, 0, 467, 467, 465, 0,
	466, 469, 470, 351, 0, 465, 0, 186, 385, 190,
	0, 187, 178, 181, 179, 180, 0, 0, 376, 0,
	388, 88, 100, 0, 96, 91, 0, 0, 0, 105,
	106, 0, 114, 0, 0, 130, 131, 125, 128, 124,
	0, 0, 0, 111, 0, 0, -2, 221, 0, -2,
	-2, 0, 0, 201, 0, 268, 0, 299, 391, 367,
	0, 292, 292, 292, 292, 0, 0, 0, 300, 301,
	302, 0, 0, 244, 0, 145, 0, 304, 0, 0,
	0, 413, 221, 44, 372, 426, 0, -2, 195, 197,
	0, 0, 248, 253, 254, 392, 0, 186, 0, 0,
	340, 292, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 467, 383, 352, 355, 221, 409, 177, 0, 0,
	0, 0, 0, -2, 0, 89, 101, 102, 0, 0,
	0, 98, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 119, 117, 381, 31, 5, -2,
	432, 0, 0, 0, -2, -2, 0, 0, 269, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 259,
	0, 0, 146, 0, 243, 42, 0, -2, 373, 427,
	0, 176, 196, 198, 247, 0, 201, 396, 399, 397,
	0, 0, 0, 0, 356, 465, 0, 0, 0, 0,
	0, 191, 189, 201, 0, 377, 201, 389, 103, 104,
	100, 0, 97, 92, 93, -2, -2, 201, -2, 0,
	126, 132, 129, 0, -2, 0, 0, 416, 0, -2,
	221, 0, 0, 0, 0, 203, 0, 0, 299, 300,
	301, 302, 304, 0, 0, 0, 0, 0, 245, 0,
	0, 43, 410, 249, 255, 256, 0, 395, 341, 342,
	292, 201, 0, 357, 0, 0, 465, 465, 360, 0,
	215, 221, 0, 406, 0, 87, 90, 99, 113, 0,
	0, 53, 54, 0, 370, 67, 68, 0, 60, -2,
	-2, 0, 0, 416, -2, 0, 0, 433, -2, 32,
	33, 0, 0, 201, 320, 0, 0, 0, 0, 0,
	320, 320, 0, 320, 0, 0, 192, 411, 393, 0,
	0, 402, 0, 362, 0, 358, 0, 361, 347, 348,
	404, 0, 133, -2, 221, 0, 221, 232, 0, 0,
	-2, 0, 0, 0, 0, 0, 417, 221, 49, 430,
	34, 35, 0, 0, 318, 192, 0, 320, 320, 320,
	320, 320, 0, 192, 0, 0, 0, 0, 261, 0,
	343, 400, 0, 0, 359, 201, 7, -2, 436, 0,
	-2, 0, 0, 0, 0, 134, 135, -2, 47, 0,
	-2, 431, 0, 204, 306, 317, 0, 0, 0, 0,
	0, 0, 0, 312, 313, 320, 315, 320, 305, 201,
	363, 0, 407, 420, 0, -2, 221, 0, 0, 62,
	63, 0, 370, 72, 73, 74, 0, 0, 0, 0,
	0, 48, 414, 0, 321, 307, 308, 309, 310, 311,
	0, 0, 0, 403, 405, 0, 420, -2, 0, 0,
	437, -2, 0, -2, 221, 0, -2, -2, 0, 0,
	136, 415, 193, 314, 316, 401, 0, 0, 421, 221,
	66, 434, 55, 9, -2, 440, 0, 0, 0, -2,
	-2, 319, 0, 64, 0, -2, 435, 0, 424, 0,
	-2, 221, 0, 0, 0, 0, 322, 0, 0, 0,
	0, 65, 418, 0, 424, -2, 0, 0, 441, -2,
	56, 57, 0, 0, 0, 0, 331, 0, 0, 324,
	325, 326, 419, 0, 0, 425, 221, 71, 438, 58,
	59, 0, 330, 327, 328, 329, 69, 0, -2, 439,
	0, 323, 0, 333, 70, 422, 332, 423,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 160, 3, 3, 3, 164, 3, 3,
	161, 162, 156, 159, 165, 158, 166, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 155,
	3, 157,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:244
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:256
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:260
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:266
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:270
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:276
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:280
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:286
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:290
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:294
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:302
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:314
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:322
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:326
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:330
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:334
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:338
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:346
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:350
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:356
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:360
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:370
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:380
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:384
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:388
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:392
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:398
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:402
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:408
		{
			yyVAL.statement = Exit{}
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:412
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:418
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:422
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 43:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:432
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:436
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:440
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:444
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:450
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:454
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:458
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:462
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:466
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:470
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:476
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:480
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:490
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:494
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:498
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:502
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:512
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:518
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:522
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:532
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:536
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:540
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:544
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:550
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:554
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:558
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:562
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:566
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:570
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:576
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:580
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:584
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:588
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:594
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:598
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:602
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:606
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:610
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:616
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:620
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:630
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:634
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:638
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:642
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:646
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:650
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:654
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:658
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:662
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:668
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:672
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:678
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:682
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:688
		{
			yyVAL.expression = nil
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:692
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:696
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:700
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:704
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:710
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:714
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:718
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:722
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:726
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:730
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:734
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 112:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:740
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 113:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:744
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:748
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:752
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:758
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:762
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:768
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:772
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:778
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:782
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:786
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:790
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:796
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:802
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:806
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:812
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:818
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:822
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:828
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:832
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:836
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 133:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:842
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 134:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:846
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:850
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:854
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:858
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:864
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:868
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:872
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:876
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:880
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:884
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:888
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:894
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:898
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:902
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:908
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:912
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:916
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:920
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:924
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:928
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:932
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:936
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:940
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:944
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:948
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:952
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:956
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:960
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:964
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:968
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:972
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:976
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:980
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:984
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:988
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:992
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:996
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 176:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				OffsetClause:     yyDollar[5].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal,
			}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1063
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1083
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1087
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1093
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1099
		{
			yyVAL.queryexpr = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1103
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1109
		{
			yyVAL.queryexpr = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1113
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1119
		{
			yyVAL.queryexpr = nil
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1123
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1129
		{
			yyVAL.queryexpr = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1133
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1139
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1149
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1157
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexpr = nil
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = nil
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1177
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = nil
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1187
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 204:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1197
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1203
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1213
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1221
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1225
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1229
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1233
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1239
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1245
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1251
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1259
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1273
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1287
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1291
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1295
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1299
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1303
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1307
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1311
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1315
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1319
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1327
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1331
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1335
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1339
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1343
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1347
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1351
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1361
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1391
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1401
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1405
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.token = Token{}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.token = yyDollar[1].token
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.token = yyDollar[1].token
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.token = yyDollar[1].token
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.token = yyDollar[1].token
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1451
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1474
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1478
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 261:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1482
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1508
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1512
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1516
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1536
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1540
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1560
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1596
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1600
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1614
		{
			yyVAL.queryexprs = nil
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1618
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1647
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1651
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1655
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1659
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1663
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1669
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1673
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1679
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 307:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1683
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 308:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1687
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 309:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1691
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 310:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1695
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 311:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1699
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 312:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1703
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 313:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1707
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 314:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1711
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1715
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 316:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1719
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1725
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1731
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1735
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexpr = nil
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1766
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1771
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1777
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1782
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1787
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1793
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1797
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1803
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1807
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1813
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1817
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1823
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1827
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1831
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1835
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1841
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1845
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1849
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 343:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1853
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1859
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1869
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 347:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1873
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1877
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1881
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1887
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1891
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1895
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1899
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1903
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1907
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1913
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1917
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1921
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 359:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1925
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1929
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1933
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1939
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1943
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1949
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1953
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1959
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1967
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1973
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1979
		{
			yyVAL.queryexpr = nil
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1983
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1989
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1993
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1999
		{
			yyVAL.queryexpr = nil
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2003
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2009
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2013
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2019
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2023
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2029
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2033
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2039
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2043
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2049
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2053
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2059
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2063
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2069
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2073
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2079
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2083
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2089
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 393:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2093
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2097
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 395:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2101
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 396:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2107
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2113
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2119
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2123
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 400:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:2129
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 401:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line parser.y:2133
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 402:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2137
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 403:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2141
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 404:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2145
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 405:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2149
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 406:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2153
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 407:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:2157
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2163
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2168
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2175
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2179
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2185
		{
			yyVAL.elseexpr = Else{}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2189
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2195
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2199
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2205
		{
			yyVAL.elseexpr = Else{}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2209
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2215
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2219
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2225
		{
			yyVAL.elseexpr = Else{}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2229
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2235
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2239
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2245
		{
			yyVAL.elseexpr = Else{}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2249
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2255
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2259
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2265
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2269
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2275
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2279
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2285
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2289
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2295
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2299
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2305
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2309
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2315
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2319
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2325
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2329
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2335
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2339
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2343
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2347
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2351
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2355
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2359
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2363
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2369
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2375
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2379
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2385
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2391
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2395
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2401
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2405
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2411
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2417
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2423
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2429
		{
			yyVAL.token = Token{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2433
		{
			yyVAL.token = yyDollar[1].token
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2439
		{
			yyVAL.token = Token{}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2443
		{
			yyVAL.token = yyDollar[1].token
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2449
		{
			yyVAL.token = Token{}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2453
		{
			yyVAL.token = yyDollar[1].token
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2459
		{
			yyVAL.token = Token{}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2463
		{
			yyVAL.token = yyDollar[1].token
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2469
		{
			yyVAL.token = yyDollar[1].token
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2473
		{
			yyVAL.token = yyDollar[1].token
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2479
		{
			yyVAL.token = Token{}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2483
		{
			yyVAL.token = yyDollar[1].token
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2489
		{
			yyVAL.token = Token{}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2493
		{
			yyVAL.token = yyDollar[1].token
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2499
		{
			yyVAL.token = Token{}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2503
		{
			yyVAL.token = yyDollar[1].token
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2509
		{
			yyVAL.token = yyDollar[1].token
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2513
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
