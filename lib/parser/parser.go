// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const SELECT = 57358
const FROM = 57359
const UPDATE = 57360
const SET = 57361
const UNSET = 57362
const DELETE = 57363
const WHERE = 57364
const INSERT = 57365
const INTO = 57366
const VALUES = 57367
const AS = 57368
const DUAL = 57369
const STDIN = 57370
const RECURSIVE = 57371
const CREATE = 57372
const ADD = 57373
const DROP = 57374
const ALTER = 57375
const TABLE = 57376
const FIRST = 57377
const LAST = 57378
const AFTER = 57379
const BEFORE = 57380
const DEFAULT = 57381
const RENAME = 57382
const TO = 57383
const VIEW = 57384
const ORDER = 57385
const GROUP = 57386
const HAVING = 57387
const BY = 57388
const ASC = 57389
const DESC = 57390
const LIMIT = 57391
const OFFSET = 57392
const PERCENT = 57393
const JOIN = 57394
const INNER = 57395
const OUTER = 57396
const LEFT = 57397
const RIGHT = 57398
const FULL = 57399
const CROSS = 57400
const ON = 57401
const USING = 57402
const NATURAL = 57403
const UNION = 57404
const INTERSECT = 57405
const EXCEPT = 57406
const ALL = 57407
const ANY = 57408
const EXISTS = 57409
const IN = 57410
const AND = 57411
const OR = 57412
const NOT = 57413
const BETWEEN = 57414
const LIKE = 57415
const IS = 57416
const NULL = 57417
const DISTINCT = 57418
const WITH = 57419
const RANGE = 57420
const UNBOUNDED = 57421
const PRECEDING = 57422
const FOLLOWING = 57423
const CURRENT = 57424
const ROW = 57425
const CASE = 57426
const IF = 57427
const ELSEIF = 57428
const WHILE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const DO = 57433
const END = 57434
const DECLARE = 57435
const CURSOR = 57436
const FOR = 57437
const FETCH = 57438
const OPEN = 57439
const CLOSE = 57440
const DISPOSE = 57441
const NEXT = 57442
const PRIOR = 57443
const ABSOLUTE = 57444
const RELATIVE = 57445
const SEPARATOR = 57446
const PARTITION = 57447
const OVER = 57448
const COMMIT = 57449
const ROLLBACK = 57450
const CONTINUE = 57451
const BREAK = 57452
const EXIT = 57453
const ECHO = 57454
const PRINT = 57455
const PRINTF = 57456
const SOURCE = 57457
const EXECUTE = 57458
const CHDIR = 57459
const PWD = 57460
const RELOAD = 57461
const REMOVE = 57462
const TRIGGER = 57463
const FUNCTION = 57464
const AGGREGATE = 57465
const BEGIN = 57466
const RETURN = 57467
const IGNORE = 57468
const WITHIN = 57469
const VAR = 57470
const SHOW = 57471
const TIES = 57472
const NULLS = 57473
const ROWS = 57474
const JSON_ROW = 57475
const JSON_TABLE = 57476
const COUNT = 57477
const JSON_OBJECT = 57478
const AGGREGATE_FUNCTION = 57479
const LIST_FUNCTION = 57480
const ANALYTIC_FUNCTION = 57481
const FUNCTION_NTH = 57482
const FUNCTION_WITH_INS = 57483
const COMPARISON_OP = 57484
const STRING_OP = 57485
const SUBSTITUTION_OP = 57486
const UMINUS = 57487
const UPLUS = 57488

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2297

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 184,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 73,
	86, 73,
	88, 73,
	90, 73,
	92, 73,
	147, 73,
	-2, 214,
	-1, 98,
	16, 184,
	18, 184,
	21, 184,
	23, 184,
	-2, 1,
	-1, 116,
	154, 271,
	-2, 184,
	-1, 122,
	62, 164,
	63, 164,
	64, 164,
	-2, 175,
	-1, 161,
	1, 146,
	86, 146,
	88, 146,
	90, 146,
	92, 146,
	147, 146,
	-2, 198,
	-1, 164,
	1, 152,
	86, 152,
	88, 152,
	90, 152,
	92, 152,
	147, 152,
	-2, 198,
	-1, 205,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	142, 0,
	149, 0,
	-2, 241,
	-1, 206,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	142, 0,
	149, 0,
	-2, 243,
	-1, 215,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	142, 0,
	149, 0,
	-2, 253,
	-1, 225,
	86, 1,
	90, 1,
	92, 1,
	-2, 184,
	-1, 280,
	92, 4,
	-2, 184,
	-1, 328,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	142, 0,
	149, 0,
	-2, 254,
	-1, 335,
	92, 1,
	-2, 184,
	-1, 347,
	52, 421,
	-2, 353,
	-1, 380,
	1, 76,
	86, 76,
	88, 76,
	90, 76,
	92, 76,
	147, 76,
	-2, 198,
	-1, 382,
	1, 78,
	86, 78,
	88, 78,
	90, 78,
	92, 78,
	147, 78,
	-2, 198,
	-1, 383,
	1, 134,
	86, 134,
	88, 134,
	90, 134,
	92, 134,
	147, 134,
	-2, 198,
	-1, 385,
	1, 136,
	86, 136,
	88, 136,
	90, 136,
	92, 136,
	147, 136,
	-2, 198,
	-1, 445,
	92, 1,
	-2, 184,
	-1, 452,
	88, 1,
	90, 1,
	92, 1,
	-2, 184,
	-1, 517,
	86, 4,
	88, 4,
	90, 4,
	92, 4,
	-2, 184,
	-1, 520,
	92, 4,
	-2, 184,
	-1, 521,
	92, 4,
	-2, 184,
	-1, 588,
	16, 431,
	77, 431,
	153, 431,
	-2, 82,
	-1, 611,
	86, 4,
	90, 4,
	92, 4,
	-2, 184,
	-1, 616,
	92, 4,
	-2, 184,
	-1, 617,
	92, 4,
	-2, 184,
	-1, 638,
	86, 1,
	90, 1,
	92, 1,
	-2, 184,
	-1, 671,
	1, 90,
	86, 90,
	88, 90,
	90, 90,
	92, 90,
	147, 90,
	-2, 198,
	-1, 674,
	92, 6,
	-2, 184,
	-1, 685,
	92, 4,
	-2, 184,
	-1, 740,
	92, 6,
	-2, 184,
	-1, 741,
	92, 6,
	-2, 184,
	-1, 745,
	92, 4,
	-2, 184,
	-1, 749,
	88, 4,
	90, 4,
	92, 4,
	-2, 184,
	-1, 769,
	88, 1,
	90, 1,
	92, 1,
	-2, 184,
	-1, 781,
	86, 6,
	88, 6,
	90, 6,
	92, 6,
	-2, 184,
	-1, 821,
	86, 6,
	90, 6,
	92, 6,
	-2, 184,
	-1, 824,
	92, 8,
	-2, 184,
	-1, 829,
	92, 6,
	-2, 184,
	-1, 832,
	86, 4,
	90, 4,
	92, 4,
	-2, 184,
	-1, 855,
	92, 6,
	-2, 184,
	-1, 883,
	92, 6,
	-2, 184,
	-1, 887,
	88, 6,
	90, 6,
	92, 6,
	-2, 184,
	-1, 889,
	86, 8,
	88, 8,
	90, 8,
	92, 8,
	-2, 184,
	-1, 892,
	92, 8,
	-2, 184,
	-1, 893,
	92, 8,
	-2, 184,
	-1, 896,
	88, 4,
	90, 4,
	92, 4,
	-2, 184,
	-1, 908,
	86, 8,
	90, 8,
	92, 8,
	-2, 184,
	-1, 917,
	86, 6,
	90, 6,
	92, 6,
	-2, 184,
	-1, 922,
	92, 8,
	-2, 184,
	-1, 936,
	92, 8,
	-2, 184,
	-1, 940,
	88, 8,
	90, 8,
	92, 8,
	-2, 184,
	-1, 952,
	88, 6,
	90, 6,
	92, 6,
	-2, 184,
	-1, 966,
	86, 8,
	90, 8,
	92, 8,
	-2, 184,
	-1, 977,
	88, 8,
	90, 8,
	92, 8,
	-2, 184,
}

const yyPrivate = 57344

const yyLast = 3631

var yyAct = [...]int{

	18, 945, 935, 909, 822, 302, 737, 881, 934, 744,
	800, 456, 612, 882, 494, 837, 120, 802, 743, 117,
	29, 115, 121, 347, 444, 595, 566, 231, 796, 716,
	292, 958, 590, 508, 50, 366, 511, 801, 357, 154,
	155, 736, 158, 159, 160, 162, 163, 165, 227, 175,
	403, 23, 905, 402, 22, 510, 466, 443, 541, 556,
	1, 300, 558, 230, 596, 169, 173, 297, 242, 574,
	474, 473, 75, 343, 346, 236, 82, 187, 188, 432,
	194, 404, 180, 360, 348, 198, 199, 127, 73, 184,
	825, 281, 133, 186, 491, 170, 24, 667, 185, 776,
	204, 205, 206, 184, 208, 778, 411, 215, 779, 218,
	219, 220, 221, 222, 223, 224, 648, 169, 29, 122,
	121, 136, 185, 398, 3, 631, 478, 184, 479, 480,
	475, 472, 605, 247, 476, 421, 229, 5, 233, 607,
	184, 604, 608, 99, 589, 570, 561, 226, 110, 23,
	109, 108, 22, 265, 266, 111, 112, 110, 203, 109,
	108, 172, 282, 110, 111, 112, 168, 168, 273, 275,
	111, 112, 899, 478, 419, 479, 480, 475, 472, 282,
	282, 476, 212, 207, 345, 286, 293, 251, 86, 461,
	301, 898, 889, 878, 877, 282, 876, 875, 237, 237,
	874, 241, 171, 322, 852, 851, 250, 850, 848, 846,
	326, 845, 328, 172, 293, 836, 128, 835, 124, 97,
	742, 125, 3, 123, 698, 697, 285, 172, 67, 293,
	477, 696, 695, 338, 290, 694, 691, 669, 90, 213,
	128, 67, 666, 647, 170, 29, 630, 628, 301, 627,
	626, 620, 619, 373, 171, 603, 601, 588, 546, 539,
	538, 379, 381, 384, 386, 537, 526, 122, 171, 313,
	314, 293, 293, 293, 581, 394, 23, 418, 293, 22,
	324, 416, 332, 90, 97, 331, 278, 327, 414, 376,
	367, 435, 293, 329, 330, 279, 323, 90, 849, 847,
	29, 391, 392, 393, 213, 808, 351, 239, 395, 396,
	172, 433, 293, 293, 807, 364, 806, 462, 359, 291,
	342, 69, 293, 805, 311, 312, 441, 804, 772, 362,
	363, 507, 408, 767, 447, 321, 764, 762, 451, 761,
	417, 455, 459, 755, 372, 754, 543, 460, 524, 3,
	485, 171, 484, 130, 427, 29, 67, 426, 425, 489,
	428, 429, 424, 423, 91, 92, 93, 422, 378, 413,
	439, 377, 228, 202, 430, 201, 483, 130, 130, 468,
	191, 190, 189, 196, 263, 471, 23, 498, 571, 22,
	505, 781, 431, 261, 517, 449, 98, 436, 437, 252,
	438, 518, 121, 168, 500, 502, 319, 914, 765, 91,
	92, 93, 763, 354, 646, 415, 375, 365, 519, 237,
	301, 470, 293, 91, 92, 93, 293, 293, 293, 644,
	525, 486, 352, 497, 634, 760, 814, 515, 90, 172,
	702, 547, 829, 548, 741, 740, 501, 552, 490, 172,
	492, 493, 674, 555, 192, 557, 634, 812, 90, 3,
	703, 193, 69, 172, 90, 29, 759, 320, 758, 700,
	529, 172, 29, 172, 534, 535, 536, 240, 757, 756,
	463, 699, 239, 90, 693, 582, 583, 527, 239, 701,
	171, 156, 262, 60, 803, 86, 23, 567, 545, 22,
	374, 260, 550, 23, 496, 551, 22, 90, 965, 953,
	542, 938, 504, 925, 506, 924, 916, 900, 894, 888,
	565, 135, 135, 90, 138, 584, 140, 544, 598, 482,
	172, 293, 293, 293, 293, 569, 567, 29, 542, 885,
	29, 29, 831, 828, 632, 576, 610, 578, 577, 614,
	615, 827, 579, 791, 639, 530, 531, 532, 533, 174,
	780, 753, 459, 752, 91, 92, 93, 460, 747, 3,
	688, 171, 651, 645, 254, 90, 3, 295, 139, 621,
	622, 623, 625, 640, 91, 92, 93, 660, 293, 90,
	91, 92, 93, 687, 624, 90, 652, 653, 668, 637,
	549, 672, 86, 90, 663, 468, 141, 680, 649, 91,
	92, 93, 351, 239, 686, 516, 450, 629, 661, 448,
	641, 172, 643, 936, 662, 465, 253, 650, 664, 665,
	90, 29, 289, 91, 92, 93, 29, 29, 893, 892,
	683, 676, 682, 709, 617, 689, 690, 616, 657, 91,
	92, 93, 937, 884, 255, 256, 936, 883, 29, 724,
	677, 678, 618, 521, 746, 520, 922, 640, 745, 446,
	284, 883, 855, 445, 745, 715, 685, 445, 719, 720,
	721, 968, 337, 567, 335, 919, 910, 937, 834, 23,
	704, 823, 22, 728, 29, 642, 613, 333, 708, 727,
	232, 91, 92, 93, 942, 29, 766, 941, 542, 906,
	798, 797, 751, 884, 748, 91, 92, 93, 771, 354,
	750, 91, 92, 93, 609, 746, 446, 730, 972, 91,
	92, 93, 964, 768, 931, 782, 121, 929, 352, 784,
	787, 915, 869, 830, 172, 135, 775, 794, 707, 773,
	555, 636, 783, 957, 946, 904, 91, 92, 93, 172,
	29, 29, 3, 792, 795, 29, 946, 554, 963, 29,
	172, 950, 770, 811, 793, 818, 409, 107, 975, 810,
	293, 960, 810, 816, 949, 714, 948, 817, 786, 29,
	542, 961, 962, 788, 789, 713, 633, 67, 732, 809,
	726, 29, 813, 927, 560, 248, 94, 196, 316, 833,
	928, 729, 315, 930, 959, 840, 841, 842, 843, 540,
	23, 826, 412, 22, 856, 283, 810, 970, 819, 245,
	947, 864, 210, 361, 820, 871, 209, 211, 575, 944,
	293, 29, 947, 722, 29, 656, 844, 67, 655, 29,
	654, 172, 29, 318, 317, 340, 857, 573, 879, 572,
	195, 870, 890, 121, 732, 732, 863, 810, 217, 216,
	873, 513, 95, 459, 853, 29, 454, 872, 460, 891,
	895, 409, 868, 839, 897, 903, 587, 880, 555, 341,
	901, 586, 799, 3, 706, 478, 864, 479, 480, 864,
	864, 563, 564, 29, 488, 732, 865, 29, 886, 29,
	918, 923, 29, 29, 234, 864, 29, 244, 245, 246,
	933, 907, 838, 600, 911, 912, 150, 151, 29, 864,
	599, 863, 606, 597, 863, 863, 902, 29, 956, 132,
	920, 555, 29, 864, 954, 732, 951, 864, 859, 131,
	863, 711, 712, 732, 939, 61, 29, 183, 790, 692,
	29, 971, 967, 681, 863, 675, 673, 367, 955, 974,
	932, 865, 29, 864, 865, 865, 976, 602, 863, 732,
	68, 420, 863, 387, 864, 235, 29, 142, 144, 371,
	865, 148, 149, 152, 153, 358, 344, 29, 973, 389,
	243, 368, 369, 356, 865, 269, 87, 732, 863, 137,
	370, 732, 86, 859, 145, 146, 859, 859, 865, 863,
	388, 157, 865, 143, 87, 161, 179, 164, 182, 166,
	167, 478, 859, 479, 480, 475, 472, 717, 718, 476,
	62, 732, 591, 592, 593, 594, 859, 134, 865, 921,
	105, 114, 54, 104, 103, 106, 102, 854, 684, 865,
	859, 334, 8, 467, 859, 7, 6, 336, 105, 57,
	200, 104, 103, 106, 102, 298, 732, 129, 478, 299,
	479, 480, 475, 472, 774, 350, 476, 349, 969, 943,
	859, 926, 913, 81, 56, 55, 59, 52, 513, 679,
	58, 859, 513, 53, 710, 238, 238, 562, 458, 457,
	51, 181, 249, 238, 453, 339, 585, 487, 126, 17,
	257, 258, 259, 16, 100, 99, 63, 147, 264, 14,
	110, 101, 109, 108, 512, 509, 197, 111, 112, 13,
	12, 9, 100, 99, 15, 11, 10, 860, 110, 101,
	109, 108, 733, 858, 731, 111, 112, 399, 214, 397,
	4, 176, 2, 287, 0, 288, 0, 294, 0, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 114, 113, 104, 103,
	106, 102, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 105, 114, 113, 104, 103, 106, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 355, 0, 0, 355, 129, 0, 0, 304, 0,
	0, 0, 785, 105, 114, 113, 104, 103, 106, 102,
	0, 380, 382, 383, 385, 214, 214, 0, 0, 0,
	390, 0, 0, 0, 977, 0, 0, 0, 0, 100,
	99, 0, 407, 214, 410, 110, 101, 109, 108, 214,
	214, 276, 111, 112, 277, 100, 99, 0, 0, 0,
	0, 110, 101, 109, 108, 0, 0, 0, 111, 112,
	270, 0, 0, 353, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 99, 0,
	0, 0, 0, 110, 101, 109, 108, 0, 0, 0,
	111, 112, 304, 0, 464, 469, 238, 0, 0, 0,
	481, 0, 0, 355, 0, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 0, 495, 0, 0, 499,
	469, 469, 503, 0, 0, 0, 495, 0, 0, 514,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 434,
	434, 434, 0, 0, 90, 70, 71, 72, 0, 94,
	74, 86, 0, 87, 88, 0, 0, 0, 0, 0,
	0, 0, 522, 523, 0, 0, 495, 0, 69, 0,
	304, 528, 0, 0, 0, 353, 0, 0, 0, 353,
	0, 0, 0, 129, 0, 129, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 0, 0,
	0, 84, 0, 469, 0, 95, 568, 0, 0, 0,
	0, 0, 0, 0, 119, 118, 0, 0, 355, 0,
	0, 0, 0, 580, 89, 0, 0, 0, 90, 70,
	71, 72, 0, 94, 74, 86, 0, 87, 88, 499,
	0, 0, 469, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 0, 0, 0,
	91, 92, 93, 97, 0, 306, 78, 305, 307, 308,
	309, 310, 0, 0, 214, 0, 0, 0, 303, 0,
	76, 77, 85, 64, 296, 0, 0, 0, 0, 0,
	353, 83, 0, 0, 0, 84, 0, 0, 0, 95,
	0, 0, 304, 0, 0, 0, 0, 0, 119, 118,
	0, 469, 0, 355, 355, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 469, 469, 0, 0, 0, 0,
	670, 671, 105, 114, 113, 104, 103, 106, 102, 0,
	0, 0, 0, 214, 91, 92, 93, 97, 0, 306,
	78, 305, 307, 308, 309, 310, 0, 0, 0, 0,
	0, 0, 303, 0, 76, 77, 85, 64, 105, 114,
	113, 104, 103, 106, 102, 353, 353, 0, 0, 469,
	0, 0, 0, 0, 0, 355, 355, 355, 0, 723,
	725, 824, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 100, 99, 0, 0,
	0, 0, 110, 101, 109, 108, 0, 0, 0, 111,
	112, 705, 0, 0, 105, 114, 113, 104, 103, 106,
	102, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 100, 99, 0, 0, 0, 0, 110, 101,
	109, 108, 0, 355, 0, 111, 112, 353, 353, 353,
	90, 70, 71, 72, 0, 94, 74, 86, 0, 87,
	88, 19, 0, 0, 0, 31, 32, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 25, 38, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 99,
	0, 0, 0, 495, 110, 101, 109, 108, 0, 0,
	0, 111, 112, 659, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 83, 0, 353, 0, 84, 0, 0,
	0, 95, 0, 67, 0, 0, 0, 0, 0, 0,
	862, 861, 0, 738, 0, 0, 0, 0, 0, 28,
	89, 0, 35, 33, 34, 30, 866, 867, 0, 0,
	0, 0, 0, 36, 37, 405, 406, 0, 41, 42,
	43, 44, 45, 46, 47, 48, 39, 49, 0, 0,
	0, 739, 0, 0, 27, 40, 91, 92, 93, 97,
	0, 80, 78, 79, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 76, 77, 85, 64,
	90, 70, 71, 72, 0, 94, 74, 86, 0, 87,
	88, 19, 0, 0, 0, 31, 32, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 25, 38, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 84, 0, 0,
	0, 95, 0, 67, 0, 0, 0, 0, 0, 0,
	401, 400, 0, 65, 0, 0, 0, 0, 0, 28,
	89, 0, 35, 33, 34, 30, 0, 0, 0, 0,
	0, 0, 0, 36, 37, 405, 406, 66, 41, 42,
	43, 44, 45, 46, 47, 48, 39, 49, 0, 0,
	0, 0, 0, 0, 27, 40, 91, 92, 93, 97,
	0, 80, 78, 79, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 76, 77, 85, 64,
	90, 70, 71, 72, 0, 94, 74, 86, 0, 87,
	88, 19, 0, 0, 0, 31, 32, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 25, 38, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 84, 0, 0,
	0, 95, 0, 67, 0, 0, 0, 0, 0, 0,
	735, 734, 0, 738, 0, 0, 0, 0, 0, 28,
	89, 0, 35, 33, 34, 30, 0, 0, 0, 0,
	0, 0, 0, 36, 37, 0, 0, 0, 41, 42,
	43, 44, 45, 46, 47, 48, 39, 49, 0, 0,
	0, 739, 0, 0, 27, 40, 91, 92, 93, 97,
	0, 80, 78, 79, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 76, 77, 85, 64,
	90, 70, 71, 72, 0, 94, 74, 86, 0, 87,
	88, 19, 0, 0, 0, 31, 32, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 25, 38, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 84, 0, 0,
	0, 95, 0, 67, 0, 0, 0, 0, 0, 0,
	21, 20, 0, 65, 0, 0, 0, 0, 0, 28,
	89, 0, 35, 33, 34, 30, 0, 0, 0, 0,
	0, 0, 0, 36, 37, 0, 0, 66, 41, 42,
	43, 44, 45, 46, 47, 48, 39, 49, 0, 0,
	0, 0, 0, 0, 27, 40, 91, 92, 93, 97,
	0, 80, 78, 79, 96, 90, 70, 71, 72, 0,
	94, 74, 86, 0, 87, 88, 76, 77, 85, 64,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 69,
	0, 90, 70, 71, 72, 0, 94, 74, 86, 0,
	87, 88, 105, 114, 113, 104, 103, 106, 102, 0,
	0, 560, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 83, 0,
	0, 0, 84, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 118, 0, 0, 0,
	0, 0, 0, 0, 83, 89, 0, 0, 84, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 118, 0, 0, 0, 100, 99, 0, 0,
	178, 89, 110, 101, 109, 108, 0, 0, 0, 111,
	112, 91, 92, 93, 97, 0, 306, 78, 305, 307,
	308, 309, 310, 105, 114, 113, 104, 103, 106, 102,
	0, 76, 77, 85, 64, 177, 0, 91, 92, 93,
	97, 0, 80, 78, 79, 96, 90, 70, 71, 72,
	0, 94, 74, 86, 0, 87, 88, 76, 77, 85,
	64, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 90, 70, 71, 72, 0, 94, 74, 86, 0,
	87, 88, 105, 114, 113, 104, 103, 106, 102, 0,
	0, 0, 0, 0, 0, 69, 0, 100, 99, 0,
	0, 0, 0, 110, 101, 109, 108, 0, 0, 83,
	111, 112, 658, 84, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 118, 0, 0,
	0, 0, 0, 0, 83, 0, 89, 0, 84, 0,
	0, 0, 95, 248, 0, 0, 0, 0, 0, 0,
	0, 119, 118, 0, 0, 0, 100, 99, 0, 0,
	0, 89, 110, 101, 109, 108, 0, 0, 0, 111,
	112, 440, 91, 92, 93, 97, 0, 80, 78, 79,
	96, 0, 0, 105, 114, 113, 104, 103, 106, 102,
	303, 0, 76, 77, 85, 64, 0, 91, 92, 93,
	97, 0, 80, 78, 79, 96, 90, 70, 71, 72,
	0, 94, 74, 86, 0, 87, 88, 76, 77, 85,
	64, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 90, 70, 71, 72, 0, 94, 74, 86, 0,
	87, 88, 105, 114, 113, 104, 103, 106, 102, 0,
	0, 0, 0, 0, 0, 69, 0, 100, 99, 0,
	0, 0, 0, 110, 101, 109, 108, 0, 0, 83,
	111, 112, 277, 84, 0, 0, 0, 95, 0, 67,
	0, 0, 0, 0, 0, 0, 119, 118, 0, 0,
	0, 0, 0, 0, 83, 0, 89, 0, 84, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 118, 0, 0, 0, 100, 99, 0, 0,
	0, 89, 110, 101, 109, 108, 0, 0, 815, 111,
	112, 0, 91, 92, 93, 97, 0, 80, 78, 79,
	96, 0, 0, 0, 105, 114, 113, 104, 103, 106,
	102, 0, 76, 77, 85, 64, 0, 91, 92, 93,
	97, 0, 80, 78, 79, 96, 90, 70, 71, 72,
	0, 94, 74, 86, 0, 87, 88, 76, 77, 85,
	64, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 90, 70, 274, 72, 0, 94, 74, 86, 0,
	87, 88, 105, 114, 113, 104, 103, 106, 102, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 100, 99,
	0, 0, 0, 966, 110, 101, 109, 108, 0, 83,
	777, 111, 112, 84, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 118, 0, 0,
	0, 0, 0, 0, 83, 0, 89, 0, 84, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 118, 0, 0, 0, 100, 99, 0, 0,
	0, 89, 110, 101, 109, 108, 0, 0, 0, 111,
	112, 0, 91, 92, 93, 97, 0, 80, 78, 79,
	96, 0, 0, 0, 0, 105, 114, 113, 104, 103,
	106, 102, 76, 77, 85, 116, 0, 91, 92, 93,
	97, 0, 80, 78, 79, 96, 952, 105, 114, 113,
	104, 103, 106, 102, 0, 0, 0, 76, 77, 85,
	64, 0, 0, 0, 0, 0, 0, 0, 940, 105,
	114, 113, 104, 103, 106, 102, 0, 0, 0, 0,
	105, 114, 113, 104, 103, 106, 102, 0, 0, 0,
	917, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	99, 908, 0, 0, 0, 110, 101, 109, 108, 0,
	0, 0, 111, 112, 0, 0, 0, 0, 0, 0,
	0, 100, 99, 0, 0, 0, 0, 110, 101, 109,
	108, 0, 0, 0, 111, 112, 0, 0, 0, 0,
	0, 0, 0, 100, 99, 0, 0, 0, 0, 110,
	101, 109, 108, 0, 100, 99, 111, 112, 0, 0,
	110, 101, 109, 108, 0, 0, 0, 111, 112, 105,
	114, 113, 104, 103, 106, 102, 0, 0, 0, 105,
	114, 113, 104, 103, 106, 102, 0, 0, 0, 0,
	896, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	887, 105, 114, 113, 104, 103, 106, 102, 0, 0,
	0, 105, 114, 113, 104, 103, 106, 102, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 821, 0, 105, 114, 113, 104, 103, 106,
	102, 0, 0, 100, 99, 0, 0, 0, 0, 110,
	101, 109, 108, 100, 99, 769, 111, 112, 0, 110,
	101, 109, 108, 0, 0, 0, 111, 112, 0, 0,
	0, 0, 0, 0, 0, 100, 99, 0, 0, 0,
	0, 110, 101, 109, 108, 100, 99, 0, 111, 112,
	0, 110, 101, 109, 108, 0, 0, 0, 111, 112,
	105, 114, 113, 104, 103, 106, 102, 0, 100, 99,
	0, 0, 0, 0, 110, 101, 109, 108, 0, 0,
	333, 111, 112, 105, 114, 113, 104, 103, 106, 102,
	0, 0, 0, 105, 114, 113, 104, 103, 106, 102,
	0, 0, 0, 0, 749, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 638, 105, 114, 113, 104, 103,
	106, 102, 0, 0, 0, 105, 114, 113, 104, 103,
	106, 102, 0, 0, 100, 99, 0, 0, 0, 0,
	110, 101, 109, 108, 0, 0, 611, 111, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 99, 0,
	0, 0, 0, 110, 101, 109, 108, 100, 99, 0,
	111, 112, 0, 110, 101, 109, 108, 0, 0, 0,
	111, 112, 0, 0, 0, 0, 0, 0, 0, 100,
	99, 0, 0, 0, 0, 110, 101, 109, 108, 100,
	99, 635, 111, 112, 0, 110, 101, 109, 108, 0,
	0, 0, 111, 112, 105, 114, 113, 104, 103, 106,
	102, 268, 0, 0, 105, 114, 113, 104, 103, 106,
	102, 0, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 105, 114, 113, 104,
	103, 106, 102, 272, 0, 0, 0, 0, 0, 0,
	0, 105, 114, 113, 104, 103, 106, 102, 0, 280,
	0, 0, 105, 114, 113, 104, 103, 106, 102, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 100, 99,
	0, 0, 0, 0, 110, 101, 109, 108, 100, 99,
	0, 111, 112, 0, 110, 101, 109, 108, 0, 0,
	0, 111, 112, 105, 114, 113, 104, 103, 106, 102,
	100, 99, 0, 0, 0, 0, 110, 101, 109, 108,
	0, 0, 0, 111, 112, 100, 99, 0, 0, 0,
	0, 110, 101, 109, 108, 0, 100, 99, 111, 112,
	0, 0, 110, 101, 109, 108, 0, 0, 0, 111,
	112, 105, 114, 113, 104, 103, 106, 102, 0, 0,
	0, 105, 114, 113, 104, 103, 106, 102, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 100, 99, 0,
	0, 0, 0, 110, 101, 109, 108, 0, 0, 0,
	111, 112, 105, 442, 113, 104, 103, 106, 102, 0,
	0, 0, 105, 325, 113, 104, 103, 106, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 99, 0, 0, 0,
	0, 110, 101, 109, 108, 100, 99, 0, 111, 112,
	0, 110, 101, 109, 108, 0, 0, 0, 111, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 99, 0, 0,
	0, 0, 110, 101, 109, 108, 100, 99, 0, 111,
	112, 0, 110, 101, 109, 108, 0, 0, 0, 111,
	112,
}
var yyPact = [...]int{

	2156, -1000, 249, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3433, -1000,
	2772, 2637, -1000, -1000, 200, 915, 905, 1001, 591, -1000,
	484, 1011, 993, 519, 519, 891, -1000, -1000, 2637, 2637,
	479, 2637, 2637, 2637, 2637, 2637, 2637, -1000, 519, 519,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	259, -1000, -1000, -1000, 2612, 2317, 1020, 928, -31, -65,
	-1000, -1000, -1000, -1000, -1000, -1000, 2637, 2637, 229, 228,
	227, -1000, 312, 225, 2637, 2637, -1000, -1000, -1000, 519,
	-1000, -1000, -1000, -1000, -1000, -1000, 222, 220, 2156, 2637,
	2637, 2637, 736, 2637, 764, 86, 2637, 803, 2637, 2637,
	2637, 2637, 2637, 2637, 2637, 3423, 2612, -1000, 219, 2637,
	612, 3433, 871, 961, 454, 460, 983, 855, 729, -1000,
	720, 519, 454, -1000, 30, 255, -1000, 532, -1000, 519,
	519, 519, 352, 343, -1000, -1000, -1000, 519, -1000, -1000,
	-1000, -1000, 2637, 2637, 3375, 3334, -1000, 988, 3433, 3433,
	1133, -31, 3433, 3323, -31, 3433, -1000, 2797, 2637, 1117,
	132, 141, 224, 3308, 23, 757, 1001, -1000, -1000, -1000,
	-1000, 28, 519, -1000, 626, 2477, 571, -1000, -1000, 1370,
	729, 729, 86, 86, 740, 788, -1000, -1000, 1000, -1000,
	332, 729, 2637, -1000, 9, 0, 0, 797, 3474, 2637,
	86, 2637, -1000, 2612, -1000, 0, 86, 86, 15, 15,
	-1000, -1000, -1000, 982, 1000, 2156, 132, 128, 2637, 609,
	594, 592, 2637, 806, 843, 454, 977, 27, -1000, -1000,
	585, 986, 973, 585, 768, 768, 768, 1464, -1000, 264,
	970, 1001, 2637, 405, 263, 218, 215, -1000, -1000, -1000,
	2637, 2637, 2637, 2637, 959, 3433, 3433, 1008, 987, 519,
	2637, 2637, 2637, 3433, 2637, 3433, -1000, 2637, -1000, -1000,
	1856, 519, 1001, 519, 38, 754, 928, 262, -1000, -1000,
	127, 2637, -1000, 2525, -1000, -1000, -1000, 123, 17, 955,
	-1000, 3433, -1000, -1000, -18, 214, 210, 209, 205, 204,
	201, 2637, 2452, -1000, -1000, 86, 158, 158, 158, 736,
	-1000, 2637, 2424, -1000, -1000, 2637, 3464, -1000, 0, -1000,
	-1000, 583, -1000, 2637, 527, 2156, 524, 2637, 3286, 826,
	2637, 2291, 164, 599, 434, 454, 973, 73, -1000, 503,
	-1000, -1000, 279, -1000, 199, 197, 585, 860, 2637, -1000,
	224, -1000, 224, 224, -1000, 519, 720, -1000, 234, 293,
	434, 519, -1000, 3433, 720, 519, 720, 177, 519, 3433,
	-31, 3433, -31, -31, 3433, -31, 3433, 1001, -1000, -1000,
	-1000, -1000, -1000, -1000, 3433, -1000, 523, 247, -1000, -1000,
	2772, 2637, -1000, -1000, -1000, -1000, -1000, 574, -1000, 5,
	572, 519, 519, -1000, 195, 519, -1000, 112, -1000, 1464,
	519, 2477, 729, 729, 729, 2637, 2637, 2637, 111, 106,
	105, 750, -1000, 151, -1000, 193, -1000, -1000, 430, 104,
	2637, 1000, 2637, 508, 587, 2156, 2637, 3276, 683, -1000,
	-1000, 3433, 2156, -1000, 2637, 2264, -1000, -11, 854, 3433,
	-1000, 86, 434, -1000, -1000, 519, 983, -12, 239, -69,
	-1000, -1000, 807, 805, 784, 784, 842, 585, -1000, -1000,
	-1000, -1000, 519, 120, 2637, 2637, 973, 846, 840, 3433,
	766, -1000, -1000, 766, 103, -13, -1000, 1007, 519, 894,
	-1000, 434, 889, 882, -1000, 102, -1000, 951, 101, -16,
	-1000, -1000, -25, 893, -15, -1000, 637, 1856, 3187, 608,
	1856, 1856, 556, 553, 720, 98, -1000, -1000, -1000, 97,
	2637, 2637, 2452, 2637, 96, 95, 93, -1000, -1000, -1000,
	86, 92, -32, 2637, -1000, 718, 307, 3177, 1000, 666,
	507, -1000, 3155, 2637, -1000, 3122, 607, 3433, -1000, 727,
	299, 2291, 283, -1000, -1000, -1000, 89, -41, -1000, 973,
	434, 2637, 585, 585, 798, -1000, 796, 793, 784, -1000,
	-1000, -1000, 2365, 1606, -1000, -1000, 2637, 2637, 941, 519,
	-1000, -1000, -1000, 434, 434, 88, -60, 2637, 83, 519,
	2637, 940, 328, 939, 1001, 1001, 2637, 937, 1001, -1000,
	-1000, 1856, 586, 2637, 501, 478, 1856, 1856, 82, 933,
	378, 81, 78, 77, 71, 70, 375, 363, 334, -1000,
	-1000, 86, 1514, -1000, 850, -1000, -1000, 663, 2156, 3122,
	-1000, -1000, 2637, -1000, -1000, -1000, 916, 770, 434, -1000,
	-1000, 3433, 842, 978, 585, 585, 585, 791, 2637, 519,
	3433, -1000, 720, -1000, -1000, -1000, 1007, 519, 3433, -1000,
	-1000, -31, 3433, 720, 2006, 321, -1000, -1000, -1000, 893,
	3433, 320, 66, 578, 476, 1856, 3145, 633, 625, 471,
	469, -1000, 192, 190, 373, 372, 362, 360, 329, 186,
	184, 281, 183, 277, -1000, 2637, 180, -1000, 640, 3056,
	-1000, -1000, -1000, 86, -1000, -1000, -1000, 2637, 175, 978,
	1025, 842, 585, -55, 2686, -49, -1000, -1000, -1000, -1000,
	468, 244, -1000, -1000, 2772, 2637, -1000, -1000, 2637, 2637,
	2006, 2006, 932, 461, 584, 1856, 2637, 680, -1000, 1856,
	-1000, -1000, 624, 623, 720, 389, 174, 170, 163, 161,
	152, 389, 389, 351, 389, 330, 2584, 871, -1000, 2156,
	-1000, 3433, 519, -1000, 2637, 842, -1000, -1000, -1000, 2637,
	-1000, 2006, 3033, 603, 1550, 22, 753, 3433, 459, 451,
	318, 658, 450, -1000, 3023, -1000, 600, -1000, -1000, 63,
	61, -1000, 879, 837, 389, 389, 389, 389, 389, 57,
	871, 55, 146, 54, 145, -1000, 53, 51, 3433, 50,
	-1000, 2006, 582, 2637, 1706, 519, 519, -1000, -1000, 2006,
	-1000, 657, 1856, -1000, 2637, -1000, -1000, -1000, 831, 2637,
	46, 43, 42, 40, 39, -1000, -1000, 389, -1000, 389,
	-1000, -1000, -1000, 567, 447, 2006, 3001, 427, 45, -1000,
	-1000, 2772, 2637, -1000, -1000, -1000, 548, 547, 426, -1000,
	639, 2991, 2291, -1000, -1000, -1000, -1000, -1000, -1000, 37,
	18, 425, 581, 2006, 2637, 671, -1000, 2006, 622, 1706,
	2902, 598, 1706, 1706, -1000, -1000, 1856, 275, -1000, -1000,
	656, 424, -1000, 2891, -1000, 597, -1000, -1000, 1706, 576,
	2637, 423, 421, -1000, 731, -1000, 649, 2006, -1000, 2637,
	566, 419, 1706, 2869, 620, 617, -1000, 760, 706, 704,
	688, -1000, 627, 2847, 417, 533, 1706, 2637, 669, -1000,
	1706, -1000, -1000, 745, 701, -1000, 711, 685, -1000, -1000,
	-1000, -1000, 2006, 647, 416, -1000, 2744, -1000, 593, 748,
	-1000, -1000, -1000, -1000, -1000, 643, 1706, -1000, 2637, -1000,
	697, -1000, -1000, 601, 1165, -1000, -1000, 1706,
}
var yyPgo = [...]int{

	0, 59, 28, 52, 31, 123, 81, 1162, 53, 1161,
	50, 1160, 1159, 1157, 1154, 41, 6, 1153, 1152, 1147,
	1146, 1145, 1144, 1141, 64, 25, 32, 1140, 1139, 36,
	1135, 1134, 55, 33, 1129, 1127, 1126, 1123, 1119, 137,
	94, 87, 1118, 68, 38, 1117, 1116, 15, 1115, 62,
	1114, 96, 1111, 82, 1110, 88, 72, 34, 0, 61,
	76, 58, 11, 1109, 1108, 1107, 1104, 1052, 1103, 79,
	1100, 1097, 1096, 48, 1095, 1094, 1093, 5, 37, 10,
	17, 1092, 1091, 1, 1089, 1088, 73, 84, 75, 1087,
	23, 1085, 29, 1079, 1075, 1069, 16, 27, 1067, 26,
	30, 74, 14, 67, 1066, 1065, 1063, 56, 1062, 24,
	57, 9, 18, 13, 7, 2, 8, 63, 1061, 12,
	1058, 4, 1057, 3, 1049, 980, 493, 49, 19, 1047,
	92, 955, 1040, 133, 80, 71, 69, 70, 83, 1028,
	35, 777,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 7, 7, 8,
	8, 8, 8, 8, 9, 9, 10, 10, 12, 12,
	11, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
	19, 20, 20, 20, 20, 21, 21, 21, 21, 21,
	22, 22, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 24, 24, 25, 25, 26, 26, 26, 26,
	26, 27, 27, 27, 27, 27, 28, 28, 28, 28,
	29, 30, 30, 31, 32, 32, 33, 33, 33, 34,
	34, 34, 34, 34, 35, 35, 35, 35, 35, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 38, 38, 38, 39,
	40, 40, 40, 40, 41, 41, 42, 43, 43, 44,
	44, 45, 45, 46, 46, 47, 47, 48, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	54, 54, 54, 54, 54, 54, 55, 56, 57, 57,
	57, 57, 57, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 59,
	60, 60, 60, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 65, 66, 66, 67, 68, 69, 69,
	69, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 72, 72, 72,
	72, 73, 73, 74, 74, 74, 74, 75, 75, 75,
	75, 75, 76, 76, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 78, 79, 79, 80, 80,
	81, 81, 82, 82, 82, 83, 83, 83, 84, 84,
	85, 85, 86, 86, 87, 87, 87, 89, 89, 89,
	89, 89, 90, 90, 90, 90, 90, 90, 90, 91,
	91, 91, 91, 91, 91, 92, 92, 93, 93, 94,
	94, 94, 95, 96, 96, 97, 97, 98, 98, 99,
	99, 100, 100, 101, 101, 88, 88, 102, 102, 103,
	103, 104, 104, 104, 104, 105, 106, 107, 107, 108,
	108, 109, 109, 110, 110, 111, 111, 112, 112, 113,
	113, 114, 114, 115, 115, 116, 116, 117, 117, 118,
	118, 119, 119, 120, 120, 121, 121, 122, 122, 123,
	123, 124, 124, 125, 125, 125, 125, 126, 127, 127,
	128, 129, 129, 130, 130, 131, 132, 133, 133, 134,
	134, 135, 135, 136, 136, 137, 137, 138, 138, 139,
	139, 140, 140, 141, 141,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	8, 8, 9, 9, 1, 1, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 1, 1, 6, 8, 8, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 2, 2, 1, 2, 4, 4, 4, 4, 2,
	1, 1, 6, 8, 5, 6, 8, 5, 7, 7,
	7, 7, 1, 3, 1, 3, 0, 1, 1, 2,
	2, 5, 2, 2, 3, 5, 6, 8, 5, 3,
	1, 1, 3, 3, 1, 3, 1, 1, 3, 9,
	10, 10, 12, 3, 0, 1, 1, 1, 1, 2,
	2, 5, 6, 3, 4, 4, 4, 4, 4, 4,
	2, 2, 2, 2, 4, 4, 2, 2, 2, 4,
	2, 4, 2, 2, 1, 2, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 6, 1, 3, 1, 3, 2, 4, 1,
	1, 0, 1, 1, 1, 1, 3, 3, 3, 1,
	6, 3, 3, 3, 3, 4, 4, 5, 6, 6,
	3, 4, 4, 3, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 2, 2, 3, 3, 2,
	2, 0, 1, 4, 3, 4, 4, 5, 5, 5,
	5, 1, 5, 10, 8, 9, 9, 9, 9, 9,
	8, 8, 10, 8, 10, 2, 1, 5, 0, 3,
	2, 5, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 1, 1, 1, 1, 2, 3, 1, 6, 6,
	6, 8, 1, 1, 2, 3, 1, 1, 3, 4,
	5, 6, 7, 5, 6, 2, 4, 1, 1, 1,
	3, 1, 5, 0, 1, 4, 5, 0, 2, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 6, 9, 5, 8, 7, 3, 1, 3, 5,
	6, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 1, 1, 1, 1, 1, 1, 3,
	3, 1, 3, 1, 3, 1, 1, 0, 1, 0,
	1, 0, 1, 0, 1, 1, 1, 0, 1, 0,
	1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -104, -105, -108, -23,
	-20, -21, -27, -28, -34, -22, -37, -38, -58, 15,
	85, 84, -8, -10, -51, 30, 33, 128, 93, -128,
	99, 19, 20, 97, 98, 96, 107, 108, 31, 120,
	129, 112, 113, 114, 115, 116, 117, 118, 119, 121,
	-57, -54, -71, -68, -67, -74, -75, -95, -70, -72,
	-126, -131, -132, -36, 153, 87, 111, 77, -125, 28,
	5, 6, 7, -55, 10, -56, 150, 151, 136, 137,
	135, -76, -60, 67, 71, 152, 11, 13, 14, 94,
	4, 130, 131, 132, 9, 75, 138, 133, 147, 143,
	142, 149, 74, 72, 71, 68, 73, -141, 151, 150,
	148, 155, 156, 70, 69, -58, 153, -128, 85, 84,
	-96, -58, -40, 23, 18, 21, -42, -41, 16, -67,
	153, 34, 34, -130, -129, -126, -130, -125, -126, 94,
	42, 122, -131, 12, -131, -125, -125, -35, 100, 101,
	35, 36, 102, 103, -58, -58, 12, -125, -58, -58,
	-58, -125, -58, -58, -125, -58, -125, -125, 144, -58,
	-100, -39, -51, -58, -126, -127, -9, 128, 93, 6,
	-53, -52, -139, 29, 158, 153, 158, -58, -58, 153,
	153, 153, 142, 149, -134, -141, 71, -67, -58, -58,
	-125, 153, 153, -1, -58, -58, -58, -134, -58, 72,
	68, 73, -60, 153, -67, -58, 66, 65, -58, -58,
	-58, -58, -58, -58, -58, 89, -100, -73, 153, -96,
	-117, -97, 88, -47, 43, 24, -88, -86, -125, 28,
	17, -88, -43, 17, 62, 63, 64, -133, 76, -125,
	-86, 157, 144, 94, 42, 122, 123, -125, -125, -125,
	149, 41, 149, 41, -125, -58, -58, 41, 17, 17,
	157, 60, 60, -58, 6, -58, 154, 157, 154, 154,
	91, 68, 157, 68, -126, -127, 157, -125, -125, 6,
	-73, -133, -100, -58, -125, 6, 154, -103, -94, -93,
	-59, -58, -77, 148, -125, 137, 135, 138, 139, 140,
	141, -133, -133, -60, -60, 72, 68, 66, 65, 74,
	135, -133, -58, -55, -56, 69, -58, -60, -58, -60,
	-60, -1, 154, 88, -118, 90, -98, 90, -58, -48,
	49, 46, -87, -86, 19, 157, -101, -90, -87, -89,
	-91, 27, 153, -67, 134, -125, 17, -44, 22, -101,
	-138, 65, -138, -138, -103, 153, -140, 26, 31, 32,
	40, 19, -130, -58, 95, 153, 26, 153, 153, -58,
	-125, -58, -125, -125, -58, -125, -58, 24, 12, 12,
	-125, -100, -100, -100, -58, -100, -2, -12, -5, -13,
	85, 84, -8, -10, -6, 109, 110, -125, -127, -126,
	-125, 68, 68, -53, 26, 153, 154, -73, 154, 157,
	26, 153, 153, 153, 153, 153, 153, 153, -73, -73,
	-59, -60, -69, 153, -67, 133, -69, -69, -134, -73,
	157, -58, 69, -110, -109, 90, 86, -58, 92, -1,
	92, -58, 89, -50, 50, -58, -62, -63, -64, -58,
	-77, 25, 153, -39, -125, 26, -107, -106, -57, -125,
	-88, -44, 58, -135, -137, 57, 61, 157, 53, 55,
	56, -125, 26, -90, 153, 153, -101, -45, 44, -58,
	-41, -40, -41, -41, -102, -125, -39, -24, 153, -125,
	-57, 153, -57, -125, -39, -102, -39, 154, -33, -30,
	-32, -29, -31, -126, -125, -127, 92, 147, -58, -96,
	91, 91, -125, -125, 153, -102, 154, -103, -125, -73,
	-133, -133, -133, -133, -73, -73, -73, 154, 154, 154,
	69, -61, -60, 153, 97, 68, 154, -58, -58, 92,
	-110, -1, -58, 89, 84, -58, -1, -58, -49, 51,
	77, 157, -65, 47, 48, -61, -99, -57, -125, -43,
	157, 149, 52, 52, -136, 54, -136, -135, -137, -101,
	-125, 154, -58, -58, -44, -46, 45, 46, 154, 157,
	-26, 35, 36, 37, 38, -25, -24, 39, -99, 41,
	41, 154, 26, 154, 157, 157, 39, 154, 157, 87,
	-2, 89, -119, 88, -2, -2, 91, 91, -39, 154,
	154, -73, -73, -73, -59, -73, 154, 154, 154, -60,
	154, 157, -58, 78, 127, 154, 85, 92, 89, -58,
	-97, -117, 88, -49, 130, -62, 131, 154, 157, -44,
	-107, -58, -90, -90, 52, 52, 52, -136, 157, 157,
	-58, -100, -140, -102, -57, -57, 154, 157, -58, 154,
	-125, -125, -58, 26, 124, 26, -29, -32, -32, -126,
	-58, 26, -33, -2, -120, 90, -58, 92, 92, -2,
	-2, 154, 26, 106, 154, 154, 154, 154, 154, 106,
	106, 126, 106, 126, -61, 157, 44, 85, -1, -58,
	-66, 35, 36, 25, -39, -99, -92, 59, 60, -90,
	-90, -90, 52, -125, -58, -125, -39, -26, -25, -39,
	-3, -14, -5, -18, 85, 84, -15, -16, 87, 125,
	124, 124, 154, -112, -111, 90, 86, 92, -2, 89,
	87, 87, 92, 92, 153, 153, 106, 106, 106, 106,
	106, 153, 153, 131, 153, 131, -58, 153, -109, 89,
	-61, -58, 153, -92, 59, -90, 154, 154, 154, 157,
	92, 147, -58, -96, -58, -126, -127, -58, -3, -3,
	26, 92, -112, -2, -58, 84, -2, 87, 87, -39,
	-79, -78, -80, 105, 153, 153, 153, 153, 153, -78,
	-80, -79, 106, -78, 106, 154, -47, -102, -58, -73,
	-3, 89, -121, 88, 91, 68, 68, 92, 92, 124,
	85, 92, 89, -119, 88, 154, 154, -47, 43, 46,
	-79, -79, -79, -79, -78, 154, 154, 153, 154, 153,
	154, 154, 154, -3, -122, 90, -58, -4, -17, -5,
	-19, 85, 84, -15, -16, -6, -125, -125, -3, 85,
	-2, -58, 46, -100, 154, 154, 154, 154, 154, -79,
	-78, -114, -113, 90, 86, 92, -3, 89, 92, 147,
	-58, -96, 91, 91, 92, -111, 89, -62, 154, 154,
	92, -114, -3, -58, 84, -3, 87, -4, 89, -123,
	88, -4, -4, -81, 132, 85, 92, 89, -121, 88,
	-4, -124, 90, -58, 92, 92, -82, 72, 79, 6,
	82, 85, -3, -58, -116, -115, 90, 86, 92, -4,
	89, 87, 87, -84, 79, -83, 6, 82, 80, 80,
	83, -113, 89, 92, -116, -4, -58, 84, -4, 69,
	80, 80, 81, 83, 85, 92, 89, -123, 88, -85,
	79, -83, 85, -4, -58, 81, -115, 89,
}
var yyDef = [...]int{

	-2, -2, 2, 27, 28, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	0, 343, 43, 44, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 124, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 215, 216, 217, 184, 0, 36, 429, 198, 0,
	190, 191, 192, 193, 194, 195, 0, 0, 0, 0,
	0, 281, 419, 0, 0, 0, 407, 415, 416, 0,
	403, 404, 405, 406, 196, 197, 0, 0, -2, 0,
	433, 434, 419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 214, 0, 343,
	0, 344, -2, 0, 0, 0, 167, 0, 417, 165,
	184, 0, 0, 71, 413, 411, 72, 0, 74, 0,
	0, 0, 0, 0, 79, 102, 103, 0, 125, 126,
	127, 128, 0, 0, 0, 0, 140, 150, 141, 142,
	143, -2, 147, 148, -2, 153, 155, 156, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 34, 35, 37,
	185, 188, 0, 430, 0, 271, 0, 265, 266, 0,
	417, 417, 433, 434, 0, 0, 420, 259, 269, 270,
	0, 417, 0, 3, 237, -2, -2, 0, 0, 0,
	0, 0, 250, 184, 221, -2, 0, 0, 260, 261,
	262, 263, 264, 267, 268, -2, 0, 0, 271, 0,
	389, 347, 0, 177, 0, 0, 0, 355, 312, 313,
	0, 0, 169, 0, 427, 427, 427, 0, 418, 431,
	0, 0, 0, 0, 0, 0, 0, 104, 109, 123,
	0, 0, 0, 0, 0, 129, 130, 0, 0, 0,
	0, 0, 0, 157, 191, 410, 218, 0, 220, 236,
	-2, 0, 0, 0, 0, 0, 429, 0, 199, 201,
	0, 271, 272, 351, 200, 202, 274, 0, 359, 339,
	341, 337, 338, 219, 198, 0, 0, 0, 0, 0,
	0, 271, 271, 242, 244, 0, 0, 0, 0, 419,
	133, 271, 0, 245, 246, 0, 0, 251, -2, 255,
	257, 373, 276, 0, 0, -2, 0, 0, 0, 182,
	0, 0, 184, 314, 0, 0, 169, -2, 322, 323,
	326, 327, 184, 317, 0, 312, 0, 171, 0, 168,
	0, 428, 0, 0, 166, 0, 184, 432, 0, 0,
	0, 0, 414, 412, 184, 0, 184, 0, 0, 75,
	-2, 77, -2, -2, 135, -2, 137, 0, 138, 139,
	151, 144, 145, 149, 158, 352, 0, 0, 38, 39,
	0, 343, 48, 49, 50, 25, 26, 0, 409, 408,
	0, 0, 0, 189, 0, 0, 273, 0, 275, 0,
	0, 271, 417, 417, 417, 271, 271, 271, 0, 0,
	0, 0, 252, 184, 239, 0, 256, 258, 0, 0,
	0, 247, 0, 0, 373, -2, 0, 0, 0, 390,
	342, 348, -2, 159, 0, 180, 176, 225, 231, 229,
	230, 0, 0, 363, 315, 0, 167, 367, 0, 198,
	356, 369, 0, 0, 423, 423, 421, 0, 422, 425,
	426, 324, 0, 421, 0, 0, 169, 173, 0, 170,
	161, 164, 162, 163, 0, 357, 84, 96, 0, 92,
	87, 0, 0, 0, 101, 0, 108, 0, 0, 116,
	117, 111, 114, 110, 0, 105, 0, -2, 0, 0,
	-2, -2, 0, 0, 184, 0, 277, 360, 340, 0,
	271, 271, 271, 271, 0, 0, 0, 278, 279, 280,
	0, 0, 223, 0, 131, 0, 282, 0, 248, 0,
	0, 374, 0, 0, 42, 23, 387, 183, 178, 180,
	0, 0, 227, 232, 233, 361, 0, 349, 316, 169,
	0, 0, 0, 0, 0, 424, 0, 0, 423, 354,
	325, 328, 0, 0, 370, 160, 0, 0, -2, 0,
	85, 97, 98, 0, 0, 0, 94, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 29,
	5, -2, 393, 0, 0, 0, -2, -2, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	238, 0, 0, 132, 0, 222, 40, 0, -2, 345,
	346, 388, 0, 179, 181, 226, 0, 184, 0, 365,
	368, 366, 329, 421, 0, 0, 0, 0, 0, 0,
	174, 172, 184, 358, 99, 100, 96, 0, 93, 88,
	89, -2, 91, 184, -2, 0, 112, 118, 115, 0,
	113, 0, 0, 377, 0, -2, 0, 0, 0, 0,
	0, 186, 0, 0, 277, 278, 279, 280, 282, 0,
	0, 0, 0, 0, 224, 0, 0, 41, 371, 0,
	228, 234, 235, 0, 364, 350, 330, 0, 0, 421,
	421, 333, 0, 198, 0, 0, 83, 86, 95, 107,
	0, 0, 51, 52, 0, 343, 63, 64, 0, 56,
	-2, -2, 0, 0, 377, -2, 0, 0, 394, -2,
	30, 31, 0, 0, 184, 298, 0, 0, 0, 0,
	0, 298, 298, 0, 298, 0, 0, 175, 372, -2,
	362, 335, 0, 331, 0, 334, 318, 319, 320, 271,
	119, -2, 0, 0, 0, 213, 0, 57, 0, 0,
	0, 0, 0, 378, 0, 47, 391, 32, 33, 0,
	0, 296, 175, 0, 298, 298, 298, 298, 298, 0,
	175, 0, 0, 0, 0, 240, 0, 0, 332, 0,
	7, -2, 397, 0, -2, 0, 0, 120, 121, -2,
	45, 0, -2, 392, 0, 187, 284, 295, 0, 0,
	0, 0, 0, 0, 0, 290, 291, 298, 293, 298,
	283, 336, 321, 381, 0, -2, 0, 0, 0, 58,
	59, 0, 343, 68, 69, 70, 0, 0, 0, 46,
	375, 0, 0, 299, 285, 286, 287, 288, 289, 0,
	0, 0, 381, -2, 0, 0, 398, -2, 0, -2,
	0, 0, -2, -2, 122, 376, -2, 176, 292, 294,
	0, 0, 382, 0, 62, 395, 53, 9, -2, 401,
	0, 0, 0, 297, 0, 60, 0, -2, 396, 0,
	385, 0, -2, 0, 0, 0, 300, 0, 0, 0,
	0, 61, 379, 0, 0, 385, -2, 0, 0, 402,
	-2, 54, 55, 0, 0, 309, 0, 0, 302, 303,
	304, 380, -2, 0, 0, 386, 0, 67, 399, 0,
	308, 305, 306, 307, 65, 0, -2, 400, 0, 301,
	0, 311, 66, 383, 0, 310, 384, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 152, 3, 3, 3, 156, 3, 3,
	153, 154, 148, 151, 157, 150, 158, 155, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 147,
	3, 149,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:231
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:236
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:247
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:257
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:267
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:377
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:381
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = Exit{}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:391
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:419
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:533
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:569
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:597
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:601
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:605
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:609
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:613
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:639
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:643
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:649
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:653
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:659
		{
			yyVAL.expression = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:663
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:667
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:671
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:675
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:681
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:685
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:689
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 106:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:703
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 107:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:707
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:711
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:715
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:721
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:727
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:731
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:737
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:743
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:747
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:753
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:757
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:761
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 119:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:767
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 120:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:771
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 121:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:775
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 122:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:779
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:783
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:789
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:793
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:797
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:801
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:805
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:809
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:813
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:819
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:823
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:827
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:833
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:849
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:853
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:857
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:861
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:865
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:869
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:873
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:877
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:881
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:885
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:889
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:893
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:897
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:901
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:905
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:909
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:913
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:917
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:923
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:927
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:931
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:937
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:949
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:959
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:977
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:988
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:992
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:998
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = nil
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexpr = nil
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1018
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexpr = nil
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1034
		{
			yyVAL.queryexpr = nil
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = nil
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.queryexpr = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = nil
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = nil
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1082
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1112
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1122
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1182
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1186
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1202
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1206
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1222
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1226
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1238
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1244
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1264
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1268
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1278
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1284
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1288
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1298
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1304
		{
			yyVAL.token = Token{}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1322
		{
			yyVAL.token = yyDollar[1].token
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1328
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1334
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1361
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1383
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1387
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1391
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 248:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 249:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1423
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1427
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1431
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1449
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1453
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1457
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1497
		{
			yyVAL.queryexprs = nil
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1501
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1507
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1511
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1515
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1526
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1530
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1534
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 283:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 285:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 286:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 288:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 289:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 290:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 291:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 292:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 294:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1610
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1614
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1621
		{
			yyVAL.queryexpr = nil
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1625
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1631
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1635
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1641
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1645
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1656
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1661
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1676
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1706
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 318:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 319:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 321:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1758
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1768
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1772
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 332:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 334:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1808
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1818
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1828
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.queryexpr = nil
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1838
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1848
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.queryexpr = nil
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1858
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1898
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1914
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 362:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1932
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 364:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1942
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1964
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1969
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.elseexpr = Else{}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.elseexpr = Else{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2020
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.elseexpr = Else{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2040
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.elseexpr = Else{}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2060
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2076
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2080
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2096
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2100
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2110
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2120
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2126
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2130
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2140
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2144
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2154
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2160
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2164
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2170
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2176
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2180
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2186
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2190
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2196
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.token = Token{}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.token = Token{}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.token = yyDollar[1].token
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.token = Token{}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2232
		{
			yyVAL.token = yyDollar[1].token
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2238
		{
			yyVAL.token = Token{}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2242
		{
			yyVAL.token = yyDollar[1].token
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2248
		{
			yyVAL.token = yyDollar[1].token
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2252
		{
			yyVAL.token = yyDollar[1].token
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2258
		{
			yyVAL.token = Token{}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2268
		{
			yyVAL.token = Token{}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2278
		{
			yyVAL.token = Token{}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2282
		{
			yyVAL.token = yyDollar[1].token
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2288
		{
			yyVAL.token = yyDollar[1].token
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2292
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
