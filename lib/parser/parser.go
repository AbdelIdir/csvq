//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
//line parser.y:5
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const ORDER = 57380
const GROUP = 57381
const HAVING = 57382
const BY = 57383
const ASC = 57384
const DESC = 57385
const LIMIT = 57386
const OFFSET = 57387
const PERCENT = 57388
const JOIN = 57389
const INNER = 57390
const OUTER = 57391
const LEFT = 57392
const RIGHT = 57393
const FULL = 57394
const CROSS = 57395
const ON = 57396
const USING = 57397
const NATURAL = 57398
const UNION = 57399
const INTERSECT = 57400
const EXCEPT = 57401
const ALL = 57402
const ANY = 57403
const EXISTS = 57404
const IN = 57405
const AND = 57406
const OR = 57407
const NOT = 57408
const BETWEEN = 57409
const LIKE = 57410
const IS = 57411
const NULL = 57412
const DISTINCT = 57413
const WITH = 57414
const CASE = 57415
const IF = 57416
const ELSEIF = 57417
const WHILE = 57418
const WHEN = 57419
const THEN = 57420
const ELSE = 57421
const DO = 57422
const END = 57423
const DECLARE = 57424
const CURSOR = 57425
const FOR = 57426
const FETCH = 57427
const OPEN = 57428
const CLOSE = 57429
const DISPOSE = 57430
const NEXT = 57431
const PRIOR = 57432
const ABSOLUTE = 57433
const RELATIVE = 57434
const RANGE = 57435
const SEPARATOR = 57436
const PARTITION = 57437
const OVER = 57438
const COMMIT = 57439
const ROLLBACK = 57440
const CONTINUE = 57441
const BREAK = 57442
const EXIT = 57443
const PRINT = 57444
const PRINTF = 57445
const SOURCE = 57446
const TRIGGER = 57447
const FUNCTION = 57448
const AGGREGATE = 57449
const BEGIN = 57450
const RETURN = 57451
const IGNORE = 57452
const WITHIN = 57453
const VAR = 57454
const TIES = 57455
const NULLS = 57456
const ERROR = 57457
const COUNT = 57458
const LISTAGG = 57459
const AGGREGATE_FUNCTION = 57460
const FUNCTION_WITH_INS = 57461
const COMPARISON_OP = 57462
const STRING_OP = 57463
const SUBSTITUTION_OP = 57464
const UMINUS = 57465
const UPLUS = 57466

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"RANGE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"TIES",
	"NULLS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2009

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 152,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 53,
	13, 152,
	15, 152,
	17, 152,
	19, 152,
	131, 152,
	-2, 1,
	-1, 55,
	132, 233,
	-2, 152,
	-1, 93,
	77, 283,
	-2, 360,
	-1, 95,
	57, 132,
	58, 132,
	59, 132,
	-2, 143,
	-1, 125,
	63, 360,
	67, 360,
	68, 360,
	-2, 120,
	-1, 127,
	63, 360,
	67, 360,
	68, 360,
	-2, 123,
	-1, 138,
	75, 1,
	79, 1,
	81, 1,
	-2, 152,
	-1, 197,
	63, 360,
	67, 360,
	68, 360,
	-2, 290,
	-1, 209,
	63, 360,
	67, 360,
	68, 360,
	-2, 114,
	-1, 210,
	63, 360,
	67, 360,
	68, 360,
	-2, 115,
	-1, 213,
	63, 360,
	67, 360,
	68, 360,
	-2, 125,
	-1, 215,
	81, 4,
	-2, 152,
	-1, 224,
	69, 0,
	120, 0,
	127, 0,
	-2, 203,
	-1, 225,
	69, 0,
	120, 0,
	127, 0,
	-2, 205,
	-1, 265,
	81, 1,
	-2, 152,
	-1, 275,
	47, 362,
	-2, 292,
	-1, 294,
	63, 360,
	67, 360,
	68, 360,
	-2, 276,
	-1, 310,
	63, 360,
	67, 360,
	68, 360,
	-2, 355,
	-1, 319,
	63, 360,
	67, 360,
	68, 360,
	-2, 126,
	-1, 340,
	81, 1,
	-2, 152,
	-1, 346,
	69, 0,
	120, 0,
	127, 0,
	-2, 214,
	-1, 368,
	77, 1,
	79, 1,
	81, 1,
	-2, 152,
	-1, 371,
	63, 360,
	67, 360,
	68, 360,
	-2, 148,
	-1, 375,
	63, 360,
	67, 360,
	68, 360,
	-2, 194,
	-1, 403,
	63, 360,
	67, 360,
	68, 360,
	-2, 138,
	-1, 437,
	75, 4,
	77, 4,
	79, 4,
	81, 4,
	-2, 152,
	-1, 440,
	81, 4,
	-2, 152,
	-1, 441,
	81, 4,
	-2, 152,
	-1, 454,
	81, 287,
	-2, 360,
	-1, 466,
	63, 360,
	67, 360,
	68, 360,
	-2, 151,
	-1, 503,
	13, 372,
	72, 372,
	131, 372,
	-2, 70,
	-1, 525,
	75, 4,
	79, 4,
	81, 4,
	-2, 152,
	-1, 534,
	75, 1,
	79, 1,
	81, 1,
	-2, 152,
	-1, 536,
	79, 284,
	81, 284,
	-2, 360,
	-1, 553,
	63, 360,
	67, 360,
	68, 360,
	-2, 305,
	-1, 560,
	63, 360,
	67, 360,
	68, 360,
	-2, 142,
	-1, 575,
	63, 360,
	67, 360,
	68, 360,
	-2, 79,
	-1, 579,
	81, 6,
	-2, 152,
	-1, 585,
	132, 99,
	135, 99,
	-2, 360,
	-1, 590,
	81, 4,
	-2, 152,
	-1, 636,
	81, 6,
	-2, 152,
	-1, 637,
	81, 6,
	-2, 152,
	-1, 641,
	81, 4,
	-2, 152,
	-1, 645,
	77, 4,
	79, 4,
	81, 4,
	-2, 152,
	-1, 652,
	63, 360,
	67, 360,
	68, 360,
	-2, 274,
	-1, 666,
	75, 6,
	77, 6,
	79, 6,
	81, 6,
	-2, 152,
	-1, 672,
	125, 50,
	-2, 360,
	-1, 685,
	63, 360,
	67, 360,
	68, 360,
	-2, 271,
	-1, 697,
	75, 6,
	79, 6,
	81, 6,
	-2, 152,
	-1, 700,
	81, 8,
	-2, 152,
	-1, 705,
	81, 6,
	-2, 152,
	-1, 708,
	75, 4,
	79, 4,
	81, 4,
	-2, 152,
	-1, 725,
	81, 6,
	-2, 152,
	-1, 750,
	81, 6,
	-2, 152,
	-1, 754,
	77, 6,
	79, 6,
	81, 6,
	-2, 152,
	-1, 756,
	75, 8,
	77, 8,
	79, 8,
	81, 8,
	-2, 152,
	-1, 759,
	81, 8,
	-2, 152,
	-1, 760,
	81, 8,
	-2, 152,
	-1, 772,
	75, 8,
	79, 8,
	81, 8,
	-2, 152,
	-1, 779,
	75, 6,
	79, 6,
	81, 6,
	-2, 152,
	-1, 783,
	81, 8,
	-2, 152,
	-1, 791,
	81, 8,
	-2, 152,
	-1, 795,
	77, 8,
	79, 8,
	81, 8,
	-2, 152,
	-1, 807,
	75, 8,
	79, 8,
	81, 8,
	-2, 152,
}

const yyPrivate = 57344

const yyLast = 2493

var yyAct = [...]int{

	69, 23, 790, 789, 773, 640, 698, 92, 749, 748,
	526, 415, 639, 607, 131, 339, 475, 179, 510, 626,
	686, 505, 633, 251, 428, 457, 1, 320, 111, 275,
	430, 115, 116, 327, 21, 304, 431, 293, 382, 483,
	176, 290, 283, 372, 467, 188, 271, 390, 196, 295,
	100, 274, 338, 389, 23, 76, 143, 326, 20, 511,
	74, 286, 632, 57, 107, 405, 132, 328, 182, 276,
	139, 410, 158, 193, 159, 147, 158, 146, 145, 158,
	137, 160, 148, 149, 52, 574, 550, 21, 95, 174,
	521, 166, 110, 522, 147, 727, 146, 145, 184, 184,
	43, 148, 149, 701, 154, 147, 198, 184, 539, 216,
	519, 20, 148, 149, 206, 207, 152, 518, 208, 142,
	394, 504, 395, 396, 391, 388, 479, 470, 392, 217,
	408, 273, 219, 212, 200, 220, 763, 746, 377, 23,
	745, 169, 744, 178, 183, 183, 394, 743, 395, 396,
	391, 388, 742, 199, 392, 721, 713, 712, 711, 244,
	710, 247, 136, 638, 619, 222, 618, 187, 136, 617,
	140, 139, 21, 616, 615, 217, 147, 141, 146, 145,
	594, 217, 184, 148, 149, 576, 573, 184, 568, 42,
	184, 562, 549, 84, 297, 541, 20, 540, 538, 226,
	531, 517, 515, 503, 42, 427, 197, 393, 463, 44,
	45, 50, 46, 47, 48, 49, 23, 331, 101, 334,
	97, 452, 98, 95, 96, 54, 93, 419, 480, 451,
	490, 450, 332, 246, 449, 336, 313, 302, 249, 250,
	241, 285, 101, 125, 243, 127, 242, 129, 378, 263,
	305, 270, 722, 288, 289, 693, 692, 691, 690, 689,
	663, 318, 153, 254, 657, 309, 23, 653, 254, 650,
	297, 648, 380, 385, 184, 317, 442, 414, 397, 413,
	412, 184, 343, 184, 161, 162, 335, 342, 353, 349,
	93, 411, 367, 172, 173, 362, 360, 358, 315, 21,
	314, 153, 175, 178, 416, 103, 165, 420, 385, 385,
	399, 164, 163, 416, 104, 211, 434, 387, 364, 376,
	183, 756, 152, 20, 425, 666, 437, 53, 201, 209,
	210, 435, 136, 439, 400, 213, 103, 404, 416, 406,
	407, 23, 386, 221, 337, 312, 223, 224, 225, 443,
	261, 128, 232, 233, 234, 235, 236, 237, 238, 303,
	103, 253, 256, 66, 51, 664, 418, 446, 548, 23,
	546, 620, 662, 543, 21, 705, 167, 203, 637, 385,
	636, 579, 477, 168, 266, 621, 459, 543, 460, 695,
	109, 109, 445, 112, 184, 465, 661, 262, 20, 489,
	294, 660, 21, 474, 130, 659, 67, 28, 310, 297,
	496, 658, 614, 688, 542, 144, 311, 51, 52, 806,
	420, 319, 345, 385, 347, 348, 20, 799, 478, 462,
	202, 485, 793, 786, 344, 785, 346, 114, 23, 513,
	487, 23, 23, 491, 778, 488, 486, 774, 764, 761,
	495, 357, 461, 204, 205, 755, 752, 707, 704, 356,
	28, 703, 676, 665, 643, 524, 593, 592, 528, 529,
	533, 297, 453, 444, 436, 371, 375, 366, 760, 759,
	385, 56, 184, 184, 498, 499, 500, 501, 43, 441,
	113, 403, 628, 3, 440, 792, 791, 43, 186, 791,
	170, 783, 51, 751, 750, 416, 544, 750, 185, 385,
	385, 554, 555, 545, 547, 577, 570, 70, 552, 642,
	376, 551, 725, 641, 341, 641, 23, 559, 340, 590,
	340, 438, 93, 355, 265, 23, 61, 9, 566, 569,
	699, 527, 177, 561, 252, 28, 3, 587, 447, 582,
	583, 385, 458, 588, 458, 581, 458, 184, 184, 184,
	598, 597, 454, 797, 109, 599, 796, 606, 21, 809,
	770, 458, 647, 646, 523, 420, 792, 466, 751, 51,
	23, 333, 642, 341, 805, 787, 610, 611, 612, 777,
	9, 23, 20, 624, 739, 623, 706, 44, 45, 50,
	46, 47, 48, 49, 596, 532, 44, 45, 50, 46,
	47, 48, 49, 649, 184, 294, 803, 768, 644, 680,
	604, 464, 28, 42, 654, 469, 194, 90, 228, 51,
	651, 3, 227, 229, 152, 120, 121, 23, 23, 668,
	258, 702, 23, 656, 257, 456, 23, 218, 287, 671,
	537, 260, 259, 677, 416, 535, 673, 674, 191, 71,
	72, 73, 536, 90, 75, 684, 484, 23, 683, 678,
	613, 42, 28, 681, 558, 9, 557, 375, 433, 370,
	333, 231, 230, 556, 694, 482, 696, 553, 91, 190,
	191, 192, 709, 118, 119, 122, 123, 481, 23, 268,
	560, 23, 736, 737, 51, 714, 23, 715, 322, 23,
	716, 717, 718, 719, 720, 472, 473, 723, 494, 575,
	156, 600, 269, 734, 91, 738, 23, 585, 394, 493,
	395, 396, 51, 458, 591, 402, 740, 180, 514, 520,
	758, 306, 307, 747, 512, 753, 762, 28, 602, 603,
	308, 23, 9, 106, 384, 23, 105, 23, 3, 765,
	23, 23, 135, 733, 741, 675, 595, 586, 735, 580,
	766, 578, 305, 23, 769, 28, 780, 516, 409, 734,
	23, 316, 734, 734, 23, 506, 507, 508, 509, 421,
	423, 181, 23, 284, 800, 734, 23, 798, 458, 788,
	43, 51, 9, 272, 51, 51, 734, 189, 23, 808,
	124, 282, 52, 811, 734, 652, 126, 134, 734, 733,
	70, 108, 733, 733, 735, 195, 782, 735, 735, 724,
	734, 589, 264, 3, 8, 733, 43, 667, 93, 383,
	735, 669, 672, 52, 28, 7, 733, 28, 28, 679,
	6, 735, 771, 354, 733, 775, 776, 63, 733, 735,
	476, 3, 685, 735, 291, 292, 278, 277, 781, 687,
	733, 82, 62, 65, 58, 735, 64, 9, 59, 794,
	195, 601, 433, 584, 471, 374, 433, 801, 373, 51,
	133, 804, 369, 267, 492, 401, 99, 17, 51, 16,
	68, 117, 43, 810, 476, 9, 726, 14, 432, 44,
	45, 50, 46, 47, 48, 49, 429, 13, 12, 10,
	15, 279, 185, 11, 730, 629, 728, 422, 627, 323,
	322, 321, 28, 322, 322, 4, 2, 0, 757, 93,
	0, 28, 0, 51, 0, 44, 45, 50, 46, 47,
	48, 49, 22, 0, 51, 0, 0, 0, 767, 0,
	394, 384, 395, 396, 391, 388, 655, 350, 392, 0,
	351, 352, 0, 0, 9, 0, 0, 9, 9, 0,
	5, 784, 0, 0, 365, 0, 28, 0, 43, 0,
	571, 572, 0, 0, 0, 0, 0, 28, 670, 802,
	51, 51, 0, 0, 0, 51, 398, 0, 157, 51,
	0, 44, 45, 50, 46, 47, 48, 49, 322, 0,
	0, 0, 0, 151, 150, 152, 0, 3, 142, 280,
	51, 0, 476, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 28, 28, 0, 0, 157, 28, 0,
	0, 0, 28, 0, 0, 0, 157, 0, 0, 0,
	0, 51, 9, 0, 51, 0, 0, 0, 0, 51,
	0, 9, 51, 28, 0, 155, 0, 0, 0, 140,
	139, 0, 0, 322, 155, 147, 141, 146, 145, 51,
	60, 239, 148, 149, 240, 0, 0, 44, 45, 50,
	46, 47, 48, 49, 28, 0, 0, 28, 0, 0,
	0, 0, 28, 102, 51, 28, 9, 43, 51, 0,
	51, 0, 0, 51, 51, 0, 0, 9, 0, 0,
	468, 497, 28, 0, 322, 502, 51, 185, 322, 0,
	0, 0, 0, 51, 0, 0, 0, 51, 151, 150,
	152, 0, 0, 142, 0, 51, 469, 28, 43, 51,
	248, 28, 0, 28, 0, 0, 28, 28, 0, 0,
	0, 51, 0, 9, 9, 0, 171, 0, 9, 28,
	0, 0, 9, 0, 0, 0, 28, 0, 0, 0,
	28, 0, 0, 729, 0, 0, 0, 0, 28, 0,
	0, 322, 28, 9, 140, 139, 0, 157, 0, 0,
	147, 141, 146, 145, 28, 0, 0, 148, 149, 563,
	564, 565, 567, 157, 0, 0, 44, 45, 50, 46,
	47, 48, 49, 157, 9, 155, 0, 9, 0, 0,
	0, 0, 9, 0, 0, 9, 0, 0, 102, 729,
	0, 379, 729, 729, 0, 0, 0, 157, 255, 255,
	0, 155, 9, 0, 157, 729, 157, 44, 45, 50,
	46, 47, 48, 49, 0, 0, 729, 281, 0, 0,
	281, 0, 0, 0, 729, 417, 0, 9, 729, 0,
	0, 9, 424, 9, 426, 0, 9, 9, 0, 0,
	729, 0, 0, 0, 0, 151, 150, 152, 0, 9,
	142, 157, 0, 157, 0, 157, 9, 0, 0, 255,
	9, 255, 255, 0, 0, 0, 43, 0, 9, 151,
	150, 152, 9, 0, 142, 0, 0, 0, 0, 155,
	0, 155, 0, 155, 9, 700, 0, 0, 255, 359,
	361, 363, 43, 71, 72, 73, 0, 90, 75, 52,
	0, 140, 139, 0, 0, 0, 0, 147, 141, 146,
	145, 281, 70, 281, 148, 149, 240, 102, 0, 102,
	102, 0, 0, 0, 0, 140, 139, 0, 0, 0,
	0, 147, 141, 146, 145, 157, 0, 0, 148, 149,
	394, 43, 395, 396, 391, 388, 608, 609, 392, 0,
	85, 0, 0, 0, 86, 0, 0, 0, 91, 381,
	0, 83, 79, 530, 0, 0, 0, 43, 71, 72,
	73, 88, 90, 75, 52, 44, 45, 50, 46, 47,
	48, 49, 0, 0, 0, 0, 0, 70, 0, 255,
	0, 255, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 50, 81, 89, 80, 49, 255, 0,
	0, 0, 0, 0, 296, 0, 77, 78, 87, 94,
	0, 0, 0, 0, 281, 85, 0, 0, 0, 86,
	0, 0, 0, 91, 194, 0, 83, 79, 43, 71,
	72, 73, 157, 90, 75, 52, 88, 0, 0, 0,
	44, 45, 50, 46, 47, 48, 49, 0, 70, 151,
	150, 152, 157, 0, 142, 43, 0, 0, 0, 0,
	605, 157, 0, 807, 0, 0, 44, 45, 50, 81,
	89, 80, 49, 0, 279, 185, 0, 255, 0, 0,
	622, 77, 78, 87, 94, 0, 85, 0, 0, 625,
	86, 0, 0, 0, 91, 0, 0, 83, 79, 0,
	0, 0, 281, 281, 0, 140, 139, 88, 0, 0,
	0, 147, 141, 146, 145, 0, 0, 0, 148, 149,
	0, 0, 0, 42, 0, 0, 0, 43, 71, 72,
	73, 157, 90, 75, 52, 0, 0, 44, 45, 50,
	299, 300, 298, 301, 0, 0, 0, 70, 0, 0,
	296, 0, 77, 78, 87, 94, 0, 0, 0, 682,
	255, 0, 0, 0, 44, 45, 50, 46, 47, 48,
	49, 0, 0, 0, 0, 0, 0, 281, 281, 281,
	0, 0, 280, 0, 0, 85, 0, 0, 0, 86,
	0, 0, 0, 91, 0, 42, 83, 79, 43, 71,
	72, 73, 0, 90, 75, 52, 88, 0, 0, 151,
	150, 152, 0, 0, 142, 0, 0, 0, 70, 0,
	0, 0, 0, 795, 0, 255, 43, 71, 72, 73,
	0, 90, 75, 52, 281, 0, 44, 45, 50, 81,
	89, 80, 49, 0, 0, 0, 70, 0, 0, 0,
	0, 77, 78, 87, 94, 0, 85, 0, 0, 0,
	86, 0, 0, 0, 91, 140, 139, 83, 79, 0,
	0, 147, 141, 146, 145, 0, 0, 88, 148, 149,
	0, 0, 0, 0, 85, 0, 0, 0, 86, 0,
	0, 0, 91, 0, 0, 83, 79, 43, 71, 72,
	73, 0, 90, 75, 52, 88, 0, 44, 45, 50,
	81, 89, 80, 49, 0, 0, 151, 70, 152, 0,
	0, 142, 77, 78, 87, 94, 43, 71, 214, 73,
	0, 90, 75, 52, 0, 44, 45, 50, 81, 89,
	80, 49, 0, 0, 0, 0, 70, 0, 0, 0,
	77, 78, 87, 55, 0, 85, 0, 0, 0, 86,
	0, 0, 0, 91, 0, 0, 83, 79, 43, 0,
	245, 0, 140, 139, 0, 0, 88, 0, 147, 141,
	146, 145, 0, 0, 85, 148, 149, 0, 86, 0,
	0, 43, 91, 0, 0, 83, 79, 0, 52, 0,
	0, 0, 0, 35, 0, 88, 44, 45, 50, 299,
	300, 298, 301, 24, 0, 0, 25, 0, 0, 0,
	0, 77, 78, 87, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 50, 81, 89,
	80, 49, 43, 0, 0, 0, 0, 0, 0, 52,
	77, 78, 87, 94, 35, 0, 0, 0, 0, 42,
	732, 731, 0, 634, 24, 0, 0, 25, 0, 27,
	0, 0, 32, 30, 31, 29, 0, 44, 45, 50,
	46, 47, 48, 49, 33, 34, 329, 330, 0, 36,
	37, 38, 39, 0, 0, 0, 635, 0, 0, 26,
	44, 45, 50, 46, 47, 48, 49, 0, 0, 43,
	42, 325, 324, 0, 40, 0, 52, 0, 0, 0,
	27, 35, 0, 32, 30, 31, 29, 0, 0, 0,
	0, 24, 0, 0, 25, 33, 34, 329, 330, 41,
	36, 37, 38, 39, 0, 0, 0, 0, 0, 0,
	26, 44, 45, 50, 46, 47, 48, 49, 43, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	35, 0, 0, 0, 0, 0, 0, 42, 631, 630,
	24, 634, 0, 25, 0, 0, 0, 27, 0, 0,
	32, 30, 31, 29, 0, 0, 0, 0, 0, 0,
	0, 0, 33, 34, 0, 0, 0, 36, 37, 38,
	39, 0, 0, 0, 635, 0, 0, 26, 44, 45,
	50, 46, 47, 48, 49, 0, 42, 19, 18, 0,
	40, 0, 151, 150, 152, 0, 27, 142, 0, 32,
	30, 31, 29, 0, 0, 0, 779, 0, 151, 150,
	152, 33, 34, 142, 0, 41, 36, 37, 38, 39,
	0, 0, 772, 0, 0, 0, 26, 44, 45, 50,
	46, 47, 48, 49, 0, 0, 151, 150, 152, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 140, 139,
	754, 0, 0, 0, 147, 141, 146, 145, 0, 0,
	0, 148, 149, 0, 140, 139, 0, 0, 0, 0,
	147, 141, 146, 145, 151, 150, 152, 148, 149, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 708, 151,
	150, 152, 140, 139, 142, 0, 0, 0, 147, 141,
	146, 145, 0, 697, 0, 148, 149, 151, 150, 152,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 151, 150, 152, 0, 0, 142, 0, 0,
	140, 139, 0, 0, 0, 252, 147, 141, 146, 145,
	0, 0, 0, 148, 149, 140, 139, 0, 0, 0,
	0, 147, 141, 146, 145, 0, 0, 0, 148, 149,
	151, 150, 152, 140, 139, 142, 0, 0, 0, 147,
	141, 146, 145, 0, 534, 0, 148, 149, 140, 139,
	0, 0, 0, 0, 147, 141, 146, 145, 151, 150,
	152, 148, 149, 142, 0, 0, 0, 0, 151, 150,
	152, 0, 525, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 151, 150, 152, 140, 139, 142, 0,
	0, 0, 147, 141, 146, 145, 0, 368, 0, 148,
	149, 151, 150, 152, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 140, 139, 0, 215, 0, 0,
	147, 141, 146, 145, 140, 139, 0, 148, 149, 0,
	147, 141, 146, 145, 0, 0, 0, 148, 149, 140,
	139, 0, 0, 0, 0, 147, 141, 146, 145, 0,
	0, 0, 148, 149, 151, 150, 152, 140, 139, 142,
	0, 0, 0, 147, 141, 146, 145, 0, 138, 0,
	148, 149, 151, 150, 152, 0, 0, 142, 0, 0,
	0, 0, 448, 150, 152, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 139, 0, 0, 0, 0, 147, 141, 146, 145,
	0, 0, 0, 148, 149, 0, 0, 0, 140, 139,
	0, 0, 0, 0, 147, 141, 146, 145, 140, 139,
	0, 148, 149, 0, 147, 141, 146, 145, 0, 0,
	0, 148, 149,
}
var yyPact = [...]int{

	2024, -1000, 202, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1692, 1664,
	-1000, -1000, 205, 183, 726, 723, 801, 832, -1000, 407,
	1322, 1322, 604, -1000, -1000, 798, 1664, 811, 1664, 236,
	1664, -1000, 737, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 210, -1000, 2024, 2330, 1593, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 210, -1000, -1000, -57,
	-55, -1000, -1000, -1000, -1000, -1000, -1000, 1664, 1664, 181,
	180, 175, -1000, 1664, 256, 174, 1664, 1664, 1322, 171,
	-1000, -1000, 465, 2348, 1593, 699, 771, 1113, 484, 793,
	632, 555, -1000, 551, 1664, 1322, 1113, -1000, -1, 206,
	-1000, 347, -1000, 1322, 1322, -1000, -1000, 1322, -1000, -1000,
	-1000, -1000, 1664, 1664, 188, 2348, -2, 2348, 1792, 2277,
	46, 584, -1000, -3, 1322, -1000, 1664, -1000, 2024, 1664,
	1664, 1664, 568, 565, 621, 1664, 1664, 1664, 1664, 1664,
	1664, 1664, -1000, 959, 108, 114, 112, 229, 1834, 1423,
	1154, -1000, -1000, 1664, 555, 555, 467, 137, 137, 577,
	591, -1000, 50, -1000, 281, 555, 455, 1664, 108, 655,
	681, 1113, 787, -4, -1000, -1000, 898, 797, 775, 898,
	588, 588, 588, 1494, -1000, 105, -1000, 1241, 228, 714,
	801, 1664, 332, 214, 169, 167, -1000, -1000, 761, 2348,
	2348, 654, 1664, 2348, 1664, 1908, 1322, 801, 1322, 737,
	213, 2348, 449, -32, -51, -51, 618, 1664, 137, 1664,
	137, 137, -21, -21, -1000, -1000, -1000, 1722, 50, -1000,
	1664, -1000, -1000, -1000, -1000, -1000, 1664, -1000, -1000, 1664,
	1348, 454, 1664, -1000, 1593, -1000, -1000, 137, 166, 165,
	164, 568, -1000, 1664, 396, 2024, 2259, 634, 1664, 1763,
	117, 1397, 493, 1113, 775, 72, -1000, 984, -1000, -1000,
	1521, -1000, 898, 696, 1664, -1000, 229, -1000, 229, 229,
	-1000, -5, 756, -1000, 2348, -1000, -1000, -60, 160, 149,
	148, 146, -1000, 1322, 551, -1000, 96, 796, 493, -1000,
	2348, 551, 1322, 551, 73, 1322, 801, -1000, -1000, 2348,
	393, 201, -1000, -1000, 1692, 1664, -1000, -1000, -1000, -1000,
	-1000, 414, -1000, -6, 409, -1000, 145, 1322, 392, 451,
	2024, 1664, -1000, -1000, 2358, -1000, -51, -1000, -1000, -1000,
	102, 99, 97, 89, 391, 1664, 2244, 581, 132, -1000,
	132, -1000, 132, -1000, 366, 76, 548, -1000, 2024, -1000,
	1664, 1084, -1000, -8, 673, 2348, -1000, 137, 493, -1000,
	-1000, 1322, 793, -9, 101, -64, -1000, -1000, 650, 638,
	617, 617, 680, 898, -1000, -1000, -1000, -1000, 1322, 98,
	775, 689, 677, 2348, 600, -1000, -1000, 600, 1494, 1322,
	1423, 555, 555, 555, 1664, 71, -14, -1000, 754, 1322,
	709, -1000, 493, 701, -1000, 70, -1000, 755, 69, -18,
	-1000, -1000, -25, 704, -42, -1000, 498, 1908, 2234, 464,
	1908, 1908, 551, 68, 531, 389, -1000, 2206, 1664, -1000,
	-1000, -1000, -1000, -1000, 2348, 1664, 137, 66, -27, 65,
	63, -1000, 321, 262, -1000, 465, 2348, -1000, 553, 257,
	1763, 254, -1000, -1000, -1000, 60, -49, -1000, 775, 493,
	1664, 898, 898, 636, -1000, 629, 627, 617, -1000, -1000,
	-1000, -1000, -1000, 1664, 1664, -1000, -1000, 59, 1664, 1664,
	1348, 1664, 56, 750, 1322, -1000, -1000, -1000, 493, 493,
	54, -50, 1664, 53, 1322, 749, 273, 747, 801, 801,
	1664, 745, 801, -1000, -1000, 1908, 450, 1664, 386, 385,
	48, 744, -1000, 530, 2024, 50, 2168, -1000, -1000, 137,
	-1000, -1000, -1000, 682, -1000, -1000, -1000, -1000, 717, 599,
	493, -1000, -1000, 2348, 680, 1352, 898, 898, 898, 623,
	2348, -1000, 316, 42, 41, 37, 34, 32, 275, 551,
	-1000, -1000, -1000, 754, 1322, 2348, -1000, -1000, 551, 1975,
	272, -1000, -1000, -1000, 704, 2348, 270, 31, 444, 383,
	1908, 2153, 497, 496, -1000, 140, -1000, 508, -1000, -1000,
	138, -1000, -1000, -1000, 137, -1000, -1000, -1000, 1664, 136,
	1352, 912, 680, 898, 133, 315, 309, 305, 300, 276,
	129, 251, -1000, -1000, -1000, -1000, 382, 200, -1000, -1000,
	1692, 1664, -1000, -1000, 1664, 1664, 1975, 1975, 743, 381,
	446, 1908, 1664, 546, -1000, 1908, -1000, -1000, 551, -1000,
	699, -1000, 2348, 1322, -1000, 1664, 680, 318, 128, 127,
	126, 125, 124, 318, 293, -1000, 1975, 2135, 463, 1265,
	40, 578, 2348, 380, 377, 267, 522, 376, -1000, 2120,
	-1000, 464, 28, 26, 25, 2348, 24, 699, 666, 318,
	318, 318, 318, 318, 23, 121, -1000, 1975, 443, 1664,
	1857, 1322, 1322, -1000, -1000, 1975, -1000, 520, 1908, -1000,
	-1000, -1000, -1000, -1000, -1000, 1664, 20, 15, 10, 8,
	5, -1000, 318, 428, 375, 1975, 2082, 374, 196, -1000,
	-1000, 1692, 1664, -1000, -1000, -1000, 399, 398, 368, -1000,
	507, -1000, -1000, -1000, -1000, -1000, -1000, 4, 367, 425,
	1975, 1664, 544, -1000, 1975, 494, 1857, 2054, 370, 1857,
	1857, -1000, -1000, -1000, 515, 363, -1000, 2038, -1000, 463,
	-1000, -1000, 1857, 422, 1664, 354, 352, -1000, 511, 1975,
	-1000, 420, 351, 1857, 1615, 490, 487, -1000, 503, 346,
	417, 1857, 1664, 543, -1000, 1857, -1000, -1000, -1000, 510,
	338, -1000, 1455, -1000, 370, -1000, 495, 1857, -1000, -1000,
	501, -1000,
}
var yyPgo = [...]int{

	0, 26, 27, 19, 95, 492, 67, 936, 57, 33,
	935, 931, 929, 928, 62, 22, 926, 925, 924, 923,
	920, 919, 59, 18, 21, 918, 917, 36, 916, 908,
	30, 24, 907, 901, 900, 899, 897, 980, 65, 50,
	896, 45, 42, 895, 894, 17, 893, 44, 892, 952,
	890, 66, 63, 60, 55, 481, 206, 37, 193, 25,
	43, 888, 885, 884, 881, 1090, 878, 876, 874, 873,
	720, 536, 872, 871, 49, 20, 869, 46, 69, 867,
	29, 866, 13, 865, 864, 857, 7, 23, 853, 16,
	48, 51, 68, 11, 41, 850, 845, 839, 38, 834,
	15, 52, 5, 12, 8, 9, 2, 3, 40, 832,
	10, 831, 6, 829, 4, 826, 0, 363, 14, 406,
	821, 64, 73, 56, 53, 39, 47, 61, 817, 35,
	415,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	9, 11, 11, 10, 10, 10, 10, 10, 12, 12,
	12, 12, 12, 12, 13, 13, 14, 14, 14, 15,
	15, 16, 16, 17, 17, 17, 17, 17, 18, 18,
	18, 18, 18, 18, 19, 19, 19, 19, 20, 20,
	21, 21, 21, 21, 21, 21, 21, 21, 22, 22,
	23, 23, 24, 24, 24, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 27, 28, 28, 29,
	30, 30, 31, 31, 31, 32, 32, 32, 32, 33,
	33, 33, 33, 33, 33, 33, 34, 34, 34, 35,
	35, 35, 35, 35, 36, 36, 36, 37, 38, 38,
	38, 38, 39, 39, 40, 41, 41, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 46, 47, 47,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	52, 52, 52, 52, 53, 54, 55, 55, 55, 55,
	55, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 57, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 64,
	64, 65, 66, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 68, 68, 68, 68, 68, 68, 68, 69,
	69, 69, 69, 70, 70, 71, 71, 72, 72, 72,
	72, 72, 73, 73, 74, 74, 74, 74, 74, 74,
	74, 74, 75, 76, 76, 77, 77, 78, 78, 78,
	79, 80, 80, 80, 80, 80, 80, 80, 81, 81,
	81, 81, 81, 81, 82, 82, 83, 83, 84, 84,
	84, 85, 86, 86, 87, 87, 88, 88, 89, 89,
	90, 90, 91, 91, 92, 92, 93, 93, 94, 94,
	95, 95, 95, 95, 96, 97, 98, 98, 99, 99,
	100, 100, 101, 101, 102, 102, 103, 103, 104, 104,
	105, 105, 106, 106, 107, 107, 108, 108, 109, 109,
	110, 110, 111, 111, 112, 112, 113, 113, 114, 114,
	115, 115, 116, 116, 116, 116, 116, 116, 116, 116,
	117, 118, 118, 119, 120, 120, 121, 121, 122, 122,
	123, 123, 124, 124, 125, 125, 126, 126, 127, 127,
	128, 128, 129, 129, 130, 130,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	1, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 2, 2, 1, 2, 1, 1,
	6, 8, 5, 6, 8, 5, 7, 7, 1, 3,
	1, 3, 0, 1, 1, 2, 2, 5, 2, 2,
	3, 5, 6, 8, 5, 3, 1, 1, 3, 3,
	1, 3, 1, 1, 3, 9, 10, 10, 12, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	2, 2, 4, 2, 2, 3, 4, 5, 5, 4,
	4, 4, 1, 1, 3, 0, 2, 0, 2, 0,
	3, 0, 2, 0, 3, 0, 3, 4, 0, 2,
	0, 2, 0, 2, 6, 9, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 1, 3,
	1, 3, 2, 4, 1, 1, 0, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 4, 4, 6,
	6, 4, 6, 4, 4, 4, 6, 4, 4, 6,
	4, 2, 3, 3, 3, 3, 3, 2, 2, 3,
	3, 2, 2, 0, 1, 4, 4, 5, 5, 5,
	5, 1, 5, 10, 8, 9, 9, 9, 9, 9,
	8, 10, 2, 0, 3, 1, 1, 1, 2, 3,
	1, 1, 1, 2, 3, 1, 1, 3, 4, 5,
	6, 7, 5, 6, 2, 4, 1, 1, 1, 3,
	1, 5, 0, 1, 4, 5, 0, 2, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	6, 9, 5, 8, 7, 3, 1, 3, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 0, 1,
	0, 1, 0, 1, 0, 1, 1, 1, 0, 1,
	0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -10, -37, -95, -96, -99, -71,
	-21, -19, -25, -26, -32, -20, -35, -36, 74, 73,
	-8, -9, -49, -116, 26, 29, 112, 82, -119, 88,
	86, 87, 85, 97, 98, 16, 102, 103, 104, 105,
	76, 101, 72, 4, 113, 114, 116, 117, 118, 119,
	115, -117, 11, 125, -56, 131, -55, -52, -68, -66,
	-65, -71, -72, -85, -67, -69, -117, -119, -34, -116,
	24, 5, 6, 7, -53, 10, -54, 128, 129, 74,
	118, 116, -73, 73, -58, 62, 66, 130, 83, 117,
	9, 70, -86, -56, 131, -38, 19, 15, 17, -40,
	-39, 13, -65, 131, 131, 30, 30, -121, -120, -117,
	-121, -116, -117, 83, 30, -116, -116, -33, 89, 90,
	31, 32, 91, 92, 12, -56, 5, -56, 115, -56,
	-117, -118, -51, -50, -128, 25, 122, -1, 78, 121,
	120, 127, 69, -123, -130, 129, 128, 126, 133, 134,
	65, 64, 66, -56, -90, -37, -70, -49, 136, 131,
	136, -56, -56, 131, 131, 131, -86, 120, 127, -123,
	-130, -65, -56, -56, -116, 131, -108, 77, -90, -45,
	38, 20, -92, -77, -116, 24, 14, -92, -41, 14,
	57, 58, 59, -122, 71, -70, -90, -56, -116, -77,
	135, 122, 83, 30, 106, 107, -116, -116, -116, -56,
	-56, 127, 135, -56, 6, 80, 63, 135, 63, 135,
	-116, -56, -1, -56, -56, -56, -123, 67, 63, 68,
	61, 60, -56, -56, -56, -56, -56, -56, -56, 132,
	135, 132, 132, 132, -116, 6, -122, -116, 6, -122,
	-122, -87, 77, -58, 131, -65, -58, 67, 63, 61,
	60, 69, 116, -122, -109, 79, -56, -46, 44, 41,
	-78, -77, 16, 135, -91, -80, -78, -79, -81, 23,
	131, -65, 14, -42, 18, -91, -127, 60, -127, -127,
	-94, -84, -83, -57, -56, -74, 126, -116, 118, 116,
	117, 119, 132, 131, -129, 22, 27, 28, 36, -121,
	-56, 84, 131, 22, 131, 131, 20, -52, -90, -56,
	-2, -11, -5, -12, 74, 73, -8, -9, -6, 99,
	100, -116, -118, -117, -116, -51, 22, 131, -101, -100,
	79, 75, -53, -54, -56, -58, -56, -58, -58, -90,
	-70, -70, -70, -57, -88, 79, -56, -58, 131, -65,
	131, -65, 131, -65, -123, -70, 81, -1, 78, -48,
	45, -56, -60, -61, -62, -56, -74, 21, 131, -37,
	-116, 22, -98, -97, -55, -116, -92, -42, 53, -124,
	-126, 52, 56, 135, 48, 50, 51, -116, 22, -80,
	-91, -43, 39, -56, -39, -38, -39, -39, 135, 22,
	131, 131, 131, 131, 131, -93, -116, -37, -22, 131,
	-116, -55, 131, -55, -37, -93, -37, 132, -31, -28,
	-30, -27, -29, -117, -116, -118, 81, 125, -56, -86,
	80, 80, 131, -93, 81, -101, -1, -56, 64, 132,
	132, 132, 132, 81, -56, 78, 64, -59, -58, -59,
	-59, 86, 63, 132, 73, -1, -56, -47, 46, 72,
	135, -63, 42, 43, -59, -89, -55, -116, -41, 135,
	127, 47, 47, -125, 49, -125, -124, -126, -91, -116,
	132, -42, -44, 40, 41, -94, -116, -70, -122, -122,
	-122, -122, -70, 132, 135, -24, 31, 32, 33, 34,
	-23, -22, 35, -89, 37, 132, 22, 132, 135, 135,
	35, 132, 135, 76, -2, 78, -110, 77, -2, -2,
	-37, 132, 74, 81, 78, -56, -56, -58, 132, 135,
	132, 132, 93, 111, -108, -47, 113, -60, 114, 132,
	135, -42, -98, -56, -80, -80, 47, 47, 47, -125,
	-56, -90, 132, -70, -70, -70, -57, -70, 132, -129,
	-93, -55, -55, 132, 135, -56, 132, -116, 22, 108,
	22, -27, -30, -30, -117, -56, 22, -31, -2, -111,
	79, -56, 81, 81, 132, 22, 74, -1, -87, -59,
	39, -64, 31, 32, 21, -37, -89, -82, 54, 55,
	-80, -80, -80, 47, 96, 132, 132, 132, 132, 132,
	96, 110, -37, -24, -23, -37, -3, -13, -5, -17,
	74, 73, -14, -15, 76, 109, 108, 108, 132, -103,
	-102, 79, 75, 81, -2, 78, 76, 76, 131, -100,
	131, -59, -56, 131, -82, 54, -80, 131, 96, 96,
	96, 96, 96, 131, 114, 81, 125, -56, -86, -56,
	-117, -118, -56, -3, -3, 22, 81, -103, -2, -56,
	73, -2, -37, -45, -93, -56, -75, -76, 95, 131,
	131, 131, 131, 131, -75, 96, -3, 78, -112, 77,
	80, 63, 63, 81, 81, 108, 74, 81, 78, -110,
	132, 132, 132, 132, -45, 41, -75, -75, -75, -75,
	-75, 132, 131, -3, -113, 79, -56, -4, -16, -5,
	-18, 74, 73, -14, -15, -6, -116, -116, -3, 74,
	-2, -90, 132, 132, 132, 132, 132, -75, -105, -104,
	79, 75, 81, -3, 78, 81, 125, -56, -86, 80,
	80, 81, -102, 132, 81, -105, -3, -56, 73, -3,
	76, -4, 78, -114, 77, -4, -4, 74, 81, 78,
	-112, -4, -115, 79, -56, 81, 81, 74, -3, -107,
	-106, 79, 75, 81, -4, 78, 76, 76, -104, 81,
	-107, -4, -56, 73, -4, 74, 81, 78, -114, 74,
	-4, -106,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 282,
	36, 37, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 109, 68, 69, 0, 0, 0, 0, 0,
	0, 30, 370, 342, 343, 344, 345, 346, 347, 348,
	349, 0, 350, -2, 360, -2, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 166,
	0, 158, 159, 160, 161, 162, 163, 0, 0, 0,
	347, 345, 241, 282, 360, 0, 0, 0, 0, 346,
	164, 165, 0, -2, 152, -2, 0, 0, 0, 135,
	0, 358, 133, 152, 233, 0, 0, 64, 356, 354,
	65, 0, 67, 0, 0, 88, 89, 0, 110, 111,
	112, 113, 0, 0, 0, -2, 121, -2, 124, 360,
	181, 0, 153, 156, 0, 371, 0, 3, -2, 0,
	374, 375, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 360, 0, 0, 0, 0, 0, 233,
	0, 227, 228, 233, 358, 358, 0, 374, 375, 0,
	0, 221, 231, 232, 0, 358, 328, 0, 0, 145,
	0, 0, 0, 294, 255, 256, 0, 0, 137, 0,
	368, 368, 368, 0, 359, 0, 234, -2, 372, 0,
	0, 0, 0, 0, 0, 0, 90, 95, 0, -2,
	-2, 0, 0, -2, 159, -2, 0, 0, 0, 370,
	0, 353, 312, 202, -2, -2, 0, 0, 0, 0,
	0, 0, 222, 223, 224, 225, 226, 229, 230, 184,
	0, 186, 201, 236, 167, 169, 233, 168, 170, 233,
	233, 286, 0, 204, 152, 187, 206, 0, 0, 0,
	0, 360, 118, 233, 0, -2, 360, 150, 0, 0,
	152, 257, 0, 0, 137, -2, 261, 262, 265, 266,
	152, 260, 0, 139, 0, 136, 0, 369, 0, 0,
	134, 298, 278, 280, -2, 277, 185, 166, 347, 345,
	346, 348, 235, 0, 152, 373, 0, 0, 0, 357,
	-2, 152, 0, 152, 0, 0, 0, 119, 122, -2,
	0, 0, 31, 32, 0, 282, 41, 42, 43, 23,
	24, 0, 352, 351, 0, 157, 0, 0, 0, 312,
	-2, 0, 207, 208, 360, 211, -2, 215, 218, 291,
	0, 0, 0, 0, 0, 0, 360, 0, 152, 213,
	152, 217, 152, 220, 0, 0, 0, 329, -2, 127,
	0, -2, 144, 190, 196, -2, 195, 0, 0, 302,
	258, 0, 135, 306, 0, 166, 295, 308, 0, 0,
	364, 364, 362, 0, 363, 366, 367, 263, 0, 362,
	137, 141, 0, -2, 129, 132, 130, 131, 0, 0,
	233, 358, 358, 358, 233, 0, 296, 72, 82, 0,
	78, 75, 0, 0, 87, 0, 94, 0, 0, 102,
	103, 97, 100, 96, 0, 91, 0, -2, 360, 0,
	-2, -2, 152, 0, 0, 0, 313, 360, 0, 237,
	238, 239, 240, 281, -2, 0, 0, 0, 188, 0,
	0, 116, 0, 242, 35, 326, -2, 146, 148, 0,
	0, 192, 197, 198, 300, 0, 288, 259, 137, 0,
	0, 0, 0, 0, 365, 0, 0, 364, 293, 264,
	267, 309, 128, 0, 0, 299, 279, 0, 233, 233,
	233, 233, 0, -2, 0, 73, 83, 84, 0, 0,
	0, 80, 0, 0, 0, 92, 0, 0, 0, 0,
	0, 0, 0, 27, 5, -2, 332, 0, 0, 0,
	0, 0, 33, 0, -2, 209, -2, 210, 212, 0,
	216, 219, 117, 0, 327, 147, 149, 191, 0, 152,
	0, 304, 307, -2, 268, 362, 0, 0, 0, 0,
	-2, 140, 235, 0, 0, 0, 0, 0, 0, 152,
	297, 85, 86, 82, 0, -2, 76, 77, 152, -2,
	0, 98, 104, 101, 0, -2, 0, 0, 316, 0,
	-2, 360, 0, 0, 154, 0, 34, 310, 285, 189,
	0, 193, 199, 200, 0, 303, 289, 269, 0, 0,
	362, 362, 272, 0, 0, 237, 238, 239, 240, 242,
	0, 0, 71, 74, 81, 93, 0, 0, 44, 45,
	0, 282, 56, 57, 0, 49, -2, -2, 0, 0,
	316, -2, 0, 0, 333, -2, 28, 29, 152, 311,
	143, 301, -2, 0, 270, 0, 273, 253, 0, 0,
	0, 0, 0, 253, 0, 105, -2, 360, 0, 360,
	181, 0, -2, 0, 0, 0, 0, 0, 317, 360,
	40, 330, 0, 0, 0, -2, 0, 143, 0, 253,
	253, 253, 253, 253, 0, 0, 7, -2, 336, 0,
	-2, 0, 0, 106, 107, -2, 38, 0, -2, 331,
	155, 243, 275, 244, 252, 0, 0, 0, 0, 0,
	0, 250, 253, 320, 0, -2, 360, 0, 0, 51,
	52, 0, 282, 61, 62, 63, 0, 0, 0, 39,
	314, 254, 245, 246, 247, 248, 249, 0, 0, 320,
	-2, 0, 0, 337, -2, 0, -2, 360, 0, -2,
	-2, 108, 315, 251, 0, 0, 321, 360, 55, 334,
	46, 9, -2, 340, 0, 0, 0, 53, 0, -2,
	335, 324, 0, -2, 360, 0, 0, 54, 318, 0,
	324, -2, 0, 0, 341, -2, 47, 48, 319, 0,
	0, 325, 360, 60, 338, 58, 0, -2, 339, 59,
	322, 323,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 130, 3, 3, 3, 134, 3, 3,
	131, 132, 126, 129, 135, 128, 136, 133, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 125,
	3, 127,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:194
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:199
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:204
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:211
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:216
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:223
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:228
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:235
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:240
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:247
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:251
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:255
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:259
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:263
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:267
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:341
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].expression}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].expressions, Else: yyDollar[6].expression}
		}
	case 35:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].expressions, Else: yyDollar[4].expression}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:373
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].expression}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:377
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].expressions, Else: yyDollar[6].expression}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:381
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].expressions, Else: yyDollar[4].expression}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:393
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:409
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:413
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].expression}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].expressions, Else: yyDollar[6].expression}
		}
	case 55:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:451
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].expressions, Else: yyDollar[4].expression}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].expression}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].expressions, Else: yyDollar[6].expression}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].expressions, Else: yyDollar[4].expression}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].expressions}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].expressions}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []Expression{yyDollar[5].expression}, Position: yyDollar[6].expression}
		}
	case 74:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].expressions, Position: yyDollar[8].expression}
		}
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.expression = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:557
		{
			yyVAL.expression = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:563
		{
			yyVAL.expressions = []Expression{yyDollar[1].expression}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:567
		{
			yyVAL.expressions = append([]Expression{yyDollar[1].expression}, yyDollar[3].expressions...)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:573
		{
			yyVAL.expression = nil
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:577
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:581
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:585
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:589
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:595
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:599
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:603
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].expression, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 92:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = TableDeclaration{Table: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = TableDeclaration{Table: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = TableDeclaration{Table: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = DisposeTable{Table: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:635
		{
			yyVAL.expression = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:641
		{
			yyVAL.expressions = []Expression{yyDollar[1].expression}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:645
		{
			yyVAL.expressions = append(yyDollar[1].expressions, yyDollar[3].expression)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:651
		{
			yyVAL.expression = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:657
		{
			yyVAL.expressions = []Expression{yyDollar[1].expression}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:661
		{
			yyVAL.expressions = append([]Expression{yyDollar[1].expression}, yyDollar[3].expressions...)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:667
		{
			yyVAL.expressions = yyDollar[1].expressions
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:671
		{
			yyVAL.expressions = yyDollar[1].expressions
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:675
		{
			yyVAL.expressions = append(yyDollar[1].expressions, yyDollar[3].expressions...)
		}
	case 105:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:681
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 106:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:685
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].expressions, Statements: yyDollar[9].program}
		}
	case 107:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:689
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].expressions, Statements: yyDollar[11].program}
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:699
		{
			yyVAL.expression = nil
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:703
		{
			yyVAL.expression = FetchPosition{Position: yyDollar[1].token}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:707
		{
			yyVAL.expression = FetchPosition{Position: yyDollar[1].token}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:711
		{
			yyVAL.expression = FetchPosition{Position: yyDollar[1].token}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:715
		{
			yyVAL.expression = FetchPosition{Position: yyDollar[1].token}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:719
		{
			yyVAL.expression = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:723
		{
			yyVAL.expression = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:729
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 117:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:733
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:737
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:743
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:747
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:751
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].token.Literal}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:755
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].token.Literal, Values: yyDollar[4].queryexprs}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:759
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:769
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:773
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:779
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:791
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:801
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:810
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:819
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:830
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:834
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:840
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:846
		{
			yyVAL.queryexpr = nil
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:850
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:856
		{
			yyVAL.queryexpr = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:860
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:866
		{
			yyVAL.queryexpr = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:870
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:876
		{
			yyVAL.queryexpr = nil
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:880
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:886
		{
			yyVAL.queryexpr = nil
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:890
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:896
		{
			yyVAL.queryexpr = nil
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:900
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:910
		{
			yyVAL.queryexpr = nil
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:914
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:920
		{
			yyVAL.queryexpr = nil
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:924
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:930
		{
			yyVAL.queryexpr = nil
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:934
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:940
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 155:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:944
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:950
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:954
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:964
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:972
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:992
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:998
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1060
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.token = Token{}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.token = yyDollar[1].token
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.token = yyDollar[1].token
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.token = yyDollar[1].token
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.token = yyDollar[1].token
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1164
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1187
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1191
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1195
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1199
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1203
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1211
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 210:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1215
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 211:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1219
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1223
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1231
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1235
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 216:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1239
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1243
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1247
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1251
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1259
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1265
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1273
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1295
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1299
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1303
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1307
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexprs = nil
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1327
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1334
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1338
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 239:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1342
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1346
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1350
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1356
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 243:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1360
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 245:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1370
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 246:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1374
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 247:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1378
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 248:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 249:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 250:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1390
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1394
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1400
		{
			yyVAL.queryexpr = AnalyticClause{Partition: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.queryexpr = nil
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1410
		{
			yyVAL.queryexpr = Partition{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1420
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1426
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1430
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1434
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1446
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1450
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1454
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1458
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1462
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1466
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1470
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1506
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1512
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1516
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1522
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1526
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1530
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1536
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = nil
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1546
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = nil
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1572
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1576
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1596
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1606
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].queryexpr, ValuesList: yyDollar[6].queryexprs}
		}
	case 301:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].queryexpr, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].queryexpr, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 303:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].queryexpr, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 304:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].expressions, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.expression = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.expressions = []Expression{yyDollar[1].expression}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.expressions = append([]Expression{yyDollar[1].expression}, yyDollar[3].expressions...)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1672
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1677
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1684
		{
			yyVAL.expressions = []Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1688
		{
			yyVAL.expressions = append([]Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.expression = nil
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.expression = Else{Statements: yyDollar[2].program}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.expressions = []Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.expressions = append([]Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.expression = nil
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.expression = Else{Statements: yyDollar[2].program}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.expressions = []Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.expressions = append([]Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.expression = nil
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.expression = Else{Statements: yyDollar[2].program}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.expressions = []Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.expressions = append([]Expression{ElseIf{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.expression = nil
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1758
		{
			yyVAL.expression = Else{Statements: yyDollar[2].program}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.expressions = []Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1768
		{
			yyVAL.expressions = append([]Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.expression = nil
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1778
		{
			yyVAL.expression = CaseElse{Statements: yyDollar[2].program}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.expressions = []Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.expressions = append([]Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.expression = nil
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.expression = CaseElse{Statements: yyDollar[2].program}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.expressions = []Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1808
		{
			yyVAL.expressions = append([]Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.expression = nil
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1818
		{
			yyVAL.expression = CaseElse{Statements: yyDollar[2].program}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.expressions = []Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1828
		{
			yyVAL.expressions = append([]Expression{CaseWhen{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].expressions...)
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.expression = nil
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1838
		{
			yyVAL.expression = CaseElse{Statements: yyDollar[2].program}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1848
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1872
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.expression = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.expression = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1910
		{
			yyVAL.expressions = []Expression{yyDollar[1].expression}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1914
		{
			yyVAL.expressions = append([]Expression{yyDollar[1].expression}, yyDollar[3].expressions...)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.token = Token{}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.token = Token{}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.token = Token{}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.token = Token{}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.token = yyDollar[1].token
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1964
		{
			yyVAL.token = yyDollar[1].token
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.token = Token{}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1974
		{
			yyVAL.token = yyDollar[1].token
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.token = Token{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1984
		{
			yyVAL.token = yyDollar[1].token
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.token = Token{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.token = yyDollar[1].token
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.token = yyDollar[1].token
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2004
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
