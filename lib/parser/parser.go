// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const UNION = 57406
const INTERSECT = 57407
const EXCEPT = 57408
const ALL = 57409
const ANY = 57410
const EXISTS = 57411
const IN = 57412
const AND = 57413
const OR = 57414
const NOT = 57415
const BETWEEN = 57416
const LIKE = 57417
const IS = 57418
const NULL = 57419
const DISTINCT = 57420
const WITH = 57421
const RANGE = 57422
const UNBOUNDED = 57423
const PRECEDING = 57424
const FOLLOWING = 57425
const CURRENT = 57426
const ROW = 57427
const CASE = 57428
const IF = 57429
const ELSEIF = 57430
const WHILE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const DO = 57435
const END = 57436
const DECLARE = 57437
const CURSOR = 57438
const FOR = 57439
const FETCH = 57440
const OPEN = 57441
const CLOSE = 57442
const DISPOSE = 57443
const PREPARE = 57444
const NEXT = 57445
const PRIOR = 57446
const ABSOLUTE = 57447
const RELATIVE = 57448
const SEPARATOR = 57449
const PARTITION = 57450
const OVER = 57451
const COMMIT = 57452
const ROLLBACK = 57453
const CONTINUE = 57454
const BREAK = 57455
const EXIT = 57456
const ECHO = 57457
const PRINT = 57458
const PRINTF = 57459
const SOURCE = 57460
const EXECUTE = 57461
const CHDIR = 57462
const PWD = 57463
const RELOAD = 57464
const REMOVE = 57465
const SYNTAX = 57466
const TRIGGER = 57467
const FUNCTION = 57468
const AGGREGATE = 57469
const BEGIN = 57470
const RETURN = 57471
const IGNORE = 57472
const WITHIN = 57473
const VAR = 57474
const SHOW = 57475
const TIES = 57476
const NULLS = 57477
const ROWS = 57478
const CSV = 57479
const JSON = 57480
const FIXED = 57481
const LTSV = 57482
const JSON_ROW = 57483
const JSON_TABLE = 57484
const COUNT = 57485
const JSON_OBJECT = 57486
const AGGREGATE_FUNCTION = 57487
const LIST_FUNCTION = 57488
const ANALYTIC_FUNCTION = 57489
const FUNCTION_NTH = 57490
const FUNCTION_WITH_INS = 57491
const COMPARISON_OP = 57492
const STRING_OP = 57493
const SUBSTITUTION_OP = 57494
const UMINUS = 57495
const UPLUS = 57496

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2576

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 205,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	88, 26,
	90, 26,
	92, 26,
	94, 26,
	155, 26,
	-2, 225,
	-1, 33,
	1, 78,
	88, 78,
	90, 78,
	92, 78,
	94, 78,
	155, 78,
	-2, 237,
	-1, 112,
	17, 205,
	19, 205,
	22, 205,
	24, 205,
	-2, 1,
	-1, 114,
	162, 296,
	-2, 205,
	-1, 123,
	64, 184,
	65, 184,
	66, 184,
	-2, 196,
	-1, 161,
	1, 122,
	88, 122,
	90, 122,
	92, 122,
	94, 122,
	155, 122,
	-2, 219,
	-1, 162,
	1, 163,
	88, 163,
	90, 163,
	92, 163,
	94, 163,
	155, 163,
	-2, 225,
	-1, 167,
	1, 156,
	88, 156,
	90, 156,
	92, 156,
	94, 156,
	155, 156,
	-2, 225,
	-1, 168,
	1, 157,
	88, 157,
	90, 157,
	92, 157,
	94, 157,
	155, 157,
	-2, 225,
	-1, 169,
	1, 158,
	88, 158,
	90, 158,
	92, 158,
	94, 158,
	155, 158,
	-2, 225,
	-1, 170,
	1, 161,
	88, 161,
	90, 161,
	92, 161,
	94, 161,
	155, 161,
	-2, 219,
	-1, 171,
	1, 162,
	88, 162,
	90, 162,
	92, 162,
	94, 162,
	155, 162,
	-2, 225,
	-1, 174,
	1, 169,
	88, 169,
	90, 169,
	92, 169,
	94, 169,
	155, 169,
	-2, 219,
	-1, 175,
	1, 170,
	88, 170,
	90, 170,
	92, 170,
	94, 170,
	155, 170,
	-2, 225,
	-1, 231,
	88, 1,
	92, 1,
	94, 1,
	-2, 205,
	-1, 253,
	161, 342,
	-2, 452,
	-1, 254,
	161, 343,
	-2, 453,
	-1, 255,
	161, 344,
	-2, 454,
	-1, 256,
	161, 345,
	-2, 455,
	-1, 288,
	4, 144,
	134, 144,
	135, 144,
	136, 144,
	137, 144,
	138, 144,
	139, 144,
	140, 144,
	-2, 225,
	-1, 289,
	4, 145,
	134, 145,
	135, 145,
	136, 145,
	137, 145,
	138, 145,
	139, 145,
	140, 145,
	-2, 225,
	-1, 299,
	1, 174,
	88, 174,
	90, 174,
	92, 174,
	94, 174,
	155, 174,
	-2, 225,
	-1, 307,
	94, 4,
	-2, 205,
	-1, 316,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 266,
	-1, 317,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 268,
	-1, 326,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 278,
	-1, 374,
	94, 1,
	-2, 205,
	-1, 388,
	54, 471,
	-2, 388,
	-1, 427,
	1, 80,
	88, 80,
	90, 80,
	92, 80,
	94, 80,
	155, 80,
	-2, 225,
	-1, 428,
	1, 81,
	88, 81,
	90, 81,
	92, 81,
	94, 81,
	155, 81,
	-2, 219,
	-1, 429,
	1, 82,
	88, 82,
	90, 82,
	92, 82,
	94, 82,
	155, 82,
	-2, 225,
	-1, 430,
	1, 83,
	88, 83,
	90, 83,
	92, 83,
	94, 83,
	155, 83,
	-2, 219,
	-1, 431,
	1, 149,
	88, 149,
	90, 149,
	92, 149,
	94, 149,
	155, 149,
	-2, 219,
	-1, 432,
	1, 150,
	88, 150,
	90, 150,
	92, 150,
	94, 150,
	155, 150,
	-2, 225,
	-1, 433,
	1, 151,
	88, 151,
	90, 151,
	92, 151,
	94, 151,
	155, 151,
	-2, 219,
	-1, 434,
	1, 152,
	88, 152,
	90, 152,
	92, 152,
	94, 152,
	155, 152,
	-2, 225,
	-1, 437,
	1, 117,
	88, 117,
	90, 117,
	92, 117,
	94, 117,
	155, 117,
	165, 117,
	-2, 225,
	-1, 442,
	1, 386,
	88, 386,
	90, 386,
	92, 386,
	94, 386,
	155, 386,
	-2, 225,
	-1, 449,
	1, 175,
	88, 175,
	90, 175,
	92, 175,
	94, 175,
	155, 175,
	-2, 225,
	-1, 474,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 279,
	-1, 505,
	94, 1,
	-2, 205,
	-1, 512,
	90, 1,
	92, 1,
	94, 1,
	-2, 205,
	-1, 515,
	1, 201,
	52, 201,
	88, 201,
	90, 201,
	92, 201,
	94, 201,
	97, 201,
	155, 201,
	162, 201,
	-2, 225,
	-1, 548,
	162, 340,
	165, 340,
	-2, 219,
	-1, 590,
	88, 4,
	90, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 593,
	94, 4,
	-2, 205,
	-1, 594,
	94, 4,
	-2, 205,
	-1, 632,
	1, 204,
	88, 204,
	90, 204,
	92, 204,
	94, 204,
	97, 204,
	155, 204,
	162, 204,
	-2, 225,
	-1, 669,
	17, 481,
	79, 481,
	161, 481,
	-2, 87,
	-1, 695,
	88, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 700,
	94, 4,
	-2, 205,
	-1, 701,
	94, 4,
	-2, 205,
	-1, 724,
	88, 1,
	92, 1,
	94, 1,
	-2, 205,
	-1, 763,
	1, 95,
	88, 95,
	90, 95,
	92, 95,
	94, 95,
	155, 95,
	-2, 219,
	-1, 764,
	1, 96,
	88, 96,
	90, 96,
	92, 96,
	94, 96,
	155, 96,
	-2, 225,
	-1, 766,
	94, 6,
	-2, 205,
	-1, 772,
	162, 128,
	165, 128,
	-2, 225,
	-1, 777,
	94, 4,
	-2, 205,
	-1, 839,
	94, 6,
	-2, 205,
	-1, 840,
	94, 6,
	-2, 205,
	-1, 844,
	94, 4,
	-2, 205,
	-1, 848,
	90, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 885,
	88, 6,
	90, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 892,
	155, 62,
	-2, 225,
	-1, 931,
	88, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 934,
	94, 8,
	-2, 205,
	-1, 941,
	94, 6,
	-2, 205,
	-1, 944,
	88, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 971,
	94, 6,
	-2, 205,
	-1, 1005,
	94, 6,
	-2, 205,
	-1, 1009,
	90, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 1011,
	88, 8,
	90, 8,
	92, 8,
	94, 8,
	-2, 205,
	-1, 1014,
	94, 8,
	-2, 205,
	-1, 1015,
	94, 8,
	-2, 205,
	-1, 1032,
	88, 8,
	92, 8,
	94, 8,
	-2, 205,
	-1, 1037,
	94, 8,
	-2, 205,
	-1, 1038,
	94, 8,
	-2, 205,
	-1, 1043,
	88, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 1048,
	94, 8,
	-2, 205,
	-1, 1063,
	94, 8,
	-2, 205,
	-1, 1067,
	90, 8,
	92, 8,
	94, 8,
	-2, 205,
	-1, 1096,
	88, 8,
	92, 8,
	94, 8,
	-2, 205,
}

const yyPrivate = 57344

const yyLast = 3868

var yyAct = [...]int{

	122, 21, 1033, 1061, 1074, 346, 1062, 516, 1003, 843,
	1004, 907, 980, 932, 115, 33, 906, 267, 696, 186,
	513, 120, 562, 949, 113, 450, 187, 806, 504, 388,
	379, 979, 578, 842, 676, 1, 560, 671, 457, 26,
	541, 413, 162, 580, 646, 163, 164, 27, 167, 168,
	169, 171, 581, 175, 633, 236, 248, 458, 441, 617,
	383, 237, 641, 344, 503, 435, 65, 677, 387, 172,
	242, 180, 527, 184, 129, 341, 259, 526, 522, 246,
	220, 191, 80, 78, 68, 404, 393, 89, 181, 494,
	137, 456, 25, 973, 556, 214, 875, 935, 140, 140,
	213, 143, 201, 210, 209, 200, 199, 202, 198, 206,
	291, 205, 204, 21, 229, 180, 207, 208, 183, 214,
	149, 195, 123, 141, 213, 101, 206, 33, 205, 204,
	308, 165, 232, 207, 208, 452, 3, 818, 482, 185,
	819, 235, 829, 213, 213, 984, 464, 239, 230, 201,
	210, 26, 200, 199, 202, 198, 759, 742, 717, 288,
	289, 531, 183, 532, 533, 528, 525, 686, 531, 529,
	532, 533, 528, 525, 688, 685, 529, 689, 299, 178,
	183, 660, 196, 195, 661, 260, 670, 297, 206, 197,
	205, 204, 309, 206, 302, 207, 208, 298, 668, 662,
	207, 208, 279, 658, 25, 636, 588, 312, 585, 214,
	309, 480, 178, 247, 213, 403, 398, 130, 313, 126,
	272, 268, 128, 270, 125, 309, 93, 127, 1022, 196,
	195, 110, 21, 74, 1021, 206, 197, 205, 204, 378,
	309, 309, 207, 208, 996, 995, 33, 994, 3, 538,
	993, 324, 905, 992, 311, 102, 103, 104, 105, 106,
	107, 108, 991, 385, 966, 965, 963, 370, 130, 961,
	26, 530, 959, 958, 948, 653, 947, 929, 123, 318,
	926, 876, 566, 427, 429, 432, 434, 437, 841, 323,
	296, 820, 437, 442, 101, 110, 817, 442, 442, 233,
	791, 449, 74, 790, 789, 788, 358, 359, 21, 787,
	386, 786, 382, 783, 761, 324, 448, 758, 751, 391,
	251, 750, 33, 25, 743, 716, 714, 401, 713, 462,
	712, 705, 396, 703, 684, 264, 682, 669, 667, 140,
	408, 622, 181, 615, 400, 614, 613, 601, 406, 407,
	572, 550, 479, 497, 477, 446, 447, 440, 410, 409,
	467, 132, 424, 420, 371, 304, 414, 3, 305, 74,
	303, 93, 183, 495, 962, 21, 386, 577, 443, 444,
	960, 515, 445, 5, 539, 914, 913, 520, 134, 33,
	912, 911, 910, 909, 881, 466, 871, 867, 864, 862,
	547, 470, 469, 861, 854, 853, 824, 663, 619, 473,
	508, 597, 132, 26, 559, 475, 476, 537, 489, 488,
	487, 492, 536, 486, 102, 103, 104, 253, 254, 255,
	256, 485, 394, 266, 484, 483, 426, 425, 399, 138,
	183, 133, 234, 521, 183, 500, 575, 228, 493, 227,
	551, 392, 498, 499, 182, 591, 546, 411, 587, 132,
	260, 183, 552, 217, 216, 215, 25, 285, 283, 659,
	183, 553, 183, 1011, 271, 885, 590, 592, 545, 555,
	554, 557, 558, 565, 222, 247, 112, 273, 178, 1040,
	364, 598, 583, 468, 865, 423, 863, 101, 182, 412,
	732, 730, 720, 860, 941, 386, 21, 627, 795, 793,
	3, 840, 839, 21, 338, 632, 182, 766, 920, 918,
	33, 138, 391, 251, 133, 720, 859, 33, 275, 796,
	794, 858, 857, 621, 964, 856, 855, 792, 654, 785,
	908, 626, 631, 183, 26, 422, 1095, 1081, 630, 1071,
	339, 26, 356, 357, 1070, 1065, 602, 365, 1051, 1050,
	1042, 218, 620, 366, 1024, 1018, 1010, 1007, 219, 625,
	943, 419, 940, 648, 939, 896, 656, 884, 1063, 852,
	274, 284, 282, 618, 851, 846, 437, 1038, 664, 442,
	780, 21, 93, 779, 21, 21, 666, 25, 655, 651,
	640, 101, 650, 723, 25, 33, 679, 649, 33, 33,
	276, 277, 657, 624, 665, 101, 694, 369, 589, 698,
	699, 509, 507, 1037, 1015, 145, 618, 102, 103, 104,
	253, 254, 255, 256, 1064, 394, 1014, 934, 1063, 478,
	701, 3, 520, 700, 731, 183, 1006, 692, 3, 845,
	1005, 690, 594, 844, 392, 593, 490, 491, 506, 307,
	1048, 735, 505, 1005, 971, 844, 501, 777, 505, 376,
	374, 1096, 710, 1067, 736, 737, 74, 144, 1043, 1032,
	1009, 944, 764, 146, 931, 848, 726, 724, 772, 729,
	695, 725, 512, 755, 231, 741, 21, 1098, 778, 745,
	749, 21, 21, 733, 715, 753, 1045, 147, 182, 1034,
	33, 754, 946, 933, 727, 33, 33, 697, 744, 748,
	372, 775, 774, 238, 203, 21, 781, 782, 378, 769,
	770, 102, 103, 104, 105, 106, 107, 108, 768, 33,
	1088, 1087, 1069, 814, 1068, 102, 103, 104, 105, 106,
	107, 108, 583, 771, 1030, 903, 583, 805, 156, 157,
	801, 902, 850, 26, 849, 693, 1064, 21, 809, 810,
	811, 1006, 845, 506, 1102, 1094, 182, 797, 21, 836,
	540, 33, 604, 1059, 1041, 987, 942, 610, 611, 612,
	800, 183, 33, 722, 827, 1085, 826, 564, 835, 183,
	1028, 900, 183, 847, 628, 618, 573, 1093, 576, 1075,
	1079, 1091, 1092, 183, 221, 1104, 25, 1057, 605, 606,
	607, 608, 609, 1090, 154, 155, 158, 159, 1078, 1077,
	868, 719, 634, 74, 886, 1000, 869, 872, 888, 892,
	21, 21, 874, 967, 1075, 21, 899, 635, 265, 21,
	222, 1089, 836, 836, 33, 33, 887, 890, 635, 33,
	3, 883, 879, 33, 891, 98, 616, 985, 183, 936,
	898, 835, 835, 916, 901, 877, 916, 897, 915, 182,
	100, 919, 882, 822, 1100, 1055, 21, 1076, 74, 361,
	923, 922, 1056, 360, 924, 1058, 74, 815, 836, 465,
	33, 183, 831, 618, 889, 706, 707, 708, 709, 711,
	618, 938, 310, 363, 362, 74, 405, 835, 928, 1073,
	945, 647, 1076, 321, 262, 821, 916, 320, 322, 328,
	327, 957, 21, 99, 972, 21, 74, 752, 292, 927,
	286, 380, 21, 812, 836, 21, 33, 778, 740, 33,
	74, 261, 262, 263, 836, 739, 33, 738, 937, 33,
	645, 747, 531, 835, 532, 533, 644, 618, 514, 990,
	988, 989, 21, 835, 916, 831, 831, 183, 1012, 998,
	951, 702, 893, 894, 836, 531, 33, 532, 533, 528,
	525, 873, 981, 529, 643, 520, 381, 1020, 1019, 799,
	1013, 638, 639, 835, 642, 523, 21, 1027, 240, 81,
	21, 950, 21, 1025, 183, 21, 21, 681, 836, 680,
	33, 831, 836, 293, 33, 687, 33, 1002, 930, 33,
	33, 678, 136, 21, 121, 1049, 135, 835, 21, 21,
	194, 835, 895, 1044, 21, 784, 972, 33, 773, 21,
	803, 804, 33, 33, 767, 618, 836, 765, 33, 414,
	1023, 173, 683, 33, 21, 1084, 1082, 831, 21, 981,
	975, 1080, 981, 981, 969, 835, 66, 831, 33, 586,
	179, 481, 33, 438, 986, 257, 245, 384, 618, 1097,
	981, 244, 211, 212, 1101, 981, 981, 21, 243, 1049,
	306, 224, 225, 397, 999, 1031, 981, 831, 1035, 1036,
	1105, 33, 148, 150, 1008, 917, 728, 244, 402, 878,
	94, 981, 295, 294, 179, 981, 1046, 816, 124, 121,
	290, 1052, 1053, 96, 94, 823, 96, 101, 825, 337,
	93, 831, 1066, 173, 190, 831, 439, 975, 1026, 828,
	975, 975, 1029, 193, 981, 67, 139, 1083, 1047, 970,
	776, 1086, 952, 953, 954, 955, 956, 418, 975, 373,
	10, 101, 201, 975, 975, 200, 199, 202, 198, 831,
	415, 416, 9, 542, 975, 8, 1060, 7, 301, 417,
	1103, 672, 673, 674, 675, 375, 62, 111, 342, 975,
	343, 390, 389, 975, 880, 315, 316, 317, 249, 319,
	252, 1099, 326, 997, 329, 330, 331, 332, 333, 334,
	335, 1072, 1054, 1039, 173, 345, 88, 101, 61, 60,
	64, 57, 975, 63, 58, 802, 637, 904, 367, 518,
	517, 56, 192, 241, 173, 6, 20, 19, 377, 69,
	153, 535, 196, 195, 17, 582, 579, 16, 206, 197,
	205, 204, 436, 15, 14, 207, 208, 102, 103, 104,
	105, 106, 107, 108, 345, 11, 18, 13, 543, 12,
	976, 173, 832, 421, 201, 210, 209, 200, 199, 202,
	198, 974, 561, 830, 453, 451, 4, 568, 570, 2,
	84, 102, 103, 104, 105, 106, 107, 108, 173, 0,
	0, 0, 0, 968, 0, 0, 201, 210, 209, 200,
	199, 202, 198, 0, 0, 0, 101, 0, 569, 0,
	472, 0, 474, 142, 173, 0, 0, 0, 151, 152,
	258, 160, 161, 101, 0, 0, 0, 166, 0, 173,
	1001, 170, 251, 174, 0, 176, 177, 102, 103, 104,
	105, 106, 107, 108, 196, 195, 173, 173, 0, 111,
	206, 197, 205, 204, 101, 0, 173, 207, 208, 798,
	59, 0, 377, 0, 0, 0, 510, 0, 0, 0,
	0, 519, 101, 0, 524, 0, 196, 195, 226, 0,
	251, 0, 206, 197, 205, 204, 0, 0, 131, 207,
	208, 502, 0, 0, 0, 0, 0, 0, 251, 0,
	561, 0, 0, 0, 0, 0, 0, 250, 0, 250,
	0, 0, 561, 0, 0, 250, 269, 250, 0, 0,
	561, 0, 0, 0, 0, 278, 250, 280, 281, 0,
	561, 0, 0, 0, 287, 0, 102, 103, 104, 105,
	106, 107, 108, 0, 0, 121, 0, 0, 0, 0,
	0, 223, 101, 102, 103, 104, 105, 106, 107, 108,
	96, 599, 201, 210, 209, 200, 199, 202, 198, 0,
	345, 0, 173, 0, 314, 0, 0, 173, 173, 173,
	101, 0, 0, 0, 102, 103, 104, 105, 106, 107,
	108, 0, 623, 0, 336, 0, 348, 0, 0, 0,
	0, 629, 102, 103, 104, 253, 254, 255, 256, 101,
	368, 0, 0, 0, 0, 0, 93, 0, 0, 543,
	0, 0, 0, 0, 561, 250, 250, 0, 0, 561,
	0, 0, 0, 0, 0, 756, 757, 0, 250, 250,
	0, 0, 196, 195, 131, 348, 0, 0, 206, 197,
	205, 204, 0, 0, 0, 207, 208, 298, 0, 0,
	0, 0, 325, 428, 430, 431, 433, 201, 210, 209,
	200, 199, 202, 198, 0, 0, 250, 0, 0, 325,
	325, 0, 102, 103, 104, 105, 106, 107, 108, 461,
	704, 463, 0, 0, 0, 173, 173, 173, 173, 173,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 718,
	102, 103, 104, 105, 106, 107, 108, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 519, 0, 0, 0,
	0, 0, 734, 173, 0, 0, 0, 0, 0, 102,
	103, 104, 105, 106, 107, 108, 0, 196, 195, 746,
	0, 173, 0, 206, 197, 205, 204, 0, 0, 921,
	207, 208, 348, 0, 0, 0, 0, 0, 760, 0,
	534, 0, 0, 250, 0, 0, 0, 0, 544, 250,
	548, 0, 325, 250, 250, 561, 0, 377, 325, 325,
	0, 0, 544, 563, 0, 0, 567, 544, 544, 571,
	0, 0, 0, 574, 563, 0, 0, 584, 0, 0,
	0, 0, 201, 210, 209, 200, 199, 202, 198, 0,
	0, 325, 496, 496, 496, 0, 0, 0, 0, 0,
	0, 531, 372, 532, 533, 528, 525, 807, 808, 529,
	0, 0, 561, 0, 0, 595, 596, 0, 0, 563,
	0, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	0, 348, 603, 395, 0, 131, 0, 131, 131, 0,
	0, 0, 201, 210, 209, 200, 199, 202, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 866, 0,
	0, 0, 196, 195, 0, 0, 0, 870, 206, 197,
	205, 204, 0, 0, 0, 207, 208, 0, 0, 173,
	0, 250, 0, 0, 0, 0, 652, 0, 0, 0,
	544, 0, 0, 0, 121, 201, 210, 209, 200, 199,
	202, 198, 544, 0, 0, 0, 0, 0, 0, 0,
	544, 0, 0, 0, 0, 0, 511, 567, 0, 0,
	544, 0, 196, 195, 0, 0, 325, 0, 206, 197,
	205, 204, 0, 925, 721, 207, 208, 691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 210, 209,
	200, 199, 202, 198, 0, 0, 0, 0, 0, 0,
	0, 395, 0, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 196, 195, 0, 0, 0,
	0, 206, 197, 205, 204, 0, 0, 348, 207, 208,
	0, 0, 0, 377, 0, 250, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	0, 173, 0, 250, 544, 0, 0, 0, 0, 544,
	0, 563, 0, 0, 0, 544, 544, 196, 195, 0,
	0, 762, 763, 206, 197, 205, 204, 0, 121, 0,
	207, 208, 0, 0, 0, 0, 0, 325, 0, 519,
	201, 600, 209, 200, 199, 202, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 471, 209, 200, 199,
	202, 198, 0, 0, 0, 395, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	250, 250, 0, 813, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 195, 0, 0, 0, 0, 206, 197, 205, 204,
	0, 0, 0, 207, 208, 196, 195, 0, 325, 0,
	0, 206, 197, 205, 204, 0, 0, 0, 207, 208,
	0, 0, 0, 250, 0, 0, 0, 0, 0, 395,
	395, 395, 0, 0, 0, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 75, 76,
	77, 0, 98, 79, 93, 96, 94, 95, 22, 71,
	0, 0, 0, 35, 36, 0, 0, 0, 0, 0,
	28, 0, 0, 111, 0, 29, 44, 0, 30, 0,
	0, 0, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 325, 0, 0, 0,
	0, 0, 90, 325, 0, 0, 91, 0, 0, 0,
	99, 0, 74, 0, 0, 0, 0, 0, 0, 978,
	977, 0, 837, 0, 0, 0, 0, 0, 32, 97,
	0, 39, 37, 38, 34, 40, 982, 983, 0, 0,
	0, 0, 0, 42, 43, 459, 460, 0, 47, 48,
	49, 50, 41, 52, 53, 54, 45, 51, 55, 0,
	325, 0, 838, 0, 0, 31, 46, 102, 103, 104,
	105, 106, 107, 108, 110, 0, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 1016, 1017, 0, 0, 0,
	348, 82, 83, 92, 70, 101, 75, 76, 77, 0,
	98, 79, 93, 96, 94, 95, 22, 71, 0, 0,
	0, 35, 36, 0, 0, 0, 0, 0, 28, 0,
	0, 111, 0, 29, 44, 0, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 0,
	74, 0, 0, 0, 0, 0, 0, 455, 454, 0,
	72, 325, 0, 0, 0, 0, 32, 97, 0, 39,
	37, 38, 34, 40, 0, 0, 0, 0, 0, 0,
	0, 42, 43, 459, 460, 73, 47, 48, 49, 50,
	41, 52, 53, 54, 45, 51, 55, 0, 0, 0,
	0, 0, 0, 31, 46, 102, 103, 104, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 92, 70, 101, 75, 76, 77, 0, 98, 79,
	93, 96, 94, 95, 22, 71, 0, 0, 0, 35,
	36, 0, 0, 0, 0, 0, 28, 0, 0, 111,
	0, 29, 44, 0, 30, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 74, 0,
	0, 0, 0, 0, 0, 834, 833, 0, 837, 0,
	0, 0, 0, 0, 32, 97, 0, 39, 37, 38,
	34, 40, 0, 0, 0, 0, 0, 0, 0, 42,
	43, 0, 0, 0, 47, 48, 49, 50, 41, 52,
	53, 54, 45, 51, 55, 0, 0, 0, 838, 0,
	0, 31, 46, 102, 103, 104, 105, 106, 107, 108,
	110, 0, 87, 85, 86, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 83, 92,
	70, 101, 75, 76, 77, 0, 98, 79, 93, 96,
	94, 95, 22, 71, 0, 0, 0, 35, 36, 0,
	0, 0, 0, 0, 28, 0, 0, 111, 0, 29,
	44, 0, 30, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 0, 0, 0, 99, 0, 74, 0, 0, 0,
	0, 0, 0, 24, 23, 0, 72, 0, 0, 0,
	0, 0, 32, 97, 0, 39, 37, 38, 34, 40,
	0, 0, 0, 0, 0, 0, 0, 42, 43, 0,
	0, 73, 47, 48, 49, 50, 41, 52, 53, 54,
	45, 51, 55, 0, 0, 0, 0, 0, 0, 31,
	46, 102, 103, 104, 105, 106, 107, 108, 110, 0,
	87, 85, 86, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 83, 92, 70, 101,
	75, 76, 77, 0, 98, 79, 93, 96, 94, 95,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 111, 0, 0, 0, 0,
	101, 75, 76, 77, 0, 98, 79, 93, 96, 94,
	95, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 91, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 90, 0, 0, 0, 91,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 350, 0, 102,
	103, 104, 105, 106, 107, 108, 110, 0, 351, 85,
	349, 352, 353, 354, 355, 0, 0, 0, 0, 0,
	0, 347, 0, 82, 83, 92, 70, 340, 350, 0,
	102, 103, 104, 105, 106, 107, 108, 110, 0, 351,
	85, 349, 352, 353, 354, 355, 0, 0, 0, 0,
	0, 0, 347, 0, 82, 83, 92, 70, 101, 75,
	76, 77, 0, 98, 79, 93, 96, 94, 95, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 111, 0, 0, 0, 101, 75,
	76, 77, 0, 98, 79, 93, 96, 94, 95, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 91, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 90, 0, 0, 0, 91, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 116, 0, 0, 0, 0, 0, 0, 0, 189,
	97, 0, 0, 0, 0, 0, 350, 0, 102, 103,
	104, 105, 106, 107, 108, 110, 0, 351, 85, 349,
	352, 353, 354, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 83, 92, 70, 188, 0, 102, 103,
	104, 105, 106, 107, 108, 110, 0, 87, 85, 86,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 83, 92, 70, 101, 75, 76, 77,
	0, 98, 79, 93, 96, 94, 95, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 111, 0, 0, 0, 101, 75, 76, 77,
	0, 98, 79, 93, 96, 94, 95, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 91, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 90, 0, 0, 0, 91, 0, 0, 0, 99,
	265, 0, 0, 0, 0, 0, 0, 0, 119, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 118, 0, 102, 103, 104, 105,
	106, 107, 108, 110, 0, 87, 85, 86, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	82, 83, 92, 70, 118, 0, 102, 103, 104, 105,
	106, 107, 108, 110, 0, 87, 85, 86, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 83, 92, 70, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 74,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 118, 0, 102, 103, 104, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 70, 118, 0, 102, 103, 104, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 70, 101, 75, 76, 77, 0, 98, 79, 93,
	96, 94, 95, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 111, 0,
	0, 0, 101, 75, 76, 77, 0, 98, 79, 93,
	96, 94, 95, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 549, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	118, 0, 102, 103, 104, 105, 106, 107, 108, 110,
	0, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 83, 92, 114,
	118, 0, 102, 103, 104, 105, 106, 107, 108, 110,
	0, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 83, 92, 70,
	101, 75, 300, 77, 0, 98, 79, 93, 96, 94,
	95, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 91,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 118, 0,
	102, 103, 104, 105, 106, 107, 108, 110, 0, 87,
	85, 86, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 83, 92, 70,
}
var yyPact = [...]int{

	2607, -1000, 331, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3518, 3360, -1000, -1000, 200, 363, 1000,
	996, 360, 1525, -1000, 581, 1121, 1107, 1496, 1496, 721,
	1496, 3360, -1000, -1000, 3360, 3360, 1468, 3360, 3360, 3360,
	3360, 3360, 3360, -1000, 1496, 1496, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 336, -1000, -1000, -1000, -1000,
	3330, -1000, 2984, 1138, 1009, -1000, -1000, -1000, -1000, -1000,
	-1000, 1827, 3360, 3360, -42, 304, 303, 302, -1000, 411,
	298, 3360, 3360, -1000, -1000, -1000, -1000, 1496, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 288,
	286, -52, 2607, 603, 3330, -1000, 281, 280, 278, 3360,
	633, 1827, -1000, 963, 1073, 1061, 1388, 1060, 1322, 887,
	770, -1000, 754, 3360, 1388, 1496, 1388, -1000, 770, 55,
	335, -1000, 484, -1000, 1496, 1370, 1496, 1496, 425, 424,
	-1000, 878, -1000, 1496, -1000, -1000, -1000, -1000, 3360, 3360,
	1112, 48, 876, 980, 1105, -1000, 1104, -1000, -1000, 125,
	-42, -1000, -1000, 1412, -42, -1000, -1000, 3706, 3360, 32,
	208, 203, 206, 251, 566, 60, 842, 1129, 278, -1000,
	-1000, -1000, 53, 1496, -1000, 3360, 3360, 3360, 777, 3360,
	853, 90, 3360, 862, 3360, 3360, 3360, 3360, 3360, 3360,
	3360, -1000, -1000, 1133, 3172, 2765, 770, 770, 90, 90,
	819, 846, -1000, -1000, 1102, -1000, 414, 770, 3360, 611,
	-1000, 2607, 203, 202, 3360, 630, 578, 577, 3360, 890,
	948, 1099, 1064, 1129, 493, 1388, 1083, 51, -1000, -1000,
	-1000, -1000, 277, -1000, -1000, -1000, -1000, 1388, 493, 1100,
	50, 849, 849, 849, 2796, -1000, 197, -1000, 296, 338,
	1147, 3360, 1129, 3360, 448, 334, 276, 275, -1000, -1000,
	-1000, -1000, 3360, 3360, 3360, 3360, 3360, 1058, -1000, -1000,
	1141, 3360, 3360, 1124, 1124, 1388, 3360, 3360, 3360, -1000,
	3360, 1827, -1000, -1000, -1000, -1000, 1099, 2291, 1496, 1129,
	1496, 76, 829, 1009, 332, -47, -30, -30, 856, 1945,
	3360, 90, 3360, -1000, 3330, -1000, -30, 90, 90, 37,
	37, -1000, -1000, -1000, 79, 1102, -1000, -1000, 192, 3360,
	-1000, 190, 46, 1053, -1000, 1827, -1000, -1000, -23, 274,
	273, 270, 262, 259, 258, 257, 3360, 3142, -1000, -1000,
	90, 212, 212, 212, 777, -1000, 3360, 1246, -1000, -1000,
	570, -1000, 3360, 528, 2607, 527, 3360, 1775, 601, 916,
	3360, 2954, 1064, 959, 3360, -1000, 45, -1000, 106, 1223,
	-1000, -1000, 290, -1000, 256, -1000, 223, 1339, 1388, 3548,
	289, 1064, 493, 1370, 251, -1000, 251, 251, -1000, -1000,
	253, 1339, 1496, 754, -1000, 121, 1167, 1339, 1496, 188,
	-1000, 1827, 597, 1496, 754, 215, 1496, -1000, -42, -1000,
	-42, -42, -1000, -42, -1000, -1000, 43, 1051, 1129, -1000,
	-1000, -1000, 41, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	524, 321, -1000, -1000, 3518, 3360, -1000, -1000, -1000, -1000,
	-1000, 562, -1000, 559, 1496, 1496, -1000, 250, 1496, -1000,
	-1000, 3360, 1930, -1000, -30, -1000, -1000, -1000, 185, -1000,
	2796, 1496, 3172, 770, 770, 770, 770, 3360, 3360, 3360,
	184, 183, 181, 795, -1000, 154, -1000, 247, -1000, -1000,
	463, 179, 3360, 519, 576, 2607, 3360, 718, -1000, -1000,
	1827, 3360, 2607, 445, 3360, 779, -1000, 40, 952, 1827,
	-1000, 959, 957, 946, 1827, 912, 906, 865, 865, 907,
	493, -1000, -1000, -1000, -1000, 1496, 113, 3360, 90, 1339,
	-1000, 1099, 38, 312, -22, -1000, 19, 34, -42, -52,
	246, 1339, -1000, 1064, -1000, 859, -1000, -1000, 859, 1339,
	176, 33, 175, 21, -1000, 1154, 1496, 990, -1000, 1339,
	976, 974, -1000, -1000, -1000, 174, -1000, 1034, 172, 10,
	-1000, -1000, 2, 984, 12, 3360, 1496, -1000, 3360, 676,
	2291, 599, 627, 2291, 2291, 550, 547, 754, 171, 1102,
	3360, -1000, -1000, -1000, 169, 3360, 3360, 3360, 3142, 3360,
	168, 166, 164, -1000, -1000, -1000, 90, 163, -7, 3360,
	-1000, 751, 371, 1722, 706, 509, -1000, 596, -1000, 1662,
	624, 1097, -1000, -1000, 768, 367, 2954, 365, -1000, -1000,
	957, -1000, 3360, 3360, 493, 493, 903, -1000, 901, 894,
	865, -1000, -1000, -1000, -8, -1000, 162, 1064, 1339, 3360,
	-1000, 3360, 1370, 1339, 159, -1000, 156, 875, 1339, 1031,
	1496, -1000, -1000, -1000, 1339, 1339, 155, -9, 3360, 152,
	1496, 3360, 1029, 389, 1026, 1129, 1129, 3360, 1020, 1129,
	-1000, -1000, -1000, -1000, -1000, 2291, 575, 3360, 499, 496,
	2291, 2291, 151, 1017, 1102, 430, 149, 147, 143, 142,
	141, 138, 428, 400, 399, -1000, -1000, 90, 1214, -1000,
	953, -1000, -1000, 703, 2607, -1000, -1000, 3360, -1000, -1000,
	-1000, -1000, 1013, 963, 1827, -1000, 907, 1696, 493, 493,
	493, 889, 3360, 871, -1000, -1000, 1827, 134, -25, 129,
	863, 857, 245, -1000, 754, -1000, -1000, -1000, 1154, 1496,
	1827, -1000, -1000, -42, -1000, 754, 2449, 384, -1000, -1000,
	-1000, 984, -1000, 383, 126, 561, 491, 2291, 594, 675,
	673, 490, 485, -1000, 244, 243, 427, 426, 423, 422,
	417, 394, 242, 238, 361, 237, 359, -1000, 3360, 236,
	-1000, 685, -1000, -1000, -1000, 890, -1000, 3360, 235, 1696,
	930, 907, 493, -66, 119, 90, -1000, -1000, -1000, 3360,
	836, 233, 90, -1000, 1339, -1000, -1000, -1000, -1000, 483,
	320, -1000, -1000, 3518, 3360, -1000, -1000, 2984, 3360, 2449,
	2449, 1014, 481, 573, 2291, 3360, 715, -1000, 2291, -1000,
	-1000, 672, 666, 754, 432, 232, 231, 230, 229, 225,
	224, 432, 432, 410, 432, 409, 1517, 963, -1000, 916,
	1827, 1496, -1000, 3360, 907, -1000, -1000, -1000, 118, 90,
	-1000, 1339, -1000, 115, -1000, 2449, 593, 623, 544, 27,
	799, 1129, -1000, 480, 478, 376, 699, 476, -1000, 590,
	-1000, 622, -1000, -1000, 114, 112, -1000, 966, 932, 432,
	432, 432, 432, 432, 432, 111, 963, 110, 219, 107,
	213, -1000, 104, 437, 103, 1827, -1000, -1000, 102, 817,
	-1000, 2449, 572, 3360, 2133, 1496, 1496, 75, 797, -1000,
	-1000, 2449, -1000, 698, 2291, -1000, 3360, -1000, -1000, -1000,
	923, 3360, 100, 91, 88, 85, 83, 82, -1000, -1000,
	432, -1000, 432, -1000, 1085, -1000, 809, 90, -1000, 558,
	473, 2449, 589, 472, 318, -1000, -1000, 3518, 3360, -1000,
	-1000, -1000, 543, 531, 1496, 1496, 471, -1000, 684, 2954,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 72, 66, -1000,
	90, -1000, -1000, 470, 571, 2449, 3360, 714, -1000, 2449,
	665, 2133, 588, 619, 2133, 2133, 530, 494, -1000, -1000,
	353, -1000, -1000, -1000, 697, 466, -1000, 587, -1000, 616,
	-1000, -1000, 2133, 568, 3360, 465, 464, 2133, 2133, -1000,
	811, -1000, 696, 2449, -1000, 3360, 546, 461, 2133, 582,
	655, 653, 460, 455, -1000, 838, 747, 746, 725, -1000,
	683, 453, 486, 2133, 3360, 709, -1000, 2133, -1000, -1000,
	652, 651, 780, 741, -1000, 729, 722, -1000, -1000, -1000,
	-1000, 688, 452, -1000, 580, -1000, 607, -1000, -1000, 803,
	-1000, -1000, -1000, -1000, -1000, 687, 2133, -1000, 3360, -1000,
	732, -1000, -1000, 678, -1000, -1000,
}
var yyPgo = [...]int{

	0, 35, 25, 142, 93, 135, 57, 1299, 91, 26,
	38, 1296, 1295, 1294, 1293, 31, 12, 1291, 1282, 1280,
	1279, 1277, 1276, 1275, 67, 34, 37, 1264, 1263, 1262,
	65, 1257, 52, 1256, 1255, 43, 32, 1254, 1250, 1249,
	1247, 1246, 383, 1245, 94, 74, 1100, 1243, 70, 60,
	78, 62, 23, 30, 54, 20, 47, 1242, 81, 1241,
	83, 82, 880, 1009, 0, 63, 87, 59, 7, 1240,
	1239, 1236, 1235, 1380, 1234, 89, 1233, 1231, 1230, 299,
	1229, 1228, 1226, 5, 16, 252, 11, 1223, 1222, 4,
	1221, 1211, 56, 1210, 1208, 86, 76, 79, 1202, 29,
	1201, 27, 1200, 1198, 1196, 21, 61, 1195, 36, 17,
	58, 68, 22, 75, 1187, 1185, 1183, 40, 1182, 1170,
	28, 64, 9, 33, 10, 8, 6, 3, 55, 1169,
	18, 1160, 13, 1159, 2, 1158, 1300, 66, 19, 14,
	1156, 90, 1076, 1155, 84, 335, 80, 77, 44, 72,
	85, 1153, 41, 724,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 43, 43,
	44, 44, 44, 44, 45, 45, 46, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	53, 54, 54, 55, 55, 56, 56, 57, 57, 58,
	58, 59, 59, 59, 59, 59, 59, 60, 61, 62,
	62, 62, 62, 62, 63, 63, 63, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 65, 66, 66, 66, 67, 67,
	68, 68, 69, 69, 70, 70, 71, 71, 71, 72,
	72, 73, 74, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 77, 77, 77, 77, 77,
	77, 77, 78, 78, 78, 78, 79, 79, 80, 80,
	80, 80, 80, 81, 81, 81, 81, 81, 81, 82,
	82, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 84, 85, 85, 86, 86, 87, 87,
	88, 88, 88, 89, 89, 89, 90, 90, 91, 91,
	92, 92, 93, 93, 93, 93, 94, 94, 94, 94,
	95, 95, 98, 98, 98, 98, 99, 99, 99, 99,
	99, 99, 100, 100, 100, 100, 100, 100, 101, 101,
	102, 102, 103, 103, 103, 104, 105, 105, 106, 106,
	107, 107, 108, 108, 109, 109, 110, 110, 111, 111,
	96, 96, 97, 97, 112, 112, 113, 113, 114, 114,
	114, 114, 115, 116, 117, 117, 118, 118, 118, 118,
	118, 118, 118, 118, 119, 119, 120, 120, 121, 121,
	122, 122, 123, 123, 124, 124, 125, 125, 126, 126,
	127, 127, 128, 128, 129, 129, 130, 130, 131, 131,
	132, 132, 133, 133, 134, 134, 135, 135, 136, 136,
	136, 136, 136, 136, 136, 136, 137, 138, 138, 139,
	140, 140, 141, 141, 142, 143, 144, 145, 145, 146,
	146, 147, 147, 148, 148, 149, 149, 150, 150, 151,
	151, 152, 152, 153, 153,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 5, 7, 10, 12,
	5, 4, 4, 4, 1, 1, 3, 2, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 0, 3,
	4, 0, 2, 0, 2, 0, 2, 6, 9, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 3, 1, 6, 1, 3,
	1, 3, 2, 4, 1, 1, 0, 1, 1, 1,
	1, 3, 3, 3, 1, 6, 3, 3, 3, 3,
	4, 4, 5, 6, 6, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 3,
	2, 2, 3, 3, 2, 2, 0, 1, 4, 3,
	4, 4, 4, 5, 5, 5, 5, 5, 1, 5,
	10, 8, 9, 9, 9, 9, 9, 9, 8, 8,
	10, 8, 10, 2, 1, 5, 0, 3, 2, 5,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 6, 6, 8,
	1, 1, 1, 6, 6, 1, 1, 2, 3, 1,
	1, 3, 4, 5, 6, 7, 5, 6, 2, 4,
	1, 1, 1, 3, 1, 5, 0, 1, 4, 5,
	0, 2, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 6, 9,
	5, 8, 7, 3, 1, 3, 10, 13, 9, 12,
	9, 12, 8, 11, 5, 6, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	1, 3, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 0, 1, 0, 1, 1, 1, 0, 1, 0,
	1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -43, -114, -115, -118,
	-119, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -64, 15, 87, 86, -8, -10, -56, 27, 32,
	35, 132, 95, -139, 101, 20, 21, 99, 100, 98,
	102, 119, 110, 111, 33, 123, 133, 115, 116, 117,
	118, 124, 120, 121, 122, 125, -59, -77, -74, -73,
	-80, -81, -104, -76, -78, -137, -142, -143, -144, -39,
	161, 16, 89, 114, 79, 5, 6, 7, -60, 10,
	-61, -63, 158, 159, -136, 144, 145, 143, -82, -66,
	69, 73, 160, 11, 13, 14, 12, 96, 9, 77,
	-62, 4, 134, 135, 136, 137, 138, 139, 140, 146,
	141, 30, 155, -64, 161, -139, 87, 27, 132, 86,
	-105, -63, -64, -44, -46, 24, 19, 27, 22, -45,
	17, -73, 161, 161, 25, 36, 36, -141, 161, -140,
	-137, -141, -136, -137, 96, 44, 102, 126, -142, -144,
	-142, -136, -136, -38, 103, 104, 37, 38, 105, 106,
	-136, -136, -64, -64, -64, -144, -136, -64, -64, -64,
	-136, -64, -109, -63, -136, -64, -136, -136, 152, -63,
	-64, -109, -42, -56, -64, -137, -138, -9, 132, 95,
	6, -58, -57, -151, 31, 151, 150, 157, 76, 74,
	73, 70, 75, -153, 159, 158, 156, 163, 164, 72,
	71, -63, -63, 166, 161, 161, 161, 161, 150, 157,
	-146, -153, 73, -73, -63, -63, -136, 161, 161, 166,
	-1, 91, -109, -79, 161, -105, -128, -106, 90, -52,
	45, -47, -48, 25, 18, 25, -97, -95, -92, -94,
	-136, 30, -93, 137, 138, 139, 140, 25, 18, -96,
	-92, 64, 65, 66, -145, 78, -79, -109, -95, -136,
	-95, -145, 165, 152, 96, 44, 126, 127, -136, -92,
	-136, -136, 157, 43, 157, 43, 62, -136, -64, -64,
	18, 62, 62, 43, 18, 18, 165, 62, 165, -64,
	6, -63, 162, 162, 162, 162, -46, 93, 70, 165,
	70, -137, -138, 165, -136, -63, -63, -63, -146, -63,
	74, 70, 75, -66, 161, -73, -63, 68, 67, -63,
	-63, -63, -63, -63, -63, -63, -136, 6, -79, -145,
	162, -113, -103, -102, -65, -63, -83, 156, -136, 145,
	132, 143, 146, 147, 148, 149, -145, -145, -66, -66,
	74, 70, 68, 67, 76, 143, -145, -63, -136, 6,
	-1, 162, 90, -129, 92, -107, 92, -63, -64, -53,
	51, 48, -48, -49, 23, -138, -137, -111, -99, -98,
	-100, 29, 161, -95, 142, -73, -95, 20, 165, 161,
	-95, -111, 18, 165, -150, 67, -150, -150, -113, 162,
	62, 161, 161, -152, 28, 33, 34, 42, 20, -79,
	-141, -63, 97, 161, 28, 161, 161, -64, -136, -64,
	-136, -136, -64, -136, -64, -30, -29, -64, 25, 5,
	-30, -110, -64, -144, -144, -95, -110, -110, -109, -64,
	-2, -12, -5, -13, 87, 86, -8, -10, -6, 112,
	113, -136, -138, -136, 70, 70, -58, 28, 161, -60,
	-61, 71, -63, -66, -63, -66, -66, 162, -79, 162,
	165, 28, 161, 161, 161, 161, 161, 161, 161, 161,
	-79, -79, -65, -66, -75, 161, -73, 141, -75, -75,
	-146, -79, 165, -121, -120, 92, 88, 94, -1, 94,
	-63, 91, 91, -55, 52, -64, -68, -69, -70, -63,
	-83, -49, -50, 46, -63, 60, -147, -149, 59, 63,
	165, 55, 57, 58, -136, 28, -99, 161, 26, 161,
	-42, -117, -116, -62, -136, -97, -92, -64, -136, 30,
	62, 161, -49, -111, -96, -45, -44, -45, -45, 161,
	-108, -62, -112, -136, -42, -24, 161, -136, -62, 161,
	-62, -136, 162, -42, -136, -112, -42, 162, -36, -33,
	-35, -32, -34, -137, -136, 165, 28, -138, 165, 94,
	155, -64, -105, 93, 93, -136, -136, 161, -112, -63,
	71, 162, -113, -136, -79, -145, -145, -145, -145, -145,
	-79, -79, -79, 162, 162, 162, 71, -67, -66, 161,
	99, 70, 162, -63, 94, -121, -1, -64, 86, -63,
	-1, 97, -64, -54, 53, 79, 165, -71, 49, 50,
	-50, -51, 47, 48, 54, 54, -148, 56, -148, -147,
	-149, -111, -136, 162, -64, -67, -108, -48, 165, 157,
	162, 165, 165, 161, -108, -49, -108, 162, 165, 162,
	165, -26, 37, 38, 39, 40, -25, -24, 41, -108,
	43, 43, 162, 28, 162, 165, 165, 41, 162, 165,
	-30, -136, -110, 89, -2, 91, -130, 90, -2, -2,
	93, 93, -42, 162, -63, 162, -79, -79, -79, -79,
	-65, -79, 162, 162, 162, -66, 162, 165, -63, 80,
	131, 162, 87, 94, 91, -106, -128, 90, 19, -54,
	134, -68, 135, -51, -63, -109, -99, -99, 54, 54,
	54, -148, 165, 162, -49, -117, -63, -79, -92, -108,
	162, 162, 62, -108, -152, -112, -62, -62, 162, 165,
	-63, 162, -136, -136, -64, 28, 128, 28, -32, -35,
	-35, -137, -64, 28, -36, -2, -131, 92, -64, 94,
	94, -2, -2, 162, 28, 109, 162, 162, 162, 162,
	162, 162, 109, 109, 130, 109, 130, -67, 165, 46,
	87, -1, -72, 37, 38, -52, -101, 61, 62, -99,
	-99, -99, 54, -136, -64, 26, -42, 162, 162, 165,
	162, 62, 26, -42, 161, -42, -26, -25, -42, -3,
	-14, -5, -18, 87, 86, -15, -16, 89, 129, 128,
	128, 162, -123, -122, 92, 88, 94, -2, 91, 89,
	89, 94, 94, 161, 161, 109, 109, 109, 109, 109,
	109, 161, 161, 135, 161, 135, -63, 161, -120, -53,
	-63, 161, -101, 61, -99, 162, 162, -67, -79, 26,
	-42, 161, -67, -108, 94, 155, -64, -105, -64, -137,
	-138, -9, -64, -3, -3, 28, 94, -123, -2, -64,
	86, -2, 89, 89, -42, -85, -84, -86, 108, 161,
	161, 161, 161, 161, 161, -84, -86, -85, 109, -84,
	109, 162, -52, -55, -112, -63, 162, -67, -108, 162,
	-3, 91, -132, 90, 93, 70, 70, -137, -138, 94,
	94, 128, 87, 94, 91, -130, 90, 162, 162, -52,
	45, 48, -85, -85, -85, -85, -85, -84, 162, 162,
	161, 162, 161, 162, 97, 162, 162, 26, -42, -3,
	-133, 92, -64, -4, -17, -5, -19, 87, 86, -15,
	-16, -6, -136, -136, 70, 70, -3, 87, -2, 48,
	-109, 162, 162, 162, 162, 162, 162, -85, -84, 19,
	26, -42, -67, -125, -124, 92, 88, 94, -3, 91,
	94, 155, -64, -105, 93, 93, -136, -136, 94, -122,
	-68, 162, 162, -67, 94, -125, -3, -64, 86, -3,
	89, -4, 91, -134, 90, -4, -4, 93, 93, -87,
	136, 87, 94, 91, -132, 90, -4, -135, 92, -64,
	94, 94, -4, -4, -88, 74, 81, 6, 84, 87,
	-3, -127, -126, 92, 88, 94, -4, 91, 89, 89,
	94, 94, -90, 81, -89, 6, 84, 82, 82, 85,
	-124, 94, -127, -4, -64, 86, -4, 89, 89, 71,
	82, 82, 83, 85, 87, 94, 91, -134, 90, -91,
	81, -89, 87, -4, 83, -126,
}
var yyDef = [...]int{

	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 376, 46, 47, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 139,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 171, 0, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 238, 239, 240, 241,
	205, 243, 0, 39, 479, 211, 212, 213, 214, 215,
	216, 0, 0, 0, 219, 0, 0, 0, 308, 469,
	0, 0, 0, 456, 464, 465, 466, 0, 217, 218,
	224, 448, 449, 450, 451, 452, 453, 454, 455, 0,
	0, 0, -2, 225, -2, 237, 0, 0, 0, 376,
	0, 377, 225, -2, 188, 0, 0, 0, 0, 0,
	467, 185, 205, 296, 0, 0, 0, 76, 467, 462,
	460, 77, 0, 79, 0, 0, 0, 0, 0, 0,
	84, 108, 110, 0, 140, 141, 142, 143, 0, 0,
	0, -2, -2, 225, 225, 155, 167, -2, -2, -2,
	-2, -2, 166, 384, -2, -2, 172, 173, 0, 0,
	225, 0, 0, 0, 225, 236, 0, 0, 37, 38,
	40, 206, 209, 0, 480, 0, 483, 484, 469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 0, 296, 0, 467, 467, 483, 484,
	0, 0, 470, 284, 294, 295, 0, 467, 0, 0,
	3, -2, 0, 0, 296, 0, 434, 380, 0, 198,
	0, 188, 190, 0, 0, 0, 0, 392, 350, 351,
	340, 341, 0, -2, -2, -2, -2, 0, 0, 0,
	390, 477, 477, 477, 0, 468, 0, 297, 0, 481,
	0, 296, 0, 0, 0, 0, 0, 0, 111, 116,
	124, 138, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	212, 459, 226, 242, 245, 261, 188, -2, 0, 0,
	0, 0, 0, 479, 0, 262, -2, -2, 0, 0,
	0, 0, 0, 275, 205, 246, -2, 0, 0, 285,
	286, 287, 288, 289, 292, 293, 220, 222, 0, 296,
	299, 0, 396, 372, 374, 370, 371, 244, 219, 0,
	0, 0, 0, 0, 0, 0, 296, 296, 267, 269,
	0, 0, 0, 0, 469, 148, 296, 0, 221, 223,
	418, 301, 0, 0, -2, 0, 0, 0, 225, 203,
	0, 0, 190, 192, 0, 187, 457, 189, -2, 356,
	359, 360, 205, 352, 0, 355, 205, 0, 0, 0,
	0, 190, 0, 0, 0, 478, 0, 0, 186, 302,
	0, 0, 0, 205, 482, 0, 0, 0, 0, 0,
	463, 461, 205, 0, 205, 0, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, 109, 119, -2, 0, 121,
	123, 164, -2, 153, 154, 168, 159, 160, 385, -2,
	0, 0, 41, 42, 0, 376, 51, 52, 53, 28,
	29, 0, 458, 0, 0, 0, 210, 0, 0, 270,
	271, 0, 0, 276, -2, 280, 282, 298, 0, 300,
	0, 0, 296, 467, 467, 467, 467, 296, 296, 296,
	0, 0, 0, 0, 277, 205, 264, 0, 281, 283,
	0, 0, 0, 0, 418, -2, 0, 0, 435, 375,
	381, 0, -2, 176, 0, -2, 197, 250, 256, 254,
	255, 192, 194, 0, 191, 0, 0, 473, 473, 471,
	0, 472, 475, 476, 357, 0, 471, 0, 0, 0,
	400, 188, 404, 0, 219, 393, 0, 225, -2, 341,
	0, 0, 414, 190, 391, 181, 184, 182, 183, 0,
	0, 382, 0, 394, 89, 101, 0, 97, 92, 0,
	0, 0, 305, 106, 107, 0, 115, 0, 0, 131,
	132, 126, 129, 125, 0, 0, 0, 112, 0, 0,
	-2, 225, 0, -2, -2, 0, 0, 205, 0, 272,
	0, 303, 397, 373, 0, 296, 296, 296, 296, 296,
	0, 0, 0, 304, 306, 307, 0, 0, 248, 0,
	146, 0, 309, 0, 0, 0, 419, 225, 45, 378,
	432, 0, -2, 199, 201, 0, 0, 252, 257, 258,
	194, 180, 0, 0, 0, 0, 0, 474, 0, 0,
	473, 389, 358, 361, 225, 398, 0, 190, 0, 0,
	346, 296, 0, 0, 0, 415, 0, 0, 0, -2,
	0, 90, 102, 103, 0, 0, 0, 99, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	120, 118, 387, 32, 5, -2, 438, 0, 0, 0,
	-2, -2, 0, 0, 273, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 263, 0, 0, 147,
	0, 247, 43, 0, -2, 379, 433, 0, 177, 200,
	202, 251, 0, 196, 195, 193, 362, 471, 0, 0,
	0, 0, 0, 205, 402, 405, 403, 0, 0, 0,
	0, 205, 0, 383, 205, 395, 104, 105, 101, 0,
	98, 93, 94, -2, -2, 205, -2, 0, 127, 133,
	130, 0, -2, 0, 0, 422, 0, -2, 225, 0,
	0, 0, 0, 207, 0, 0, 303, 304, 305, 306,
	307, 309, 0, 0, 0, 0, 0, 249, 0, 0,
	44, 416, 253, 259, 260, 198, 363, 0, 0, 471,
	471, 366, 0, 219, 225, 0, 401, 347, 348, 296,
	205, 0, 0, 412, 0, 88, 91, 100, 114, 0,
	0, 54, 55, 0, 376, 68, 69, 0, 61, -2,
	-2, 0, 0, 422, -2, 0, 0, 439, -2, 33,
	34, 0, 0, 205, 326, 0, 0, 0, 0, 0,
	0, 326, 326, 0, 326, 0, 0, 196, 417, 203,
	368, 0, 364, 0, 367, 353, 354, 399, 0, 0,
	408, 0, 410, 0, 134, -2, 225, 0, 225, 236,
	0, 0, -2, 0, 0, 0, 0, 0, 423, 225,
	50, 436, 35, 36, 0, 0, 324, 196, 0, 326,
	326, 326, 326, 326, 326, 0, 196, 0, 0, 0,
	0, 265, 0, 178, 0, 365, 349, 406, 0, 205,
	7, -2, 442, 0, -2, 0, 0, 0, 0, 135,
	136, -2, 48, 0, -2, 437, 0, 208, 311, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 319,
	326, 321, 326, 310, 0, 369, 205, 0, 413, 426,
	0, -2, 225, 0, 0, 63, 64, 0, 376, 73,
	74, 75, 0, 0, 0, 0, 0, 49, 420, 0,
	327, 312, 313, 314, 315, 316, 317, 0, 0, 179,
	0, 409, 411, 0, 426, -2, 0, 0, 443, -2,
	0, -2, 225, 0, -2, -2, 0, 0, 137, 421,
	197, 320, 322, 407, 0, 0, 427, 225, 67, 440,
	56, 9, -2, 446, 0, 0, 0, -2, -2, 325,
	0, 65, 0, -2, 441, 0, 430, 0, -2, 225,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 66,
	424, 0, 430, -2, 0, 0, 447, -2, 57, 58,
	0, 0, 0, 0, 337, 0, 0, 330, 331, 332,
	425, 0, 0, 431, 225, 72, 444, 59, 60, 0,
	336, 333, 334, 335, 70, 0, -2, 445, 0, 329,
	0, 339, 71, 428, 338, 429,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 160, 3, 3, 3, 164, 3, 3,
	161, 162, 156, 159, 165, 158, 166, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 155,
	3, 157,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:246
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:258
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:262
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:268
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:278
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:288
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:320
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:328
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:336
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:340
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:344
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:348
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:352
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:356
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:362
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:372
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:382
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:386
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:390
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:398
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:404
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:408
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:414
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:418
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:434
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:438
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:442
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:446
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:450
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:456
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:460
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:464
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:468
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:472
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:476
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:492
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:500
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:504
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:514
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:518
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:524
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:538
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:542
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:546
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:550
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:556
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:560
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:564
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:568
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:572
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:576
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:582
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:586
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:590
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:594
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:600
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:604
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:608
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:612
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:616
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:622
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:632
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:636
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:640
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:644
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:648
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:652
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:656
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:660
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:664
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:668
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:674
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:678
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:684
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:688
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:694
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:698
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:702
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:706
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:710
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:716
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:720
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:724
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:728
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:732
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:736
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:740
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:746
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:750
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:754
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:758
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:764
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:768
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:774
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:778
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:784
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:788
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:792
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:796
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:802
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:808
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:812
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:818
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:824
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:828
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:834
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:838
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:842
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:848
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:852
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:856
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:860
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:864
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:870
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:874
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:878
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:882
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:886
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:890
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:894
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:900
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:908
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:914
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:918
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:922
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:926
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:930
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:934
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:938
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:942
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:946
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:954
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:958
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:962
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:966
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:970
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:974
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:978
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:982
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:986
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:990
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:994
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:998
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				OffsetClause:     yyDollar[5].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal,
			}
		}
	case 178:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				OffsetClause:  yyDollar[10].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:1067
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause:    yyDollar[8].queryexpr,
				LimitClause:      yyDollar[9].queryexpr,
				OffsetClause:     yyDollar[10].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[11].token.Literal + " " + yyDollar[12].token.Literal,
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1107
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1127
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1137
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = IntoClause{Into: yyDollar[1].token.Literal, Variables: yyDollar[2].variables}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1149
		{
			yyVAL.queryexpr = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1159
		{
			yyVAL.queryexpr = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1169
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1179
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1189
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1199
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1203
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1213
		{
			yyVAL.queryexpr = nil
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1223
		{
			yyVAL.queryexpr = nil
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1233
		{
			yyVAL.queryexpr = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1237
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 207:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1243
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 208:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1247
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1253
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1257
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1271
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1279
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1283
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1295
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1327
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1331
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1361
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1401
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1417
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1431
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1471
		{
			yyVAL.token = Token{}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.token = yyDollar[1].token
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.token = yyDollar[1].token
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.token = yyDollar[1].token
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1489
		{
			yyVAL.token = yyDollar[1].token
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1501
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1546
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1554
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1606
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1610
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1654
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexprs = nil
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1697
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1701
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1705
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1709
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1713
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1717
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1723
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 310:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1727
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1733
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 312:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1737
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 313:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1741
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 314:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1745
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 315:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1749
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 316:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 317:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1757
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 318:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1761
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 319:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1765
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 320:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1769
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 321:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1773
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 322:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1777
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1783
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1789
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1793
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.queryexpr = nil
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1824
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1829
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1835
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1840
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1845
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1851
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1855
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1861
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1865
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1871
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1875
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1881
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1885
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1889
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1899
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 347:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1903
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1907
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 349:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1911
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1917
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1921
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1927
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1931
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 354:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1935
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1939
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1945
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1949
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1953
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1957
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1961
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1965
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1971
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1975
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1979
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1983
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1987
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1991
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1997
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2001
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2007
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2011
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2017
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2021
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2025
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2031
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2037
		{
			yyVAL.queryexpr = nil
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2041
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2047
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2051
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2057
		{
			yyVAL.queryexpr = nil
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2061
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2067
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2071
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2077
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2081
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2087
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2091
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2097
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2101
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2107
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2111
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2117
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2121
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2127
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2131
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2137
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2141
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2147
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 399:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2151
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2155
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 401:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2159
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2165
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2171
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2177
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2181
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 406:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:2187
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 407:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line parser.y:2191
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 408:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2195
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 409:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2199
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 410:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2203
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 411:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2207
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2211
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 413:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:2215
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2221
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2226
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2233
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2237
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2243
		{
			yyVAL.elseexpr = Else{}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2247
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2253
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2257
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2263
		{
			yyVAL.elseexpr = Else{}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2267
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2273
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2277
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2283
		{
			yyVAL.elseexpr = Else{}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2287
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2293
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2297
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2303
		{
			yyVAL.elseexpr = Else{}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2307
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2313
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2317
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2323
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2327
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2333
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2337
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2343
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2347
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2353
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2357
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2363
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2367
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2373
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2377
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2383
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2387
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2393
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2397
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2401
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2405
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2409
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2413
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2417
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2421
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2427
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2433
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2437
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2443
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2449
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2453
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2459
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2463
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2469
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2475
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2481
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2487
		{
			yyVAL.token = Token{}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2491
		{
			yyVAL.token = yyDollar[1].token
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2497
		{
			yyVAL.token = Token{}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2501
		{
			yyVAL.token = yyDollar[1].token
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2507
		{
			yyVAL.token = Token{}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2511
		{
			yyVAL.token = yyDollar[1].token
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2517
		{
			yyVAL.token = Token{}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2521
		{
			yyVAL.token = yyDollar[1].token
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2527
		{
			yyVAL.token = yyDollar[1].token
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2531
		{
			yyVAL.token = yyDollar[1].token
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2537
		{
			yyVAL.token = Token{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2541
		{
			yyVAL.token = yyDollar[1].token
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2547
		{
			yyVAL.token = Token{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2551
		{
			yyVAL.token = yyDollar[1].token
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2557
		{
			yyVAL.token = Token{}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2561
		{
			yyVAL.token = yyDollar[1].token
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2567
		{
			yyVAL.token = yyDollar[1].token
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2571
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
