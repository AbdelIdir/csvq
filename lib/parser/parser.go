// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const TRIGGER = 57453
const FUNCTION = 57454
const AGGREGATE = 57455
const BEGIN = 57456
const RETURN = 57457
const IGNORE = 57458
const WITHIN = 57459
const VAR = 57460
const SHOW = 57461
const TIES = 57462
const NULLS = 57463
const ROWS = 57464
const JSON_ROW = 57465
const JSON_TABLE = 57466
const COUNT = 57467
const JSON_OBJECT = 57468
const AGGREGATE_FUNCTION = 57469
const LIST_FUNCTION = 57470
const ANALYTIC_FUNCTION = 57471
const FUNCTION_NTH = 57472
const FUNCTION_WITH_INS = 57473
const COMPARISON_OP = 57474
const STRING_OP = 57475
const SUBSTITUTION_OP = 57476
const UMINUS = 57477
const UPLUS = 57478

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2194

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 165,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 51,
	13, 165,
	15, 165,
	17, 165,
	19, 165,
	143, 165,
	-2, 1,
	-1, 53,
	144, 250,
	-2, 165,
	-1, 94,
	58, 145,
	59, 145,
	60, 145,
	-2, 156,
	-1, 130,
	1, 133,
	82, 133,
	84, 133,
	86, 133,
	88, 133,
	137, 133,
	-2, 179,
	-1, 146,
	82, 1,
	86, 1,
	88, 1,
	-2, 165,
	-1, 244,
	88, 4,
	-2, 165,
	-1, 255,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	132, 0,
	139, 0,
	-2, 220,
	-1, 256,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	132, 0,
	139, 0,
	-2, 222,
	-1, 265,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	132, 0,
	139, 0,
	-2, 232,
	-1, 300,
	88, 1,
	-2, 165,
	-1, 310,
	48, 398,
	-2, 332,
	-1, 354,
	1, 127,
	82, 127,
	84, 127,
	86, 127,
	88, 127,
	137, 127,
	-2, 179,
	-1, 381,
	88, 1,
	-2, 165,
	-1, 388,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	132, 0,
	139, 0,
	-2, 233,
	-1, 411,
	84, 1,
	86, 1,
	88, 1,
	-2, 165,
	-1, 486,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 489,
	88, 4,
	-2, 165,
	-1, 490,
	88, 4,
	-2, 165,
	-1, 558,
	13, 408,
	73, 408,
	143, 408,
	-2, 75,
	-1, 581,
	82, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 586,
	88, 4,
	-2, 165,
	-1, 587,
	88, 4,
	-2, 165,
	-1, 592,
	82, 1,
	86, 1,
	88, 1,
	-2, 165,
	-1, 642,
	1, 83,
	82, 83,
	84, 83,
	86, 83,
	88, 83,
	137, 83,
	-2, 179,
	-1, 645,
	88, 6,
	-2, 165,
	-1, 656,
	88, 4,
	-2, 165,
	-1, 711,
	88, 6,
	-2, 165,
	-1, 712,
	88, 6,
	-2, 165,
	-1, 716,
	88, 4,
	-2, 165,
	-1, 720,
	84, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 755,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 794,
	82, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 797,
	88, 8,
	-2, 165,
	-1, 802,
	88, 6,
	-2, 165,
	-1, 805,
	82, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 822,
	88, 6,
	-2, 165,
	-1, 843,
	88, 6,
	-2, 165,
	-1, 847,
	84, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 849,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 165,
	-1, 852,
	88, 8,
	-2, 165,
	-1, 853,
	88, 8,
	-2, 165,
	-1, 866,
	82, 8,
	86, 8,
	88, 8,
	-2, 165,
	-1, 878,
	82, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 882,
	88, 8,
	-2, 165,
	-1, 898,
	88, 8,
	-2, 165,
	-1, 902,
	84, 8,
	86, 8,
	88, 8,
	-2, 165,
	-1, 922,
	82, 8,
	86, 8,
	88, 8,
	-2, 165,
}

const yyPrivate = 57344

const yyLast = 3301

var yyAct = [...]int{

	67, 23, 897, 867, 888, 795, 896, 582, 841, 842,
	216, 715, 714, 359, 415, 135, 780, 463, 741, 208,
	310, 676, 91, 380, 739, 509, 565, 740, 560, 111,
	287, 82, 116, 117, 477, 166, 479, 340, 127, 527,
	54, 130, 132, 480, 535, 519, 425, 708, 214, 188,
	320, 200, 23, 433, 379, 205, 566, 1, 707, 74,
	179, 309, 211, 140, 311, 432, 72, 400, 99, 366,
	21, 323, 107, 164, 194, 737, 365, 20, 738, 450,
	153, 162, 161, 152, 151, 154, 150, 185, 169, 306,
	168, 169, 735, 168, 332, 367, 168, 196, 196, 168,
	798, 110, 94, 170, 176, 218, 225, 196, 374, 145,
	824, 191, 245, 190, 233, 234, 235, 577, 158, 236,
	578, 21, 638, 608, 701, 159, 160, 50, 20, 437,
	597, 438, 439, 434, 431, 575, 574, 435, 158, 207,
	157, 156, 559, 251, 531, 159, 160, 23, 148, 147,
	522, 246, 249, 330, 158, 149, 157, 156, 520, 308,
	275, 159, 160, 276, 45, 250, 227, 44, 840, 280,
	144, 283, 199, 45, 839, 153, 162, 161, 152, 151,
	154, 150, 144, 246, 521, 262, 195, 195, 532, 817,
	816, 246, 314, 197, 196, 246, 226, 815, 814, 318,
	813, 810, 318, 420, 253, 207, 218, 147, 809, 289,
	290, 257, 158, 808, 157, 156, 21, 90, 90, 159,
	160, 807, 100, 20, 96, 282, 97, 436, 95, 791,
	285, 286, 789, 788, 779, 713, 662, 263, 263, 792,
	354, 356, 297, 148, 147, 23, 370, 94, 373, 158,
	149, 157, 156, 640, 637, 44, 159, 160, 305, 627,
	476, 357, 371, 322, 626, 625, 624, 623, 327, 437,
	607, 438, 439, 434, 431, 325, 326, 435, 596, 589,
	46, 47, 48, 190, 45, 573, 571, 558, 557, 46,
	47, 48, 387, 317, 556, 555, 391, 549, 389, 390,
	346, 23, 514, 467, 68, 218, 504, 423, 428, 196,
	503, 502, 315, 440, 376, 419, 318, 384, 392, 501,
	318, 393, 394, 399, 383, 421, 100, 403, 377, 350,
	329, 218, 454, 407, 341, 395, 442, 328, 277, 279,
	464, 278, 790, 468, 428, 428, 472, 401, 427, 747,
	464, 746, 102, 483, 745, 744, 406, 743, 410, 731,
	430, 404, 405, 239, 542, 728, 725, 474, 455, 484,
	21, 695, 460, 461, 462, 491, 492, 20, 693, 464,
	692, 445, 23, 429, 469, 471, 686, 488, 456, 457,
	458, 459, 449, 453, 451, 452, 494, 45, 195, 466,
	46, 47, 48, 511, 493, 444, 443, 352, 351, 338,
	337, 336, 23, 335, 334, 333, 314, 197, 187, 186,
	102, 175, 428, 470, 174, 529, 173, 104, 103, 849,
	755, 486, 51, 510, 228, 496, 144, 318, 857, 497,
	181, 696, 541, 694, 606, 45, 526, 65, 29, 378,
	349, 21, 510, 295, 604, 339, 102, 45, 20, 284,
	600, 802, 528, 691, 712, 68, 44, 230, 468, 517,
	153, 428, 631, 152, 151, 154, 150, 530, 600, 537,
	711, 21, 645, 629, 753, 742, 632, 23, 20, 539,
	23, 23, 550, 551, 552, 554, 545, 630, 540, 29,
	580, 538, 751, 584, 585, 177, 690, 553, 296, 689,
	568, 528, 178, 46, 47, 48, 45, 317, 281, 229,
	688, 687, 628, 218, 622, 348, 921, 513, 911, 868,
	900, 885, 428, 419, 318, 318, 315, 605, 148, 147,
	595, 231, 232, 884, 158, 149, 157, 156, 877, 858,
	854, 159, 160, 848, 612, 613, 512, 845, 804, 45,
	464, 46, 47, 48, 428, 428, 603, 602, 621, 198,
	641, 642, 427, 46, 47, 48, 801, 634, 610, 197,
	800, 609, 23, 765, 617, 754, 724, 23, 23, 723,
	718, 659, 45, 23, 29, 654, 633, 658, 591, 505,
	660, 661, 209, 495, 635, 636, 485, 409, 853, 428,
	441, 648, 649, 653, 852, 318, 318, 318, 647, 683,
	685, 52, 92, 667, 45, 666, 587, 586, 490, 510,
	64, 49, 46, 47, 48, 679, 680, 681, 489, 468,
	898, 128, 129, 131, 197, 133, 23, 899, 675, 528,
	665, 898, 882, 843, 50, 822, 163, 23, 109, 109,
	844, 112, 21, 717, 843, 699, 698, 716, 382, 20,
	719, 45, 381, 134, 796, 46, 47, 48, 171, 172,
	716, 114, 49, 318, 92, 656, 381, 183, 184, 726,
	22, 397, 29, 300, 583, 189, 163, 288, 904, 729,
	903, 732, 864, 734, 772, 510, 771, 215, 46, 47,
	48, 749, 23, 23, 749, 722, 721, 23, 750, 579,
	748, 23, 155, 752, 899, 760, 237, 238, 766, 757,
	767, 844, 464, 113, 770, 242, 717, 382, 925, 920,
	46, 47, 48, 894, 167, 775, 876, 252, 29, 776,
	254, 255, 256, 836, 258, 115, 23, 265, 803, 268,
	269, 270, 271, 272, 273, 274, 749, 248, 783, 784,
	785, 786, 45, 664, 778, 787, 590, 49, 806, 915,
	126, 361, 3, 862, 167, 769, 516, 46, 47, 48,
	298, 889, 301, 167, 909, 23, 889, 893, 23, 833,
	834, 924, 812, 23, 874, 180, 23, 906, 215, 907,
	908, 749, 218, 892, 891, 818, 599, 44, 521, 837,
	819, 206, 419, 23, 87, 181, 838, 905, 292, 29,
	673, 347, 291, 3, 260, 799, 762, 763, 259, 261,
	508, 375, 355, 247, 23, 831, 358, 324, 23, 855,
	23, 859, 851, 23, 23, 203, 830, 536, 109, 29,
	918, 682, 386, 890, 388, 887, 872, 23, 890, 879,
	59, 9, 616, 873, 45, 49, 875, 372, 615, 23,
	793, 413, 44, 23, 294, 293, 88, 614, 46, 47,
	48, 398, 424, 832, 267, 266, 534, 831, 533, 23,
	831, 831, 811, 23, 912, 910, 414, 418, 830, 303,
	919, 830, 830, 782, 831, 202, 203, 204, 548, 820,
	923, 304, 9, 23, 448, 830, 547, 835, 3, 927,
	831, 49, 45, 215, 29, 524, 525, 29, 29, 50,
	437, 830, 438, 439, 669, 832, 831, 846, 832, 832,
	831, 447, 192, 781, 167, 570, 569, 830, 576, 567,
	865, 830, 832, 869, 870, 106, 487, 92, 860, 105,
	831, 143, 863, 671, 672, 345, 764, 880, 832, 663,
	652, 830, 482, 646, 372, 498, 342, 343, 499, 644,
	46, 47, 48, 901, 832, 344, 167, 341, 832, 572,
	506, 121, 122, 895, 331, 353, 167, 193, 321, 913,
	307, 515, 49, 916, 201, 319, 518, 9, 832, 240,
	153, 162, 161, 152, 151, 154, 150, 125, 50, 29,
	139, 167, 142, 926, 29, 29, 108, 881, 821, 167,
	29, 167, 49, 797, 655, 299, 543, 544, 46, 47,
	48, 8, 426, 5, 7, 153, 162, 161, 152, 151,
	154, 150, 561, 562, 563, 564, 119, 120, 123, 124,
	437, 6, 438, 439, 434, 431, 677, 678, 435, 396,
	61, 212, 3, 213, 313, 312, 917, 886, 148, 147,
	871, 856, 167, 29, 158, 149, 157, 156, 80, 60,
	63, 159, 160, 593, 29, 56, 62, 165, 57, 670,
	594, 523, 417, 416, 598, 9, 55, 49, 141, 412,
	49, 49, 302, 148, 147, 418, 546, 446, 98, 158,
	149, 157, 156, 17, 16, 611, 159, 160, 668, 66,
	437, 118, 438, 439, 434, 431, 733, 165, 435, 14,
	620, 481, 478, 13, 12, 10, 165, 15, 11, 29,
	29, 827, 704, 3, 29, 825, 702, 362, 29, 360,
	639, 9, 4, 643, 136, 2, 0, 0, 0, 651,
	0, 0, 0, 0, 167, 0, 657, 0, 0, 0,
	0, 153, 162, 3, 152, 151, 154, 150, 0, 0,
	0, 0, 0, 29, 0, 482, 650, 0, 0, 482,
	0, 0, 49, 0, 0, 0, 0, 49, 49, 0,
	0, 684, 0, 49, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 29, 0, 0, 29, 0, 0, 0, 0,
	29, 0, 9, 29, 0, 0, 0, 0, 0, 148,
	147, 0, 0, 0, 0, 158, 149, 157, 156, 0,
	29, 727, 159, 160, 0, 0, 49, 0, 0, 0,
	730, 0, 9, 0, 0, 0, 0, 49, 0, 0,
	0, 29, 0, 0, 0, 29, 0, 29, 167, 0,
	29, 29, 0, 0, 0, 0, 0, 0, 756, 92,
	0, 0, 758, 761, 29, 0, 0, 165, 0, 0,
	768, 0, 0, 0, 167, 0, 29, 0, 0, 0,
	29, 0, 0, 0, 0, 167, 777, 0, 0, 0,
	759, 0, 49, 49, 0, 0, 29, 49, 0, 0,
	29, 49, 0, 0, 0, 0, 0, 9, 0, 422,
	9, 9, 0, 0, 0, 0, 0, 0, 0, 165,
	29, 0, 0, 0, 3, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 823,
	0, 0, 473, 0, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 703, 49, 0,
	0, 850, 92, 49, 0, 0, 49, 0, 58, 0,
	0, 0, 0, 0, 0, 0, 0, 861, 0, 0,
	0, 0, 9, 49, 0, 165, 0, 9, 9, 0,
	0, 101, 0, 9, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 49, 0, 0, 0, 49, 0,
	49, 0, 0, 49, 49, 0, 153, 162, 161, 152,
	151, 154, 150, 703, 703, 0, 0, 49, 0, 0,
	0, 0, 914, 0, 0, 0, 0, 0, 0, 49,
	0, 0, 0, 49, 0, 0, 9, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 9, 0, 49,
	0, 0, 0, 49, 0, 0, 0, 703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 0, 0, 49, 148, 147, 0, 0, 0, 0,
	158, 149, 157, 156, 0, 0, 0, 159, 160, 619,
	0, 0, 0, 0, 0, 0, 703, 0, 0, 826,
	0, 0, 9, 9, 703, 0, 0, 9, 0, 0,
	0, 9, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 703, 0, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 264, 0, 0,
	0, 0, 0, 0, 0, 703, 9, 0, 0, 703,
	0, 826, 0, 0, 826, 826, 0, 316, 0, 0,
	316, 0, 0, 0, 0, 0, 0, 0, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 674, 0, 0, 826, 9, 0, 0, 9, 0,
	0, 0, 0, 9, 0, 0, 9, 0, 0, 0,
	826, 0, 0, 0, 826, 0, 0, 697, 0, 0,
	0, 0, 0, 9, 0, 0, 0, 0, 700, 264,
	0, 0, 0, 0, 826, 264, 264, 0, 0, 0,
	0, 0, 0, 0, 9, 0, 0, 0, 9, 0,
	9, 0, 0, 9, 9, 0, 0, 0, 0, 0,
	264, 402, 402, 402, 0, 0, 0, 9, 0, 0,
	0, 153, 162, 161, 152, 151, 154, 150, 0, 9,
	0, 0, 0, 9, 316, 0, 0, 0, 316, 0,
	0, 0, 101, 0, 101, 101, 0, 0, 0, 9,
	0, 0, 0, 9, 0, 45, 69, 70, 71, 773,
	87, 73, 50, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 9, 0, 68, 0, 0, 0, 0,
	0, 45, 69, 70, 71, 0, 87, 73, 50, 148,
	147, 0, 0, 0, 0, 158, 149, 157, 156, 0,
	0, 68, 159, 160, 618, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 0, 0, 0, 84, 0,
	264, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 77, 0, 0, 0, 0, 0, 0, 264,
	83, 86, 0, 0, 84, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 316, 0, 81, 77, 0,
	0, 0, 0, 45, 69, 70, 71, 86, 87, 73,
	50, 46, 47, 48, 90, 0, 220, 24, 219, 221,
	222, 223, 224, 68, 0, 0, 0, 0, 0, 217,
	0, 75, 76, 85, 93, 210, 0, 46, 47, 48,
	90, 0, 220, 24, 219, 221, 222, 223, 224, 0,
	0, 0, 0, 0, 0, 217, 0, 75, 76, 85,
	93, 0, 83, 0, 0, 0, 84, 264, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 316, 316, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 162, 161, 152, 151, 154, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	47, 48, 90, 0, 220, 24, 219, 221, 222, 223,
	224, 45, 69, 70, 71, 0, 87, 73, 50, 75,
	76, 85, 93, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 264, 0, 0, 0,
	45, 69, 70, 71, 0, 87, 73, 50, 0, 0,
	148, 147, 0, 316, 316, 316, 158, 149, 157, 156,
	68, 0, 0, 159, 160, 408, 0, 0, 0, 0,
	83, 0, 0, 0, 84, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 77, 0,
	0, 0, 0, 0, 0, 0, 138, 86, 0, 83,
	0, 0, 0, 84, 0, 0, 0, 88, 0, 0,
	0, 0, 264, 0, 0, 0, 81, 77, 0, 0,
	0, 316, 0, 0, 0, 137, 86, 46, 47, 48,
	90, 0, 79, 24, 78, 89, 153, 162, 161, 152,
	151, 154, 150, 0, 0, 0, 0, 75, 76, 85,
	93, 0, 0, 0, 0, 0, 46, 47, 48, 90,
	0, 79, 24, 78, 89, 45, 69, 70, 71, 0,
	87, 73, 50, 0, 217, 0, 75, 76, 85, 93,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 45,
	69, 70, 71, 0, 87, 73, 50, 0, 0, 0,
	0, 0, 0, 0, 148, 147, 0, 0, 0, 68,
	158, 149, 157, 156, 0, 0, 0, 159, 160, 276,
	0, 0, 0, 0, 83, 0, 0, 0, 84, 0,
	0, 0, 88, 206, 0, 0, 0, 0, 0, 0,
	0, 81, 77, 0, 0, 0, 0, 0, 83, 0,
	0, 86, 84, 0, 0, 0, 88, 0, 44, 0,
	0, 0, 0, 0, 0, 81, 77, 0, 0, 0,
	0, 45, 69, 70, 71, 86, 87, 73, 50, 0,
	0, 46, 47, 48, 90, 0, 79, 24, 78, 89,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 76, 85, 93, 46, 47, 48, 90, 0,
	79, 24, 78, 89, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 76, 85, 93, 0,
	83, 0, 0, 0, 84, 0, 0, 0, 88, 45,
	69, 70, 71, 0, 87, 73, 50, 81, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 0, 68,
	0, 0, 0, 45, 69, 243, 71, 0, 87, 73,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 46, 47, 48,
	90, 0, 79, 24, 78, 89, 0, 0, 83, 0,
	0, 0, 84, 0, 0, 0, 88, 75, 76, 85,
	93, 0, 0, 0, 0, 81, 77, 0, 0, 0,
	0, 0, 83, 0, 0, 86, 84, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	77, 153, 162, 161, 152, 151, 154, 150, 0, 86,
	0, 0, 0, 0, 0, 46, 47, 48, 90, 0,
	79, 24, 78, 89, 0, 0, 0, 153, 162, 161,
	152, 151, 154, 150, 0, 75, 76, 85, 53, 46,
	47, 48, 90, 0, 79, 24, 78, 89, 922, 0,
	153, 162, 161, 152, 151, 154, 150, 0, 0, 75,
	76, 85, 93, 0, 0, 0, 0, 0, 0, 148,
	147, 902, 0, 0, 0, 158, 149, 157, 156, 0,
	0, 0, 159, 160, 241, 153, 162, 161, 152, 151,
	154, 150, 0, 0, 0, 148, 147, 0, 0, 0,
	0, 158, 149, 157, 156, 0, 878, 0, 159, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 147,
	0, 0, 0, 0, 158, 149, 157, 156, 0, 0,
	0, 159, 160, 0, 153, 162, 161, 152, 151, 154,
	150, 0, 0, 0, 153, 162, 161, 152, 151, 154,
	150, 0, 0, 148, 147, 866, 0, 0, 0, 158,
	149, 157, 156, 0, 0, 847, 159, 160, 153, 162,
	161, 152, 151, 154, 150, 0, 0, 0, 153, 162,
	161, 152, 151, 154, 150, 0, 0, 0, 0, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	0, 0, 148, 147, 0, 0, 0, 0, 158, 149,
	157, 156, 148, 147, 0, 159, 160, 0, 158, 149,
	157, 156, 0, 0, 0, 159, 160, 153, 162, 161,
	152, 151, 154, 150, 0, 0, 148, 147, 0, 0,
	0, 0, 158, 149, 157, 156, 148, 147, 0, 159,
	160, 0, 158, 149, 157, 156, 0, 0, 0, 159,
	160, 153, 162, 161, 152, 151, 154, 150, 0, 0,
	0, 153, 162, 161, 152, 151, 154, 150, 0, 0,
	0, 153, 162, 161, 152, 151, 154, 150, 0, 0,
	0, 0, 720, 0, 0, 148, 147, 0, 0, 0,
	0, 158, 149, 157, 156, 0, 0, 774, 159, 160,
	0, 153, 162, 161, 152, 151, 154, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	147, 288, 0, 0, 0, 158, 149, 157, 156, 148,
	147, 736, 159, 160, 0, 158, 149, 157, 156, 148,
	147, 0, 159, 160, 0, 158, 149, 157, 156, 0,
	0, 601, 159, 160, 0, 0, 0, 0, 153, 162,
	161, 152, 151, 154, 150, 0, 0, 0, 0, 148,
	147, 0, 0, 0, 0, 158, 149, 157, 156, 592,
	0, 0, 159, 160, 153, 162, 161, 152, 151, 154,
	150, 0, 0, 0, 153, 162, 161, 152, 151, 154,
	150, 0, 0, 0, 0, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 153, 162, 161, 152,
	151, 154, 150, 0, 0, 0, 148, 147, 0, 0,
	0, 0, 158, 149, 157, 156, 0, 411, 0, 159,
	160, 153, 162, 161, 152, 151, 154, 150, 0, 0,
	0, 0, 148, 147, 0, 0, 0, 0, 158, 149,
	157, 156, 148, 147, 244, 159, 160, 0, 158, 149,
	157, 156, 0, 0, 0, 159, 160, 153, 162, 161,
	152, 151, 154, 150, 148, 147, 0, 0, 0, 0,
	158, 149, 157, 156, 0, 0, 0, 159, 160, 153,
	162, 161, 152, 151, 154, 150, 0, 0, 0, 148,
	147, 0, 0, 0, 0, 158, 149, 157, 156, 0,
	146, 0, 159, 160, 153, 500, 161, 152, 151, 154,
	150, 0, 0, 0, 153, 385, 161, 152, 151, 154,
	150, 0, 0, 0, 0, 148, 147, 0, 0, 0,
	0, 158, 149, 157, 156, 0, 0, 45, 159, 160,
	0, 0, 0, 0, 50, 0, 0, 148, 147, 36,
	0, 0, 0, 158, 149, 157, 156, 0, 0, 25,
	159, 160, 26, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 147, 0, 0, 0, 0, 158, 149,
	157, 156, 148, 147, 0, 159, 160, 45, 158, 149,
	157, 156, 0, 0, 50, 159, 160, 0, 0, 36,
	0, 0, 0, 0, 0, 0, 44, 0, 0, 25,
	0, 0, 26, 829, 828, 0, 709, 0, 0, 0,
	0, 0, 28, 0, 0, 33, 31, 32, 30, 0,
	0, 0, 0, 0, 0, 0, 34, 35, 368, 369,
	0, 38, 39, 40, 41, 0, 0, 0, 710, 0,
	0, 27, 37, 46, 47, 48, 44, 0, 45, 24,
	0, 0, 0, 364, 363, 50, 42, 0, 0, 0,
	36, 0, 28, 0, 0, 33, 31, 32, 30, 0,
	25, 0, 0, 26, 0, 0, 34, 35, 368, 369,
	43, 38, 39, 40, 41, 0, 0, 0, 0, 0,
	0, 27, 37, 46, 47, 48, 0, 0, 45, 24,
	0, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	36, 0, 0, 0, 0, 0, 0, 44, 0, 0,
	25, 0, 0, 26, 706, 705, 0, 709, 0, 0,
	0, 0, 0, 28, 0, 0, 33, 31, 32, 30,
	0, 0, 0, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 38, 39, 40, 41, 0, 0, 0, 710,
	0, 0, 27, 37, 46, 47, 48, 44, 0, 0,
	24, 0, 0, 0, 19, 18, 0, 42, 0, 0,
	0, 0, 0, 28, 0, 0, 33, 31, 32, 30,
	0, 0, 0, 0, 0, 0, 0, 34, 35, 0,
	0, 43, 38, 39, 40, 41, 0, 0, 0, 0,
	0, 0, 27, 37, 46, 47, 48, 0, 0, 0,
	24,
}
var yyPact = [...]int{

	3174, -1000, 295, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2335, 2267,
	-1000, -1000, 209, 285, 284, 939, 935, 1017, 928, -1000,
	643, 667, 667, 970, -1000, -1000, 1015, 768, 2267, 2267,
	2267, 667, 2007, 1024, 946, -1000, -1000, -1000, -1000, 302,
	-1000, 3174, 2885, 2185, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 302, -1000, -1000, -55, -45, -1000,
	-1000, -1000, -1000, -1000, -1000, 2267, 2267, 283, 281, 278,
	-1000, 2267, 373, 277, 2267, 2267, 667, -1000, -1000, 276,
	275, 611, 2863, 2185, 913, 987, 620, 555, 1000, 857,
	749, -1000, 744, 2267, 1771, 667, 620, -1000, 19, 300,
	-1000, 429, -1000, 667, 667, 667, -1000, -1000, 667, -1000,
	-1000, -1000, -1000, 2267, 2267, 224, -1000, 1005, 2863, 2377,
	-55, 2863, 2359, 2827, 48, 779, 1017, -1000, -1000, -1000,
	-1000, 18, 667, -1000, 2267, -1000, 3174, 2267, 2267, 2267,
	758, 2267, 770, 95, 2267, 833, 2267, 2267, 2267, 2267,
	2267, 2267, 2267, 16, 194, 197, 195, 313, 512, 2161,
	453, -1000, -1000, 2267, 749, 749, 613, 95, 95, 764,
	823, -1000, -1000, 406, -1000, 383, 749, 2267, 607, 2267,
	194, 864, 879, 620, 994, 12, -1000, -1000, 169, 1001,
	990, 169, 786, 786, 786, 1797, -1000, 193, -1000, 2072,
	-1000, 186, 6, 982, -1000, 2863, -1000, -1000, -49, 272,
	271, 270, 268, 267, 266, 312, 959, 1017, 2267, 434,
	307, 265, 264, -1000, -1000, -1000, 985, 2863, 2863, 2267,
	667, 2267, 2863, 2267, 3053, 667, 1017, 667, 44, 777,
	946, 306, 2863, 586, 0, 74, 74, 815, 2920, 2267,
	95, 2267, -1000, 2185, -1000, 74, 95, 95, -20, -20,
	-1000, -1000, -1000, 1127, 406, -1000, 2267, -1000, -1000, -1000,
	-1000, -1000, 2267, -1000, -1000, 2267, 2036, 605, 2267, -1000,
	-1000, 95, 204, 204, 204, 758, -1000, 2267, 1918, 519,
	3174, 2802, 835, 2267, 1879, 182, 870, 441, 620, 990,
	80, -1000, 588, -1000, -1000, 393, -1000, 263, 262, 169,
	911, 2267, -1000, 313, -1000, 313, 313, -1000, -1000, -1000,
	1797, 667, 2161, 749, 749, 749, 2267, 2267, 2267, 667,
	744, -1000, 160, 280, 441, 667, -1000, 2863, 744, 667,
	744, 116, 667, 1017, -55, 2863, -1000, -1000, 2863, 518,
	294, -1000, -1000, 2335, 2267, -1000, -1000, -1000, -1000, -1000,
	551, -1000, 4, 541, 667, 667, -1000, 261, 667, 515,
	600, 3174, 2267, -1000, -1000, 2267, 2910, -1000, 74, -1000,
	-1000, -1000, 175, 167, 166, 162, 511, 2267, 2780, 775,
	-1000, 94, -1000, 260, -1000, -1000, 463, 158, 2267, 706,
	-1000, 3174, -1000, 2267, 111, -1000, 3, 892, 2863, -1000,
	95, 441, -1000, -1000, 667, 1000, -3, 49, -58, -1000,
	-1000, 850, 848, 807, 807, 891, 169, -1000, -1000, -1000,
	-1000, 667, 220, 2267, 2267, 990, 885, 876, 2863, 796,
	-1000, -1000, 796, -1000, -1000, 153, 2267, 2267, 2036, 2267,
	151, 150, 144, 143, -5, -1000, 1031, 667, 924, -1000,
	441, 919, 918, -1000, 142, -1000, 977, 141, -11, -1000,
	-1000, -12, 923, -27, -1000, 636, 3053, 2770, 610, 3053,
	3053, 540, 539, 744, 135, 695, 510, -1000, 2744, 406,
	2267, -1000, -1000, -1000, -1000, -1000, 2863, 2267, 95, 134,
	-17, 2267, -1000, 742, 343, 2657, -1000, 611, 2863, -1000,
	745, 334, 1879, 323, -1000, -1000, -1000, 126, -24, -1000,
	990, 441, 2267, 169, 169, 839, -1000, 830, 824, 807,
	-1000, -1000, -1000, 1677, 1422, -1000, -1000, 2267, 2267, 422,
	123, 122, 121, 120, 115, 420, 381, 370, 975, 667,
	-1000, -1000, -1000, 441, 441, 110, -25, 2267, 109, 667,
	2267, 967, 368, 961, 1017, 1017, 2267, 958, 1017, -1000,
	-1000, 3053, 599, 2267, 509, 503, 3053, 3053, 92, 957,
	-1000, 692, 3174, 406, 2687, -1000, -1000, 95, 991, -1000,
	904, -1000, -1000, -1000, -1000, -1000, 942, 809, 441, -1000,
	-1000, 2863, 891, 1021, 169, 169, 169, 813, 2267, 667,
	2863, -1000, 243, 419, 418, 407, 404, 361, 237, 235,
	322, 228, 320, 744, -1000, -1000, -1000, 1031, 667, 2863,
	-1000, -1000, -55, 2863, 744, 3124, 366, -1000, -1000, -1000,
	923, 2863, 350, 91, 581, 502, 3053, 2647, 633, 632,
	501, 498, -1000, 223, -1000, 655, -1000, -1000, 2267, 222,
	-1000, -1000, -1000, 95, -1000, -1000, -1000, 2267, 216, 1021,
	1091, 891, 169, -52, 2637, -69, 384, 214, 212, 211,
	208, 206, 384, 384, 400, 384, 382, -1000, -1000, -1000,
	-1000, 497, 293, -1000, -1000, 2335, 2267, -1000, -1000, 2267,
	2267, 3124, 3124, 954, 495, 594, 3053, 2267, 705, -1000,
	3053, -1000, -1000, 623, 621, 744, -1000, 2603, 913, -1000,
	2863, 667, -1000, 2267, 891, -1000, -1000, -1000, 2267, 90,
	-1000, 914, 871, 384, 384, 384, 384, 384, 89, 913,
	88, 199, 85, 96, -1000, 3124, 2554, 590, 956, 36,
	771, 2863, 492, 488, 347, 677, 470, -1000, 2544, -1000,
	610, -1000, -1000, 77, -1000, 69, 64, 2863, 57, -1000,
	-1000, 860, 2267, 56, 54, 53, 46, 45, -1000, -1000,
	384, -1000, 384, -1000, 3124, 569, 2267, 3003, 667, 667,
	-1000, -1000, 3124, -1000, 672, 3053, -1000, -1000, -1000, -1000,
	-1000, 1879, -1000, -1000, -1000, -1000, -1000, -1000, 30, 24,
	578, 469, 3124, 2520, 465, 292, -1000, -1000, 2335, 2267,
	-1000, -1000, -1000, 527, 521, 462, -1000, 654, 316, -1000,
	-1000, 461, 567, 3124, 2267, 703, -1000, 3124, 619, 3003,
	2510, 445, 3003, 3003, -1000, -1000, -1000, 798, 665, 460,
	-1000, 2461, -1000, 590, -1000, -1000, 3003, 566, 2267, 455,
	443, -1000, 790, 738, 737, 718, -1000, 662, 3124, -1000,
	565, 442, 3003, 2426, 617, 615, 762, 731, -1000, 733,
	715, -1000, -1000, -1000, -1000, 649, 440, 554, 3003, 2267,
	699, -1000, 3003, -1000, -1000, 785, -1000, -1000, -1000, -1000,
	-1000, 658, 438, -1000, 2403, -1000, 445, -1000, 724, -1000,
	-1000, 657, 3003, -1000, -1000, -1000, 642, -1000,
}
var yyPgo = [...]int{

	0, 57, 13, 124, 110, 781, 95, 1175, 76, 1174,
	69, 1172, 1169, 1167, 1166, 58, 47, 1165, 1162, 1161,
	1158, 1157, 1155, 56, 26, 28, 1154, 1153, 43, 1152,
	1151, 36, 34, 1149, 1141, 1139, 1134, 1133, 1053, 79,
	68, 1128, 51, 50, 1127, 1126, 16, 1122, 45, 1119,
	690, 1118, 63, 1116, 66, 59, 40, 602, 48, 31,
	25, 14, 1113, 1112, 1111, 1109, 1438, 1108, 67, 1106,
	1105, 1100, 35, 870, 1099, 1098, 10, 27, 24, 18,
	1091, 1090, 4, 1087, 1086, 89, 64, 74, 1085, 20,
	1084, 21, 1083, 1081, 1080, 22, 30, 1079, 39, 19,
	61, 17, 62, 1071, 1054, 1052, 46, 1051, 23, 54,
	11, 12, 9, 8, 2, 6, 49, 1045, 7, 1044,
	5, 1038, 3, 1037, 0, 630, 15, 447, 1036, 72,
	55, 60, 65, 44, 53, 71, 1032, 37, 722,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 23, 23, 24, 24, 25,
	25, 25, 25, 25, 26, 26, 26, 26, 26, 27,
	27, 27, 27, 28, 29, 29, 30, 31, 31, 32,
	32, 32, 33, 33, 33, 33, 33, 34, 34, 34,
	34, 34, 34, 34, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 37, 37, 37,
	38, 39, 39, 39, 39, 40, 40, 41, 42, 42,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	47, 48, 48, 49, 49, 50, 50, 51, 51, 52,
	52, 53, 53, 53, 53, 53, 53, 54, 55, 56,
	56, 56, 56, 56, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 58, 59,
	59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
	64, 64, 64, 65, 65, 66, 67, 68, 68, 68,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 70,
	70, 70, 70, 70, 70, 70, 71, 71, 71, 71,
	72, 72, 73, 73, 73, 73, 74, 74, 74, 74,
	74, 75, 75, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 77, 78, 78, 79, 79, 80,
	80, 81, 81, 81, 82, 82, 82, 83, 83, 84,
	84, 85, 85, 86, 86, 86, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 89, 89, 90, 90,
	90, 90, 90, 90, 91, 91, 92, 92, 93, 93,
	93, 94, 95, 95, 96, 96, 97, 97, 98, 98,
	99, 99, 100, 100, 87, 87, 101, 101, 102, 102,
	103, 103, 103, 103, 104, 105, 106, 106, 107, 107,
	108, 108, 109, 109, 110, 110, 111, 111, 112, 112,
	113, 113, 114, 114, 115, 115, 116, 116, 117, 117,
	118, 118, 119, 119, 120, 120, 121, 121, 122, 122,
	123, 123, 124, 124, 124, 124, 125, 126, 126, 127,
	128, 128, 129, 129, 130, 130, 131, 131, 132, 132,
	133, 133, 134, 134, 135, 135, 136, 136, 137, 137,
	138, 138,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 7, 7, 1, 3, 1, 3, 0,
	1, 1, 2, 2, 5, 2, 2, 3, 5, 6,
	8, 5, 3, 1, 1, 3, 3, 1, 3, 1,
	1, 3, 9, 10, 10, 12, 3, 0, 1, 1,
	1, 1, 2, 2, 5, 6, 3, 4, 4, 2,
	2, 2, 4, 2, 2, 2, 4, 2, 3, 4,
	5, 5, 4, 4, 4, 1, 1, 3, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 0, 3,
	4, 0, 2, 0, 2, 0, 2, 6, 9, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 6, 1, 3, 1, 3, 2, 4, 1, 1,
	0, 1, 1, 1, 1, 3, 3, 3, 1, 6,
	3, 3, 3, 3, 4, 4, 5, 6, 6, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 3, 4, 4, 5, 5, 5, 5,
	1, 5, 10, 8, 9, 9, 9, 9, 9, 8,
	8, 10, 8, 10, 2, 1, 5, 0, 3, 2,
	5, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	1, 1, 1, 1, 2, 3, 1, 6, 6, 6,
	8, 1, 1, 2, 3, 1, 1, 3, 4, 5,
	6, 7, 5, 6, 2, 4, 1, 1, 1, 3,
	1, 5, 0, 1, 4, 5, 0, 2, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	6, 9, 5, 8, 7, 3, 1, 3, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 3, 3,
	1, 3, 1, 3, 0, 1, 0, 1, 0, 1,
	0, 1, 1, 1, 0, 1, 0, 1, 0, 1,
	1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -103, -104, -107, -73,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -124, 126, 26, 29, 118, 89, -127,
	95, 93, 94, 92, 103, 104, 16, 119, 108, 109,
	110, 111, 83, 107, 73, 4, 120, 121, 122, -125,
	11, 137, -57, 143, -56, -53, -70, -67, -66, -73,
	-74, -94, -69, -71, -125, -127, -35, -124, 24, 5,
	6, 7, -54, 10, -55, 140, 141, 81, 127, 125,
	-75, 80, -59, 63, 67, 142, 90, 9, 71, 128,
	123, -95, -57, 143, -39, 19, 15, 17, -41, -40,
	13, -66, 143, 143, 143, 30, 30, -129, -128, -125,
	-129, -124, -125, 90, 38, 112, -124, -124, -34, 96,
	97, 31, 32, 98, 99, 12, 12, -124, -57, -57,
	-124, -57, -124, -57, -125, -126, -9, 118, 89, 6,
	-52, -51, -136, 25, 134, -1, 85, 133, 132, 139,
	70, 68, 67, 64, 69, -138, 141, 140, 138, 145,
	146, 66, 65, -57, -99, -38, -72, -50, 148, 143,
	148, -57, -57, 143, 143, 143, -95, 132, 139, -131,
	-138, 67, -66, -57, -57, -124, 143, 143, -116, 84,
	-99, -46, 39, 20, -87, -85, -124, 24, 14, -87,
	-42, 14, 58, 59, 60, -130, 72, -72, -99, -57,
	144, -102, -93, -92, -58, -57, -76, 138, -124, 127,
	125, 128, 129, 130, 131, -124, -85, 147, 134, 90,
	38, 112, 113, -124, -124, -124, -124, -57, -57, 139,
	14, 147, -57, 6, 87, 64, 147, 64, -125, -126,
	147, -124, -57, -1, -57, -57, -57, -131, -57, 68,
	64, 69, -59, 143, -66, -57, 62, 61, -57, -57,
	-57, -57, -57, -57, -57, 144, 147, 144, 144, 144,
	-124, 6, -130, -124, 6, -130, -130, -96, 84, -59,
	-59, 68, 64, 62, 61, 70, 125, -130, -57, -117,
	86, -57, -47, 45, 42, -86, -85, 16, 147, -100,
	-89, -86, -88, -90, 23, 143, -66, 124, -124, 14,
	-43, 18, -100, -135, 61, -135, -135, -102, 144, 144,
	147, 22, 143, 143, 143, 143, 143, 143, 143, 143,
	-137, 22, 27, 28, 36, 16, -129, -57, 91, 143,
	22, 143, 143, 20, -124, -57, -124, -99, -57, -2,
	-12, -5, -13, 81, 80, -8, -10, -6, 105, 106,
	-124, -126, -125, -124, 64, 64, -52, 22, 143, -109,
	-108, 86, 82, -54, -55, 65, -57, -59, -57, -59,
	-59, -99, -72, -72, -72, -58, -97, 86, -57, -59,
	-68, 143, -66, 123, -68, -68, -131, -72, 147, 88,
	-1, 85, -49, 46, -57, -61, -62, -63, -57, -76,
	21, 143, -38, -124, 22, -106, -105, -56, -124, -87,
	-43, 54, -132, -134, 53, 57, 147, 49, 51, 52,
	-124, 22, -89, 143, 143, -100, -44, 40, -57, -40,
	-39, -40, -40, -102, -124, -72, -130, -130, -130, -130,
	-72, -72, -72, -101, -124, -38, -23, 143, -124, -56,
	143, -56, -124, -38, -101, -38, 144, -32, -29, -31,
	-28, -30, -125, -124, -126, 88, 137, -57, -95, 87,
	87, -124, -124, 143, -101, 88, -109, -1, -57, -57,
	65, 144, 144, 144, 144, 88, -57, 85, 65, -60,
	-59, 143, 93, 64, 144, -57, 80, -1, -57, -48,
	47, 73, 147, -64, 43, 44, -60, -98, -56, -124,
	-42, 147, 139, 48, 48, -133, 50, -133, -132, -134,
	-100, -124, 144, -57, -57, -43, -45, 41, 42, 144,
	-72, -72, -72, -58, -72, 144, 144, 144, 144, 147,
	-25, 31, 32, 33, 34, -24, -23, 35, -98, 37,
	37, 144, 22, 144, 147, 147, 35, 144, 147, 83,
	-2, 85, -118, 84, -2, -2, 87, 87, -38, 144,
	81, 88, 85, -57, -57, -59, 144, 147, -57, 74,
	117, 144, -116, -48, 120, -61, 121, 144, 147, -43,
	-106, -57, -89, -89, 48, 48, 48, -133, 147, 147,
	-57, -99, 102, 144, 144, 144, 144, 144, 102, 102,
	116, 102, 116, -137, -101, -56, -56, 144, 147, -57,
	144, -124, -124, -57, 22, 114, 22, -28, -31, -31,
	-125, -57, 22, -32, -2, -119, 86, -57, 88, 88,
	-2, -2, 144, 22, 81, -1, -96, -60, 147, 40,
	-65, 31, 32, 21, -38, -98, -91, 55, 56, -89,
	-89, -89, 48, -124, -57, -124, 143, 102, 102, 102,
	102, 102, 143, 143, 121, 143, 121, -38, -25, -24,
	-38, -3, -14, -5, -18, 81, 80, -15, -16, 83,
	115, 114, 114, 144, -111, -110, 86, 82, 88, -2,
	85, 83, 83, 88, 88, 143, -108, -57, 143, -60,
	-57, 143, -91, 55, -89, 144, 144, 144, 147, -78,
	-77, -79, 101, 143, 143, 143, 143, 143, -77, -79,
	-78, 102, -77, 102, 88, 137, -57, -95, -57, -125,
	-126, -57, -3, -3, 22, 88, -111, -2, -57, 80,
	-2, 83, 83, -38, 144, -46, -101, -57, -72, 144,
	-46, 39, 42, -78, -78, -78, -78, -77, 144, 144,
	143, 144, 143, -3, 85, -120, 84, 87, 64, 64,
	88, 88, 114, 81, 88, 85, -118, 144, 144, 144,
	144, 42, -99, 144, 144, 144, 144, 144, -78, -77,
	-3, -121, 86, -57, -4, -17, -5, -19, 81, 80,
	-15, -16, -6, -124, -124, -3, 81, -2, -61, 144,
	144, -113, -112, 86, 82, 88, -3, 85, 88, 137,
	-57, -95, 87, 87, 88, -110, -80, 122, 88, -113,
	-3, -57, 80, -3, 83, -4, 85, -122, 84, -4,
	-4, -81, 68, 75, 6, 78, 81, 88, 85, -120,
	-4, -123, 86, -57, 88, 88, -83, 75, -82, 6,
	78, 76, 76, 79, 81, -3, -115, -114, 86, 82,
	88, -4, 85, 83, 83, 65, 76, 76, 77, 79,
	-112, 88, -115, -4, -57, 80, -4, -84, 75, -82,
	81, 88, 85, -122, 77, 81, -4, -114,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 322,
	41, 42, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 117, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 34, 406, 382, 383, 384, 385, 0,
	386, -2, 0, -2, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 179, 0, 171,
	172, 173, 174, 175, 176, 0, 0, 0, 0, 0,
	260, 322, 396, 0, 0, 0, 0, 177, 178, 0,
	0, 0, 323, 165, -2, 0, 0, 0, 148, 0,
	394, 146, 165, 250, 0, 0, 0, 69, 392, 390,
	70, 0, 72, 0, 0, 0, 95, 96, 0, 118,
	119, 120, 121, 0, 0, 0, 129, 135, 130, 131,
	-2, 134, 137, 0, 194, 0, 0, 32, 33, 35,
	166, 169, 0, 407, 0, 3, -2, 0, 410, 411,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 244, 245, 250, 394, 394, 0, 410, 411, 0,
	0, 397, 238, 248, 249, 0, 394, 0, 368, 0,
	0, 158, 0, 0, 0, 334, 291, 292, 0, 0,
	150, 0, 404, 404, 404, 0, 395, 0, 251, 330,
	253, 0, 338, 318, 320, 316, 317, 198, 179, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 97, 102, 116, 0, 122, 123, 0,
	0, 0, 138, 172, -2, 0, 0, 0, 0, 0,
	406, 0, 389, 352, 216, -2, -2, 0, 0, 0,
	0, 0, 229, 165, 200, -2, 0, 0, 239, 240,
	241, 242, 243, 246, 247, 197, 0, 199, 215, 255,
	180, 182, 250, 181, 183, 250, 250, 326, 0, 221,
	223, 0, 0, 0, 0, 396, 126, 250, 0, 0,
	-2, 0, 163, 0, 0, 165, 293, 0, 0, 150,
	-2, 301, 302, 305, 306, 165, 296, 0, 291, 0,
	152, 0, 149, 0, 405, 0, 0, 147, 252, 254,
	0, 0, 250, 394, 394, 394, 250, 250, 250, 0,
	165, 409, 0, 0, 0, 0, 393, 391, 165, 0,
	165, 0, 0, 0, -2, 128, 136, 132, 139, 0,
	0, 36, 37, 0, 322, 46, 47, 48, 23, 24,
	0, 388, 387, 0, 0, 0, 170, 0, 0, 0,
	352, -2, 0, 224, 225, 0, 0, 230, -2, 234,
	236, 331, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 165, 218, 0, 235, 237, 0, 0, 0, 0,
	369, -2, 140, 0, 161, 157, 204, 210, 208, 209,
	0, 0, 342, 294, 0, 148, 346, 0, 179, 335,
	348, 0, 0, 400, 400, 398, 0, 399, 402, 403,
	303, 0, 398, 0, 0, 150, 154, 0, 151, 142,
	145, 143, 144, 339, 319, 0, 250, 250, 250, 250,
	0, 0, 0, 0, 336, 77, 89, 0, 85, 80,
	0, 0, 0, 94, 0, 101, 0, 0, 109, 110,
	104, 107, 103, 0, 98, 0, -2, 0, 0, -2,
	-2, 0, 0, 165, 0, 0, 0, 353, 0, 226,
	0, 256, 257, 258, 259, 321, 327, 0, 0, 0,
	202, 0, 124, 0, 261, 0, 40, 366, 164, 159,
	161, 0, 0, 206, 211, 212, 340, 0, 328, 295,
	150, 0, 0, 0, 0, 0, 401, 0, 0, 400,
	333, 304, 307, 0, 0, 349, 141, 0, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	78, 90, 91, 0, 0, 0, 87, 0, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 27,
	5, -2, 372, 0, 0, 0, -2, -2, 0, 0,
	38, 0, -2, 227, 324, 228, 217, 0, 0, 125,
	0, 201, 367, 160, 162, 205, 0, 165, 0, 344,
	347, 345, 308, 398, 0, 0, 0, 0, 0, 0,
	155, 153, 0, 256, 257, 258, 259, 261, 0, 0,
	0, 0, 0, 165, 337, 92, 93, 89, 0, 86,
	81, 82, -2, 84, 165, -2, 0, 105, 111, 108,
	0, 106, 0, 0, 356, 0, -2, 0, 0, 0,
	0, 0, 167, 0, 39, 350, 325, 203, 0, 0,
	207, 213, 214, 0, 343, 329, 309, 0, 0, 398,
	398, 312, 0, 179, 0, 0, 277, 0, 0, 0,
	0, 0, 277, 277, 0, 277, 0, 76, 79, 88,
	100, 0, 0, 49, 50, 0, 322, 61, 62, 0,
	54, -2, -2, 0, 0, 356, -2, 0, 0, 373,
	-2, 28, 29, 0, 0, 165, 351, 0, 156, 341,
	314, 0, 310, 0, 313, 297, 298, 299, 250, 0,
	275, 156, 0, 277, 277, 277, 277, 277, 0, 156,
	0, 0, 0, 0, 112, -2, 0, 0, 0, 194,
	0, 55, 0, 0, 0, 0, 0, 357, 0, 45,
	370, 30, 31, 0, 219, 0, 0, 311, 0, 263,
	274, 0, 0, 0, 0, 0, 0, 0, 269, 270,
	277, 272, 277, 7, -2, 376, 0, -2, 0, 0,
	113, 114, -2, 43, 0, -2, 371, 168, 262, 315,
	300, 0, 278, 264, 265, 266, 267, 268, 0, 0,
	360, 0, -2, 0, 0, 0, 56, 57, 0, 322,
	66, 67, 68, 0, 0, 0, 44, 354, 157, 271,
	273, 0, 360, -2, 0, 0, 377, -2, 0, -2,
	0, 0, -2, -2, 115, 355, 276, 0, 0, 0,
	361, 0, 60, 374, 51, 9, -2, 380, 0, 0,
	0, 279, 0, 0, 0, 0, 58, 0, -2, 375,
	364, 0, -2, 0, 0, 0, 0, 0, 288, 0,
	0, 281, 282, 283, 59, 358, 0, 364, -2, 0,
	0, 381, -2, 52, 53, 0, 287, 284, 285, 286,
	359, 0, 0, 365, 0, 65, 378, 280, 0, 290,
	63, 0, -2, 379, 289, 64, 362, 363,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 142, 3, 3, 3, 146, 3, 3,
	143, 144, 138, 141, 147, 140, 148, 145, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 137,
	3, 139,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:221
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:231
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:238
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:242
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:248
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:252
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:258
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:262
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:268
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:272
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:276
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:280
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:284
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:288
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:322
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:326
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:336
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:346
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:350
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:354
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:358
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:364
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:368
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:374
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:378
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:384
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:388
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:398
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:402
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:406
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:410
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:416
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:420
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:432
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:436
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:442
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:446
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:452
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:456
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:460
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:466
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:470
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:476
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:480
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:490
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:494
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:498
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:502
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:512
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:516
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:520
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:524
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:538
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:542
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:546
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:552
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:556
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:562
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:566
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:570
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:574
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:578
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:582
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:586
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:590
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:594
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:598
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:604
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:608
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:614
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:618
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:624
		{
			yyVAL.expression = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:628
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:632
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:636
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:640
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:646
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:650
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:654
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:658
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:662
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 99:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:668
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:672
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:676
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:680
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:686
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:692
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:696
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:702
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:708
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:712
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:718
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:722
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:726
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 112:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:732
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 113:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:736
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 114:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:740
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 115:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:744
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:748
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:754
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:758
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:762
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:766
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:770
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:774
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:778
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:784
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 125:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:788
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:792
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:798
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:802
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:806
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:810
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:814
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:818
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:822
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:826
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:830
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:834
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:840
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:844
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:848
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:854
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:866
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:876
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:885
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:894
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:905
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:909
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:915
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:921
		{
			yyVAL.queryexpr = nil
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:925
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:931
		{
			yyVAL.queryexpr = nil
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:935
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:941
		{
			yyVAL.queryexpr = nil
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:945
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:951
		{
			yyVAL.queryexpr = nil
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:955
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:961
		{
			yyVAL.queryexpr = nil
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:965
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:971
		{
			yyVAL.queryexpr = nil
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:975
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:979
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:985
		{
			yyVAL.queryexpr = nil
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:989
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:995
		{
			yyVAL.queryexpr = nil
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:999
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.queryexpr = nil
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1015
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 168:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1019
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1025
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1029
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1035
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1043
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1047
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1051
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1055
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1061
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1067
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1073
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1077
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1081
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1085
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1089
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1095
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1099
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1103
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1107
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1111
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1115
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1119
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1123
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1127
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1135
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1139
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1147
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1159
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1177
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1187
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1197
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1203
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1213
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1221
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1231
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1237
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1243
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1270
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1280
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1284
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1288
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1292
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1296
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1300
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1304
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1308
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 228:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1312
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1316
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1320
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1324
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1328
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1332
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1336
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1340
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1344
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1348
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1352
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1358
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1370
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1374
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1378
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1388
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1392
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1400
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.queryexprs = nil
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1410
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1420
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1424
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1428
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1447
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1457
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 262:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1467
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1471
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 265:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 268:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 269:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 270:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 271:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 272:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1503
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 273:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1507
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1523
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1530
		{
			yyVAL.queryexpr = nil
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1534
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1540
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1554
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1559
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1565
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1570
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1575
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1581
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1591
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1595
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1605
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1611
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1615
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1619
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1625
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1629
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 298:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1633
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1637
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1641
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1647
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1651
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1655
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1659
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1663
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1667
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1671
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1677
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1681
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1685
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1689
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1693
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1697
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1703
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1707
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1713
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1717
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1723
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1727
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1731
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1737
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1743
		{
			yyVAL.queryexpr = nil
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1747
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1757
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1763
		{
			yyVAL.queryexpr = nil
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1767
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1773
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1777
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1783
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1787
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1793
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1797
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1803
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1807
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1813
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1817
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1823
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1827
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1833
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 341:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1837
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1841
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 343:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1845
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 344:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1851
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1857
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1867
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1873
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1878
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1885
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1889
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1895
		{
			yyVAL.elseexpr = Else{}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1899
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1905
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1909
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1915
		{
			yyVAL.elseexpr = Else{}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1919
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1925
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1929
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1935
		{
			yyVAL.elseexpr = Else{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1939
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1945
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1949
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1955
		{
			yyVAL.elseexpr = Else{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1959
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1965
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1969
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1975
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1979
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1985
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1989
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1995
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1999
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2005
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2009
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2015
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2019
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2025
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2029
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2035
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2039
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2045
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2049
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2053
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2057
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2063
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2069
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2073
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2079
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2085
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2089
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2095
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2099
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2105
		{
			yyVAL.token = Token{}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2109
		{
			yyVAL.token = yyDollar[1].token
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2115
		{
			yyVAL.token = Token{}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2119
		{
			yyVAL.token = yyDollar[1].token
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2125
		{
			yyVAL.token = Token{}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2129
		{
			yyVAL.token = yyDollar[1].token
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2135
		{
			yyVAL.token = Token{}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2139
		{
			yyVAL.token = yyDollar[1].token
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2145
		{
			yyVAL.token = yyDollar[1].token
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2149
		{
			yyVAL.token = yyDollar[1].token
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2155
		{
			yyVAL.token = Token{}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2159
		{
			yyVAL.token = yyDollar[1].token
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2165
		{
			yyVAL.token = Token{}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2169
		{
			yyVAL.token = yyDollar[1].token
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2175
		{
			yyVAL.token = Token{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2179
		{
			yyVAL.token = yyDollar[1].token
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2185
		{
			yyVAL.token = yyDollar[1].token
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2189
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
