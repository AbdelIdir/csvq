//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const AS = 57369
const DUAL = 57370
const STDIN = 57371
const RECURSIVE = 57372
const CREATE = 57373
const ADD = 57374
const DROP = 57375
const ALTER = 57376
const TABLE = 57377
const FIRST = 57378
const LAST = 57379
const AFTER = 57380
const BEFORE = 57381
const DEFAULT = 57382
const RENAME = 57383
const TO = 57384
const VIEW = 57385
const ORDER = 57386
const GROUP = 57387
const HAVING = 57388
const BY = 57389
const ASC = 57390
const DESC = 57391
const LIMIT = 57392
const OFFSET = 57393
const PERCENT = 57394
const JOIN = 57395
const INNER = 57396
const OUTER = 57397
const LEFT = 57398
const RIGHT = 57399
const FULL = 57400
const CROSS = 57401
const ON = 57402
const USING = 57403
const NATURAL = 57404
const UNION = 57405
const INTERSECT = 57406
const EXCEPT = 57407
const ALL = 57408
const ANY = 57409
const EXISTS = 57410
const IN = 57411
const AND = 57412
const OR = 57413
const NOT = 57414
const BETWEEN = 57415
const LIKE = 57416
const IS = 57417
const NULL = 57418
const DISTINCT = 57419
const WITH = 57420
const RANGE = 57421
const UNBOUNDED = 57422
const PRECEDING = 57423
const FOLLOWING = 57424
const CURRENT = 57425
const ROW = 57426
const CASE = 57427
const IF = 57428
const ELSEIF = 57429
const WHILE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const DO = 57434
const END = 57435
const DECLARE = 57436
const CURSOR = 57437
const FOR = 57438
const FETCH = 57439
const OPEN = 57440
const CLOSE = 57441
const DISPOSE = 57442
const PREPARE = 57443
const NEXT = 57444
const PRIOR = 57445
const ABSOLUTE = 57446
const RELATIVE = 57447
const SEPARATOR = 57448
const PARTITION = 57449
const OVER = 57450
const COMMIT = 57451
const ROLLBACK = 57452
const CONTINUE = 57453
const BREAK = 57454
const EXIT = 57455
const ECHO = 57456
const PRINT = 57457
const PRINTF = 57458
const SOURCE = 57459
const EXECUTE = 57460
const CHDIR = 57461
const PWD = 57462
const RELOAD = 57463
const REMOVE = 57464
const SYNTAX = 57465
const TRIGGER = 57466
const FUNCTION = 57467
const AGGREGATE = 57468
const BEGIN = 57469
const RETURN = 57470
const IGNORE = 57471
const WITHIN = 57472
const VAR = 57473
const SHOW = 57474
const TIES = 57475
const NULLS = 57476
const ROWS = 57477
const CSV = 57478
const JSON = 57479
const FIXED = 57480
const LTSV = 57481
const JSON_ROW = 57482
const JSON_TABLE = 57483
const COUNT = 57484
const JSON_OBJECT = 57485
const AGGREGATE_FUNCTION = 57486
const LIST_FUNCTION = 57487
const ANALYTIC_FUNCTION = 57488
const FUNCTION_NTH = 57489
const FUNCTION_WITH_INS = 57490
const COMPARISON_OP = 57491
const STRING_OP = 57492
const SUBSTITUTION_OP = 57493
const UMINUS = 57494
const UPLUS = 57495

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2425

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 196,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 30,
	1, 74,
	87, 74,
	89, 74,
	91, 74,
	93, 74,
	154, 74,
	-2, 226,
	-1, 106,
	17, 196,
	19, 196,
	22, 196,
	24, 196,
	-2, 1,
	-1, 124,
	161, 284,
	-2, 196,
	-1, 130,
	63, 176,
	64, 176,
	65, 176,
	-2, 187,
	-1, 164,
	1, 116,
	87, 116,
	89, 116,
	91, 116,
	93, 116,
	154, 116,
	-2, 210,
	-1, 173,
	1, 155,
	87, 155,
	89, 155,
	91, 155,
	93, 155,
	154, 155,
	-2, 210,
	-1, 177,
	1, 163,
	87, 163,
	89, 163,
	91, 163,
	93, 163,
	154, 163,
	-2, 210,
	-1, 218,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 254,
	-1, 219,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 256,
	-1, 228,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 266,
	-1, 238,
	87, 1,
	91, 1,
	93, 1,
	-2, 196,
	-1, 256,
	160, 327,
	-2, 427,
	-1, 257,
	160, 328,
	-2, 428,
	-1, 258,
	160, 329,
	-2, 429,
	-1, 259,
	160, 330,
	-2, 430,
	-1, 304,
	93, 4,
	-2, 196,
	-1, 351,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 267,
	-1, 358,
	93, 1,
	-2, 196,
	-1, 370,
	53, 445,
	-2, 371,
	-1, 403,
	1, 77,
	87, 77,
	89, 77,
	91, 77,
	93, 77,
	154, 77,
	-2, 210,
	-1, 405,
	1, 79,
	87, 79,
	89, 79,
	91, 79,
	93, 79,
	154, 79,
	-2, 210,
	-1, 406,
	1, 143,
	87, 143,
	89, 143,
	91, 143,
	93, 143,
	154, 143,
	-2, 210,
	-1, 408,
	1, 145,
	87, 145,
	89, 145,
	91, 145,
	93, 145,
	154, 145,
	-2, 210,
	-1, 472,
	93, 1,
	-2, 196,
	-1, 479,
	89, 1,
	91, 1,
	93, 1,
	-2, 196,
	-1, 546,
	87, 4,
	89, 4,
	91, 4,
	93, 4,
	-2, 196,
	-1, 549,
	93, 4,
	-2, 196,
	-1, 550,
	93, 4,
	-2, 196,
	-1, 619,
	17, 455,
	78, 455,
	160, 455,
	-2, 83,
	-1, 644,
	87, 4,
	91, 4,
	93, 4,
	-2, 196,
	-1, 649,
	93, 4,
	-2, 196,
	-1, 650,
	93, 4,
	-2, 196,
	-1, 671,
	87, 1,
	91, 1,
	93, 1,
	-2, 196,
	-1, 706,
	1, 91,
	87, 91,
	89, 91,
	91, 91,
	93, 91,
	154, 91,
	-2, 210,
	-1, 709,
	93, 6,
	-2, 196,
	-1, 720,
	93, 4,
	-2, 196,
	-1, 777,
	93, 6,
	-2, 196,
	-1, 778,
	93, 6,
	-2, 196,
	-1, 782,
	93, 4,
	-2, 196,
	-1, 786,
	89, 4,
	91, 4,
	93, 4,
	-2, 196,
	-1, 806,
	89, 1,
	91, 1,
	93, 1,
	-2, 196,
	-1, 817,
	87, 6,
	89, 6,
	91, 6,
	93, 6,
	-2, 196,
	-1, 857,
	87, 6,
	91, 6,
	93, 6,
	-2, 196,
	-1, 860,
	93, 8,
	-2, 196,
	-1, 865,
	93, 6,
	-2, 196,
	-1, 868,
	87, 4,
	91, 4,
	93, 4,
	-2, 196,
	-1, 890,
	93, 6,
	-2, 196,
	-1, 918,
	93, 6,
	-2, 196,
	-1, 922,
	89, 6,
	91, 6,
	93, 6,
	-2, 196,
	-1, 924,
	87, 8,
	89, 8,
	91, 8,
	93, 8,
	-2, 196,
	-1, 927,
	93, 8,
	-2, 196,
	-1, 928,
	93, 8,
	-2, 196,
	-1, 931,
	89, 4,
	91, 4,
	93, 4,
	-2, 196,
	-1, 943,
	87, 8,
	91, 8,
	93, 8,
	-2, 196,
	-1, 952,
	87, 6,
	91, 6,
	93, 6,
	-2, 196,
	-1, 957,
	93, 8,
	-2, 196,
	-1, 971,
	93, 8,
	-2, 196,
	-1, 975,
	89, 8,
	91, 8,
	93, 8,
	-2, 196,
	-1, 987,
	89, 6,
	91, 6,
	93, 6,
	-2, 196,
	-1, 1001,
	87, 8,
	91, 8,
	93, 8,
	-2, 196,
	-1, 1012,
	89, 8,
	91, 8,
	93, 8,
	-2, 196,
}

const yyPrivate = 57344

const yyLast = 3806

var yyAct = [...]int{

	19, 970, 128, 980, 969, 325, 774, 944, 858, 916,
	483, 917, 773, 781, 645, 873, 838, 316, 521, 125,
	30, 836, 123, 129, 188, 837, 471, 832, 430, 24,
	754, 429, 23, 940, 780, 370, 25, 570, 596, 165,
	621, 626, 166, 167, 535, 170, 171, 172, 174, 176,
	178, 389, 244, 491, 606, 380, 537, 243, 86, 588,
	585, 1, 538, 323, 412, 470, 175, 501, 182, 320,
	186, 431, 263, 249, 627, 500, 251, 261, 375, 369,
	207, 200, 201, 193, 993, 183, 141, 383, 198, 211,
	212, 459, 135, 197, 197, 198, 601, 79, 77, 602,
	197, 290, 752, 199, 185, 753, 94, 518, 217, 218,
	219, 438, 221, 861, 305, 228, 144, 231, 232, 233,
	234, 235, 236, 237, 448, 182, 30, 240, 129, 197,
	242, 73, 702, 130, 682, 24, 425, 3, 23, 198,
	814, 664, 239, 934, 197, 505, 246, 506, 507, 502,
	499, 118, 505, 503, 506, 507, 502, 499, 119, 120,
	503, 185, 287, 288, 636, 53, 638, 216, 635, 639,
	620, 107, 225, 94, 599, 185, 118, 591, 117, 116,
	306, 298, 300, 119, 120, 118, 543, 117, 116, 446,
	379, 220, 119, 120, 933, 181, 181, 373, 254, 176,
	198, 367, 310, 324, 136, 197, 306, 272, 306, 306,
	262, 250, 90, 136, 309, 132, 345, 913, 133, 271,
	131, 912, 911, 349, 910, 351, 488, 176, 909, 887,
	886, 884, 882, 881, 872, 95, 96, 97, 98, 99,
	100, 101, 176, 3, 183, 871, 361, 63, 853, 779,
	751, 105, 441, 733, 732, 504, 731, 730, 30, 613,
	268, 71, 528, 185, 336, 337, 729, 24, 726, 324,
	23, 226, 399, 704, 396, 701, 143, 143, 71, 146,
	681, 663, 350, 402, 404, 407, 409, 661, 352, 353,
	660, 414, 176, 130, 659, 653, 176, 176, 176, 354,
	422, 652, 95, 96, 97, 256, 257, 258, 259, 415,
	376, 634, 632, 419, 420, 421, 176, 187, 347, 346,
	619, 575, 568, 105, 30, 567, 314, 365, 566, 374,
	462, 435, 423, 555, 445, 176, 176, 443, 387, 355,
	390, 302, 303, 226, 382, 176, 885, 138, 883, 468,
	460, 844, 843, 842, 385, 386, 138, 474, 841, 395,
	489, 478, 534, 840, 482, 486, 810, 804, 801, 497,
	487, 799, 798, 418, 792, 3, 791, 572, 30, 553,
	511, 454, 516, 453, 452, 442, 451, 24, 450, 449,
	23, 401, 400, 368, 440, 241, 215, 458, 214, 457,
	138, 204, 185, 203, 202, 398, 209, 600, 924, 817,
	510, 185, 546, 285, 283, 106, 273, 532, 181, 476,
	342, 949, 802, 465, 800, 498, 185, 680, 547, 129,
	678, 548, 463, 464, 185, 542, 185, 308, 797, 667,
	850, 495, 865, 444, 778, 777, 250, 324, 737, 176,
	735, 709, 848, 176, 176, 176, 262, 513, 512, 315,
	667, 554, 455, 456, 334, 335, 524, 796, 576, 738,
	577, 736, 466, 388, 581, 344, 517, 795, 519, 520,
	584, 794, 587, 205, 159, 160, 793, 343, 734, 728,
	206, 839, 30, 586, 397, 3, 574, 185, 1000, 30,
	988, 24, 973, 275, 23, 960, 959, 951, 24, 935,
	90, 23, 614, 929, 923, 920, 556, 867, 113, 571,
	143, 112, 111, 114, 110, 573, 595, 284, 282, 864,
	863, 827, 493, 580, 816, 790, 789, 579, 784, 723,
	722, 972, 148, 670, 414, 578, 545, 571, 477, 475,
	157, 158, 161, 162, 436, 274, 928, 608, 527, 529,
	176, 176, 176, 176, 598, 927, 30, 629, 615, 30,
	30, 610, 650, 665, 643, 649, 558, 647, 648, 609,
	563, 564, 565, 672, 611, 276, 277, 972, 550, 919,
	185, 971, 486, 918, 147, 549, 971, 487, 108, 107,
	149, 685, 679, 176, 118, 109, 117, 116, 640, 3,
	783, 119, 120, 473, 782, 957, 3, 472, 695, 176,
	918, 890, 782, 720, 150, 657, 472, 360, 662, 703,
	358, 1003, 707, 954, 945, 870, 696, 673, 715, 698,
	688, 689, 859, 674, 675, 646, 356, 721, 540, 677,
	245, 977, 976, 684, 683, 597, 941, 834, 436, 833,
	788, 787, 642, 919, 30, 693, 783, 473, 115, 30,
	30, 697, 718, 1007, 999, 966, 744, 724, 725, 950,
	904, 866, 742, 964, 717, 669, 992, 654, 655, 656,
	658, 30, 712, 713, 597, 762, 939, 981, 711, 831,
	24, 583, 739, 23, 981, 998, 985, 996, 997, 559,
	560, 561, 562, 1010, 995, 984, 983, 666, 185, 71,
	590, 750, 269, 571, 94, 673, 757, 758, 759, 30,
	686, 748, 743, 339, 185, 209, 102, 338, 260, 994,
	30, 803, 764, 767, 765, 185, 569, 223, 785, 254,
	962, 222, 224, 862, 176, 208, 809, 963, 439, 307,
	965, 341, 340, 230, 229, 493, 265, 266, 267, 607,
	805, 1005, 818, 129, 982, 819, 820, 823, 979, 384,
	266, 982, 760, 71, 830, 692, 807, 584, 811, 691,
	699, 700, 505, 690, 506, 507, 813, 30, 30, 605,
	822, 604, 30, 103, 481, 363, 30, 571, 3, 907,
	829, 824, 825, 855, 5, 846, 828, 875, 846, 618,
	852, 847, 593, 594, 845, 364, 30, 849, 185, 854,
	617, 741, 515, 247, 874, 24, 631, 30, 23, 622,
	623, 624, 625, 630, 637, 628, 769, 869, 597, 746,
	747, 856, 140, 95, 96, 97, 98, 99, 100, 101,
	891, 846, 876, 877, 878, 879, 139, 899, 196, 826,
	880, 906, 727, 898, 716, 710, 176, 30, 708, 390,
	30, 808, 184, 540, 714, 30, 633, 540, 30, 447,
	410, 888, 248, 908, 381, 64, 905, 925, 129, 903,
	926, 366, 846, 264, 394, 914, 676, 378, 486, 294,
	30, 915, 289, 487, 769, 769, 391, 392, 932, 930,
	938, 152, 91, 584, 921, 393, 91, 936, 151, 153,
	417, 899, 900, 416, 899, 899, 90, 898, 30, 184,
	898, 898, 30, 3, 30, 892, 958, 30, 30, 953,
	899, 30, 937, 184, 769, 968, 898, 192, 411, 195,
	65, 142, 956, 30, 899, 889, 719, 357, 8, 492,
	898, 7, 30, 991, 6, 989, 584, 30, 899, 986,
	359, 60, 899, 321, 898, 322, 967, 372, 898, 371,
	252, 30, 255, 1004, 769, 30, 900, 894, 1006, 900,
	900, 1002, 769, 978, 1009, 961, 948, 30, 899, 942,
	1011, 85, 946, 947, 898, 900, 59, 58, 62, 899,
	55, 30, 61, 821, 56, 898, 745, 769, 955, 900,
	592, 485, 30, 113, 122, 121, 112, 111, 114, 110,
	94, 184, 974, 900, 484, 54, 194, 900, 480, 362,
	616, 514, 72, 134, 18, 769, 990, 17, 66, 769,
	156, 894, 15, 539, 894, 894, 505, 536, 506, 507,
	502, 499, 812, 900, 503, 14, 413, 13, 12, 9,
	894, 16, 145, 11, 900, 10, 1008, 154, 155, 769,
	163, 164, 895, 770, 894, 893, 169, 768, 426, 424,
	173, 4, 177, 189, 179, 180, 94, 2, 894, 0,
	0, 0, 894, 108, 107, 0, 0, 0, 57, 118,
	109, 117, 116, 0, 769, 301, 119, 120, 297, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 894, 0,
	0, 0, 0, 0, 137, 0, 213, 0, 0, 894,
	0, 0, 94, 74, 75, 76, 0, 102, 78, 90,
	0, 91, 92, 0, 68, 0, 0, 0, 0, 95,
	96, 97, 98, 99, 100, 101, 0, 73, 113, 122,
	490, 112, 111, 114, 110, 253, 253, 0, 0, 184,
	0, 0, 270, 253, 0, 0, 525, 94, 0, 0,
	278, 279, 280, 281, 523, 0, 210, 0, 0, 286,
	0, 0, 531, 0, 533, 0, 87, 0, 0, 0,
	88, 94, 254, 505, 103, 506, 507, 502, 499, 755,
	756, 503, 227, 127, 126, 95, 96, 97, 98, 99,
	100, 101, 94, 93, 509, 0, 0, 0, 311, 90,
	312, 0, 317, 0, 0, 327, 0, 0, 108, 107,
	0, 0, 0, 0, 118, 109, 117, 116, 0, 0,
	0, 119, 120, 0, 0, 184, 0, 0, 0, 0,
	0, 95, 96, 97, 98, 99, 100, 101, 105, 0,
	329, 82, 328, 330, 331, 332, 333, 0, 0, 0,
	0, 253, 0, 326, 137, 80, 81, 89, 67, 319,
	0, 0, 0, 253, 0, 0, 0, 253, 0, 0,
	0, 327, 0, 0, 227, 227, 95, 96, 97, 98,
	99, 100, 101, 0, 0, 403, 405, 406, 408, 0,
	0, 0, 227, 0, 0, 0, 0, 253, 227, 227,
	95, 96, 97, 98, 99, 100, 101, 0, 434, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 651, 0,
	0, 95, 96, 97, 98, 99, 100, 101, 0, 377,
	0, 0, 0, 377, 0, 0, 0, 113, 122, 121,
	112, 111, 114, 110, 0, 0, 0, 94, 74, 75,
	76, 0, 102, 78, 90, 0, 91, 92, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 494,
	253, 496, 73, 0, 508, 0, 0, 253, 0, 0,
	0, 253, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 526, 494, 494, 530, 0, 0,
	0, 522, 0, 0, 541, 0, 0, 227, 461, 461,
	461, 87, 0, 0, 0, 88, 0, 108, 107, 103,
	0, 0, 0, 118, 109, 117, 116, 0, 127, 126,
	119, 120, 740, 0, 94, 0, 0, 0, 93, 0,
	0, 551, 552, 377, 0, 522, 749, 377, 0, 327,
	557, 0, 137, 0, 137, 137, 0, 296, 373, 254,
	0, 0, 763, 0, 0, 113, 122, 121, 112, 111,
	114, 110, 0, 766, 0, 0, 95, 96, 97, 98,
	99, 100, 101, 105, 0, 329, 82, 328, 330, 331,
	332, 333, 494, 0, 0, 0, 0, 0, 326, 0,
	80, 81, 89, 67, 0, 0, 0, 253, 71, 0,
	0, 0, 612, 0, 94, 74, 75, 76, 0, 102,
	78, 90, 0, 91, 92, 0, 68, 0, 526, 227,
	0, 494, 113, 122, 121, 112, 111, 114, 110, 73,
	0, 0, 0, 0, 0, 108, 107, 641, 0, 94,
	0, 118, 109, 117, 116, 860, 835, 227, 119, 120,
	295, 0, 0, 95, 96, 97, 256, 257, 258, 259,
	0, 376, 0, 377, 254, 0, 0, 94, 87, 318,
	0, 0, 88, 0, 0, 0, 103, 0, 0, 0,
	374, 0, 0, 0, 327, 127, 126, 94, 0, 313,
	0, 0, 494, 0, 0, 93, 687, 253, 253, 0,
	0, 0, 108, 107, 0, 0, 0, 0, 118, 109,
	117, 116, 0, 522, 0, 119, 120, 494, 494, 0,
	0, 0, 0, 705, 706, 0, 0, 0, 227, 0,
	0, 0, 0, 95, 96, 97, 98, 99, 100, 101,
	105, 0, 329, 82, 328, 330, 331, 332, 333, 113,
	122, 121, 112, 111, 114, 110, 0, 80, 81, 89,
	67, 0, 0, 377, 377, 0, 0, 0, 95, 96,
	97, 256, 257, 258, 259, 494, 0, 0, 0, 0,
	94, 0, 0, 253, 253, 253, 0, 761, 168, 0,
	0, 0, 0, 0, 0, 526, 95, 96, 97, 98,
	99, 100, 101, 0, 0, 113, 122, 121, 112, 111,
	114, 110, 0, 0, 0, 0, 95, 96, 97, 98,
	99, 100, 101, 227, 0, 0, 0, 0, 0, 108,
	107, 0, 0, 0, 0, 118, 109, 117, 116, 0,
	0, 0, 119, 120, 694, 0, 0, 0, 0, 377,
	377, 377, 0, 253, 94, 74, 75, 76, 0, 102,
	78, 90, 0, 91, 92, 20, 68, 0, 0, 0,
	32, 33, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 26, 41, 0, 27, 108, 107, 0, 0, 0,
	0, 118, 109, 117, 116, 0, 0, 0, 119, 120,
	603, 0, 0, 522, 0, 0, 0, 227, 0, 95,
	96, 97, 98, 99, 100, 101, 94, 0, 87, 377,
	0, 0, 88, 0, 0, 0, 103, 0, 71, 0,
	0, 0, 0, 0, 0, 897, 896, 0, 775, 0,
	0, 0, 0, 0, 29, 93, 0, 36, 34, 35,
	31, 37, 0, 0, 901, 902, 0, 0, 0, 39,
	40, 432, 433, 0, 44, 45, 46, 47, 38, 49,
	50, 51, 42, 48, 52, 0, 0, 0, 776, 0,
	0, 28, 43, 95, 96, 97, 98, 99, 100, 101,
	105, 0, 84, 82, 83, 104, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 80, 81, 89,
	67, 94, 74, 75, 76, 0, 102, 78, 90, 0,
	91, 92, 20, 68, 0, 0, 0, 32, 33, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 26, 41,
	0, 27, 0, 0, 0, 95, 96, 97, 98, 99,
	100, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 88,
	0, 0, 0, 103, 0, 71, 0, 0, 0, 0,
	0, 0, 428, 427, 0, 69, 0, 0, 0, 0,
	0, 29, 93, 0, 36, 34, 35, 31, 37, 0,
	0, 0, 0, 0, 0, 0, 39, 40, 432, 433,
	70, 44, 45, 46, 47, 38, 49, 50, 51, 42,
	48, 52, 0, 0, 0, 0, 0, 0, 28, 43,
	95, 96, 97, 98, 99, 100, 101, 105, 0, 84,
	82, 83, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 81, 89, 67, 94, 74,
	75, 76, 0, 102, 78, 90, 0, 91, 92, 20,
	68, 0, 0, 0, 32, 33, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 26, 41, 0, 27, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 88, 0, 0, 0,
	103, 0, 71, 0, 0, 0, 0, 0, 0, 772,
	771, 0, 775, 0, 0, 0, 0, 0, 29, 93,
	0, 36, 34, 35, 31, 37, 0, 0, 0, 0,
	0, 0, 0, 39, 40, 0, 0, 0, 44, 45,
	46, 47, 38, 49, 50, 51, 42, 48, 52, 0,
	0, 0, 776, 0, 0, 28, 43, 95, 96, 97,
	98, 99, 100, 101, 105, 0, 84, 82, 83, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 81, 89, 67, 94, 74, 75, 76, 0,
	102, 78, 90, 0, 91, 92, 20, 68, 0, 0,
	0, 32, 33, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 26, 41, 0, 27, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 88, 0, 0, 0, 103, 0, 71,
	0, 0, 0, 0, 0, 0, 22, 21, 0, 69,
	0, 0, 0, 0, 0, 29, 93, 0, 36, 34,
	35, 31, 37, 0, 0, 0, 0, 0, 0, 0,
	39, 40, 0, 0, 70, 44, 45, 46, 47, 38,
	49, 50, 51, 42, 48, 52, 0, 0, 0, 0,
	0, 0, 28, 43, 95, 96, 97, 98, 99, 100,
	101, 105, 0, 84, 82, 83, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	89, 67, 94, 74, 75, 76, 0, 102, 78, 90,
	0, 91, 92, 0, 68, 0, 0, 0, 0, 0,
	113, 122, 121, 112, 111, 114, 110, 73, 0, 0,
	94, 74, 75, 76, 0, 102, 78, 90, 0, 91,
	92, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	88, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 126, 0, 0, 0, 0, 0,
	0, 0, 191, 93, 87, 0, 0, 0, 88, 0,
	108, 107, 103, 0, 0, 0, 118, 109, 117, 116,
	0, 127, 126, 119, 120, 467, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 0, 0, 190,
	0, 95, 96, 97, 98, 99, 100, 101, 105, 0,
	84, 82, 83, 104, 0, 0, 0, 0, 113, 122,
	121, 112, 111, 114, 110, 80, 81, 89, 67, 95,
	96, 97, 98, 99, 100, 101, 105, 0, 84, 82,
	83, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 80, 81, 89, 67, 94, 74, 75,
	76, 0, 102, 78, 90, 0, 91, 92, 0, 68,
	0, 0, 0, 0, 0, 113, 122, 121, 112, 111,
	114, 110, 73, 0, 0, 94, 74, 75, 76, 0,
	102, 78, 90, 0, 91, 92, 1012, 68, 108, 107,
	0, 0, 0, 0, 118, 109, 117, 116, 0, 0,
	73, 119, 120, 297, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 88, 0, 0, 0, 103,
	269, 0, 0, 0, 0, 0, 0, 0, 127, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 93, 87,
	0, 0, 293, 88, 0, 108, 107, 103, 0, 71,
	0, 118, 109, 117, 116, 0, 127, 126, 119, 120,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 96, 97, 98,
	99, 100, 101, 105, 0, 84, 82, 83, 104, 0,
	0, 0, 0, 113, 122, 121, 112, 111, 114, 110,
	80, 81, 89, 67, 95, 96, 97, 98, 99, 100,
	101, 105, 0, 84, 82, 83, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 81,
	89, 67, 94, 74, 75, 76, 0, 102, 78, 90,
	0, 91, 92, 0, 68, 0, 0, 0, 0, 0,
	113, 122, 121, 112, 111, 114, 110, 73, 0, 0,
	94, 74, 75, 76, 0, 102, 78, 90, 0, 91,
	92, 1001, 68, 108, 107, 0, 0, 0, 0, 118,
	109, 117, 116, 0, 0, 73, 119, 120, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	88, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 87, 0, 0, 0, 88, 0,
	108, 107, 103, 0, 0, 0, 118, 109, 117, 116,
	0, 127, 126, 119, 120, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 589, 0, 0,
	0, 95, 96, 97, 98, 99, 100, 101, 105, 0,
	84, 82, 83, 104, 113, 122, 121, 112, 111, 114,
	110, 0, 0, 590, 0, 80, 81, 89, 67, 95,
	96, 97, 98, 99, 100, 101, 105, 0, 84, 82,
	83, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 81, 89, 124, 94, 74, 299,
	76, 0, 102, 78, 90, 0, 91, 92, 0, 68,
	113, 122, 121, 112, 111, 114, 110, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 987, 0, 0, 108, 107, 0, 0, 0, 0,
	118, 109, 117, 116, 0, 0, 0, 119, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 88, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 126,
	113, 122, 121, 112, 111, 114, 110, 0, 93, 0,
	108, 107, 0, 0, 0, 0, 118, 109, 117, 116,
	0, 975, 0, 119, 120, 0, 0, 0, 0, 0,
	0, 0, 0, 113, 122, 121, 112, 111, 114, 110,
	0, 0, 0, 0, 0, 0, 95, 96, 97, 98,
	99, 100, 101, 105, 952, 84, 82, 83, 104, 0,
	0, 113, 122, 121, 112, 111, 114, 110, 0, 0,
	80, 81, 89, 67, 0, 0, 0, 0, 0, 0,
	108, 107, 943, 0, 0, 0, 118, 109, 117, 116,
	0, 0, 0, 119, 120, 113, 122, 121, 112, 111,
	114, 110, 0, 0, 0, 113, 122, 121, 112, 111,
	114, 110, 0, 108, 107, 0, 931, 0, 0, 118,
	109, 117, 116, 0, 0, 0, 119, 120, 0, 0,
	113, 122, 121, 112, 111, 114, 110, 0, 0, 0,
	0, 108, 107, 0, 0, 0, 0, 118, 109, 117,
	116, 922, 0, 0, 119, 120, 113, 122, 121, 112,
	111, 114, 110, 0, 0, 0, 113, 122, 121, 112,
	111, 114, 110, 0, 0, 108, 107, 868, 0, 0,
	0, 118, 109, 117, 116, 108, 107, 857, 119, 120,
	0, 118, 109, 117, 116, 0, 0, 851, 119, 120,
	113, 122, 121, 112, 111, 114, 110, 0, 0, 0,
	108, 107, 0, 0, 0, 0, 118, 109, 117, 116,
	0, 0, 0, 119, 120, 0, 0, 113, 122, 121,
	112, 111, 114, 110, 0, 0, 108, 107, 0, 0,
	0, 0, 118, 109, 117, 116, 108, 107, 806, 119,
	120, 0, 118, 109, 117, 116, 0, 0, 0, 119,
	120, 113, 122, 121, 112, 111, 114, 110, 0, 0,
	0, 113, 122, 121, 112, 111, 114, 110, 0, 0,
	108, 107, 786, 0, 0, 0, 118, 109, 117, 116,
	0, 356, 815, 119, 120, 0, 113, 122, 121, 112,
	111, 114, 110, 0, 0, 0, 0, 108, 107, 0,
	0, 0, 0, 118, 109, 117, 116, 671, 0, 0,
	119, 120, 113, 122, 121, 112, 111, 114, 110, 0,
	0, 0, 113, 122, 121, 112, 111, 114, 110, 0,
	0, 108, 107, 0, 0, 0, 0, 118, 109, 117,
	116, 108, 107, 644, 119, 120, 0, 118, 109, 117,
	116, 0, 0, 0, 119, 120, 113, 122, 121, 112,
	111, 114, 110, 0, 0, 0, 108, 107, 0, 0,
	0, 0, 118, 109, 117, 116, 544, 582, 0, 119,
	120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 107, 0, 0, 0, 0, 118, 109,
	117, 116, 108, 107, 668, 119, 120, 0, 118, 109,
	117, 116, 0, 0, 0, 119, 120, 0, 113, 122,
	121, 112, 111, 114, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 107, 0, 0,
	0, 0, 118, 109, 117, 116, 0, 0, 0, 119,
	120, 113, 122, 121, 112, 111, 114, 110, 292, 0,
	0, 113, 122, 121, 112, 111, 114, 110, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 113, 122, 121, 112, 111,
	114, 110, 0, 0, 0, 0, 0, 0, 108, 107,
	0, 0, 0, 0, 118, 109, 117, 116, 291, 0,
	0, 119, 120, 0, 0, 0, 113, 122, 121, 112,
	111, 114, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 107, 0, 0, 0, 0, 118, 109, 117,
	116, 108, 107, 0, 119, 120, 0, 118, 109, 117,
	116, 0, 0, 0, 119, 120, 113, 122, 121, 112,
	111, 114, 110, 0, 0, 108, 107, 0, 0, 0,
	0, 118, 109, 117, 116, 0, 0, 238, 119, 120,
	113, 122, 121, 112, 111, 114, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 107, 0, 0,
	0, 0, 118, 109, 117, 116, 0, 0, 0, 119,
	120, 113, 469, 121, 112, 111, 114, 110, 0, 0,
	0, 113, 348, 121, 112, 111, 114, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 107, 0, 0,
	0, 0, 118, 109, 117, 116, 0, 0, 0, 119,
	120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 107, 0, 0, 0, 0, 118, 109, 117, 116,
	0, 0, 0, 119, 120, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 107, 0, 0, 0, 0, 118, 109, 117,
	116, 108, 107, 0, 119, 120, 0, 118, 109, 117,
	116, 0, 0, 0, 119, 120,
}
var yyPact = [...]int{

	2281, -1000, 261, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3601,
	-1000, 2836, 2808, -1000, -1000, 196, 831, 817, 925, 1238,
	-1000, 499, 909, 913, 1872, 1872, 448, 1872, 2808, -1000,
	-1000, 2808, 2808, 1736, 2808, 2808, 2808, 2808, 2808, 2808,
	-1000, 1872, 1872, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 267, -1000, -1000, -1000, 2651, -1000, 2438,
	951, 838, -72, -62, -1000, -1000, -1000, -1000, -1000, -1000,
	2808, 2808, 244, 243, 241, -1000, 334, 240, 2808, 2808,
	-1000, -1000, -1000, 1872, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 238, 236, 2281, 2808, 2808, 2808,
	663, 2808, 678, 111, 2808, 697, 2808, 2808, 2808, 2808,
	2808, 2808, 2808, 3577, 2651, -1000, 235, 2808, 561, 3601,
	789, 867, 1595, 720, 885, 703, 645, -1000, 641, 1872,
	1595, -1000, 43, 265, -1000, 460, -1000, 1872, 1872, 1872,
	1872, 372, 371, -1000, -1000, -1000, 1872, -1000, -1000, -1000,
	-1000, 2808, 2808, 894, 40, 3537, 3506, 2704, -1000, 891,
	3601, 3601, 1446, -72, 3601, -1000, 2519, -72, 3601, -1000,
	2993, 2808, 964, 180, 181, 187, 3482, 45, 690, 925,
	-1000, -1000, -1000, -1000, 38, 1872, -1000, 1643, 2623, 1623,
	-1000, -1000, 1148, 645, 645, 111, 111, 664, 695, -1000,
	-1000, 449, -1000, 345, 645, 2808, -1000, 30, 21, 21,
	727, 3642, 2808, 111, 2808, -1000, 2651, -1000, 21, 111,
	111, -4, -4, -1000, -1000, -1000, 1109, 449, 2281, 180,
	178, 2808, 557, 539, 536, 2808, 755, 778, 1595, 881,
	37, -1000, -1000, -1000, -1000, 233, -1000, -1000, -1000, -1000,
	169, 889, 26, 871, 169, 713, 713, 713, 1393, -1000,
	313, 884, 925, 2808, 398, 245, 232, 231, -1000, -1000,
	-1000, -1000, 2808, 2808, 2808, 2808, 865, 3601, 3601, 953,
	2808, 2808, 921, 918, 1595, 2808, 2808, 2808, 3601, 2808,
	3601, -1000, -1000, -1000, 1967, 1872, 925, 1872, 42, 689,
	838, 225, -1000, -1000, 176, 2808, -1000, -1000, -1000, -1000,
	173, 25, 862, -1000, 3601, -1000, -1000, -36, 229, 228,
	226, 224, 223, 221, 2808, 2466, -1000, -1000, 111, 190,
	190, 190, 663, -1000, 2808, 2391, -1000, -1000, 2808, 3632,
	-1000, 21, -1000, -1000, 526, -1000, 2808, 456, 2281, 455,
	2808, 3472, 753, 2808, 1560, 200, 1102, 1595, 2808, 871,
	91, 1217, -1000, -1000, 1480, -1000, 220, -1000, 169, 1193,
	787, 2808, -1000, 187, -1000, 187, 187, -1000, 1872, 641,
	-1000, 1036, 102, 1102, 1872, -1000, 3601, 641, 1872, 641,
	201, 1872, 3601, -72, 3601, -72, -72, 3601, -72, 3601,
	925, -1000, -1000, 22, 3439, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3601, 453, 258, -1000, -1000, 2836, 2808, -1000,
	-1000, -1000, -1000, -1000, 503, -1000, 16, 496, 1872, 1872,
	-1000, 219, 1872, -1000, 172, -1000, 1393, 1872, 2623, 645,
	645, 645, 2808, 2808, 2808, 167, 164, 161, 676, -1000,
	183, -1000, 217, -1000, -1000, 427, 160, 2808, 449, 2808,
	452, 535, 2281, 2808, 3377, 616, -1000, -1000, 3601, 2281,
	397, 2808, 2885, -1000, 13, 774, 3601, -1000, 111, 1102,
	-1000, 885, 10, 251, -71, -1000, -65, 1696, -1000, 748,
	746, 714, 714, 738, 169, -1000, -1000, -1000, -1000, 1872,
	98, 2808, 871, -1000, 784, 772, 3601, 716, -1000, -1000,
	716, 159, 6, -1000, 803, 1872, 805, -1000, 1102, 801,
	794, -1000, 151, -1000, 859, 150, 4, -1000, -1000, 0,
	804, 5, -1000, 2808, 1872, 574, 1967, 3343, 556, 1967,
	1967, 483, 480, 641, 140, -1000, -1000, -1000, 134, 2808,
	2808, 2466, 2808, 133, 129, 126, -1000, -1000, -1000, 111,
	120, -23, 2808, -1000, 638, 309, 3333, 449, 599, 450,
	-1000, 3307, 2808, -1000, 3282, 555, 887, 3601, -1000, 642,
	297, 1560, 293, -1000, -1000, -1000, 119, -30, 871, 1102,
	2808, -1000, 2808, 1872, 169, 169, 740, -1000, 736, 732,
	714, -1000, -1000, -1000, 1640, -1000, -1000, 2808, 2808, 852,
	1872, -1000, -1000, -1000, 1102, 1102, 114, -32, 2808, 112,
	1872, 2808, 851, 324, 848, 925, 925, 2808, 847, 925,
	-1000, -1000, -1000, -1000, 1967, 532, 2808, 447, 446, 1967,
	1967, 107, 845, 381, 105, 96, 95, 93, 92, 380,
	342, 340, -1000, -1000, 111, 1318, -1000, 786, -1000, -1000,
	596, 2281, 3282, -1000, -1000, 2808, -1000, -1000, -1000, -1000,
	813, 705, 1102, -1000, -1000, 3601, 89, -59, 738, 1169,
	169, 169, 169, 729, 2808, 3601, -1000, 641, -1000, -1000,
	-1000, 803, 1872, 3601, -1000, -1000, -72, 3601, 641, 2124,
	318, -1000, -1000, -1000, 804, 3601, 317, 88, 523, 445,
	1967, 3272, 573, 572, 443, 442, -1000, 216, 214, 378,
	373, 369, 359, 330, 212, 211, 290, 208, 288, -1000,
	2808, 207, -1000, 580, 3238, -1000, -1000, -1000, 111, -1000,
	-1000, -1000, -1000, 2808, -1000, 2808, 206, 1169, 1012, 738,
	169, -21, 3211, -1000, -1000, -1000, -1000, 441, 255, -1000,
	-1000, 2836, 2808, -1000, -1000, 2808, 2808, 2124, 2124, 842,
	438, 531, 1967, 2808, 614, -1000, 1967, -1000, -1000, 571,
	569, 641, 384, 203, 198, 193, 192, 191, 384, 384,
	344, 384, 332, 3116, 789, -1000, 2281, -1000, 87, 3601,
	1872, -1000, 2808, 738, -1000, -1000, -1000, 2124, 3177, 553,
	1513, 44, 684, 3601, 437, 436, 315, 595, 424, -1000,
	3167, -1000, 546, -1000, -1000, 84, 73, -1000, 790, 770,
	384, 384, 384, 384, 384, 72, 789, 71, 188, 70,
	186, -1000, 69, -1000, 68, 3601, -1000, 2124, 530, 2808,
	1810, 1872, 1872, -1000, -1000, 2124, -1000, 594, 1967, -1000,
	2808, -1000, -1000, -1000, 762, 2808, 67, 63, 61, 60,
	56, -1000, -1000, 384, -1000, 384, -1000, -1000, 502, 422,
	2124, 3141, 421, 254, -1000, -1000, 2836, 2808, -1000, -1000,
	-1000, 473, 464, 420, -1000, 579, 3106, 1560, -1000, -1000,
	-1000, -1000, -1000, -1000, 33, -18, 416, 529, 2124, 2808,
	611, -1000, 2124, 568, 1810, 3072, 545, 1810, 1810, -1000,
	-1000, 1967, 286, -1000, -1000, 593, 414, -1000, 3044, -1000,
	544, -1000, -1000, 1810, 524, 2808, 413, 412, -1000, 677,
	-1000, 589, 2124, -1000, 2808, 500, 409, 1810, 3011, 564,
	563, -1000, 698, 635, 634, 622, -1000, 576, 2941, 407,
	505, 1810, 2808, 601, -1000, 1810, -1000, -1000, 669, 633,
	-1000, 626, 621, -1000, -1000, -1000, -1000, 2124, 588, 405,
	-1000, 2761, -1000, 542, 691, -1000, -1000, -1000, -1000, -1000,
	587, 1810, -1000, 2808, -1000, 631, -1000, -1000, 454, 2576,
	-1000, -1000, 1810,
}
var yyPgo = [...]int{

	0, 60, 27, 33, 84, 136, 71, 1107, 31, 1103,
	28, 1101, 1099, 1098, 1097, 12, 6, 1095, 1093, 1092,
	1085, 1083, 1081, 1079, 74, 41, 40, 1078, 1077, 1076,
	64, 1075, 62, 1067, 1063, 56, 44, 1062, 1060, 1058,
	1057, 1054, 814, 107, 92, 1053, 72, 55, 1051, 1050,
	15, 1049, 59, 1048, 36, 1046, 83, 1045, 98, 97,
	165, 0, 63, 58, 37, 10, 1044, 1031, 1030, 1026,
	1118, 1024, 91, 1022, 1020, 1018, 127, 1017, 1016, 1011,
	5, 25, 21, 16, 1006, 1005, 3, 1003, 993, 76,
	992, 990, 78, 77, 73, 989, 35, 987, 30, 985,
	983, 981, 2, 52, 980, 38, 17, 79, 18, 69,
	974, 971, 969, 53, 968, 26, 65, 13, 34, 11,
	9, 1, 4, 57, 967, 14, 966, 8, 965, 7,
	962, 1052, 247, 24, 19, 961, 86, 895, 960, 260,
	80, 75, 54, 67, 87, 959, 51, 668,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 6, 6, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 10, 10, 12,
	12, 11, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 13, 14, 14, 15, 15, 15, 16, 16, 17,
	17, 18, 18, 18, 18, 18, 19, 19, 19, 19,
	19, 19, 20, 20, 20, 20, 21, 21, 21, 21,
	21, 22, 22, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 24, 24, 25, 25, 26, 26, 26,
	26, 26, 27, 27, 27, 27, 27, 28, 28, 28,
	28, 29, 29, 30, 30, 31, 31, 31, 31, 32,
	33, 33, 34, 35, 35, 36, 36, 36, 37, 37,
	37, 37, 37, 38, 38, 38, 38, 38, 38, 38,
	39, 39, 39, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 41, 41, 41,
	42, 42, 43, 43, 43, 43, 44, 44, 45, 46,
	46, 47, 47, 48, 48, 49, 49, 50, 50, 51,
	51, 51, 52, 52, 53, 53, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 57, 57, 57, 58, 59,
	60, 60, 60, 60, 60, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 61, 62, 63, 63, 63, 64, 64, 65, 65,
	66, 66, 67, 67, 68, 68, 68, 69, 69, 70,
	71, 72, 72, 72, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 74, 74, 74, 74, 74, 74, 74,
	75, 75, 75, 75, 76, 76, 77, 77, 77, 77,
	78, 78, 78, 78, 78, 79, 79, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 81, 82,
	82, 83, 83, 84, 84, 85, 85, 85, 86, 86,
	86, 87, 87, 88, 88, 89, 89, 90, 90, 90,
	90, 91, 91, 91, 91, 92, 92, 95, 95, 95,
	95, 96, 96, 96, 96, 96, 96, 97, 97, 97,
	97, 97, 97, 98, 98, 99, 99, 100, 100, 100,
	101, 102, 102, 103, 103, 104, 104, 105, 105, 106,
	106, 107, 107, 93, 93, 94, 94, 108, 108, 109,
	109, 110, 110, 110, 110, 111, 112, 113, 113, 114,
	114, 115, 115, 116, 116, 117, 117, 118, 118, 119,
	119, 120, 120, 121, 121, 122, 122, 123, 123, 124,
	124, 125, 125, 126, 126, 127, 127, 128, 128, 129,
	129, 130, 130, 131, 131, 131, 131, 131, 131, 131,
	131, 132, 133, 133, 134, 135, 135, 136, 136, 137,
	138, 139, 139, 140, 140, 141, 141, 142, 142, 143,
	143, 144, 144, 145, 145, 146, 146, 147, 147,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 8, 8, 9, 9, 1, 1, 1, 2, 1,
	1, 7, 8, 6, 1, 1, 7, 8, 6, 1,
	1, 1, 1, 1, 6, 8, 8, 1, 2, 1,
	1, 7, 8, 6, 1, 1, 7, 8, 6, 1,
	1, 1, 2, 2, 1, 2, 4, 4, 4, 4,
	2, 1, 1, 6, 8, 5, 6, 8, 5, 7,
	7, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 3, 1, 3, 4, 2, 4, 3, 1,
	1, 3, 3, 1, 3, 1, 1, 3, 9, 10,
	10, 12, 3, 0, 1, 1, 1, 1, 2, 2,
	5, 6, 3, 4, 4, 4, 4, 4, 4, 2,
	2, 2, 2, 4, 4, 2, 2, 2, 4, 1,
	2, 2, 4, 2, 2, 1, 2, 2, 3, 4,
	5, 7, 5, 4, 4, 4, 1, 1, 3, 0,
	2, 0, 2, 0, 3, 0, 2, 0, 3, 0,
	3, 4, 0, 2, 0, 2, 0, 2, 6, 9,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 3, 1, 6, 1, 3, 1, 3,
	2, 4, 1, 1, 0, 1, 1, 1, 1, 3,
	3, 3, 1, 6, 3, 3, 3, 3, 4, 4,
	5, 6, 6, 3, 4, 4, 3, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 3, 2, 2,
	3, 3, 2, 2, 0, 1, 4, 3, 4, 4,
	5, 5, 5, 5, 1, 5, 10, 8, 9, 9,
	9, 9, 9, 8, 8, 10, 8, 10, 2, 1,
	5, 0, 3, 2, 5, 2, 2, 2, 2, 2,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 4, 6, 6, 8, 1, 1, 1, 6, 6,
	1, 1, 2, 3, 1, 1, 3, 4, 5, 6,
	7, 5, 6, 2, 4, 1, 1, 1, 3, 1,
	5, 0, 1, 4, 5, 0, 2, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 6, 9, 5, 8, 7, 3, 1, 3, 5,
	6, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 1, 3, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -110, -111, -114, -23,
	-20, -21, -27, -28, -31, -37, -22, -40, -41, -61,
	15, 86, 85, -8, -10, -54, 31, 34, 131, 94,
	-134, 100, 20, 21, 98, 99, 97, 101, 118, 109,
	110, 32, 122, 132, 114, 115, 116, 117, 123, 119,
	120, 121, 124, -60, -57, -74, -71, -70, -77, -78,
	-101, -73, -75, -132, -137, -138, -39, 160, 16, 88,
	113, 78, -131, 29, 5, 6, 7, -58, 10, -59,
	157, 158, 143, 144, 142, -79, -63, 68, 72, 159,
	11, 13, 14, 95, 4, 133, 134, 135, 136, 137,
	138, 139, 9, 76, 145, 140, 154, 150, 149, 156,
	75, 73, 72, 69, 74, -147, 158, 157, 155, 162,
	163, 71, 70, -61, 160, -134, 86, 85, -102, -61,
	-43, 24, 19, 22, -45, -44, 17, -70, 160, 35,
	35, -136, -135, -132, -136, -131, -132, 95, 43, 101,
	125, -137, 12, -137, -131, -131, -38, 102, 103, 36,
	37, 104, 105, -131, -131, -61, -61, -61, 12, -131,
	-61, -61, -61, -131, -61, -106, -61, -131, -61, -131,
	-131, 151, -61, -106, -42, -54, -61, -132, -133, -9,
	131, 94, 6, -56, -55, -145, 30, 165, 160, 165,
	-61, -61, 160, 160, 160, 149, 156, -140, -147, 72,
	-70, -61, -61, -131, 160, 160, -1, -61, -61, -61,
	-140, -61, 73, 69, 74, -63, 160, -70, -61, 67,
	66, -61, -61, -61, -61, -61, -61, -61, 90, -106,
	-76, 160, -102, -123, -103, 89, -50, 44, 25, -94,
	-92, -89, -91, -131, 29, -90, 136, 137, 138, 139,
	18, -93, -89, -46, 18, 63, 64, 65, -139, 77,
	-131, -92, 164, 151, 95, 43, 125, 126, -131, -131,
	-131, -131, 156, 42, 156, 42, -131, -61, -61, 18,
	61, 61, 42, 18, 18, 164, 61, 164, -61, 6,
	-61, 161, 161, 161, 92, 69, 164, 69, -132, -133,
	164, -131, -131, 6, -76, -139, -106, -131, 6, 161,
	-109, -100, -99, -62, -61, -80, 155, -131, 144, 142,
	145, 146, 147, 148, -139, -139, -63, -63, 73, 69,
	67, 66, 75, 142, -139, -61, -58, -59, 70, -61,
	-63, -61, -63, -63, -1, 161, 89, -124, 91, -104,
	91, -61, -51, 50, 47, -92, 20, 164, 160, -107,
	-96, -95, -97, 28, 160, -92, 141, -70, 18, 164,
	-47, 23, -107, -144, 66, -144, -144, -109, 160, -146,
	27, 32, 33, 41, 20, -136, -61, 96, 160, 27,
	160, 160, -61, -131, -61, -131, -131, -61, -131, -61,
	25, 5, -30, -29, -61, -106, 12, 12, -92, -106,
	-106, -106, -61, -2, -12, -5, -13, 86, 85, -8,
	-10, -6, 111, 112, -131, -133, -132, -131, 69, 69,
	-56, 27, 160, 161, -76, 161, 164, 27, 160, 160,
	160, 160, 160, 160, 160, -76, -76, -62, -63, -72,
	160, -70, 140, -72, -72, -140, -76, 164, -61, 70,
	-116, -115, 91, 87, -61, 93, -1, 93, -61, 90,
	-53, 51, -61, -65, -66, -67, -61, -80, 26, 160,
	-42, -113, -112, -60, -131, -94, -131, -61, -47, 59,
	-141, -143, 58, 62, 164, 54, 56, 57, -131, 27,
	-96, 160, -107, -93, -48, 45, -61, -44, -43, -44,
	-44, -108, -131, -42, -24, 160, -131, -60, 160, -60,
	-131, -42, -108, -42, 161, -36, -33, -35, -32, -34,
	-132, -131, -133, 164, 27, 93, 154, -61, -102, 92,
	92, -131, -131, 160, -108, 161, -109, -131, -76, -139,
	-139, -139, -139, -76, -76, -76, 161, 161, 161, 70,
	-64, -63, 160, 98, 69, 161, -61, -61, 93, -116,
	-1, -61, 90, 85, -61, -1, 96, -61, -52, 52,
	78, 164, -68, 48, 49, -64, -105, -60, -46, 164,
	156, 161, 164, 164, 53, 53, -142, 55, -142, -141,
	-143, -107, -131, 161, -61, -47, -49, 46, 47, 161,
	164, -26, 36, 37, 38, 39, -25, -24, 40, -105,
	42, 42, 161, 27, 161, 164, 164, 40, 161, 164,
	-30, -131, 88, -2, 90, -125, 89, -2, -2, 92,
	92, -42, 161, 161, -76, -76, -76, -62, -76, 161,
	161, 161, -63, 161, 164, -61, 79, 130, 161, 86,
	93, 90, -61, -103, -123, 89, 19, -52, 133, -65,
	134, 161, 164, -47, -113, -61, -76, -131, -96, -96,
	53, 53, 53, -142, 164, -61, -106, -146, -108, -60,
	-60, 161, 164, -61, 161, -131, -131, -61, 27, 127,
	27, -32, -35, -35, -132, -61, 27, -36, -2, -126,
	91, -61, 93, 93, -2, -2, 161, 27, 108, 161,
	161, 161, 161, 161, 108, 108, 129, 108, 129, -64,
	164, 45, 86, -1, -61, -69, 36, 37, 26, -42,
	-105, 161, 161, 164, -98, 60, 61, -96, -96, -96,
	53, -131, -61, -42, -26, -25, -42, -3, -14, -5,
	-18, 86, 85, -15, -16, 88, 128, 127, 127, 161,
	-118, -117, 91, 87, 93, -2, 90, 88, 88, 93,
	93, 160, 160, 108, 108, 108, 108, 108, 160, 160,
	134, 160, 134, -61, 160, -115, 90, -64, -76, -61,
	160, -98, 60, -96, 161, 161, 93, 154, -61, -102,
	-61, -132, -133, -61, -3, -3, 27, 93, -118, -2,
	-61, 85, -2, 88, 88, -42, -82, -81, -83, 107,
	160, 160, 160, 160, 160, -81, -83, -82, 108, -81,
	108, 161, -50, 161, -108, -61, -3, 90, -127, 89,
	92, 69, 69, 93, 93, 127, 86, 93, 90, -125,
	89, 161, 161, -50, 44, 47, -82, -82, -82, -82,
	-81, 161, 161, 160, 161, 160, 161, 161, -3, -128,
	91, -61, -4, -17, -5, -19, 86, 85, -15, -16,
	-6, -131, -131, -3, 86, -2, -61, 47, -106, 161,
	161, 161, 161, 161, -82, -81, -120, -119, 91, 87,
	93, -3, 90, 93, 154, -61, -102, 92, 92, 93,
	-117, 90, -65, 161, 161, 93, -120, -3, -61, 85,
	-3, 88, -4, 90, -129, 89, -4, -4, -84, 135,
	86, 93, 90, -127, 89, -4, -130, 91, -61, 93,
	93, -85, 73, 80, 6, 83, 86, -3, -61, -122,
	-121, 91, 87, 93, -4, 90, 88, 88, -87, 80,
	-86, 6, 83, 81, 81, 84, -119, 90, 93, -122,
	-4, -61, 85, -4, 70, 81, 81, 82, 84, 86,
	93, 90, -129, 89, -88, 80, -86, 86, -4, -61,
	82, -121, 90,
}
var yyDef = [...]int{

	-2, -2, 2, 28, 29, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, 0, 361, 44, 45, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 133, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	165, 0, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 227, 228, 229, 196, 231, 0,
	37, 453, 210, 0, 202, 203, 204, 205, 206, 207,
	0, 0, 0, 0, 0, 294, 443, 0, 0, 0,
	431, 439, 440, 0, 423, 424, 425, 426, 427, 428,
	429, 430, 208, 209, 0, 0, -2, 0, 457, 458,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 226, 0, 361, 0, 362,
	-2, 0, 0, 0, 179, 0, 441, 177, 196, 0,
	0, 72, 437, 435, 73, 0, 75, 0, 0, 0,
	0, 0, 0, 80, 103, 104, 0, 134, 135, 136,
	137, 0, 0, 0, -2, 157, 0, 0, 149, 161,
	150, 151, 152, -2, 156, 160, 369, -2, 164, 166,
	167, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	35, 36, 38, 197, 200, 0, 454, 0, 284, 0,
	278, 279, 0, 441, 441, 457, 458, 0, 0, 444,
	272, 282, 283, 0, 441, 0, 3, 250, -2, -2,
	0, 0, 0, 0, 0, 263, 196, 234, -2, 0,
	0, 273, 274, 275, 276, 277, 280, 281, -2, 0,
	0, 284, 0, 409, 365, 0, 189, 0, 0, 0,
	375, 335, 336, 325, 326, 0, -2, -2, -2, -2,
	0, 0, 373, 181, 0, 451, 451, 451, 0, 442,
	455, 0, 0, 0, 0, 0, 0, 0, 105, 110,
	118, 132, 0, 0, 0, 0, 0, 138, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 203,
	434, 230, 233, 249, -2, 0, 0, 0, 0, 0,
	453, 0, 211, 213, 0, 284, 285, 212, 214, 287,
	0, 379, 357, 359, 355, 356, 232, 210, 0, 0,
	0, 0, 0, 0, 284, 284, 255, 257, 0, 0,
	0, 0, 443, 142, 284, 0, 258, 259, 0, 0,
	264, -2, 268, 270, 393, 289, 0, 0, -2, 0,
	0, 0, 194, 0, 0, 196, 0, 0, 0, 181,
	-2, 341, 344, 345, 196, 337, 0, 340, 0, 0,
	183, 0, 180, 0, 452, 0, 0, 178, 0, 196,
	456, 0, 0, 0, 0, 438, 436, 196, 0, 196,
	0, 0, 76, -2, 78, -2, -2, 144, -2, 146,
	0, 115, 117, 113, 111, 158, 147, 148, 162, 153,
	154, 370, 169, 0, 0, 39, 40, 0, 361, 49,
	50, 51, 26, 27, 0, 433, 432, 0, 0, 0,
	201, 0, 0, 286, 0, 288, 0, 0, 284, 441,
	441, 441, 284, 284, 284, 0, 0, 0, 0, 265,
	196, 252, 0, 269, 271, 0, 0, 0, 260, 0,
	0, 393, -2, 0, 0, 0, 410, 360, 366, -2,
	170, 0, 192, 188, 238, 244, 242, 243, 0, 0,
	383, 179, 387, 0, 210, 376, 210, 0, 389, 0,
	0, 447, 447, 445, 0, 446, 449, 450, 342, 0,
	445, 0, 181, 374, 185, 0, 182, 173, 176, 174,
	175, 0, 377, 85, 97, 0, 93, 88, 0, 0,
	0, 102, 0, 109, 0, 0, 125, 126, 120, 123,
	119, 0, 106, 0, 0, 0, -2, 0, 0, -2,
	-2, 0, 0, 196, 0, 290, 380, 358, 0, 284,
	284, 284, 284, 0, 0, 0, 291, 292, 293, 0,
	0, 236, 0, 140, 0, 295, 0, 261, 0, 0,
	394, 0, 0, 43, 24, 407, 0, 195, 190, 192,
	0, 0, 240, 245, 246, 381, 0, 367, 181, 0,
	0, 331, 284, 0, 0, 0, 0, 448, 0, 0,
	447, 372, 343, 346, 0, 390, 172, 0, 0, -2,
	0, 86, 98, 99, 0, 0, 0, 95, 0, 0,
	0, 0, 107, 0, 0, 0, 0, 0, 0, 0,
	114, 112, 30, 5, -2, 413, 0, 0, 0, -2,
	-2, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 251, 0, 0, 141, 0, 235, 41,
	0, -2, 363, 364, 408, 0, 171, 191, 193, 239,
	0, 196, 0, 385, 388, 386, 0, 0, 347, 445,
	0, 0, 0, 0, 0, 186, 184, 196, 378, 100,
	101, 97, 0, 94, 89, 90, -2, 92, 196, -2,
	0, 121, 127, 124, 0, 122, 0, 0, 397, 0,
	-2, 0, 0, 0, 0, 0, 198, 0, 0, 290,
	291, 292, 293, 295, 0, 0, 0, 0, 0, 237,
	0, 0, 42, 391, 0, 241, 247, 248, 0, 384,
	368, 332, 333, 284, 348, 0, 0, 445, 445, 351,
	0, 210, 0, 84, 87, 96, 108, 0, 0, 52,
	53, 0, 361, 64, 65, 0, 57, -2, -2, 0,
	0, 397, -2, 0, 0, 414, -2, 31, 32, 0,
	0, 196, 311, 0, 0, 0, 0, 0, 311, 311,
	0, 311, 0, 0, 187, 392, -2, 382, 0, 353,
	0, 349, 0, 352, 338, 339, 128, -2, 0, 0,
	0, 225, 0, 58, 0, 0, 0, 0, 0, 398,
	0, 48, 411, 33, 34, 0, 0, 309, 187, 0,
	311, 311, 311, 311, 311, 0, 187, 0, 0, 0,
	0, 253, 0, 334, 0, 350, 7, -2, 417, 0,
	-2, 0, 0, 129, 130, -2, 46, 0, -2, 412,
	0, 199, 297, 308, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 311, 306, 311, 296, 354, 401, 0,
	-2, 0, 0, 0, 59, 60, 0, 361, 69, 70,
	71, 0, 0, 0, 47, 395, 0, 0, 312, 298,
	299, 300, 301, 302, 0, 0, 0, 401, -2, 0,
	0, 418, -2, 0, -2, 0, 0, -2, -2, 131,
	396, -2, 188, 305, 307, 0, 0, 402, 0, 63,
	415, 54, 9, -2, 421, 0, 0, 0, 310, 0,
	61, 0, -2, 416, 0, 405, 0, -2, 0, 0,
	0, 313, 0, 0, 0, 0, 62, 399, 0, 0,
	405, -2, 0, 0, 422, -2, 55, 56, 0, 0,
	322, 0, 0, 315, 316, 317, 400, -2, 0, 0,
	406, 0, 68, 419, 0, 321, 318, 319, 320, 66,
	0, -2, 420, 0, 314, 0, 324, 67, 403, 0,
	323, 404, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 3, 3, 3, 163, 3, 3,
	160, 161, 155, 158, 164, 157, 165, 162, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 154,
	3, 156,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:234
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:244
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:255
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:265
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:271
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:275
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:341
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:361
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 30:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:383
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:389
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:393
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = Exit{}
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:409
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:413
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:419
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:501
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:505
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:533
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 68:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:585
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:593
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:599
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:603
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 83:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:609
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:613
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:637
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:641
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:645
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:651
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:655
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:661
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:665
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:671
		{
			yyVAL.expression = nil
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:675
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:679
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:683
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:687
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:701
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:705
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:709
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:715
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 108:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:719
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:723
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:727
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:733
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:737
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:743
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:747
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:753
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:757
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:761
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:771
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:777
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:781
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:787
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:793
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:797
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:803
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:807
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:811
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 128:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:817
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 129:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:821
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 130:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:825
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:829
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:833
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:839
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:843
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:847
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:851
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:855
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:859
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:863
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:869
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 141:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:873
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:877
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:883
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:887
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:891
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:895
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:899
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:903
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:907
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:911
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:915
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:919
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:923
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:927
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:931
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:935
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:939
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:943
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:947
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:951
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:955
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:959
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:963
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:967
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:971
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:975
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:981
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:985
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:989
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:995
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 171:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				OffsetClause:     yyDollar[5].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal,
			}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1019
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1029
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1047
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = nil
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = nil
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = nil
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = nil
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = nil
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1162
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 199:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1182
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1192
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1196
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1200
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1208
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1220
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1226
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1238
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1242
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1248
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1252
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1256
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1260
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1264
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1268
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1272
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1276
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1280
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1284
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1288
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1292
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1296
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1300
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1304
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1308
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1312
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1322
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1328
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1332
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1336
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1342
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1346
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1352
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1356
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1376
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.token = Token{}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.token = yyDollar[1].token
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1390
		{
			yyVAL.token = yyDollar[1].token
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.token = yyDollar[1].token
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1400
		{
			yyVAL.token = yyDollar[1].token
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1412
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 253:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1449
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1453
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1457
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1477
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 262:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1481
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1489
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1493
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1497
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1501
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1505
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1509
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1517
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1521
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1535
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1539
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1543
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1557
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1561
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1565
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1569
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1575
		{
			yyVAL.queryexprs = nil
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1579
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1589
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1593
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1597
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 296:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 298:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 299:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 300:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 301:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 302:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 303:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 306:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 307:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1676
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1688
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1692
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1699
		{
			yyVAL.queryexpr = nil
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1703
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1709
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1713
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1719
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1723
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1734
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1739
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].identifier, Args: nil}
		}
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].identifier, Args: yyDollar[5].queryexprs}
		}
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1838
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1848
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 350:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 352:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1906
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1910
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.queryexpr = nil
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1946
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.queryexpr = nil
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2020
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 382:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2040
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2044
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 384:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2048
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2060
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2076
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2081
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2088
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2092
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.elseexpr = Else{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2112
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2118
		{
			yyVAL.elseexpr = Else{}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2122
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2128
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2132
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2138
		{
			yyVAL.elseexpr = Else{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.elseexpr = Else{}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2182
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2232
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2238
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2242
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2248
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2252
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2256
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2260
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2264
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2268
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2272
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2276
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2282
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2288
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2292
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2298
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2304
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2308
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2314
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2318
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2324
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2330
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2336
		{
			yyVAL.token = Token{}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2346
		{
			yyVAL.token = Token{}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2350
		{
			yyVAL.token = yyDollar[1].token
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2356
		{
			yyVAL.token = Token{}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2360
		{
			yyVAL.token = yyDollar[1].token
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2366
		{
			yyVAL.token = Token{}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2370
		{
			yyVAL.token = yyDollar[1].token
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2376
		{
			yyVAL.token = yyDollar[1].token
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2380
		{
			yyVAL.token = yyDollar[1].token
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2386
		{
			yyVAL.token = Token{}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2390
		{
			yyVAL.token = yyDollar[1].token
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2396
		{
			yyVAL.token = Token{}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2400
		{
			yyVAL.token = yyDollar[1].token
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2406
		{
			yyVAL.token = Token{}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2410
		{
			yyVAL.token = yyDollar[1].token
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2416
		{
			yyVAL.token = yyDollar[1].token
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2420
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
