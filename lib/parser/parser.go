// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvVar
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const EXTERNAL_COMMAND = 57356
const SELECT = 57357
const FROM = 57358
const UPDATE = 57359
const SET = 57360
const UNSET = 57361
const DELETE = 57362
const WHERE = 57363
const INSERT = 57364
const INTO = 57365
const VALUES = 57366
const AS = 57367
const DUAL = 57368
const STDIN = 57369
const RECURSIVE = 57370
const CREATE = 57371
const ADD = 57372
const DROP = 57373
const ALTER = 57374
const TABLE = 57375
const FIRST = 57376
const LAST = 57377
const AFTER = 57378
const BEFORE = 57379
const DEFAULT = 57380
const RENAME = 57381
const TO = 57382
const VIEW = 57383
const ORDER = 57384
const GROUP = 57385
const HAVING = 57386
const BY = 57387
const ASC = 57388
const DESC = 57389
const LIMIT = 57390
const OFFSET = 57391
const PERCENT = 57392
const JOIN = 57393
const INNER = 57394
const OUTER = 57395
const LEFT = 57396
const RIGHT = 57397
const FULL = 57398
const CROSS = 57399
const ON = 57400
const USING = 57401
const NATURAL = 57402
const UNION = 57403
const INTERSECT = 57404
const EXCEPT = 57405
const ALL = 57406
const ANY = 57407
const EXISTS = 57408
const IN = 57409
const AND = 57410
const OR = 57411
const NOT = 57412
const BETWEEN = 57413
const LIKE = 57414
const IS = 57415
const NULL = 57416
const DISTINCT = 57417
const WITH = 57418
const RANGE = 57419
const UNBOUNDED = 57420
const PRECEDING = 57421
const FOLLOWING = 57422
const CURRENT = 57423
const ROW = 57424
const CASE = 57425
const IF = 57426
const ELSEIF = 57427
const WHILE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const DO = 57432
const END = 57433
const DECLARE = 57434
const CURSOR = 57435
const FOR = 57436
const FETCH = 57437
const OPEN = 57438
const CLOSE = 57439
const DISPOSE = 57440
const NEXT = 57441
const PRIOR = 57442
const ABSOLUTE = 57443
const RELATIVE = 57444
const SEPARATOR = 57445
const PARTITION = 57446
const OVER = 57447
const COMMIT = 57448
const ROLLBACK = 57449
const CONTINUE = 57450
const BREAK = 57451
const EXIT = 57452
const ECHO = 57453
const PRINT = 57454
const PRINTF = 57455
const SOURCE = 57456
const EXECUTE = 57457
const TRIGGER = 57458
const FUNCTION = 57459
const AGGREGATE = 57460
const BEGIN = 57461
const RETURN = 57462
const IGNORE = 57463
const WITHIN = 57464
const VAR = 57465
const SHOW = 57466
const TIES = 57467
const NULLS = 57468
const ROWS = 57469
const JSON_ROW = 57470
const JSON_TABLE = 57471
const COUNT = 57472
const JSON_OBJECT = 57473
const AGGREGATE_FUNCTION = 57474
const LIST_FUNCTION = 57475
const ANALYTIC_FUNCTION = 57476
const FUNCTION_NTH = 57477
const FUNCTION_WITH_INS = 57478
const COMPARISON_OP = 57479
const STRING_OP = 57480
const SUBSTITUTION_OP = 57481
const UMINUS = 57482
const UPLUS = 57483

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"EXTERNAL_COMMAND",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2245

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 174,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 73,
	85, 73,
	87, 73,
	89, 73,
	91, 73,
	142, 73,
	-2, 204,
	-1, 91,
	15, 174,
	17, 174,
	20, 174,
	22, 174,
	-2, 1,
	-1, 109,
	149, 260,
	-2, 174,
	-1, 115,
	61, 154,
	62, 154,
	63, 154,
	-2, 165,
	-1, 152,
	1, 140,
	85, 140,
	87, 140,
	89, 140,
	91, 140,
	142, 140,
	-2, 188,
	-1, 193,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	137, 0,
	144, 0,
	-2, 230,
	-1, 194,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	137, 0,
	144, 0,
	-2, 232,
	-1, 203,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	137, 0,
	144, 0,
	-2, 242,
	-1, 213,
	85, 1,
	89, 1,
	91, 1,
	-2, 174,
	-1, 264,
	91, 4,
	-2, 174,
	-1, 312,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	137, 0,
	144, 0,
	-2, 243,
	-1, 319,
	91, 1,
	-2, 174,
	-1, 331,
	51, 409,
	-2, 342,
	-1, 364,
	1, 76,
	85, 76,
	87, 76,
	89, 76,
	91, 76,
	142, 76,
	-2, 188,
	-1, 365,
	1, 132,
	85, 132,
	87, 132,
	89, 132,
	91, 132,
	142, 132,
	-2, 188,
	-1, 423,
	91, 1,
	-2, 174,
	-1, 430,
	87, 1,
	89, 1,
	91, 1,
	-2, 174,
	-1, 495,
	85, 4,
	87, 4,
	89, 4,
	91, 4,
	-2, 174,
	-1, 498,
	91, 4,
	-2, 174,
	-1, 499,
	91, 4,
	-2, 174,
	-1, 566,
	15, 419,
	76, 419,
	148, 419,
	-2, 80,
	-1, 589,
	85, 4,
	89, 4,
	91, 4,
	-2, 174,
	-1, 594,
	91, 4,
	-2, 174,
	-1, 595,
	91, 4,
	-2, 174,
	-1, 616,
	85, 1,
	89, 1,
	91, 1,
	-2, 174,
	-1, 649,
	1, 88,
	85, 88,
	87, 88,
	89, 88,
	91, 88,
	142, 88,
	-2, 188,
	-1, 652,
	91, 6,
	-2, 174,
	-1, 663,
	91, 4,
	-2, 174,
	-1, 718,
	91, 6,
	-2, 174,
	-1, 719,
	91, 6,
	-2, 174,
	-1, 723,
	91, 4,
	-2, 174,
	-1, 727,
	87, 4,
	89, 4,
	91, 4,
	-2, 174,
	-1, 747,
	87, 1,
	89, 1,
	91, 1,
	-2, 174,
	-1, 759,
	85, 6,
	87, 6,
	89, 6,
	91, 6,
	-2, 174,
	-1, 799,
	85, 6,
	89, 6,
	91, 6,
	-2, 174,
	-1, 802,
	91, 8,
	-2, 174,
	-1, 807,
	91, 6,
	-2, 174,
	-1, 810,
	85, 4,
	89, 4,
	91, 4,
	-2, 174,
	-1, 833,
	91, 6,
	-2, 174,
	-1, 861,
	91, 6,
	-2, 174,
	-1, 865,
	87, 6,
	89, 6,
	91, 6,
	-2, 174,
	-1, 867,
	85, 8,
	87, 8,
	89, 8,
	91, 8,
	-2, 174,
	-1, 870,
	91, 8,
	-2, 174,
	-1, 871,
	91, 8,
	-2, 174,
	-1, 874,
	87, 4,
	89, 4,
	91, 4,
	-2, 174,
	-1, 886,
	85, 8,
	89, 8,
	91, 8,
	-2, 174,
	-1, 895,
	85, 6,
	89, 6,
	91, 6,
	-2, 174,
	-1, 900,
	91, 8,
	-2, 174,
	-1, 914,
	91, 8,
	-2, 174,
	-1, 918,
	87, 8,
	89, 8,
	91, 8,
	-2, 174,
	-1, 930,
	87, 6,
	89, 6,
	91, 6,
	-2, 174,
	-1, 944,
	85, 8,
	89, 8,
	91, 8,
	-2, 174,
	-1, 955,
	87, 8,
	89, 8,
	91, 8,
	-2, 174,
}

const yyPrivate = 57344

const yyLast = 3578

var yyAct = [...]int{

	18, 913, 887, 860, 923, 286, 859, 912, 800, 722,
	778, 434, 936, 113, 780, 590, 779, 276, 472, 110,
	29, 108, 114, 721, 815, 694, 568, 163, 774, 331,
	573, 350, 519, 422, 544, 219, 488, 381, 23, 486,
	149, 150, 151, 153, 154, 444, 489, 218, 215, 380,
	22, 552, 534, 1, 230, 45, 284, 715, 536, 157,
	161, 55, 452, 421, 281, 341, 451, 574, 120, 376,
	3, 175, 176, 330, 410, 168, 158, 327, 224, 186,
	187, 182, 344, 76, 332, 172, 389, 126, 803, 128,
	128, 69, 131, 192, 193, 194, 67, 196, 265, 469,
	203, 235, 206, 207, 208, 209, 210, 211, 212, 714,
	157, 29, 174, 114, 382, 456, 129, 457, 458, 453,
	450, 162, 645, 454, 115, 92, 217, 214, 626, 23,
	103, 173, 102, 101, 173, 754, 172, 104, 105, 172,
	221, 22, 756, 399, 191, 757, 251, 252, 172, 585,
	609, 103, 586, 102, 101, 103, 257, 259, 104, 105,
	156, 3, 104, 105, 456, 583, 457, 458, 453, 450,
	156, 266, 454, 266, 277, 582, 567, 195, 285, 548,
	539, 266, 200, 266, 397, 329, 270, 239, 877, 876,
	83, 306, 269, 856, 855, 225, 225, 229, 310, 121,
	312, 117, 277, 238, 118, 854, 116, 853, 852, 80,
	830, 829, 335, 227, 828, 455, 439, 277, 61, 158,
	826, 322, 274, 824, 823, 814, 268, 813, 90, 83,
	720, 676, 675, 29, 674, 673, 285, 83, 672, 669,
	647, 357, 644, 625, 608, 606, 605, 883, 201, 363,
	366, 23, 63, 604, 598, 277, 277, 277, 597, 372,
	115, 559, 277, 22, 297, 298, 315, 581, 61, 579,
	90, 566, 369, 370, 371, 275, 277, 524, 517, 373,
	295, 296, 311, 3, 29, 516, 515, 308, 313, 314,
	201, 305, 307, 374, 386, 504, 277, 277, 396, 121,
	348, 128, 394, 413, 392, 343, 277, 360, 326, 316,
	419, 84, 85, 86, 83, 338, 346, 347, 425, 351,
	262, 263, 429, 411, 395, 433, 437, 356, 387, 827,
	825, 438, 123, 786, 336, 785, 335, 227, 784, 29,
	440, 783, 782, 467, 406, 407, 391, 485, 750, 745,
	84, 85, 86, 408, 417, 742, 740, 23, 84, 85,
	86, 739, 733, 732, 521, 502, 461, 463, 462, 22,
	405, 404, 427, 479, 403, 402, 414, 415, 483, 496,
	114, 476, 401, 409, 446, 416, 61, 400, 362, 3,
	361, 216, 190, 497, 189, 493, 449, 123, 285, 179,
	277, 178, 177, 184, 277, 277, 277, 225, 448, 478,
	480, 549, 503, 468, 464, 470, 471, 249, 248, 525,
	475, 526, 867, 491, 240, 530, 156, 393, 759, 387,
	359, 533, 123, 535, 495, 84, 85, 86, 91, 338,
	303, 83, 349, 29, 892, 743, 741, 624, 507, 147,
	29, 83, 512, 513, 514, 622, 612, 807, 336, 680,
	719, 23, 505, 560, 561, 738, 83, 678, 23, 718,
	180, 652, 543, 22, 63, 681, 529, 181, 228, 792,
	22, 790, 612, 679, 83, 737, 528, 736, 735, 227,
	734, 677, 671, 3, 242, 520, 545, 304, 781, 547,
	3, 508, 509, 510, 511, 554, 358, 227, 943, 277,
	277, 277, 277, 523, 576, 29, 931, 556, 29, 29,
	916, 555, 610, 520, 588, 903, 902, 592, 593, 557,
	562, 894, 617, 878, 83, 545, 872, 83, 871, 279,
	437, 866, 522, 863, 870, 438, 241, 809, 806, 805,
	629, 623, 83, 595, 273, 460, 83, 599, 600, 601,
	603, 80, 84, 85, 86, 638, 277, 602, 83, 618,
	243, 244, 84, 85, 86, 80, 646, 443, 83, 650,
	630, 631, 619, 639, 769, 658, 641, 84, 85, 86,
	758, 133, 664, 731, 628, 730, 621, 725, 640, 666,
	665, 615, 607, 527, 446, 84, 85, 86, 635, 29,
	494, 428, 426, 627, 29, 29, 594, 499, 661, 655,
	656, 687, 498, 667, 668, 914, 660, 642, 643, 654,
	915, 862, 900, 861, 914, 861, 29, 702, 143, 144,
	833, 946, 682, 132, 491, 657, 724, 424, 491, 723,
	723, 423, 663, 618, 23, 84, 85, 86, 84, 85,
	86, 693, 697, 698, 699, 423, 22, 134, 321, 686,
	319, 705, 29, 84, 85, 86, 706, 84, 85, 86,
	897, 888, 545, 29, 744, 812, 3, 801, 620, 84,
	85, 86, 726, 520, 591, 317, 749, 220, 920, 84,
	85, 86, 919, 141, 142, 145, 146, 884, 776, 775,
	729, 728, 587, 760, 114, 915, 862, 762, 765, 724,
	746, 424, 710, 751, 748, 772, 950, 761, 533, 942,
	753, 909, 893, 907, 847, 808, 685, 614, 29, 29,
	935, 882, 773, 29, 764, 532, 770, 29, 924, 924,
	941, 789, 771, 796, 788, 928, 787, 788, 277, 791,
	939, 940, 953, 938, 927, 926, 611, 29, 100, 795,
	794, 61, 538, 691, 236, 520, 300, 184, 763, 29,
	299, 87, 198, 345, 937, 23, 197, 199, 710, 710,
	811, 518, 804, 818, 819, 820, 821, 22, 905, 390,
	267, 788, 834, 822, 553, 906, 797, 700, 908, 302,
	301, 205, 204, 849, 233, 835, 634, 3, 277, 29,
	948, 922, 29, 925, 925, 61, 633, 29, 632, 710,
	29, 232, 233, 234, 551, 851, 857, 550, 432, 848,
	868, 114, 788, 850, 858, 183, 88, 456, 324, 457,
	458, 437, 817, 29, 869, 565, 438, 325, 873, 564,
	842, 222, 875, 881, 541, 542, 533, 879, 684, 710,
	466, 816, 837, 569, 570, 571, 572, 710, 578, 584,
	885, 29, 577, 889, 890, 29, 575, 29, 125, 901,
	29, 29, 896, 124, 29, 768, 24, 355, 911, 898,
	708, 689, 690, 710, 171, 670, 29, 659, 653, 352,
	353, 651, 841, 917, 929, 29, 934, 843, 354, 533,
	29, 932, 351, 580, 5, 842, 398, 933, 842, 842,
	56, 710, 367, 223, 29, 710, 342, 837, 29, 945,
	837, 837, 949, 328, 842, 231, 340, 952, 253, 81,
	29, 136, 81, 954, 80, 160, 837, 951, 842, 167,
	62, 170, 135, 137, 29, 710, 766, 767, 127, 899,
	837, 832, 842, 662, 318, 29, 842, 841, 8, 445,
	841, 841, 843, 159, 837, 843, 843, 7, 837, 130,
	6, 320, 52, 282, 138, 139, 841, 283, 334, 148,
	710, 843, 842, 152, 333, 155, 160, 798, 947, 921,
	841, 904, 891, 842, 837, 843, 75, 51, 50, 54,
	160, 47, 53, 48, 841, 837, 688, 540, 841, 843,
	436, 435, 46, 843, 159, 169, 456, 49, 457, 458,
	453, 450, 752, 188, 454, 431, 323, 831, 159, 563,
	465, 119, 17, 16, 841, 846, 57, 140, 14, 843,
	490, 487, 122, 13, 12, 841, 9, 15, 11, 10,
	843, 98, 107, 106, 97, 96, 99, 95, 226, 226,
	838, 864, 711, 836, 709, 237, 226, 377, 375, 4,
	164, 2, 0, 245, 246, 247, 0, 0, 160, 0,
	0, 250, 98, 107, 106, 97, 96, 99, 95, 880,
	0, 0, 0, 0, 456, 185, 457, 458, 453, 450,
	695, 696, 454, 0, 98, 107, 159, 97, 96, 99,
	95, 271, 0, 272, 0, 278, 202, 0, 288, 0,
	0, 93, 92, 910, 0, 0, 0, 103, 94, 102,
	101, 0, 0, 260, 104, 105, 261, 0, 0, 0,
	0, 98, 107, 106, 97, 96, 99, 95, 0, 0,
	0, 0, 93, 92, 0, 0, 0, 0, 103, 94,
	102, 101, 0, 0, 226, 104, 105, 683, 0, 339,
	0, 0, 339, 0, 93, 92, 288, 0, 122, 0,
	103, 94, 102, 101, 0, 0, 0, 104, 105, 364,
	365, 0, 0, 0, 368, 0, 0, 0, 202, 202,
	0, 0, 0, 160, 0, 0, 385, 0, 388, 0,
	0, 93, 92, 160, 0, 0, 202, 103, 94, 102,
	101, 0, 202, 202, 104, 105, 637, 160, 0, 0,
	0, 441, 0, 0, 0, 160, 0, 160, 0, 0,
	0, 159, 0, 0, 0, 0, 337, 0, 0, 337,
	0, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 484, 288, 0, 442, 447,
	226, 0, 0, 0, 459, 0, 0, 339, 0, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 160, 0,
	473, 0, 0, 477, 447, 447, 481, 0, 0, 0,
	473, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 159, 202, 412, 412,
	412, 98, 107, 106, 97, 96, 99, 95, 0, 0,
	500, 501, 0, 0, 473, 0, 0, 0, 288, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 337, 0,
	0, 0, 122, 0, 122, 122, 98, 107, 106, 97,
	96, 99, 95, 0, 0, 0, 0, 0, 0, 160,
	0, 447, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 93, 92, 0, 0, 0, 339, 103, 94, 102,
	101, 558, 0, 0, 104, 105, 254, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 0,
	447, 0, 0, 0, 0, 0, 0, 98, 0, 202,
	97, 96, 99, 95, 0, 0, 93, 92, 0, 0,
	0, 0, 103, 94, 102, 101, 0, 0, 0, 104,
	105, 636, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 83, 64, 65, 66, 0, 87, 68, 80, 0,
	81, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 63, 0, 0, 0, 0, 447,
	0, 339, 339, 0, 0, 0, 0, 93, 92, 0,
	0, 0, 160, 103, 94, 102, 101, 0, 473, 0,
	104, 105, 447, 447, 0, 0, 0, 160, 648, 649,
	0, 0, 0, 77, 0, 0, 0, 78, 160, 0,
	692, 88, 0, 0, 0, 0, 202, 0, 0, 0,
	112, 111, 0, 0, 0, 704, 0, 0, 0, 0,
	82, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 337, 337,
	0, 0, 0, 339, 339, 339, 0, 701, 703, 0,
	0, 0, 84, 85, 86, 90, 477, 290, 72, 289,
	291, 292, 293, 294, 0, 0, 0, 0, 0, 0,
	287, 0, 70, 71, 79, 58, 280, 0, 0, 160,
	0, 0, 537, 0, 0, 0, 0, 0, 98, 107,
	106, 97, 96, 99, 95, 0, 0, 202, 0, 98,
	107, 106, 97, 96, 99, 95, 0, 777, 538, 0,
	0, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 337, 337, 0, 0, 0, 0, 0, 83, 64,
	65, 66, 0, 87, 68, 80, 0, 81, 19, 0,
	0, 0, 31, 32, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 25, 0, 0, 26, 0, 93, 92,
	0, 473, 0, 0, 103, 94, 102, 101, 0, 93,
	92, 104, 105, 418, 0, 103, 94, 102, 101, 202,
	0, 0, 104, 105, 0, 0, 0, 0, 337, 0,
	77, 0, 0, 0, 78, 0, 0, 0, 88, 0,
	61, 0, 0, 0, 0, 0, 0, 840, 839, 0,
	716, 0, 0, 0, 844, 845, 28, 82, 0, 35,
	33, 34, 30, 0, 0, 0, 0, 0, 0, 0,
	36, 37, 383, 384, 0, 39, 40, 41, 42, 43,
	44, 0, 0, 0, 717, 0, 0, 27, 38, 84,
	85, 86, 90, 0, 74, 72, 73, 89, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 70,
	71, 79, 58, 83, 64, 65, 66, 0, 87, 68,
	80, 0, 81, 19, 0, 0, 0, 31, 32, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 25, 0,
	0, 26, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 78,
	0, 0, 0, 88, 0, 61, 0, 0, 0, 0,
	0, 0, 379, 378, 0, 59, 0, 0, 0, 0,
	0, 28, 82, 0, 35, 33, 34, 30, 0, 0,
	0, 0, 0, 0, 0, 36, 37, 383, 384, 60,
	39, 40, 41, 42, 43, 44, 0, 0, 0, 0,
	0, 0, 27, 38, 84, 85, 86, 90, 0, 74,
	72, 73, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 70, 71, 79, 58, 83, 64,
	65, 66, 0, 87, 68, 80, 0, 81, 19, 0,
	0, 0, 31, 32, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 25, 0, 0, 26, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 78, 0, 0, 0, 88, 0,
	61, 0, 0, 0, 0, 0, 0, 713, 712, 0,
	716, 0, 0, 0, 0, 0, 28, 82, 0, 35,
	33, 34, 30, 0, 0, 0, 0, 0, 0, 0,
	36, 37, 0, 0, 0, 39, 40, 41, 42, 43,
	44, 0, 0, 0, 717, 0, 0, 27, 38, 84,
	85, 86, 90, 0, 74, 72, 73, 89, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 70,
	71, 79, 58, 83, 64, 65, 66, 0, 87, 68,
	80, 0, 81, 19, 0, 0, 0, 31, 32, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 25, 0,
	0, 26, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 78,
	0, 0, 0, 88, 0, 61, 0, 0, 0, 0,
	0, 0, 21, 20, 0, 59, 0, 0, 0, 0,
	0, 28, 82, 0, 35, 33, 34, 30, 98, 107,
	106, 97, 96, 99, 95, 36, 37, 0, 0, 60,
	39, 40, 41, 42, 43, 44, 0, 0, 0, 0,
	0, 0, 27, 38, 84, 85, 86, 90, 0, 74,
	72, 73, 89, 83, 64, 65, 66, 0, 87, 68,
	80, 0, 81, 0, 70, 71, 79, 58, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 83, 64, 65,
	66, 0, 87, 68, 80, 0, 81, 0, 93, 92,
	0, 0, 0, 0, 103, 94, 102, 101, 0, 0,
	63, 104, 105, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 78,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 111, 0, 0, 0, 0, 0, 77,
	0, 0, 82, 78, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	0, 0, 0, 0, 84, 85, 86, 90, 0, 290,
	72, 289, 291, 292, 293, 294, 0, 0, 0, 0,
	0, 0, 287, 0, 70, 71, 79, 58, 84, 85,
	86, 90, 0, 290, 72, 289, 291, 292, 293, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 70, 71,
	79, 58, 83, 64, 65, 66, 0, 87, 68, 80,
	0, 81, 0, 83, 64, 65, 66, 0, 87, 68,
	80, 0, 81, 0, 0, 63, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 83, 64,
	65, 66, 0, 87, 68, 80, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 0, 77, 0, 0, 0, 78, 0,
	0, 0, 88, 0, 0, 77, 0, 0, 0, 78,
	0, 112, 111, 88, 0, 0, 0, 0, 0, 0,
	166, 82, 112, 111, 0, 0, 0, 0, 0, 0,
	77, 0, 82, 0, 78, 0, 0, 0, 88, 236,
	0, 0, 0, 0, 0, 0, 0, 112, 111, 0,
	0, 165, 0, 84, 85, 86, 90, 82, 74, 72,
	73, 89, 0, 0, 84, 85, 86, 90, 0, 74,
	72, 73, 89, 70, 71, 79, 58, 0, 0, 0,
	0, 0, 287, 0, 70, 71, 79, 58, 0, 84,
	85, 86, 90, 0, 74, 72, 73, 89, 83, 64,
	65, 66, 0, 87, 68, 80, 0, 81, 0, 70,
	71, 79, 58, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 83, 64, 65, 66, 0, 87, 68, 80,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 63, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 78, 0, 0, 0, 88, 0,
	61, 0, 0, 0, 0, 0, 0, 112, 111, 0,
	0, 0, 0, 0, 77, 0, 0, 82, 78, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 111, 0, 0, 0, 0, 83, 64, 65,
	66, 82, 87, 68, 80, 0, 81, 0, 0, 84,
	85, 86, 90, 0, 74, 72, 73, 89, 0, 0,
	63, 0, 0, 0, 0, 0, 0, 0, 0, 70,
	71, 79, 58, 84, 85, 86, 90, 0, 74, 72,
	73, 89, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 70, 71, 79, 58, 0, 0, 77,
	0, 0, 0, 78, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 111, 0, 0,
	0, 0, 83, 64, 258, 66, 82, 87, 68, 80,
	0, 81, 0, 0, 0, 0, 98, 107, 106, 97,
	96, 99, 95, 0, 0, 63, 98, 107, 106, 97,
	96, 99, 95, 0, 0, 0, 0, 955, 84, 85,
	86, 90, 0, 74, 72, 73, 89, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 70, 71,
	79, 109, 0, 0, 77, 0, 0, 0, 78, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 111, 0, 0, 0, 93, 92, 0, 0,
	0, 82, 103, 94, 102, 101, 93, 92, 0, 104,
	105, 0, 103, 94, 102, 101, 0, 0, 0, 104,
	105, 98, 107, 106, 97, 96, 99, 95, 0, 0,
	0, 0, 0, 84, 85, 86, 90, 0, 74, 72,
	73, 89, 930, 98, 107, 106, 97, 96, 99, 95,
	0, 0, 0, 70, 71, 79, 58, 0, 0, 0,
	0, 0, 0, 0, 918, 98, 107, 106, 97, 96,
	99, 95, 0, 0, 0, 98, 107, 106, 97, 96,
	99, 95, 0, 0, 0, 0, 895, 0, 0, 0,
	0, 93, 92, 0, 0, 0, 886, 103, 94, 102,
	101, 0, 0, 0, 104, 105, 0, 0, 0, 0,
	0, 0, 0, 93, 92, 0, 0, 0, 0, 103,
	94, 102, 101, 0, 0, 0, 104, 105, 0, 0,
	0, 0, 0, 0, 0, 93, 92, 0, 0, 0,
	0, 103, 94, 102, 101, 93, 92, 0, 104, 105,
	0, 103, 94, 102, 101, 0, 0, 0, 104, 105,
	98, 107, 106, 97, 96, 99, 95, 0, 0, 0,
	98, 107, 106, 97, 96, 99, 95, 0, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 865, 98, 107, 106, 97, 96, 99, 95, 0,
	0, 0, 98, 107, 106, 97, 96, 99, 95, 0,
	0, 0, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 0, 0,
	93, 92, 0, 0, 0, 0, 103, 94, 102, 101,
	93, 92, 0, 104, 105, 0, 103, 94, 102, 101,
	0, 0, 0, 104, 105, 98, 107, 106, 97, 96,
	99, 95, 93, 92, 0, 0, 0, 0, 103, 94,
	102, 101, 93, 92, 0, 104, 105, 0, 103, 94,
	102, 101, 0, 0, 0, 104, 105, 98, 107, 106,
	97, 96, 99, 95, 0, 0, 0, 98, 107, 106,
	97, 96, 99, 95, 0, 0, 0, 0, 799, 0,
	0, 0, 0, 0, 98, 107, 106, 97, 96, 99,
	95, 0, 0, 0, 0, 93, 92, 0, 0, 0,
	0, 103, 94, 102, 101, 747, 0, 793, 104, 105,
	98, 107, 106, 97, 96, 99, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 93, 92, 0,
	0, 727, 0, 103, 94, 102, 101, 93, 92, 0,
	104, 105, 0, 103, 94, 102, 101, 0, 0, 755,
	104, 105, 0, 0, 93, 92, 0, 0, 0, 0,
	103, 94, 102, 101, 0, 0, 0, 104, 105, 0,
	98, 107, 106, 97, 96, 99, 95, 0, 0, 0,
	93, 92, 0, 0, 0, 0, 103, 94, 102, 101,
	317, 0, 0, 104, 105, 98, 107, 106, 97, 96,
	99, 95, 0, 0, 0, 98, 107, 106, 97, 96,
	99, 95, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 98, 107, 106, 97, 96, 99, 95, 0, 0,
	0, 98, 107, 106, 97, 96, 99, 95, 0, 0,
	93, 92, 589, 0, 0, 0, 103, 94, 102, 101,
	0, 0, 531, 104, 105, 0, 98, 107, 106, 97,
	96, 99, 95, 0, 0, 93, 92, 0, 0, 0,
	0, 103, 94, 102, 101, 93, 92, 430, 104, 105,
	0, 103, 94, 102, 101, 0, 0, 613, 104, 105,
	0, 93, 92, 0, 0, 0, 0, 103, 94, 102,
	101, 93, 92, 0, 104, 105, 0, 103, 94, 102,
	101, 0, 0, 0, 104, 105, 0, 0, 98, 107,
	106, 97, 96, 99, 95, 0, 93, 92, 0, 0,
	0, 0, 103, 94, 102, 101, 256, 0, 0, 104,
	105, 264, 0, 0, 98, 107, 106, 97, 96, 99,
	95, 0, 0, 0, 98, 107, 106, 97, 96, 99,
	95, 0, 0, 0, 98, 107, 106, 97, 96, 99,
	95, 0, 0, 0, 0, 213, 0, 0, 0, 98,
	420, 106, 97, 96, 99, 95, 0, 0, 93, 92,
	0, 0, 0, 0, 103, 94, 102, 101, 0, 0,
	0, 104, 105, 98, 309, 106, 97, 96, 99, 95,
	0, 0, 0, 0, 93, 92, 0, 0, 0, 0,
	103, 94, 102, 101, 93, 92, 0, 104, 105, 0,
	103, 94, 102, 101, 93, 92, 0, 104, 105, 0,
	103, 94, 102, 101, 0, 0, 0, 104, 105, 93,
	92, 0, 0, 0, 0, 103, 94, 102, 101, 0,
	0, 0, 104, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 92, 0, 0, 0, 0, 103,
	94, 102, 101, 0, 0, 0, 104, 105,
}
var yyPact = [...]int{

	2109, -1000, 296, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3387, -1000,
	2683, 2598, -1000, -1000, 184, 860, 855, 943, 564, -1000,
	550, 939, 936, 574, 574, 604, -1000, -1000, 437, 2598,
	2598, 2598, 2598, 2598, 574, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 287, -1000, -1000, 2574, 2408,
	953, 876, -17, -41, -1000, -1000, -1000, -1000, -1000, -1000,
	2598, 2598, 254, 253, 251, -1000, 333, 249, 2598, 2598,
	-1000, -1000, 574, -1000, -1000, -1000, -1000, -1000, -1000, 246,
	244, 2109, 2598, 2598, 2598, 707, 2598, 715, 100, 2598,
	747, 2598, 2598, 2598, 2598, 2598, 2598, 2598, 3377, 2574,
	-1000, 243, 2598, 610, 3387, 819, 910, 480, 462, 929,
	770, 699, -1000, 695, 574, 480, -1000, 35, 285, -1000,
	453, -1000, 574, 574, 574, 274, 273, -1000, -1000, -1000,
	574, -1000, -1000, -1000, -1000, 2598, 2598, -1000, 932, 3387,
	3387, 1274, -17, 3387, 3367, 2768, 2598, 1004, 171, 172,
	284, 3341, 31, 733, 943, -1000, -1000, -1000, -1000, 34,
	574, -1000, 548, 2444, 533, -1000, -1000, 1477, 699, 699,
	100, 100, 709, 745, -1000, -1000, 1380, -1000, 367, 699,
	2598, -1000, 8, -13, -13, 772, 3426, 2598, 100, 2598,
	-1000, 2574, -1000, -13, 100, 100, 12, 12, -1000, -1000,
	-1000, 1057, 1380, 2109, 171, 160, 2598, 608, 581, 579,
	2598, 800, 812, 480, 925, 33, -1000, -1000, 186, 930,
	915, 186, 719, 719, 719, 2239, -1000, 294, 879, 943,
	2598, 412, 282, 242, 240, -1000, -1000, -1000, 2598, 2598,
	909, 3387, 3387, 574, 2598, 2598, 2598, 3387, 2598, 3387,
	-1000, 2598, -1000, -1000, 1819, 574, 943, 574, 19, 732,
	876, 279, -1000, -1000, 153, 2598, -1000, 2141, -1000, -1000,
	-1000, 149, 32, 901, -1000, 3387, -1000, -1000, -5, 239,
	234, 227, 226, 223, 222, 2598, 2419, -1000, -1000, 100,
	175, 175, 175, 707, -1000, 2598, 1571, -1000, -1000, 2598,
	3402, -1000, -13, -1000, -1000, 562, -1000, 2598, 521, 2109,
	520, 2598, 3279, 789, 2598, 2263, 192, 552, 447, 480,
	915, 63, -1000, 530, -1000, -1000, 310, -1000, 220, 219,
	186, 827, 2598, -1000, 284, -1000, 284, 284, -1000, 574,
	695, -1000, 233, 225, 447, 574, -1000, 3387, 695, 574,
	695, 198, 574, 3387, -17, -17, 3387, 943, -1000, -1000,
	-1000, -1000, 3387, -1000, 519, 292, -1000, -1000, 2683, 2598,
	-1000, -1000, -1000, -1000, -1000, 532, -1000, 29, 527, 574,
	574, -1000, 217, 574, -1000, 146, -1000, 2239, 574, 2444,
	699, 699, 699, 2598, 2598, 2598, 137, 136, 129, 723,
	-1000, 142, -1000, 216, -1000, -1000, 446, 128, 2598, 1380,
	2598, 512, 576, 2109, 2598, 3254, 662, -1000, -1000, 3387,
	2109, -1000, 2598, 1582, -1000, 28, 818, 3387, -1000, 100,
	447, -1000, -1000, 574, 929, 27, 267, -68, -1000, -1000,
	786, 783, 751, 751, 795, 186, -1000, -1000, -1000, -1000,
	574, 112, 2598, 2598, 915, 815, 810, 3387, 752, -1000,
	-1000, 752, 122, 24, -1000, 839, 574, 848, -1000, 447,
	842, 838, -1000, 120, -1000, 898, 118, 23, -1000, -1000,
	13, 841, 0, -1000, 626, 1819, 3244, 607, 1819, 1819,
	526, 463, 695, 109, -1000, -1000, -1000, 105, 2598, 2598,
	2419, 2598, 104, 97, 96, -1000, -1000, -1000, 100, 95,
	-2, 2598, -1000, 689, 334, 3228, 1380, 653, 510, -1000,
	3218, 2598, -1000, 3193, 601, 3387, -1000, 696, 330, 2263,
	321, -1000, -1000, -1000, 94, -24, -1000, 915, 447, 2598,
	186, 186, 777, -1000, 775, 765, 751, -1000, -1000, -1000,
	1319, 1094, -1000, -1000, 2598, 2598, 897, 574, -1000, -1000,
	-1000, 447, 447, 93, -30, 2598, 91, 574, 2598, 886,
	352, 883, 943, 943, 2598, 882, 943, -1000, -1000, 1819,
	563, 2598, 509, 508, 1819, 1819, 90, 880, 387, 89,
	86, 85, 83, 82, 386, 362, 354, -1000, -1000, 100,
	1035, -1000, 825, -1000, -1000, 652, 2109, 3193, -1000, -1000,
	2598, -1000, -1000, -1000, 867, 749, 447, -1000, -1000, 3387,
	795, 1062, 186, 186, 186, 756, 2598, 574, 3387, -1000,
	695, -1000, -1000, -1000, 839, 574, 3387, -1000, -1000, -17,
	3387, 695, 1964, 350, -1000, -1000, -1000, 841, 3387, 341,
	81, 561, 506, 1819, 3133, 625, 624, 504, 502, -1000,
	215, 214, 385, 383, 382, 380, 360, 213, 208, 320,
	207, 319, -1000, 2598, 201, -1000, 636, 3107, -1000, -1000,
	-1000, 100, -1000, -1000, -1000, 2598, 200, 1062, 984, 795,
	186, -14, 3090, -7, -1000, -1000, -1000, -1000, 499, 286,
	-1000, -1000, 2683, 2598, -1000, -1000, 2598, 2598, 1964, 1964,
	870, 493, 560, 1819, 2598, 659, -1000, 1819, -1000, -1000,
	623, 622, 695, 394, 194, 193, 190, 187, 185, 394,
	394, 376, 394, 374, 3048, 819, -1000, 2109, -1000, 3387,
	574, -1000, 2598, 795, -1000, -1000, -1000, 2598, -1000, 1964,
	3080, 600, 2995, 21, 725, 3387, 458, 457, 338, 651,
	456, -1000, 2985, -1000, 598, -1000, -1000, 78, 76, -1000,
	829, 807, 394, 394, 394, 394, 394, 75, 819, 74,
	182, 71, 181, -1000, 65, 62, 3387, 61, -1000, 1964,
	551, 2598, 1674, 574, 574, -1000, -1000, 1964, -1000, 650,
	1819, -1000, 2598, -1000, -1000, -1000, 798, 2598, 59, 58,
	56, 45, 44, -1000, -1000, 394, -1000, 394, -1000, -1000,
	-1000, 546, 452, 1964, 2963, 450, 280, -1000, -1000, 2683,
	2598, -1000, -1000, -1000, 454, 448, 445, -1000, 634, 2953,
	2263, -1000, -1000, -1000, -1000, -1000, -1000, 40, 39, 442,
	544, 1964, 2598, 658, -1000, 1964, 621, 1674, 2868, 594,
	1674, 1674, -1000, -1000, 1819, 317, -1000, -1000, 648, 440,
	-1000, 2858, -1000, 593, -1000, -1000, 1674, 543, 2598, 435,
	434, -1000, 727, -1000, 647, 1964, -1000, 2598, 545, 429,
	1674, 2836, 616, 612, -1000, 743, 686, 685, 673, -1000,
	631, 2814, 425, 536, 1674, 2598, 657, -1000, 1674, -1000,
	-1000, 716, 684, -1000, 681, 668, -1000, -1000, -1000, -1000,
	1964, 645, 417, -1000, 2729, -1000, 554, 742, -1000, -1000,
	-1000, -1000, -1000, 642, 1674, -1000, 2598, -1000, 682, -1000,
	-1000, 630, 2719, -1000, -1000, 1674,
}
var yyPgo = [...]int{

	0, 52, 28, 247, 12, 69, 114, 1091, 49, 1090,
	37, 1089, 1088, 1087, 1084, 109, 57, 1083, 1082, 1080,
	1069, 1068, 1067, 1066, 67, 30, 26, 1064, 1063, 46,
	1061, 1060, 36, 39, 1058, 1057, 1056, 1053, 1052, 924,
	99, 68, 1051, 54, 65, 1050, 1049, 24, 1046, 58,
	1045, 896, 1035, 75, 1032, 96, 91, 55, 0, 56,
	83, 32, 11, 1031, 1030, 1027, 1026, 1037, 1023, 74,
	1022, 1021, 1019, 48, 1018, 1017, 1016, 5, 16, 10,
	14, 1012, 1011, 4, 1009, 1008, 77, 84, 78, 1004,
	29, 998, 25, 997, 993, 992, 13, 35, 991, 34,
	17, 73, 18, 64, 990, 987, 979, 45, 978, 33,
	63, 9, 23, 3, 6, 1, 7, 47, 974, 15,
	973, 8, 971, 2, 969, 960, 61, 27, 19, 968,
	87, 930, 101, 81, 66, 51, 62, 82, 961, 31,
	768,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 7, 7, 8,
	8, 8, 8, 8, 9, 9, 10, 10, 12, 12,
	11, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
	19, 20, 20, 20, 20, 21, 21, 21, 22, 22,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	24, 24, 25, 25, 26, 26, 26, 26, 26, 27,
	27, 27, 27, 27, 28, 28, 28, 28, 29, 30,
	30, 31, 32, 32, 33, 33, 33, 34, 34, 34,
	34, 34, 35, 35, 35, 35, 35, 35, 35, 36,
	36, 36, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 38, 38, 38, 39,
	40, 40, 40, 40, 41, 41, 42, 43, 43, 44,
	44, 45, 45, 46, 46, 47, 47, 48, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	54, 54, 54, 54, 54, 54, 55, 56, 57, 57,
	57, 57, 57, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 59, 60,
	60, 60, 61, 61, 62, 62, 63, 63, 64, 64,
	65, 65, 65, 66, 66, 67, 68, 69, 69, 69,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 71,
	71, 71, 71, 71, 71, 71, 72, 72, 72, 72,
	73, 73, 74, 74, 74, 74, 75, 75, 75, 75,
	75, 76, 76, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 78, 79, 79, 80, 80, 81,
	81, 82, 82, 82, 83, 83, 83, 84, 84, 85,
	85, 86, 86, 87, 87, 87, 89, 89, 89, 89,
	89, 90, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 92, 92, 93, 93, 94, 94,
	94, 95, 96, 96, 97, 97, 98, 98, 99, 99,
	100, 100, 101, 101, 88, 88, 102, 102, 103, 103,
	104, 104, 104, 104, 105, 106, 107, 107, 108, 108,
	109, 109, 110, 110, 111, 111, 112, 112, 113, 113,
	114, 114, 115, 115, 116, 116, 117, 117, 118, 118,
	119, 119, 120, 120, 121, 121, 122, 122, 123, 123,
	124, 124, 125, 125, 125, 125, 126, 127, 127, 128,
	129, 129, 130, 130, 131, 132, 132, 133, 133, 134,
	134, 135, 135, 136, 136, 137, 137, 138, 138, 139,
	139, 140, 140,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	8, 8, 9, 9, 1, 1, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 1, 1, 6, 8, 8, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 2, 2, 1, 2, 4, 4, 2, 1, 1,
	6, 8, 5, 6, 8, 5, 7, 7, 7, 7,
	1, 3, 1, 3, 0, 1, 1, 2, 2, 5,
	2, 2, 3, 5, 6, 8, 5, 3, 1, 1,
	3, 3, 1, 3, 1, 1, 3, 9, 10, 10,
	12, 3, 0, 1, 1, 1, 1, 2, 2, 5,
	6, 3, 4, 4, 2, 2, 2, 2, 4, 4,
	2, 2, 2, 4, 2, 4, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 6, 1, 3, 1, 3, 2, 4, 1, 1,
	0, 1, 1, 1, 1, 3, 3, 3, 1, 6,
	3, 3, 3, 3, 4, 4, 5, 6, 6, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 3, 4, 4, 5, 5, 5, 5,
	1, 5, 10, 8, 9, 9, 9, 9, 9, 8,
	8, 10, 8, 10, 2, 1, 5, 0, 3, 2,
	5, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	1, 1, 1, 1, 2, 3, 1, 6, 6, 6,
	8, 1, 1, 2, 3, 1, 1, 3, 4, 5,
	6, 7, 5, 6, 2, 4, 1, 1, 1, 3,
	1, 5, 0, 1, 4, 5, 0, 2, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	6, 9, 5, 8, 7, 3, 1, 3, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 3, 3,
	1, 3, 1, 3, 1, 0, 1, 0, 1, 0,
	1, 0, 1, 1, 1, 0, 1, 0, 1, 0,
	1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -104, -105, -108, -23,
	-20, -21, -27, -28, -34, -22, -37, -38, -58, 14,
	84, 83, -8, -10, -51, 29, 32, 123, 92, -128,
	98, 18, 19, 96, 97, 95, 106, 107, 124, 111,
	112, 113, 114, 115, 116, -57, -54, -71, -68, -67,
	-74, -75, -95, -70, -72, -126, -131, -36, 148, 86,
	110, 76, -125, 27, 5, 6, 7, -55, 10, -56,
	145, 146, 131, 132, 130, -76, -60, 66, 70, 147,
	11, 13, 93, 4, 125, 126, 127, 9, 74, 133,
	128, 142, 138, 137, 144, 73, 71, 70, 67, 72,
	-140, 146, 145, 143, 150, 151, 69, 68, -58, 148,
	-128, 84, 83, -96, -58, -40, 22, 17, 20, -42,
	-41, 15, -67, 148, 33, 33, -130, -129, -126, -130,
	-125, -126, 93, 41, 117, -131, 12, -131, -125, -125,
	-35, 99, 100, 34, 35, 101, 102, 12, -125, -58,
	-58, -58, -125, -58, -58, -125, 139, -58, -100, -39,
	-51, -58, -126, -127, -9, 123, 92, 6, -53, -52,
	-138, 28, 153, 148, 153, -58, -58, 148, 148, 148,
	137, 144, -133, -140, 70, -67, -58, -58, -125, 148,
	148, -1, -58, -58, -58, -133, -58, 71, 67, 72,
	-60, 148, -67, -58, 65, 64, -58, -58, -58, -58,
	-58, -58, -58, 88, -100, -73, 148, -96, -117, -97,
	87, -47, 42, 23, -88, -86, -125, 27, 16, -88,
	-43, 16, 61, 62, 63, -132, 75, -125, -86, 152,
	139, 93, 41, 117, 118, -125, -125, -125, 144, 144,
	-125, -58, -58, 16, 152, 59, 59, -58, 6, -58,
	149, 152, 149, 149, 90, 67, 152, 67, -126, -127,
	152, -125, -125, 6, -73, -132, -100, -58, -125, 6,
	149, -103, -94, -93, -59, -58, -77, 143, -125, 132,
	130, 133, 134, 135, 136, -132, -132, -60, -60, 71,
	67, 65, 64, 73, 130, -132, -58, -55, -56, 68,
	-58, -60, -58, -60, -60, -1, 149, 87, -118, 89,
	-98, 89, -58, -48, 48, 45, -87, -86, 18, 152,
	-101, -90, -87, -89, -91, 26, 148, -67, 129, -125,
	16, -44, 21, -101, -137, 64, -137, -137, -103, 148,
	-139, 25, 30, 31, 39, 18, -130, -58, 94, 148,
	25, 148, 148, -58, -125, -125, -58, 23, -125, -100,
	-100, -100, -58, -100, -2, -12, -5, -13, 84, 83,
	-8, -10, -6, 108, 109, -125, -127, -126, -125, 67,
	67, -53, 25, 148, 149, -73, 149, 152, 25, 148,
	148, 148, 148, 148, 148, 148, -73, -73, -59, -60,
	-69, 148, -67, 128, -69, -69, -133, -73, 152, -58,
	68, -110, -109, 89, 85, -58, 91, -1, 91, -58,
	88, -50, 49, -58, -62, -63, -64, -58, -77, 24,
	148, -39, -125, 25, -107, -106, -57, -125, -88, -44,
	57, -134, -136, 56, 60, 152, 52, 54, 55, -125,
	25, -90, 148, 148, -101, -45, 43, -58, -41, -40,
	-41, -41, -102, -125, -39, -24, 148, -125, -57, 148,
	-57, -125, -39, -102, -39, 149, -33, -30, -32, -29,
	-31, -126, -125, -127, 91, 142, -58, -96, 90, 90,
	-125, -125, 148, -102, 149, -103, -125, -73, -132, -132,
	-132, -132, -73, -73, -73, 149, 149, 149, 68, -61,
	-60, 148, 96, 67, 149, -58, -58, 91, -110, -1,
	-58, 88, 83, -58, -1, -58, -49, 50, 76, 152,
	-65, 46, 47, -61, -99, -57, -125, -43, 152, 144,
	51, 51, -135, 53, -135, -134, -136, -101, -125, 149,
	-58, -58, -44, -46, 44, 45, 149, 152, -26, 34,
	35, 36, 37, -25, -24, 38, -99, 40, 40, 149,
	25, 149, 152, 152, 38, 149, 152, 86, -2, 88,
	-119, 87, -2, -2, 90, 90, -39, 149, 149, -73,
	-73, -73, -59, -73, 149, 149, 149, -60, 149, 152,
	-58, 77, 122, 149, 84, 91, 88, -58, -97, -117,
	87, -49, 125, -62, 126, 149, 152, -44, -107, -58,
	-90, -90, 51, 51, 51, -135, 152, 152, -58, -100,
	-139, -102, -57, -57, 149, 152, -58, 149, -125, -125,
	-58, 25, 119, 25, -29, -32, -32, -126, -58, 25,
	-33, -2, -120, 89, -58, 91, 91, -2, -2, 149,
	25, 105, 149, 149, 149, 149, 149, 105, 105, 121,
	105, 121, -61, 152, 43, 84, -1, -58, -66, 34,
	35, 24, -39, -99, -92, 58, 59, -90, -90, -90,
	51, -125, -58, -125, -39, -26, -25, -39, -3, -14,
	-5, -18, 84, 83, -15, -16, 86, 120, 119, 119,
	149, -112, -111, 89, 85, 91, -2, 88, 86, 86,
	91, 91, 148, 148, 105, 105, 105, 105, 105, 148,
	148, 126, 148, 126, -58, 148, -109, 88, -61, -58,
	148, -92, 58, -90, 149, 149, 149, 152, 91, 142,
	-58, -96, -58, -126, -127, -58, -3, -3, 25, 91,
	-112, -2, -58, 83, -2, 86, 86, -39, -79, -78,
	-80, 104, 148, 148, 148, 148, 148, -78, -80, -79,
	105, -78, 105, 149, -47, -102, -58, -73, -3, 88,
	-121, 87, 90, 67, 67, 91, 91, 119, 84, 91,
	88, -119, 87, 149, 149, -47, 42, 45, -79, -79,
	-79, -79, -78, 149, 149, 148, 149, 148, 149, 149,
	149, -3, -122, 89, -58, -4, -17, -5, -19, 84,
	83, -15, -16, -6, -125, -125, -3, 84, -2, -58,
	45, -100, 149, 149, 149, 149, 149, -79, -78, -114,
	-113, 89, 85, 91, -3, 88, 91, 142, -58, -96,
	90, 90, 91, -111, 88, -62, 149, 149, 91, -114,
	-3, -58, 83, -3, 86, -4, 88, -123, 87, -4,
	-4, -81, 127, 84, 91, 88, -121, 87, -4, -124,
	89, -58, 91, 91, -82, 71, 78, 6, 81, 84,
	-3, -58, -116, -115, 89, 85, 91, -4, 88, 86,
	86, -84, 78, -83, 6, 81, 79, 79, 82, -113,
	88, 91, -116, -4, -58, 83, -4, 68, 79, 79,
	80, 82, 84, 91, 88, -123, 87, -85, 78, -83,
	84, -4, -58, 80, -115, 88,
}
var yyDef = [...]int{

	-2, -2, 2, 27, 28, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	0, 332, 43, 44, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 122, 78, 79, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 205, 206, 174, 0,
	36, 417, 188, 0, 180, 181, 182, 183, 184, 185,
	0, 0, 0, 0, 0, 270, 407, 0, 0, 0,
	396, 404, 0, 392, 393, 394, 395, 186, 187, 0,
	0, -2, 0, 421, 422, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	204, 0, 332, 0, 333, -2, 0, 0, 0, 157,
	0, 405, 155, 174, 0, 0, 71, 402, 400, 72,
	0, 74, 0, 0, 0, 0, 0, 77, 100, 101,
	0, 123, 124, 125, 126, 0, 0, 134, 144, 135,
	136, 137, -2, 141, 142, 146, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 34, 35, 37, 175, 178,
	0, 418, 0, 260, 0, 254, 255, 0, 405, 405,
	421, 422, 0, 0, 408, 248, 258, 259, 0, 405,
	0, 3, 226, -2, -2, 0, 0, 0, 0, 0,
	239, 174, 210, -2, 0, 0, 249, 250, 251, 252,
	253, 256, 257, -2, 0, 0, 260, 0, 378, 336,
	0, 167, 0, 0, 0, 344, 301, 302, 0, 0,
	159, 0, 415, 415, 415, 0, 406, 419, 0, 0,
	0, 0, 0, 0, 0, 102, 107, 121, 0, 0,
	0, 127, 128, 0, 0, 0, 0, 147, 181, 399,
	207, 0, 209, 225, -2, 0, 0, 0, 0, 0,
	417, 0, 189, 191, 0, 260, 261, 340, 190, 192,
	263, 0, 348, 328, 330, 326, 327, 208, 188, 0,
	0, 0, 0, 0, 0, 260, 260, 231, 233, 0,
	0, 0, 0, 407, 131, 260, 0, 234, 235, 0,
	0, 240, -2, 244, 246, 362, 265, 0, 0, -2,
	0, 0, 0, 172, 0, 0, 174, 303, 0, 0,
	159, -2, 311, 312, 315, 316, 174, 306, 0, 301,
	0, 161, 0, 158, 0, 416, 0, 0, 156, 0,
	174, 420, 0, 0, 0, 0, 403, 401, 174, 0,
	174, 0, 0, 75, -2, -2, 133, 0, 145, 138,
	139, 143, 148, 341, 0, 0, 38, 39, 0, 332,
	48, 49, 50, 25, 26, 0, 398, 397, 0, 0,
	0, 179, 0, 0, 262, 0, 264, 0, 0, 260,
	405, 405, 405, 260, 260, 260, 0, 0, 0, 0,
	241, 174, 228, 0, 245, 247, 0, 0, 0, 236,
	0, 0, 362, -2, 0, 0, 0, 379, 331, 337,
	-2, 149, 0, 170, 166, 214, 220, 218, 219, 0,
	0, 352, 304, 0, 157, 356, 0, 188, 345, 358,
	0, 0, 411, 411, 409, 0, 410, 413, 414, 313,
	0, 409, 0, 0, 159, 163, 0, 160, 151, 154,
	152, 153, 0, 346, 82, 94, 0, 90, 85, 0,
	0, 0, 99, 0, 106, 0, 0, 114, 115, 109,
	112, 108, 0, 103, 0, -2, 0, 0, -2, -2,
	0, 0, 174, 0, 266, 349, 329, 0, 260, 260,
	260, 260, 0, 0, 0, 267, 268, 269, 0, 0,
	212, 0, 129, 0, 271, 0, 237, 0, 0, 363,
	0, 0, 42, 23, 376, 173, 168, 170, 0, 0,
	216, 221, 222, 350, 0, 338, 305, 159, 0, 0,
	0, 0, 0, 412, 0, 0, 411, 343, 314, 317,
	0, 0, 359, 150, 0, 0, -2, 0, 83, 95,
	96, 0, 0, 0, 92, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 0, 0, 0, 29, 5, -2,
	382, 0, 0, 0, -2, -2, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 227, 0,
	0, 130, 0, 211, 40, 0, -2, 334, 335, 377,
	0, 169, 171, 215, 0, 174, 0, 354, 357, 355,
	318, 409, 0, 0, 0, 0, 0, 0, 164, 162,
	174, 347, 97, 98, 94, 0, 91, 86, 87, -2,
	89, 174, -2, 0, 110, 116, 113, 0, 111, 0,
	0, 366, 0, -2, 0, 0, 0, 0, 0, 176,
	0, 0, 266, 267, 268, 269, 271, 0, 0, 0,
	0, 0, 213, 0, 0, 41, 360, 0, 217, 223,
	224, 0, 353, 339, 319, 0, 0, 409, 409, 322,
	0, 188, 0, 0, 81, 84, 93, 105, 0, 0,
	51, 52, 0, 332, 63, 64, 0, 56, -2, -2,
	0, 0, 366, -2, 0, 0, 383, -2, 30, 31,
	0, 0, 174, 287, 0, 0, 0, 0, 0, 287,
	287, 0, 287, 0, 0, 165, 361, -2, 351, 324,
	0, 320, 0, 323, 307, 308, 309, 260, 117, -2,
	0, 0, 0, 203, 0, 57, 0, 0, 0, 0,
	0, 367, 0, 47, 380, 32, 33, 0, 0, 285,
	165, 0, 287, 287, 287, 287, 287, 0, 165, 0,
	0, 0, 0, 229, 0, 0, 321, 0, 7, -2,
	386, 0, -2, 0, 0, 118, 119, -2, 45, 0,
	-2, 381, 0, 177, 273, 284, 0, 0, 0, 0,
	0, 0, 0, 279, 280, 287, 282, 287, 272, 325,
	310, 370, 0, -2, 0, 0, 0, 58, 59, 0,
	332, 68, 69, 70, 0, 0, 0, 46, 364, 0,
	0, 288, 274, 275, 276, 277, 278, 0, 0, 0,
	370, -2, 0, 0, 387, -2, 0, -2, 0, 0,
	-2, -2, 120, 365, -2, 166, 281, 283, 0, 0,
	371, 0, 62, 384, 53, 9, -2, 390, 0, 0,
	0, 286, 0, 60, 0, -2, 385, 0, 374, 0,
	-2, 0, 0, 0, 289, 0, 0, 0, 0, 61,
	368, 0, 0, 374, -2, 0, 0, 391, -2, 54,
	55, 0, 0, 298, 0, 0, 291, 292, 293, 369,
	-2, 0, 0, 375, 0, 67, 388, 0, 297, 294,
	295, 296, 65, 0, -2, 389, 0, 290, 0, 300,
	66, 372, 0, 299, 373, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 147, 3, 3, 3, 151, 3, 3,
	148, 149, 143, 146, 152, 145, 153, 150, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 142,
	3, 144,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:224
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:229
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:234
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:245
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:255
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:265
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:361
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:365
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:369
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:379
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = Exit{}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:409
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:413
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:439
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:463
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:501
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:505
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:595
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:599
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:603
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:619
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:623
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:629
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:633
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:639
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:643
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:649
		{
			yyVAL.expression = nil
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:653
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:657
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:661
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:665
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:671
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:675
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:679
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:683
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:687
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 104:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:701
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:705
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:711
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:717
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:721
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:727
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:733
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:737
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:743
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:747
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:751
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 117:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:757
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 118:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:761
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 119:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 120:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:769
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:773
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:779
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:783
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:787
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:791
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:795
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:799
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:803
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:809
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:813
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:817
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:823
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:827
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:831
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:835
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:839
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:843
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:847
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:851
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:855
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:859
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:863
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:867
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:871
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:875
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:881
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:885
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:889
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:895
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:907
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:917
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:926
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:935
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:946
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:950
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:956
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:962
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:966
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:972
		{
			yyVAL.queryexpr = nil
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:982
		{
			yyVAL.queryexpr = nil
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:992
		{
			yyVAL.queryexpr = nil
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.queryexpr = nil
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.queryexpr = nil
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexpr = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = nil
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1046
		{
			yyVAL.queryexpr = nil
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 177:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1060
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1066
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1122
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1176
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1192
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1208
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1212
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1222
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1232
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1238
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1242
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1248
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1252
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.token = Token{}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1272
		{
			yyVAL.token = yyDollar[1].token
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1276
		{
			yyVAL.token = yyDollar[1].token
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1282
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1288
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1311
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1315
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1319
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 236:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 238:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1361
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1423
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1427
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1433
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1437
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexprs = nil
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 272:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1506
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1512
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 274:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1516
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 275:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 276:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 277:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 278:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 279:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1536
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 280:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1540
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 281:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 282:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 283:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1564
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1568
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1575
		{
			yyVAL.queryexpr = nil
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1579
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1589
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1595
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1599
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1610
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1615
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 323:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1758
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1768
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1772
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1782
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexpr = nil
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1808
		{
			yyVAL.queryexpr = nil
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1818
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1828
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1832
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1838
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1842
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1848
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1858
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1862
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1872
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 351:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 353:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 354:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1918
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1923
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.elseexpr = Else{}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.elseexpr = Else{}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1964
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1974
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.elseexpr = Else{}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1984
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.elseexpr = Else{}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2020
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2024
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2040
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2044
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2060
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2064
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2080
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2084
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2114
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2118
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2124
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2130
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2134
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2140
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2144
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2150
		{
			yyVAL.envvar = EnvVar{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.token = Token{}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2160
		{
			yyVAL.token = yyDollar[1].token
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2166
		{
			yyVAL.token = Token{}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2170
		{
			yyVAL.token = yyDollar[1].token
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2176
		{
			yyVAL.token = Token{}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2180
		{
			yyVAL.token = yyDollar[1].token
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2186
		{
			yyVAL.token = Token{}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2190
		{
			yyVAL.token = yyDollar[1].token
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2196
		{
			yyVAL.token = yyDollar[1].token
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2200
		{
			yyVAL.token = yyDollar[1].token
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2206
		{
			yyVAL.token = Token{}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2216
		{
			yyVAL.token = Token{}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2220
		{
			yyVAL.token = yyDollar[1].token
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2226
		{
			yyVAL.token = Token{}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2230
		{
			yyVAL.token = yyDollar[1].token
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2236
		{
			yyVAL.token = yyDollar[1].token
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2240
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
