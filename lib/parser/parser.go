// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const TRIGGER = 57453
const FUNCTION = 57454
const AGGREGATE = 57455
const BEGIN = 57456
const RETURN = 57457
const IGNORE = 57458
const WITHIN = 57459
const VAR = 57460
const SHOW = 57461
const TIES = 57462
const NULLS = 57463
const TABLES = 57464
const VIEWS = 57465
const FIELDS = 57466
const CURSORS = 57467
const FUNCTIONS = 57468
const ROWS = 57469
const ERROR = 57470
const JSON_ROW = 57471
const JSON_TABLE = 57472
const COUNT = 57473
const JSON_OBJECT = 57474
const AGGREGATE_FUNCTION = 57475
const LIST_FUNCTION = 57476
const ANALYTIC_FUNCTION = 57477
const FUNCTION_NTH = 57478
const FUNCTION_WITH_INS = 57479
const COMPARISON_OP = 57480
const STRING_OP = 57481
const SUBSTITUTION_OP = 57482
const UMINUS = 57483
const UPLUS = 57484

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"TABLES",
	"VIEWS",
	"FIELDS",
	"CURSORS",
	"FUNCTIONS",
	"ROWS",
	"ERROR",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2231

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 164,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 60,
	13, 164,
	15, 164,
	17, 164,
	19, 164,
	149, 164,
	-2, 1,
	-1, 62,
	150, 249,
	-2, 164,
	-1, 103,
	58, 144,
	59, 144,
	60, 144,
	-2, 155,
	-1, 159,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 257,
	88, 4,
	-2, 164,
	-1, 268,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 219,
	-1, 269,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 221,
	-1, 279,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 231,
	-1, 314,
	88, 1,
	-2, 164,
	-1, 324,
	48, 407,
	-2, 331,
	-1, 393,
	88, 1,
	-2, 164,
	-1, 400,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	138, 0,
	145, 0,
	-2, 232,
	-1, 423,
	84, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 497,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 500,
	88, 4,
	-2, 164,
	-1, 501,
	88, 4,
	-2, 164,
	-1, 569,
	13, 417,
	73, 417,
	149, 417,
	-2, 75,
	-1, 591,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 596,
	88, 4,
	-2, 164,
	-1, 597,
	88, 4,
	-2, 164,
	-1, 602,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 653,
	88, 6,
	-2, 164,
	-1, 664,
	88, 4,
	-2, 164,
	-1, 719,
	88, 6,
	-2, 164,
	-1, 720,
	88, 6,
	-2, 164,
	-1, 724,
	88, 4,
	-2, 164,
	-1, 728,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 763,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 802,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 805,
	88, 8,
	-2, 164,
	-1, 810,
	88, 6,
	-2, 164,
	-1, 813,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 830,
	88, 6,
	-2, 164,
	-1, 851,
	88, 6,
	-2, 164,
	-1, 855,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 857,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 860,
	88, 8,
	-2, 164,
	-1, 861,
	88, 8,
	-2, 164,
	-1, 874,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 886,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 890,
	88, 8,
	-2, 164,
	-1, 906,
	88, 8,
	-2, 164,
	-1, 910,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 930,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
}

const yyPrivate = 57344

const yyLast = 3523

var yyAct = [...]int{

	76, 23, 875, 849, 905, 723, 850, 904, 803, 896,
	229, 475, 749, 592, 427, 788, 709, 747, 221, 100,
	722, 684, 748, 392, 520, 148, 538, 576, 1, 120,
	571, 716, 126, 127, 301, 488, 491, 546, 354, 227,
	437, 530, 63, 201, 445, 334, 444, 213, 324, 490,
	391, 64, 577, 224, 83, 323, 320, 192, 116, 715,
	207, 23, 412, 218, 81, 371, 337, 378, 21, 153,
	325, 181, 462, 182, 745, 183, 108, 346, 181, 648,
	179, 177, 181, 618, 377, 20, 182, 119, 806, 158,
	743, 181, 607, 744, 386, 103, 198, 449, 585, 450,
	451, 446, 443, 258, 584, 447, 209, 209, 587, 570,
	189, 588, 542, 379, 231, 238, 209, 533, 259, 204,
	344, 203, 322, 171, 246, 247, 248, 160, 21, 249,
	172, 173, 171, 263, 170, 169, 240, 432, 832, 172,
	173, 44, 59, 848, 847, 20, 825, 824, 166, 175,
	174, 165, 164, 167, 163, 109, 264, 105, 823, 106,
	23, 104, 208, 208, 157, 822, 449, 212, 450, 451,
	446, 443, 239, 821, 447, 262, 818, 259, 171, 157,
	170, 169, 294, 259, 297, 172, 173, 817, 266, 44,
	816, 815, 259, 220, 799, 797, 796, 278, 278, 787,
	721, 448, 670, 650, 647, 637, 636, 209, 635, 634,
	633, 617, 331, 606, 599, 331, 583, 276, 276, 231,
	581, 270, 161, 160, 569, 568, 567, 21, 171, 162,
	170, 169, 566, 560, 289, 172, 173, 290, 526, 515,
	514, 513, 512, 343, 20, 389, 296, 73, 58, 415,
	109, 299, 300, 103, 368, 342, 291, 293, 23, 382,
	292, 385, 800, 220, 312, 433, 194, 553, 363, 413,
	336, 798, 341, 369, 755, 118, 118, 319, 122, 754,
	543, 487, 753, 339, 340, 383, 752, 751, 355, 739,
	147, 111, 736, 733, 703, 203, 701, 700, 694, 359,
	522, 504, 456, 455, 367, 199, 365, 364, 58, 403,
	352, 351, 350, 349, 348, 23, 347, 200, 111, 231,
	188, 435, 440, 209, 187, 396, 186, 452, 113, 431,
	331, 112, 252, 388, 331, 395, 857, 190, 763, 497,
	407, 60, 241, 422, 191, 231, 466, 157, 145, 865,
	704, 702, 136, 616, 476, 614, 611, 480, 440, 440,
	309, 699, 810, 476, 439, 222, 494, 418, 720, 442,
	416, 417, 390, 761, 485, 719, 611, 404, 454, 208,
	405, 406, 21, 441, 61, 101, 111, 502, 503, 457,
	653, 476, 495, 420, 23, 362, 499, 261, 465, 20,
	481, 483, 505, 759, 142, 143, 144, 58, 146, 478,
	468, 469, 470, 471, 461, 353, 463, 464, 59, 698,
	697, 310, 508, 696, 23, 641, 639, 467, 176, 695,
	638, 472, 473, 474, 440, 74, 29, 540, 243, 642,
	640, 632, 750, 507, 524, 124, 361, 929, 919, 331,
	184, 185, 528, 908, 552, 168, 101, 537, 893, 196,
	197, 21, 137, 138, 141, 139, 140, 892, 176, 885,
	866, 862, 856, 523, 853, 812, 539, 809, 20, 228,
	480, 808, 773, 440, 548, 541, 762, 732, 118, 731,
	242, 21, 550, 726, 549, 861, 29, 123, 23, 250,
	251, 23, 23, 556, 551, 58, 667, 384, 20, 579,
	564, 255, 244, 245, 666, 601, 516, 506, 496, 125,
	421, 860, 597, 265, 596, 539, 267, 268, 269, 501,
	271, 500, 906, 279, 231, 282, 283, 284, 285, 286,
	287, 288, 890, 440, 431, 331, 331, 193, 615, 561,
	562, 563, 565, 907, 68, 9, 852, 906, 851, 830,
	851, 724, 58, 590, 664, 311, 594, 595, 315, 393,
	725, 476, 612, 613, 724, 440, 440, 409, 631, 314,
	876, 651, 644, 620, 228, 439, 394, 619, 627, 804,
	393, 593, 23, 622, 623, 29, 202, 23, 23, 302,
	912, 911, 872, 23, 780, 779, 730, 360, 643, 729,
	589, 907, 493, 852, 384, 9, 725, 645, 646, 440,
	394, 655, 370, 933, 661, 331, 331, 331, 928, 691,
	692, 673, 675, 902, 656, 657, 884, 844, 398, 674,
	400, 58, 811, 882, 672, 683, 600, 923, 870, 480,
	777, 527, 917, 901, 23, 915, 916, 662, 932, 897,
	914, 539, 668, 669, 900, 23, 373, 3, 410, 899,
	21, 58, 681, 687, 688, 689, 707, 609, 706, 44,
	532, 219, 306, 426, 430, 97, 305, 20, 131, 132,
	897, 331, 194, 29, 273, 338, 913, 734, 272, 274,
	519, 460, 807, 387, 260, 880, 737, 308, 307, 740,
	228, 216, 881, 757, 9, 883, 757, 281, 280, 758,
	23, 23, 547, 756, 44, 23, 760, 3, 926, 23,
	727, 898, 425, 690, 765, 626, 770, 771, 625, 742,
	476, 498, 101, 768, 774, 58, 624, 98, 58, 58,
	29, 784, 783, 129, 130, 133, 134, 545, 544, 895,
	509, 317, 898, 510, 23, 215, 216, 217, 757, 791,
	792, 793, 794, 819, 449, 517, 450, 451, 795, 790,
	801, 559, 78, 79, 80, 525, 97, 82, 535, 536,
	775, 529, 814, 449, 778, 450, 451, 446, 443, 685,
	686, 447, 318, 23, 558, 677, 23, 841, 842, 820,
	459, 23, 9, 757, 23, 205, 826, 789, 580, 828,
	231, 554, 555, 827, 586, 786, 3, 843, 578, 29,
	431, 23, 493, 658, 846, 115, 493, 839, 114, 58,
	356, 357, 22, 91, 58, 58, 156, 854, 98, 358,
	58, 863, 23, 772, 867, 671, 23, 859, 23, 29,
	660, 23, 23, 679, 680, 838, 654, 652, 868, 9,
	355, 582, 871, 345, 366, 23, 206, 603, 335, 845,
	887, 321, 214, 333, 604, 253, 135, 23, 608, 839,
	5, 23, 839, 839, 572, 573, 574, 575, 59, 430,
	152, 58, 155, 903, 117, 180, 839, 23, 889, 621,
	918, 23, 58, 920, 829, 663, 313, 838, 8, 840,
	838, 838, 839, 927, 630, 438, 7, 931, 6, 408,
	70, 23, 225, 29, 838, 226, 29, 29, 839, 935,
	327, 326, 839, 925, 649, 180, 894, 879, 9, 864,
	838, 89, 659, 178, 180, 69, 72, 65, 71, 665,
	66, 678, 839, 534, 429, 767, 838, 58, 58, 428,
	838, 840, 58, 154, 840, 840, 58, 424, 9, 316,
	557, 3, 458, 107, 17, 16, 75, 128, 840, 14,
	838, 492, 489, 178, 13, 693, 873, 12, 10, 877,
	878, 15, 178, 11, 840, 835, 712, 833, 710, 374,
	275, 58, 372, 888, 4, 149, 2, 0, 0, 0,
	840, 0, 0, 0, 840, 0, 0, 29, 0, 909,
	0, 0, 29, 29, 303, 304, 0, 0, 29, 0,
	0, 0, 735, 0, 840, 921, 0, 0, 0, 924,
	58, 738, 9, 58, 0, 9, 9, 0, 58, 0,
	3, 58, 449, 0, 450, 451, 446, 443, 741, 934,
	447, 0, 0, 0, 0, 0, 0, 0, 58, 764,
	101, 0, 0, 766, 769, 0, 0, 0, 0, 29,
	3, 776, 0, 0, 0, 0, 0, 0, 0, 58,
	29, 0, 0, 58, 0, 58, 0, 785, 58, 58,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 180,
	0, 0, 58, 0, 401, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 58, 0,
	0, 0, 0, 0, 0, 0, 9, 0, 0, 411,
	0, 9, 9, 0, 58, 29, 29, 9, 58, 0,
	29, 0, 180, 0, 29, 0, 0, 178, 0, 0,
	831, 0, 180, 0, 0, 0, 0, 0, 58, 0,
	0, 0, 0, 0, 0, 430, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 0, 29,
	0, 0, 858, 101, 180, 0, 180, 0, 9, 0,
	434, 0, 0, 45, 0, 0, 0, 0, 869, 9,
	178, 0, 0, 0, 0, 166, 175, 174, 165, 164,
	167, 163, 328, 210, 0, 0, 0, 0, 29, 0,
	0, 29, 891, 0, 0, 477, 29, 0, 0, 29,
	0, 0, 484, 0, 486, 67, 180, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 29, 0, 0, 3,
	0, 0, 0, 922, 9, 9, 521, 0, 110, 9,
	0, 0, 44, 9, 0, 0, 0, 29, 0, 0,
	0, 29, 0, 29, 0, 0, 29, 29, 0, 161,
	160, 0, 0, 0, 178, 171, 162, 170, 169, 0,
	29, 0, 172, 173, 676, 0, 0, 0, 9, 0,
	711, 0, 29, 0, 0, 0, 29, 0, 0, 46,
	47, 48, 49, 53, 50, 51, 52, 57, 54, 332,
	56, 121, 29, 0, 0, 0, 29, 180, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 9, 329, 0,
	9, 0, 0, 605, 0, 9, 29, 0, 9, 0,
	0, 0, 0, 0, 0, 166, 175, 174, 165, 164,
	167, 163, 0, 0, 0, 9, 711, 711, 0, 0,
	0, 0, 0, 0, 0, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 9, 0, 0, 0,
	9, 0, 9, 0, 0, 9, 9, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 0, 0, 9,
	711, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	0, 9, 0, 0, 0, 9, 277, 277, 0, 161,
	160, 521, 0, 0, 0, 171, 162, 170, 169, 0,
	180, 9, 172, 173, 629, 9, 0, 330, 0, 711,
	330, 0, 834, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 531, 0, 9, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 0, 711, 0, 0,
	166, 175, 174, 165, 164, 167, 163, 0, 682, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 711, 0,
	0, 0, 711, 0, 834, 521, 0, 834, 834, 277,
	0, 0, 0, 0, 705, 0, 277, 277, 0, 0,
	0, 834, 0, 708, 0, 166, 175, 174, 165, 164,
	167, 163, 0, 711, 0, 0, 0, 834, 0, 0,
	0, 277, 414, 414, 414, 166, 175, 174, 165, 164,
	167, 163, 0, 834, 161, 160, 180, 834, 0, 0,
	171, 162, 170, 169, 0, 330, 0, 172, 173, 330,
	0, 0, 0, 110, 0, 110, 110, 834, 45, 78,
	79, 80, 0, 97, 82, 59, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 161,
	160, 0, 0, 0, 781, 171, 162, 170, 169, 0,
	0, 0, 172, 173, 628, 0, 0, 0, 0, 161,
	160, 0, 0, 0, 0, 171, 162, 170, 169, 0,
	0, 0, 172, 173, 419, 0, 0, 92, 0, 0,
	0, 93, 0, 0, 0, 98, 0, 0, 0, 277,
	0, 0, 0, 0, 90, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 277, 0,
	45, 78, 79, 80, 0, 97, 82, 59, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 46, 47, 48, 49, 53, 50,
	51, 52, 57, 96, 55, 233, 24, 232, 234, 235,
	236, 237, 0, 0, 0, 0, 0, 0, 230, 0,
	84, 85, 94, 102, 223, 0, 0, 0, 0, 92,
	0, 0, 0, 93, 0, 0, 0, 98, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 86, 0, 0,
	0, 0, 0, 0, 0, 277, 95, 0, 45, 78,
	79, 80, 0, 97, 82, 59, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	330, 330, 0, 0, 0, 0, 46, 47, 48, 49,
	53, 50, 51, 52, 57, 96, 55, 233, 24, 232,
	234, 235, 236, 237, 0, 0, 0, 0, 0, 0,
	230, 0, 84, 85, 94, 102, 0, 92, 0, 0,
	0, 93, 0, 0, 0, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 86, 0, 0, 0, 0,
	0, 0, 0, 277, 95, 45, 78, 79, 80, 0,
	97, 82, 59, 0, 0, 0, 0, 0, 0, 0,
	330, 330, 330, 0, 0, 77, 166, 175, 174, 165,
	164, 167, 163, 0, 46, 47, 48, 49, 53, 50,
	51, 52, 57, 96, 55, 233, 24, 232, 234, 235,
	236, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 85, 94, 102, 92, 0, 0, 0, 93, 0,
	0, 0, 98, 0, 0, 0, 0, 277, 0, 0,
	0, 90, 86, 0, 0, 0, 330, 0, 0, 0,
	151, 95, 45, 78, 79, 80, 0, 97, 82, 59,
	161, 160, 0, 0, 0, 0, 171, 162, 170, 169,
	0, 0, 77, 172, 173, 290, 0, 0, 0, 150,
	0, 46, 47, 48, 49, 53, 50, 51, 52, 57,
	96, 55, 88, 24, 87, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 85, 94,
	102, 92, 0, 0, 0, 93, 0, 0, 0, 98,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 86,
	166, 175, 174, 165, 164, 167, 163, 0, 95, 45,
	78, 79, 80, 0, 97, 82, 59, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	166, 175, 174, 165, 164, 167, 163, 0, 46, 47,
	48, 49, 53, 50, 51, 52, 57, 96, 55, 88,
	24, 87, 99, 805, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 84, 85, 94, 102, 92, 0,
	0, 0, 93, 0, 161, 160, 98, 219, 0, 0,
	171, 162, 170, 169, 0, 90, 86, 172, 173, 254,
	0, 0, 0, 0, 0, 95, 45, 78, 79, 80,
	0, 97, 82, 59, 161, 160, 0, 0, 0, 0,
	171, 162, 170, 169, 0, 0, 77, 172, 173, 0,
	0, 0, 0, 0, 0, 46, 47, 48, 49, 53,
	50, 51, 52, 57, 96, 55, 88, 24, 87, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 94, 102, 92, 0, 0, 0, 93,
	0, 0, 0, 98, 0, 44, 0, 0, 0, 0,
	0, 0, 90, 86, 166, 175, 174, 165, 164, 167,
	163, 0, 95, 45, 78, 79, 80, 0, 97, 82,
	59, 0, 0, 0, 0, 930, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 166, 175, 174, 165, 164,
	167, 163, 46, 47, 48, 49, 53, 50, 51, 52,
	57, 96, 55, 88, 24, 87, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 85,
	94, 102, 92, 0, 0, 0, 93, 0, 161, 160,
	98, 0, 0, 0, 171, 162, 170, 169, 0, 90,
	86, 172, 173, 0, 0, 0, 0, 0, 0, 95,
	45, 78, 79, 80, 0, 97, 82, 59, 0, 161,
	160, 0, 0, 0, 0, 171, 162, 170, 169, 0,
	77, 782, 172, 173, 0, 0, 0, 0, 0, 46,
	47, 48, 49, 53, 50, 51, 52, 57, 96, 55,
	88, 24, 87, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 94, 102, 92,
	0, 0, 0, 93, 0, 0, 0, 98, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 45, 78, 256,
	80, 0, 97, 82, 59, 166, 175, 174, 165, 164,
	167, 163, 0, 0, 0, 166, 175, 77, 165, 164,
	167, 163, 0, 0, 0, 0, 46, 47, 48, 49,
	53, 50, 51, 52, 57, 96, 55, 88, 24, 87,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 85, 94, 62, 92, 0, 0, 45,
	93, 0, 0, 0, 98, 0, 59, 0, 0, 0,
	0, 36, 0, 90, 86, 0, 0, 0, 0, 161,
	160, 25, 0, 95, 26, 171, 162, 170, 169, 161,
	160, 746, 172, 173, 0, 171, 162, 170, 169, 0,
	0, 0, 172, 173, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 46, 47, 48, 49, 53, 50, 51,
	52, 57, 96, 55, 88, 24, 87, 99, 44, 0,
	0, 0, 0, 0, 0, 837, 836, 0, 717, 84,
	85, 94, 102, 0, 28, 0, 0, 33, 31, 32,
	30, 166, 175, 174, 165, 164, 167, 163, 34, 35,
	380, 381, 0, 38, 39, 40, 41, 0, 0, 0,
	718, 0, 910, 27, 37, 46, 47, 48, 49, 53,
	50, 51, 52, 57, 54, 55, 56, 24, 45, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	36, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	25, 0, 0, 26, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 160, 0, 0, 0,
	0, 171, 162, 170, 169, 0, 0, 0, 172, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 45,
	0, 0, 0, 0, 0, 0, 59, 44, 0, 0,
	0, 36, 0, 0, 376, 375, 0, 42, 0, 0,
	0, 25, 0, 28, 26, 0, 33, 31, 32, 30,
	0, 0, 0, 0, 0, 0, 0, 34, 35, 380,
	381, 43, 38, 39, 40, 41, 0, 0, 0, 0,
	0, 0, 27, 37, 46, 47, 48, 49, 53, 50,
	51, 52, 57, 54, 55, 56, 24, 0, 44, 0,
	0, 0, 45, 0, 0, 714, 713, 0, 717, 0,
	0, 0, 0, 0, 28, 0, 0, 33, 31, 32,
	30, 166, 175, 174, 165, 164, 167, 163, 34, 35,
	0, 0, 0, 38, 39, 40, 41, 0, 0, 0,
	718, 0, 886, 27, 37, 46, 47, 48, 49, 53,
	50, 51, 52, 57, 54, 55, 56, 24, 166, 175,
	174, 165, 164, 167, 163, 0, 0, 0, 166, 175,
	174, 165, 164, 167, 163, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 855,
	45, 0, 298, 0, 0, 161, 160, 0, 0, 0,
	0, 171, 162, 170, 169, 0, 0, 0, 172, 173,
	166, 175, 174, 165, 164, 167, 163, 0, 46, 47,
	48, 49, 53, 50, 51, 52, 57, 54, 55, 56,
	121, 813, 161, 160, 0, 0, 0, 0, 171, 162,
	170, 169, 161, 160, 0, 172, 173, 479, 171, 162,
	170, 169, 0, 0, 0, 172, 173, 166, 175, 174,
	165, 164, 167, 163, 0, 0, 0, 166, 175, 174,
	165, 164, 167, 163, 0, 0, 0, 166, 802, 0,
	165, 164, 167, 163, 161, 160, 0, 0, 728, 0,
	171, 162, 170, 169, 0, 0, 0, 172, 173, 166,
	175, 174, 165, 164, 167, 163, 46, 47, 48, 49,
	53, 50, 51, 52, 57, 54, 55, 56, 121, 302,
	0, 45, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 161, 160, 36, 0, 0, 0, 171, 162, 170,
	169, 161, 160, 25, 172, 173, 26, 171, 162, 170,
	169, 161, 160, 0, 172, 173, 0, 171, 162, 170,
	169, 0, 0, 0, 172, 173, 0, 0, 0, 0,
	0, 0, 0, 161, 160, 0, 0, 0, 0, 171,
	162, 170, 169, 0, 0, 0, 172, 173, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 19, 18, 0,
	42, 0, 0, 0, 0, 0, 28, 0, 0, 33,
	31, 32, 30, 166, 175, 174, 165, 164, 167, 163,
	34, 35, 0, 0, 43, 38, 39, 40, 41, 0,
	0, 0, 0, 0, 0, 27, 37, 46, 47, 48,
	49, 53, 50, 51, 52, 57, 54, 55, 56, 24,
	166, 175, 174, 165, 164, 167, 163, 0, 0, 0,
	166, 175, 174, 165, 164, 167, 163, 0, 0, 0,
	0, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 0, 0, 0, 0, 0, 161, 160, 0,
	0, 0, 0, 171, 162, 170, 169, 0, 0, 610,
	172, 173, 166, 175, 174, 165, 164, 167, 163, 0,
	0, 0, 0, 166, 175, 174, 165, 164, 167, 163,
	0, 0, 0, 518, 161, 160, 0, 0, 0, 0,
	171, 162, 170, 169, 161, 160, 257, 172, 173, 0,
	171, 162, 170, 169, 0, 0, 45, 172, 173, 166,
	175, 174, 165, 164, 167, 163, 0, 0, 0, 166,
	175, 174, 165, 164, 167, 163, 77, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 161, 160, 0, 0,
	159, 0, 171, 162, 170, 169, 0, 161, 160, 172,
	173, 45, 0, 171, 162, 170, 169, 0, 0, 0,
	172, 173, 166, 175, 174, 165, 164, 167, 163, 0,
	0, 77, 166, 511, 174, 165, 164, 167, 163, 0,
	0, 0, 0, 161, 160, 45, 0, 0, 0, 171,
	162, 170, 169, 161, 160, 0, 172, 173, 45, 171,
	162, 170, 169, 0, 328, 210, 172, 173, 166, 397,
	174, 165, 164, 167, 163, 45, 453, 0, 0, 0,
	0, 0, 46, 47, 48, 49, 53, 50, 51, 52,
	57, 54, 55, 56, 121, 210, 161, 160, 45, 0,
	0, 0, 171, 162, 170, 169, 161, 160, 211, 172,
	173, 482, 171, 162, 170, 169, 0, 0, 210, 172,
	173, 0, 45, 0, 0, 0, 0, 46, 47, 48,
	49, 53, 50, 51, 52, 57, 54, 55, 56, 121,
	436, 0, 161, 160, 45, 0, 295, 0, 171, 162,
	170, 169, 0, 0, 0, 172, 173, 45, 0, 0,
	0, 46, 47, 48, 49, 53, 50, 51, 52, 57,
	54, 332, 56, 121, 46, 47, 48, 49, 53, 50,
	51, 52, 57, 54, 55, 56, 121, 0, 0, 0,
	329, 46, 47, 48, 49, 53, 50, 51, 52, 57,
	54, 55, 56, 121, 45, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 46, 47, 48, 49, 53, 50,
	51, 52, 57, 54, 55, 56, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 46, 47,
	48, 49, 53, 50, 51, 52, 57, 54, 55, 56,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	46, 47, 48, 49, 53, 50, 51, 52, 57, 54,
	55, 56, 121, 46, 47, 48, 49, 53, 50, 51,
	52, 57, 54, 55, 56, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	46, 47, 48, 49, 53, 50, 51, 52, 57, 54,
	55, 56, 121,
}
var yyPact = [...]int{

	2927, -1000, 198, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2296, 2209,
	-1000, -1000, 142, 182, 179, 808, 805, 887, 3390, -1000,
	407, 3343, 3343, 657, -1000, -1000, 874, 340, 2209, 2209,
	2209, 220, 1861, 894, 821, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 207, -1000,
	2927, 3105, 2122, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 207, -1000, -1000, -63, -79, -1000, -1000,
	-1000, -1000, -1000, -1000, 2209, 2209, 177, 175, 171, -1000,
	2209, 199, 169, 2209, 2209, 3343, 156, -1000, -1000, 168,
	512, 3148, 2122, 776, 856, 3261, 3284, 868, 707, 609,
	-1000, 606, 2209, 1594, 3343, 3261, -1000, -17, 202, -1000,
	400, -1000, -1000, 3343, 3343, 3343, -1000, -1000, 3343, -1000,
	-1000, -1000, -1000, 2209, 2209, 187, -1000, -1000, -1000, -1000,
	-1000, 871, 3148, 1966, 3148, 2383, 3059, 39, 640, 887,
	-1000, -1000, -1000, -1000, -20, 3343, -1000, 2209, -1000, 2927,
	2209, 2209, 2209, 625, 2209, 630, 69, 2209, 656, 2209,
	2209, 2209, 2209, 2209, 2209, 2209, 84, 106, 110, 107,
	237, 3330, 2035, 2796, -1000, -1000, 2209, 609, 609, 515,
	69, 69, 618, 646, -1000, -1000, 2823, -1000, 290, 2209,
	609, 493, 2209, 106, 716, 760, 3261, 865, -31, -1000,
	-1000, 3231, 869, 860, 3231, 634, 634, 634, 1686, -1000,
	105, -1000, 1822, -1000, 93, -33, 851, -1000, 3148, -1000,
	-1000, -72, 167, 165, 164, 163, 162, 161, 266, 813,
	887, 2209, 355, 246, 158, 157, -1000, -1000, -1000, 854,
	3148, 3148, 777, 3343, 2209, 3148, 2209, 2574, 3343, 887,
	3343, 30, 639, 821, 223, 3148, 504, 34, -12, -12,
	676, 3194, 2209, 69, 2209, -1000, 2122, -1000, 156, -12,
	69, 69, -21, -21, -1000, -1000, -1000, 2341, 2823, -1000,
	2209, -1000, -1000, -1000, -1000, -1000, 2209, -1000, -1000, 2209,
	1948, 491, 2209, -1000, -1000, 69, 120, 120, 120, 625,
	-1000, 1501, 2209, 432, 2927, 3095, 686, 2209, 1774, 116,
	3308, 3197, 3261, 860, 48, -1000, 3244, -1000, -1000, 1209,
	-1000, 154, 153, 3231, 770, 2209, -1000, 237, -1000, 237,
	237, -1000, -1000, -1000, 1686, 3343, 2035, 609, 609, 609,
	2209, 2209, 2209, 3343, 606, -1000, 2708, 3152, 3197, -1000,
	3148, 606, 3343, 606, 131, 3343, 887, -1000, -1000, -1000,
	3148, 430, 196, -1000, -1000, 2296, 2209, -1000, -1000, -1000,
	-1000, -1000, 444, -1000, -35, 442, 3343, 3343, -1000, 152,
	3343, 429, 483, 2927, 2209, -1000, -1000, 2209, 3158, -1000,
	-12, -1000, -1000, -1000, 92, 91, 90, 89, 428, 2209,
	3048, 635, -1000, 68, -1000, 151, -1000, -1000, 380, 2209,
	88, 571, -1000, 2927, -1000, 2209, 1436, -1000, -36, 745,
	3148, -1000, 69, 3197, -1000, -1000, 3343, 868, -41, 135,
	-83, -1000, -1000, 710, 709, 672, 672, 725, 3231, -1000,
	-1000, -1000, -1000, 3343, 117, 2209, 2209, 860, 763, 739,
	3148, 652, -1000, -1000, 652, -1000, -1000, 83, 2209, 2209,
	1948, 2209, 82, 76, 75, 74, -44, -1000, 863, 3343,
	793, -1000, 3197, 781, -1000, 70, -1000, 849, 66, -49,
	-1000, -1000, -55, 789, -42, -1000, 527, 2574, 3006, 507,
	2574, 2574, 437, 435, 606, 64, 565, 427, -1000, 2996,
	2823, 2209, -1000, -1000, -1000, -1000, -1000, 3148, 2209, 69,
	63, -61, 2209, -1000, 603, 2959, 239, -1000, 512, 3148,
	-1000, 607, 235, 1774, 232, -1000, -1000, -1000, 61, -70,
	-1000, 860, 3197, 2209, 3231, 3231, 698, -1000, 690, 687,
	672, -1000, -1000, -1000, 1481, 1311, -1000, -1000, 2209, 2209,
	339, 60, 59, 58, 56, 55, 328, 324, 323, 848,
	3343, -1000, -1000, -1000, 3197, 3197, 54, -74, 2209, 53,
	3343, 845, 276, 844, 887, 887, 2209, 838, 887, -1000,
	-1000, 2574, 478, 2209, 426, 418, 2574, 2574, 52, 833,
	-1000, 563, 2927, 2823, 2845, -1000, -1000, 69, 1161, -1000,
	-1000, 765, -1000, -1000, -1000, -1000, 832, 651, 3197, -1000,
	-1000, 3148, 725, 744, 3231, 3231, 3231, 685, 3343, 2209,
	3148, -1000, 149, 327, 321, 318, 317, 259, 148, 147,
	230, 145, 229, 606, -1000, -1000, -1000, 863, 3343, 3148,
	-1000, -1000, 606, 2635, 261, -1000, -1000, -1000, 789, 3148,
	254, 50, 488, 405, 2574, 2813, 526, 523, 401, 399,
	-1000, 144, -1000, 538, -1000, -1000, 2209, 143, -1000, -1000,
	-1000, 69, -1000, -1000, -1000, 2209, 140, 744, 1013, 725,
	3231, -60, -76, 2331, 341, 138, 137, 133, 130, 125,
	341, 341, 301, 341, 271, -1000, -1000, -1000, -1000, 398,
	195, -1000, -1000, 2296, 2209, -1000, -1000, 2209, 2209, 2635,
	2635, 831, 394, 475, 2574, 2209, 570, -1000, 2574, -1000,
	-1000, 522, 521, 606, -1000, 2171, 776, -1000, 3148, 3343,
	-1000, 2209, 725, -1000, 2209, -1000, -1000, 49, -1000, 778,
	737, 341, 341, 341, 341, 341, 46, 776, 45, 122,
	44, 113, -1000, 2635, 2803, 505, 1996, 24, 638, 3148,
	393, 389, 248, 561, 387, -1000, 2756, -1000, 507, -1000,
	-1000, 41, -1000, 40, 37, 3148, 26, -1000, -1000, 731,
	2209, 23, 15, 8, -3, -4, -1000, -1000, 341, -1000,
	341, -1000, 2635, 473, 2209, 2445, 3343, 3343, -1000, -1000,
	2635, -1000, 556, 2574, -1000, -1000, -1000, -1000, -1000, 1774,
	-1000, -1000, -1000, -1000, -1000, -1000, -6, -7, 474, 386,
	2635, 2714, 384, 193, -1000, -1000, 2296, 2209, -1000, -1000,
	-1000, 434, 408, 383, -1000, 534, 222, -1000, -1000, 382,
	472, 2635, 2209, 568, -1000, 2635, 519, 2445, 2704, 496,
	2445, 2445, -1000, -1000, -1000, 637, 555, 381, -1000, 2667,
	-1000, 505, -1000, -1000, 2445, 456, 2209, 379, 370, -1000,
	684, 593, 588, 574, -1000, 552, 2635, -1000, 471, 365,
	2445, 2477, 518, 517, 631, 584, -1000, 579, 573, -1000,
	-1000, -1000, -1000, 531, 360, 446, 2445, 2209, 567, -1000,
	2445, -1000, -1000, 653, -1000, -1000, -1000, -1000, -1000, 547,
	359, -1000, 2140, -1000, 496, -1000, 581, -1000, -1000, 542,
	2445, -1000, -1000, -1000, 529, -1000,
}
var yyPgo = [...]int{

	0, 28, 65, 16, 138, 666, 113, 1016, 84, 1015,
	67, 1014, 1012, 1009, 1008, 59, 31, 1007, 1006, 1005,
	1003, 1001, 998, 52, 27, 30, 997, 994, 36, 992,
	991, 49, 35, 989, 987, 986, 985, 984, 890, 72,
	76, 983, 47, 45, 982, 980, 15, 979, 41, 977,
	842, 973, 69, 51, 64, 54, 42, 365, 39, 843,
	24, 14, 969, 964, 963, 961, 1255, 960, 62, 958,
	957, 956, 80, 554, 955, 951, 10, 22, 17, 12,
	949, 947, 9, 946, 943, 56, 70, 60, 941, 48,
	940, 21, 935, 932, 930, 19, 34, 929, 26, 18,
	55, 11, 53, 928, 926, 925, 40, 918, 23, 50,
	5, 20, 6, 3, 4, 7, 43, 916, 13, 915,
	8, 914, 2, 908, 0, 247, 25, 435, 904, 58,
	63, 57, 46, 37, 44, 66, 902, 38, 455,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 26, 27, 27, 27,
	27, 28, 29, 29, 30, 31, 31, 32, 32, 32,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 34, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 37, 37, 37, 38,
	39, 39, 39, 39, 40, 40, 41, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 53, 53, 53, 53, 54, 55, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 58, 59, 59,
	59, 60, 60, 61, 61, 62, 62, 63, 63, 64,
	64, 64, 65, 65, 66, 67, 68, 68, 68, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 71, 71, 71, 71, 72,
	72, 73, 73, 73, 73, 74, 74, 74, 74, 74,
	75, 75, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 77, 78, 78, 79, 79, 80, 80,
	81, 81, 81, 82, 82, 82, 83, 83, 84, 84,
	85, 85, 86, 86, 86, 88, 88, 88, 88, 88,
	89, 89, 89, 89, 89, 89, 89, 90, 90, 90,
	90, 90, 90, 91, 91, 92, 92, 93, 93, 93,
	94, 95, 95, 96, 96, 97, 97, 98, 98, 99,
	99, 100, 100, 87, 87, 101, 101, 102, 102, 103,
	103, 103, 103, 104, 105, 106, 106, 107, 107, 108,
	108, 109, 109, 110, 110, 111, 111, 112, 112, 113,
	113, 114, 114, 115, 115, 116, 116, 117, 117, 118,
	118, 119, 119, 120, 120, 121, 121, 122, 122, 123,
	123, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 125, 126, 126, 127, 128,
	128, 129, 129, 130, 130, 131, 131, 132, 132, 133,
	133, 134, 134, 135, 135, 136, 136, 137, 137, 138,
	138,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 2, 2, 2, 4,
	2, 2, 2, 2, 2, 4, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	6, 1, 3, 1, 3, 2, 4, 1, 1, 0,
	1, 1, 1, 1, 3, 3, 3, 1, 6, 3,
	3, 3, 3, 4, 4, 5, 6, 6, 3, 4,
	4, 3, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 2, 2, 3, 3, 2, 2, 0,
	1, 4, 3, 4, 4, 5, 5, 5, 5, 1,
	5, 10, 8, 9, 9, 9, 9, 9, 8, 8,
	10, 8, 10, 2, 1, 5, 0, 3, 2, 5,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 1,
	1, 1, 1, 2, 3, 1, 6, 8, 6, 6,
	1, 1, 2, 3, 1, 1, 3, 4, 5, 6,
	7, 5, 6, 2, 4, 1, 1, 1, 3, 1,
	5, 0, 1, 4, 5, 0, 2, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 6,
	9, 5, 8, 7, 3, 1, 3, 5, 6, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 1,
	3, 1, 3, 0, 1, 0, 1, 0, 1, 0,
	1, 1, 1, 0, 1, 0, 1, 0, 1, 1,
	1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -103, -104, -107, -73,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -124, 132, 26, 29, 118, 89, -127,
	95, 93, 94, 92, 103, 104, 16, 119, 108, 109,
	110, 111, 83, 107, 73, 4, 120, 121, 122, 123,
	125, 126, 127, 124, 129, 130, 131, 128, -125, 11,
	143, -57, 149, -56, -53, -70, -67, -66, -73, -74,
	-94, -69, -71, -125, -127, -35, -124, 24, 5, 6,
	7, -54, 10, -55, 146, 147, 81, 133, 131, -75,
	80, -59, 63, 67, 148, 90, 129, 9, 71, 134,
	-95, -57, 149, -39, 19, 15, 17, -41, -40, 13,
	-66, 149, 149, 149, 30, 30, -129, -128, -125, -129,
	-124, 132, -125, 90, 38, 112, -124, -124, -34, 96,
	97, 31, 32, 98, 99, 12, 12, 122, 123, 125,
	126, 124, -57, -57, -57, 128, -57, -125, -126, -9,
	118, 89, 6, -52, -51, -136, 25, 140, -1, 85,
	139, 138, 145, 70, 68, 67, 64, 69, -138, 147,
	146, 144, 151, 152, 66, 65, -57, -99, -38, -72,
	-50, 154, 149, 154, -57, -57, 149, 149, 149, -95,
	138, 145, -131, -138, 67, -66, -57, -57, -124, 149,
	149, -116, 84, -99, -46, 39, 20, -87, -85, -124,
	24, 14, -87, -42, 14, 58, 59, 60, -130, 72,
	-72, -99, -57, 150, -102, -93, -92, -58, -57, -76,
	144, -124, 133, 131, 134, 135, 136, 137, -124, -85,
	153, 140, 90, 38, 112, 113, -124, -124, -124, -124,
	-57, -57, 145, 14, 153, -57, 6, 87, 64, 153,
	64, -125, -126, 153, -124, -57, -1, -57, -57, -57,
	-131, -57, 68, 64, 69, -59, 149, -66, 129, -57,
	62, 61, -57, -57, -57, -57, -57, -57, -57, 150,
	153, 150, 150, 150, -124, 6, -130, -124, 6, -130,
	-130, -96, 84, -59, -59, 68, 64, 62, 61, 70,
	131, -57, -130, -117, 86, -57, -47, 45, 42, -86,
	-85, 16, 153, -100, -89, -86, -88, -90, 23, 149,
	-66, -124, 130, 14, -43, 18, -100, -135, 61, -135,
	-135, -102, 150, 150, 153, 22, 149, 149, 149, 149,
	149, 149, 149, 149, -137, 22, 27, 28, 36, -129,
	-57, 91, 149, 22, 149, 149, 20, -53, -124, -99,
	-57, -2, -12, -5, -13, 81, 80, -8, -10, -6,
	105, 106, -124, -126, -125, -124, 64, 64, -52, 22,
	149, -109, -108, 86, 82, -54, -55, 65, -57, -59,
	-57, -59, -59, -99, -72, -72, -72, -58, -97, 86,
	-57, -59, -68, 149, -66, 129, -68, -68, -131, 153,
	-72, 88, -1, 85, -49, 46, -57, -61, -62, -63,
	-57, -76, 21, 149, -38, -124, 22, -106, -105, -56,
	-124, -87, -43, 54, -132, -134, 53, 57, 153, 49,
	51, 52, -124, 22, -89, 149, 149, -100, -44, 40,
	-57, -40, -39, -40, -40, -102, -124, -72, -130, -130,
	-130, -130, -72, -72, -72, -101, -124, -38, -23, 149,
	-124, -56, 149, -56, -38, -101, -38, 150, -32, -29,
	-31, -28, -30, -125, -124, -126, 88, 143, -57, -95,
	87, 87, -124, -124, 149, -101, 88, -109, -1, -57,
	-57, 65, 150, 150, 150, 150, 88, -57, 85, 65,
	-60, -59, 149, 93, 64, -57, 150, 80, -1, -57,
	-48, 47, 73, 153, -64, 43, 44, -60, -98, -56,
	-124, -42, 153, 145, 48, 48, -133, 50, -133, -132,
	-134, -100, -124, 150, -57, -57, -43, -45, 41, 42,
	150, -72, -72, -72, -58, -72, 150, 150, 150, 150,
	153, -25, 31, 32, 33, 34, -24, -23, 35, -98,
	37, 150, 22, 150, 153, 153, 35, 150, 153, 83,
	-2, 85, -118, 84, -2, -2, 87, 87, -38, 150,
	81, 88, 85, -57, -57, -59, 150, 153, -57, 74,
	150, 117, -116, -48, 120, -61, 121, 150, 153, -43,
	-106, -57, -89, -89, 48, 48, 48, -133, 153, 153,
	-57, -99, 102, 150, 150, 150, 150, 150, 102, 102,
	116, 102, 116, -137, -101, -56, -56, 150, 153, -57,
	150, -124, 22, 114, 22, -28, -31, -31, -125, -57,
	22, -32, -2, -119, 86, -57, 88, 88, -2, -2,
	150, 22, 81, -1, -96, -60, 153, 40, -65, 31,
	32, 21, -38, -98, -91, 55, 56, -89, -89, -89,
	48, -124, -124, -57, 149, 102, 102, 102, 102, 102,
	149, 149, 121, 149, 121, -38, -25, -24, -38, -3,
	-14, -5, -18, 81, 80, -15, -16, 83, 115, 114,
	114, 150, -111, -110, 86, 82, 88, -2, 85, 83,
	83, 88, 88, 149, -108, -57, 149, -60, -57, 149,
	-91, 55, -89, 150, 153, 150, 150, -78, -77, -79,
	101, 149, 149, 149, 149, 149, -77, -79, -78, 102,
	-77, 102, 88, 143, -57, -95, -57, -125, -126, -57,
	-3, -3, 22, 88, -111, -2, -57, 80, -2, 83,
	83, -38, 150, -46, -101, -57, -72, 150, -46, 39,
	42, -78, -78, -78, -78, -77, 150, 150, 149, 150,
	149, -3, 85, -120, 84, 87, 64, 64, 88, 88,
	114, 81, 88, 85, -118, 150, 150, 150, 150, 42,
	-99, 150, 150, 150, 150, 150, -78, -77, -3, -121,
	86, -57, -4, -17, -5, -19, 81, 80, -15, -16,
	-6, -124, -124, -3, 81, -2, -61, 150, 150, -113,
	-112, 86, 82, 88, -3, 85, 88, 143, -57, -95,
	87, 87, 88, -110, -80, 127, 88, -113, -3, -57,
	80, -3, 83, -4, 85, -122, 84, -4, -4, -81,
	68, 75, 6, 78, 81, 88, 85, -120, -4, -123,
	86, -57, 88, 88, -83, 75, -82, 6, 78, 76,
	76, 79, 81, -3, -115, -114, 86, 82, 88, -4,
	85, 83, 83, 65, 76, 76, 77, 79, -112, 88,
	-115, -4, -57, 80, -4, -84, 75, -82, 81, 88,
	85, -122, 77, 81, -4, -114,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 321,
	41, 42, 0, 0, 393, 0, 0, 0, 0, 71,
	0, 0, 0, 115, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 34, 415, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 394, 0, 395,
	-2, 0, -2, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 178, 0, 170, 171,
	172, 173, 174, 175, 0, 0, 0, 0, 392, 259,
	321, 405, 0, 0, 0, 0, 390, 176, 177, 0,
	0, 322, 164, -2, 0, 0, 0, 147, 0, 403,
	145, 164, 249, 0, 0, 0, 69, 401, 399, 70,
	0, 393, 72, 0, 0, 0, 93, 94, 0, 116,
	117, 118, 119, 0, 0, 0, 126, 131, 132, 133,
	134, 0, 127, 128, 130, 136, 0, 193, 0, 0,
	32, 33, 35, 165, 168, 0, 416, 0, 3, -2,
	0, 419, 420, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 243, 244, 249, 403, 403, 0,
	419, 420, 0, 0, 406, 237, 247, 248, 0, 0,
	403, 367, 0, 0, 157, 0, 0, 0, 333, 290,
	291, 0, 0, 149, 0, 413, 413, 413, 0, 404,
	0, 250, 329, 252, 0, 337, 317, 319, 315, 316,
	197, 178, 0, 392, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 95, 100, 114, 0,
	120, 121, 0, 0, 0, 137, 171, -2, 0, 0,
	0, 0, 0, 415, 0, 398, 351, 215, -2, -2,
	0, 0, 0, 0, 0, 228, 164, 199, 0, -2,
	0, 0, 238, 239, 240, 241, 242, 245, 246, 196,
	0, 198, 214, 254, 179, 181, 249, 180, 182, 249,
	249, 325, 0, 220, 222, 0, 0, 0, 0, 405,
	124, 0, 249, 0, -2, 0, 162, 0, 0, 164,
	292, 0, 0, 149, -2, 300, 301, 304, 305, 164,
	295, 290, 391, 0, 151, 0, 148, 0, 414, 0,
	0, 146, 251, 253, 0, 0, 249, 403, 403, 403,
	249, 249, 249, 0, 164, 418, 0, 0, 0, 402,
	400, 164, 0, 164, 0, 0, 0, 125, 135, 129,
	138, 0, 0, 36, 37, 0, 321, 46, 47, 48,
	23, 24, 0, 397, 396, 0, 0, 0, 169, 0,
	0, 0, 351, -2, 0, 223, 224, 0, 0, 229,
	-2, 233, 235, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 164, 217, 0, 234, 236, 0, 0,
	0, 0, 368, -2, 139, 0, 160, 156, 203, 209,
	207, 208, 0, 0, 341, 293, 0, 147, 345, 0,
	178, 334, 347, 0, 0, 409, 409, 407, 0, 408,
	411, 412, 302, 0, 407, 0, 0, 149, 153, 0,
	150, 141, 144, 142, 143, 338, 318, 0, 249, 249,
	249, 249, 0, 0, 0, 0, 335, 77, 87, 0,
	83, 80, 0, 0, 92, 0, 99, 0, 0, 107,
	108, 102, 105, 101, 0, 96, 0, -2, 0, 0,
	-2, -2, 0, 0, 164, 0, 0, 0, 352, 0,
	225, 0, 255, 256, 257, 258, 320, 326, 0, 0,
	0, 201, 0, 122, 0, 0, 260, 40, 365, 163,
	158, 160, 0, 0, 205, 210, 211, 339, 0, 327,
	294, 149, 0, 0, 0, 0, 0, 410, 0, 0,
	409, 332, 303, 306, 0, 0, 348, 140, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 78, 88, 89, 0, 0, 0, 85, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 27,
	5, -2, 371, 0, 0, 0, -2, -2, 0, 0,
	38, 0, -2, 226, 323, 227, 216, 0, 0, 123,
	200, 0, 366, 159, 161, 204, 0, 164, 0, 343,
	346, 344, 307, 407, 0, 0, 0, 0, 0, 0,
	154, 152, 0, 255, 256, 257, 258, 260, 0, 0,
	0, 0, 0, 164, 336, 90, 91, 87, 0, 84,
	81, 82, 164, -2, 0, 103, 109, 106, 0, 104,
	0, 0, 355, 0, -2, 0, 0, 0, 0, 0,
	166, 0, 39, 349, 324, 202, 0, 0, 206, 212,
	213, 0, 342, 328, 308, 0, 0, 407, 407, 311,
	0, 0, 178, 0, 276, 0, 0, 0, 0, 0,
	276, 276, 0, 276, 0, 76, 79, 86, 98, 0,
	0, 49, 50, 0, 321, 61, 62, 0, 54, -2,
	-2, 0, 0, 355, -2, 0, 0, 372, -2, 28,
	29, 0, 0, 164, 350, 0, 155, 340, 313, 0,
	309, 0, 312, 296, 249, 298, 299, 0, 274, 155,
	0, 276, 276, 276, 276, 276, 0, 155, 0, 0,
	0, 0, 110, -2, 0, 0, 0, 193, 0, 55,
	0, 0, 0, 0, 0, 356, 0, 45, 369, 30,
	31, 0, 218, 0, 0, 310, 0, 262, 273, 0,
	0, 0, 0, 0, 0, 0, 268, 269, 276, 271,
	276, 7, -2, 375, 0, -2, 0, 0, 111, 112,
	-2, 43, 0, -2, 370, 167, 261, 314, 297, 0,
	277, 263, 264, 265, 266, 267, 0, 0, 359, 0,
	-2, 0, 0, 0, 56, 57, 0, 321, 66, 67,
	68, 0, 0, 0, 44, 353, 156, 270, 272, 0,
	359, -2, 0, 0, 376, -2, 0, -2, 0, 0,
	-2, -2, 113, 354, 275, 0, 0, 0, 360, 0,
	60, 373, 51, 9, -2, 379, 0, 0, 0, 278,
	0, 0, 0, 0, 58, 0, -2, 374, 363, 0,
	-2, 0, 0, 0, 0, 0, 287, 0, 0, 280,
	281, 282, 59, 357, 0, 363, -2, 0, 0, 380,
	-2, 52, 53, 0, 286, 283, 284, 285, 358, 0,
	0, 364, 0, 65, 377, 279, 0, 289, 63, 0,
	-2, 378, 288, 64, 361, 362,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 148, 3, 3, 3, 152, 3, 3,
	149, 150, 144, 147, 153, 146, 154, 151, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 143,
	3, 145,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:222
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:227
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:232
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:259
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:269
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:365
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:369
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:517
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:575
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:597
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:601
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:607
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:611
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:617
		{
			yyVAL.expression = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:621
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:625
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:629
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:633
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:639
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:643
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:647
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:651
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:655
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 97:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:661
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:665
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:669
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:673
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:679
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:685
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:689
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:695
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:701
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:705
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:711
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:715
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:719
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:725
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 111:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:729
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:733
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:737
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:741
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:747
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:751
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:755
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:759
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:763
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:767
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:771
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:777
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:781
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:785
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:791
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:795
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:799
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:803
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:807
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:811
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:815
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:819
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:823
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:827
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:831
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[4].identifier}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:851
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:863
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:873
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:882
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:891
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:902
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:906
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:912
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:918
		{
			yyVAL.queryexpr = nil
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:922
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:928
		{
			yyVAL.queryexpr = nil
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:932
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:938
		{
			yyVAL.queryexpr = nil
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:942
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:948
		{
			yyVAL.queryexpr = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:952
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:958
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:962
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:972
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:982
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:992
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.queryexpr = nil
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 167:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1082
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1086
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1112
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1200
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.token = Token{}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1240
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1271
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1355
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexprs = nil
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1413
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1417
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1444
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1448
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1454
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 261:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1458
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1464
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 263:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 265:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 268:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 269:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 270:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 271:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 272:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1510
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1516
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1520
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = nil
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1537
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1541
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1551
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1562
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1567
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1572
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1588
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 298:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1634
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.queryexpr = nil
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = nil
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 340:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1838
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 342:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1842
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1848
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1870
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1875
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1892
		{
			yyVAL.elseexpr = Else{}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1906
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.elseexpr = Else{}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1922
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1932
		{
			yyVAL.elseexpr = Else{}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1942
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1946
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1952
		{
			yyVAL.elseexpr = Else{}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2032
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2100
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2110
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2122
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2126
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2132
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.token = Token{}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2146
		{
			yyVAL.token = yyDollar[1].token
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.token = Token{}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.token = yyDollar[1].token
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.token = Token{}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2166
		{
			yyVAL.token = yyDollar[1].token
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.token = Token{}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2176
		{
			yyVAL.token = yyDollar[1].token
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2182
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2186
		{
			yyVAL.token = yyDollar[1].token
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.token = Token{}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2196
		{
			yyVAL.token = yyDollar[1].token
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.token = Token{}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2206
		{
			yyVAL.token = yyDollar[1].token
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.token = Token{}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.token = yyDollar[1].token
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2226
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
