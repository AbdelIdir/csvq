// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const UNION = 57406
const INTERSECT = 57407
const EXCEPT = 57408
const ALL = 57409
const ANY = 57410
const EXISTS = 57411
const IN = 57412
const AND = 57413
const OR = 57414
const NOT = 57415
const BETWEEN = 57416
const LIKE = 57417
const IS = 57418
const NULL = 57419
const DISTINCT = 57420
const WITH = 57421
const RANGE = 57422
const UNBOUNDED = 57423
const PRECEDING = 57424
const FOLLOWING = 57425
const CURRENT = 57426
const ROW = 57427
const CASE = 57428
const IF = 57429
const ELSEIF = 57430
const WHILE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const DO = 57435
const END = 57436
const DECLARE = 57437
const CURSOR = 57438
const FOR = 57439
const FETCH = 57440
const OPEN = 57441
const CLOSE = 57442
const DISPOSE = 57443
const PREPARE = 57444
const NEXT = 57445
const PRIOR = 57446
const ABSOLUTE = 57447
const RELATIVE = 57448
const SEPARATOR = 57449
const PARTITION = 57450
const OVER = 57451
const COMMIT = 57452
const ROLLBACK = 57453
const CONTINUE = 57454
const BREAK = 57455
const EXIT = 57456
const ECHO = 57457
const PRINT = 57458
const PRINTF = 57459
const SOURCE = 57460
const EXECUTE = 57461
const CHDIR = 57462
const PWD = 57463
const RELOAD = 57464
const REMOVE = 57465
const SYNTAX = 57466
const TRIGGER = 57467
const FUNCTION = 57468
const AGGREGATE = 57469
const BEGIN = 57470
const RETURN = 57471
const IGNORE = 57472
const WITHIN = 57473
const VAR = 57474
const SHOW = 57475
const TIES = 57476
const NULLS = 57477
const ROWS = 57478
const ONLY = 57479
const CSV = 57480
const JSON = 57481
const FIXED = 57482
const LTSV = 57483
const JSON_ROW = 57484
const JSON_TABLE = 57485
const COUNT = 57486
const JSON_OBJECT = 57487
const AGGREGATE_FUNCTION = 57488
const LIST_FUNCTION = 57489
const ANALYTIC_FUNCTION = 57490
const FUNCTION_NTH = 57491
const FUNCTION_WITH_INS = 57492
const COMPARISON_OP = 57493
const STRING_OP = 57494
const SUBSTITUTION_OP = 57495
const UMINUS = 57496
const UPLUS = 57497

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2640

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 216,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	88, 26,
	90, 26,
	92, 26,
	94, 26,
	156, 26,
	-2, 236,
	-1, 33,
	1, 78,
	88, 78,
	90, 78,
	92, 78,
	94, 78,
	156, 78,
	-2, 248,
	-1, 112,
	17, 216,
	19, 216,
	22, 216,
	24, 216,
	-2, 1,
	-1, 114,
	163, 307,
	-2, 216,
	-1, 123,
	64, 184,
	65, 184,
	66, 184,
	-2, 196,
	-1, 161,
	1, 122,
	88, 122,
	90, 122,
	92, 122,
	94, 122,
	156, 122,
	-2, 230,
	-1, 162,
	1, 163,
	88, 163,
	90, 163,
	92, 163,
	94, 163,
	156, 163,
	-2, 236,
	-1, 167,
	1, 156,
	88, 156,
	90, 156,
	92, 156,
	94, 156,
	156, 156,
	-2, 236,
	-1, 168,
	1, 157,
	88, 157,
	90, 157,
	92, 157,
	94, 157,
	156, 157,
	-2, 236,
	-1, 169,
	1, 158,
	88, 158,
	90, 158,
	92, 158,
	94, 158,
	156, 158,
	-2, 236,
	-1, 170,
	1, 161,
	88, 161,
	90, 161,
	92, 161,
	94, 161,
	156, 161,
	-2, 230,
	-1, 171,
	1, 162,
	88, 162,
	90, 162,
	92, 162,
	94, 162,
	156, 162,
	-2, 236,
	-1, 174,
	1, 169,
	88, 169,
	90, 169,
	92, 169,
	94, 169,
	156, 169,
	-2, 230,
	-1, 175,
	1, 170,
	88, 170,
	90, 170,
	92, 170,
	94, 170,
	156, 170,
	-2, 236,
	-1, 231,
	88, 1,
	92, 1,
	94, 1,
	-2, 216,
	-1, 253,
	162, 353,
	-2, 463,
	-1, 254,
	162, 354,
	-2, 464,
	-1, 255,
	162, 355,
	-2, 465,
	-1, 256,
	162, 356,
	-2, 466,
	-1, 288,
	4, 144,
	134, 144,
	135, 144,
	136, 144,
	138, 144,
	139, 144,
	140, 144,
	141, 144,
	-2, 236,
	-1, 289,
	4, 145,
	134, 145,
	135, 145,
	136, 145,
	138, 145,
	139, 145,
	140, 145,
	141, 145,
	-2, 236,
	-1, 299,
	1, 174,
	88, 174,
	90, 174,
	92, 174,
	94, 174,
	156, 174,
	-2, 236,
	-1, 307,
	94, 4,
	-2, 216,
	-1, 316,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	151, 0,
	158, 0,
	-2, 277,
	-1, 317,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	151, 0,
	158, 0,
	-2, 279,
	-1, 326,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	151, 0,
	158, 0,
	-2, 289,
	-1, 374,
	94, 1,
	-2, 216,
	-1, 390,
	54, 482,
	-2, 399,
	-1, 429,
	1, 80,
	88, 80,
	90, 80,
	92, 80,
	94, 80,
	156, 80,
	-2, 236,
	-1, 430,
	1, 81,
	88, 81,
	90, 81,
	92, 81,
	94, 81,
	156, 81,
	-2, 230,
	-1, 431,
	1, 82,
	88, 82,
	90, 82,
	92, 82,
	94, 82,
	156, 82,
	-2, 236,
	-1, 432,
	1, 83,
	88, 83,
	90, 83,
	92, 83,
	94, 83,
	156, 83,
	-2, 230,
	-1, 433,
	1, 149,
	88, 149,
	90, 149,
	92, 149,
	94, 149,
	156, 149,
	-2, 230,
	-1, 434,
	1, 150,
	88, 150,
	90, 150,
	92, 150,
	94, 150,
	156, 150,
	-2, 236,
	-1, 435,
	1, 151,
	88, 151,
	90, 151,
	92, 151,
	94, 151,
	156, 151,
	-2, 230,
	-1, 436,
	1, 152,
	88, 152,
	90, 152,
	92, 152,
	94, 152,
	156, 152,
	-2, 236,
	-1, 439,
	1, 117,
	88, 117,
	90, 117,
	92, 117,
	94, 117,
	156, 117,
	166, 117,
	-2, 236,
	-1, 444,
	1, 397,
	88, 397,
	90, 397,
	92, 397,
	94, 397,
	156, 397,
	-2, 236,
	-1, 451,
	1, 175,
	88, 175,
	90, 175,
	92, 175,
	94, 175,
	156, 175,
	-2, 236,
	-1, 476,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	151, 0,
	158, 0,
	-2, 290,
	-1, 507,
	94, 1,
	-2, 216,
	-1, 514,
	90, 1,
	92, 1,
	94, 1,
	-2, 216,
	-1, 517,
	1, 206,
	52, 206,
	79, 206,
	88, 206,
	90, 206,
	92, 206,
	94, 206,
	97, 206,
	137, 206,
	156, 206,
	163, 206,
	-2, 236,
	-1, 518,
	1, 211,
	88, 211,
	90, 211,
	92, 211,
	94, 211,
	97, 211,
	98, 211,
	156, 211,
	163, 211,
	-2, 236,
	-1, 551,
	163, 351,
	166, 351,
	-2, 230,
	-1, 593,
	88, 4,
	90, 4,
	92, 4,
	94, 4,
	-2, 216,
	-1, 596,
	94, 4,
	-2, 216,
	-1, 597,
	94, 4,
	-2, 216,
	-1, 679,
	17, 492,
	79, 492,
	162, 492,
	-2, 87,
	-1, 705,
	88, 4,
	92, 4,
	94, 4,
	-2, 216,
	-1, 710,
	94, 4,
	-2, 216,
	-1, 711,
	94, 4,
	-2, 216,
	-1, 734,
	88, 1,
	92, 1,
	94, 1,
	-2, 216,
	-1, 774,
	1, 95,
	88, 95,
	90, 95,
	92, 95,
	94, 95,
	156, 95,
	-2, 230,
	-1, 775,
	1, 96,
	88, 96,
	90, 96,
	92, 96,
	94, 96,
	156, 96,
	-2, 236,
	-1, 777,
	94, 6,
	-2, 216,
	-1, 783,
	163, 128,
	166, 128,
	-2, 236,
	-1, 788,
	94, 4,
	-2, 216,
	-1, 853,
	94, 6,
	-2, 216,
	-1, 854,
	94, 6,
	-2, 216,
	-1, 858,
	94, 4,
	-2, 216,
	-1, 862,
	90, 4,
	92, 4,
	94, 4,
	-2, 216,
	-1, 900,
	88, 6,
	90, 6,
	92, 6,
	94, 6,
	-2, 216,
	-1, 907,
	156, 62,
	-2, 236,
	-1, 946,
	88, 6,
	92, 6,
	94, 6,
	-2, 216,
	-1, 949,
	94, 8,
	-2, 216,
	-1, 956,
	94, 6,
	-2, 216,
	-1, 959,
	88, 4,
	92, 4,
	94, 4,
	-2, 216,
	-1, 986,
	94, 6,
	-2, 216,
	-1, 1019,
	94, 6,
	-2, 216,
	-1, 1023,
	90, 6,
	92, 6,
	94, 6,
	-2, 216,
	-1, 1025,
	88, 8,
	90, 8,
	92, 8,
	94, 8,
	-2, 216,
	-1, 1028,
	94, 8,
	-2, 216,
	-1, 1029,
	94, 8,
	-2, 216,
	-1, 1046,
	88, 8,
	92, 8,
	94, 8,
	-2, 216,
	-1, 1051,
	94, 8,
	-2, 216,
	-1, 1052,
	94, 8,
	-2, 216,
	-1, 1057,
	88, 6,
	92, 6,
	94, 6,
	-2, 216,
	-1, 1062,
	94, 8,
	-2, 216,
	-1, 1077,
	94, 8,
	-2, 216,
	-1, 1081,
	90, 8,
	92, 8,
	94, 8,
	-2, 216,
	-1, 1110,
	88, 8,
	92, 8,
	94, 8,
	-2, 216,
}

const yyPrivate = 57344

const yyLast = 3872

var yyAct = [...]int{

	122, 21, 1076, 1088, 1047, 1018, 947, 1075, 620, 1017,
	857, 346, 519, 120, 115, 33, 706, 856, 922, 565,
	187, 379, 267, 820, 113, 739, 921, 964, 186, 390,
	506, 65, 681, 686, 639, 380, 583, 581, 584, 459,
	26, 1, 162, 415, 248, 163, 164, 385, 167, 168,
	169, 171, 233, 175, 651, 236, 443, 920, 656, 458,
	25, 544, 237, 140, 140, 344, 143, 437, 530, 242,
	529, 180, 563, 184, 172, 525, 389, 505, 100, 341,
	259, 687, 246, 220, 129, 80, 460, 78, 406, 496,
	137, 191, 264, 181, 559, 999, 68, 229, 454, 3,
	988, 214, 890, 395, 185, 291, 213, 213, 770, 297,
	950, 214, 995, 21, 201, 180, 213, 200, 199, 202,
	198, 832, 123, 141, 833, 753, 534, 33, 535, 536,
	531, 528, 149, 235, 532, 484, 727, 232, 466, 1036,
	213, 27, 206, 165, 205, 204, 308, 696, 695, 207,
	208, 239, 26, 698, 230, 670, 699, 680, 671, 288,
	289, 678, 672, 201, 210, 209, 200, 199, 202, 198,
	668, 646, 25, 260, 591, 195, 588, 206, 299, 309,
	206, 482, 205, 204, 207, 208, 266, 207, 208, 977,
	279, 309, 405, 178, 400, 196, 195, 313, 272, 1035,
	1011, 206, 197, 205, 204, 214, 309, 74, 207, 208,
	213, 3, 183, 296, 1010, 1009, 312, 1008, 534, 311,
	535, 536, 531, 528, 541, 1007, 532, 110, 93, 178,
	247, 271, 21, 1006, 309, 101, 981, 533, 268, 378,
	270, 980, 309, 978, 196, 195, 33, 324, 553, 976,
	206, 197, 205, 204, 974, 973, 183, 207, 208, 809,
	963, 111, 962, 944, 941, 891, 855, 338, 834, 831,
	110, 26, 387, 370, 183, 388, 802, 74, 123, 801,
	800, 799, 318, 429, 431, 434, 436, 439, 798, 797,
	324, 25, 439, 444, 794, 772, 769, 444, 444, 762,
	761, 451, 754, 726, 140, 724, 723, 339, 21, 356,
	357, 384, 722, 715, 713, 694, 692, 679, 677, 625,
	366, 450, 33, 618, 421, 617, 663, 616, 604, 575,
	3, 130, 994, 481, 843, 403, 499, 479, 464, 411,
	469, 388, 371, 426, 410, 416, 304, 181, 554, 398,
	305, 408, 409, 448, 449, 303, 497, 975, 412, 442,
	542, 402, 93, 422, 134, 102, 103, 104, 929, 105,
	106, 107, 108, 201, 210, 21, 200, 199, 202, 198,
	580, 928, 517, 518, 927, 926, 925, 924, 896, 33,
	445, 446, 480, 572, 886, 523, 881, 878, 876, 447,
	875, 868, 550, 867, 472, 468, 471, 838, 673, 492,
	493, 622, 600, 562, 26, 130, 510, 126, 540, 503,
	128, 491, 125, 494, 539, 127, 490, 489, 488, 487,
	486, 485, 524, 428, 25, 427, 401, 201, 210, 209,
	200, 199, 202, 198, 138, 578, 549, 133, 502, 234,
	260, 555, 500, 501, 196, 195, 228, 594, 413, 586,
	206, 197, 205, 204, 227, 669, 183, 207, 208, 590,
	132, 595, 388, 3, 470, 217, 132, 425, 546, 414,
	216, 556, 215, 548, 285, 222, 557, 283, 101, 1025,
	601, 558, 564, 560, 561, 273, 900, 571, 573, 568,
	593, 133, 112, 178, 247, 364, 1054, 741, 21, 630,
	644, 879, 877, 138, 743, 21, 815, 874, 196, 195,
	730, 956, 33, 854, 206, 197, 205, 204, 853, 33,
	302, 207, 208, 298, 275, 777, 183, 607, 101, 730,
	183, 664, 613, 614, 615, 935, 933, 26, 806, 629,
	665, 640, 258, 923, 26, 804, 633, 183, 873, 872,
	132, 645, 605, 218, 251, 740, 183, 25, 183, 807,
	219, 871, 870, 365, 25, 869, 805, 608, 609, 610,
	611, 612, 803, 641, 628, 796, 274, 636, 938, 439,
	658, 516, 444, 515, 21, 1109, 424, 21, 21, 284,
	650, 660, 282, 659, 675, 1095, 3, 1085, 33, 624,
	661, 33, 33, 3, 667, 666, 276, 277, 102, 103,
	104, 564, 105, 106, 107, 108, 1084, 674, 1078, 1079,
	1065, 1064, 1056, 564, 642, 676, 738, 1038, 623, 183,
	1032, 564, 1024, 1021, 1052, 689, 569, 958, 702, 955,
	954, 564, 911, 637, 93, 899, 700, 866, 523, 742,
	865, 716, 717, 718, 719, 721, 860, 791, 102, 103,
	104, 790, 105, 106, 107, 108, 746, 720, 733, 627,
	101, 592, 511, 509, 747, 748, 1078, 145, 101, 736,
	1077, 1077, 775, 156, 157, 735, 1051, 1029, 783, 1028,
	766, 949, 711, 452, 710, 744, 21, 597, 789, 596,
	307, 21, 21, 393, 251, 755, 81, 759, 1020, 752,
	33, 1062, 1019, 765, 758, 33, 33, 586, 782, 1019,
	756, 586, 780, 781, 779, 21, 808, 785, 378, 144,
	859, 121, 183, 986, 858, 146, 760, 546, 1110, 33,
	858, 764, 564, 788, 828, 74, 507, 564, 376, 154,
	155, 158, 159, 767, 768, 374, 508, 1112, 173, 147,
	507, 1081, 819, 813, 26, 814, 812, 1057, 21, 823,
	824, 825, 1046, 1023, 959, 946, 862, 179, 734, 21,
	705, 514, 33, 231, 25, 1059, 1048, 961, 948, 211,
	212, 737, 840, 33, 841, 707, 372, 238, 224, 225,
	102, 103, 104, 1102, 105, 106, 107, 108, 102, 103,
	104, 1101, 253, 254, 255, 256, 1083, 396, 1082, 1044,
	203, 179, 918, 3, 917, 864, 121, 863, 892, 883,
	703, 884, 1020, 882, 859, 897, 394, 887, 901, 508,
	173, 1116, 903, 907, 21, 21, 889, 1108, 1073, 21,
	914, 1071, 902, 21, 1055, 1002, 957, 811, 33, 33,
	732, 1099, 906, 33, 1042, 912, 845, 33, 915, 631,
	905, 1107, 1093, 904, 1105, 1106, 893, 1118, 1104, 1092,
	850, 1091, 729, 1014, 931, 301, 183, 931, 74, 265,
	98, 21, 930, 942, 183, 934, 939, 183, 222, 937,
	982, 898, 315, 316, 317, 33, 319, 564, 183, 326,
	221, 329, 330, 331, 332, 333, 334, 335, 1089, 1069,
	1089, 173, 345, 960, 932, 953, 1070, 1103, 952, 1072,
	619, 894, 836, 1000, 829, 367, 74, 21, 931, 987,
	21, 173, 845, 845, 407, 377, 972, 21, 951, 467,
	21, 33, 789, 74, 33, 310, 850, 850, 99, 943,
	262, 33, 835, 321, 33, 564, 183, 320, 322, 363,
	362, 345, 967, 968, 969, 970, 971, 21, 173, 1005,
	423, 1016, 763, 1026, 74, 74, 931, 74, 361, 845,
	292, 33, 360, 1114, 1013, 1087, 1090, 1027, 1090, 183,
	328, 327, 286, 850, 1033, 173, 523, 1034, 657, 826,
	21, 1041, 751, 1037, 21, 750, 21, 749, 1039, 21,
	21, 655, 654, 1012, 33, 382, 996, 474, 33, 476,
	33, 173, 1004, 33, 33, 845, 966, 21, 990, 1063,
	1058, 653, 21, 21, 383, 845, 173, 652, 21, 850,
	987, 33, 534, 21, 535, 536, 33, 33, 810, 850,
	381, 382, 33, 173, 173, 648, 649, 33, 21, 1098,
	1094, 526, 21, 173, 1096, 845, 183, 240, 89, 377,
	965, 691, 33, 512, 690, 420, 33, 293, 697, 850,
	522, 688, 136, 527, 135, 1111, 440, 1115, 417, 418,
	849, 21, 996, 1063, 101, 996, 996, 419, 845, 194,
	1119, 910, 845, 183, 990, 33, 1045, 990, 990, 1049,
	1050, 795, 850, 996, 817, 818, 850, 784, 996, 996,
	111, 101, 261, 262, 263, 990, 778, 1060, 66, 996,
	990, 990, 1066, 1067, 776, 416, 845, 682, 683, 684,
	685, 990, 693, 1080, 996, 306, 393, 251, 996, 5,
	850, 589, 483, 257, 121, 245, 990, 386, 1097, 101,
	990, 399, 1100, 979, 148, 150, 849, 849, 908, 909,
	602, 244, 59, 124, 94, 634, 244, 996, 243, 345,
	101, 173, 404, 295, 294, 251, 173, 173, 173, 990,
	290, 1117, 96, 94, 84, 96, 74, 93, 190, 441,
	131, 626, 193, 67, 139, 1061, 251, 985, 787, 373,
	632, 10, 9, 849, 545, 945, 8, 7, 375, 62,
	182, 342, 343, 392, 102, 103, 104, 142, 105, 106,
	107, 108, 151, 152, 391, 160, 161, 249, 252, 1113,
	1086, 166, 1068, 1053, 88, 170, 61, 174, 60, 176,
	177, 102, 103, 104, 64, 253, 254, 255, 256, 849,
	396, 984, 57, 223, 182, 63, 58, 816, 647, 849,
	323, 1001, 521, 520, 56, 192, 643, 704, 638, 394,
	708, 709, 182, 635, 101, 241, 369, 358, 359, 102,
	103, 104, 226, 105, 106, 107, 108, 6, 20, 849,
	714, 1022, 19, 69, 153, 173, 173, 173, 173, 173,
	102, 103, 104, 101, 253, 254, 255, 256, 17, 728,
	585, 250, 582, 250, 16, 438, 15, 14, 11, 250,
	269, 250, 849, 18, 1040, 13, 849, 538, 1043, 278,
	250, 280, 281, 522, 12, 991, 846, 989, 287, 745,
	173, 101, 844, 337, 455, 453, 131, 4, 2, 0,
	0, 101, 0, 0, 0, 0, 757, 0, 173, 96,
	849, 0, 1074, 0, 325, 201, 210, 209, 200, 199,
	202, 198, 0, 0, 0, 771, 0, 0, 314, 786,
	475, 325, 325, 0, 792, 793, 477, 478, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 336, 0,
	348, 0, 0, 0, 102, 103, 104, 397, 105, 106,
	107, 108, 0, 101, 368, 0, 0, 0, 0, 495,
	93, 397, 201, 210, 209, 200, 199, 202, 198, 250,
	250, 0, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 0, 250, 250, 0, 0, 196, 195, 0, 348,
	0, 0, 206, 197, 205, 204, 0, 0, 0, 207,
	208, 504, 861, 0, 182, 0, 0, 430, 432, 433,
	435, 102, 103, 104, 0, 105, 106, 107, 108, 0,
	250, 102, 103, 104, 325, 105, 106, 107, 108, 0,
	325, 325, 0, 463, 0, 465, 880, 0, 0, 0,
	0, 0, 0, 196, 195, 0, 0, 0, 885, 206,
	197, 205, 204, 0, 0, 0, 207, 208, 298, 0,
	173, 0, 0, 325, 498, 498, 498, 0, 0, 0,
	0, 0, 913, 0, 182, 121, 916, 0, 543, 0,
	0, 0, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 0, 0, 0, 0, 567, 621, 397, 101, 0,
	0, 0, 0, 0, 576, 0, 579, 397, 348, 131,
	0, 131, 131, 0, 0, 940, 537, 0, 0, 250,
	0, 0, 0, 0, 547, 250, 551, 0, 0, 250,
	250, 0, 0, 0, 0, 0, 0, 0, 547, 566,
	621, 0, 570, 547, 547, 574, 0, 0, 0, 577,
	566, 0, 0, 587, 0, 0, 0, 0, 201, 210,
	209, 200, 199, 202, 198, 0, 534, 0, 535, 536,
	531, 528, 888, 1003, 532, 377, 0, 182, 0, 0,
	0, 0, 0, 201, 210, 209, 200, 199, 202, 198,
	0, 598, 599, 173, 0, 566, 0, 0, 0, 0,
	325, 0, 0, 372, 0, 0, 0, 348, 606, 0,
	0, 201, 210, 209, 200, 199, 202, 198, 725, 0,
	121, 201, 210, 209, 200, 199, 202, 198, 102, 103,
	104, 522, 105, 106, 107, 108, 397, 0, 0, 196,
	195, 0, 513, 0, 325, 206, 197, 205, 204, 0,
	0, 936, 207, 208, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 662, 196, 195, 0, 547, 0, 0,
	206, 197, 205, 204, 0, 377, 0, 207, 208, 547,
	712, 0, 0, 0, 0, 0, 0, 547, 0, 0,
	0, 0, 196, 195, 570, 0, 0, 547, 206, 197,
	205, 204, 196, 195, 731, 207, 208, 0, 206, 197,
	205, 204, 0, 0, 701, 207, 208, 0, 0, 0,
	0, 0, 325, 0, 0, 0, 621, 0, 0, 0,
	201, 210, 209, 200, 199, 202, 198, 534, 0, 535,
	536, 531, 528, 821, 822, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 250,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 0, 0, 250, 547, 0,
	0, 0, 0, 547, 0, 566, 0, 0, 0, 547,
	547, 196, 195, 0, 0, 773, 774, 206, 197, 205,
	204, 0, 0, 0, 207, 208, 0, 0, 621, 0,
	325, 0, 0, 0, 830, 621, 0, 0, 0, 0,
	0, 0, 837, 0, 0, 839, 0, 0, 0, 0,
	0, 0, 397, 397, 397, 0, 842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 603, 209,
	200, 199, 202, 198, 250, 250, 250, 0, 827, 0,
	0, 0, 0, 201, 473, 209, 200, 199, 202, 198,
	0, 0, 0, 621, 0, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 895, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 325, 0, 0, 0, 0, 0, 0, 325,
	0, 0, 0, 0, 0, 0, 0, 919, 196, 195,
	0, 250, 0, 0, 206, 197, 205, 204, 0, 0,
	0, 207, 208, 547, 196, 195, 0, 0, 0, 0,
	206, 197, 205, 204, 0, 0, 0, 207, 208, 0,
	0, 621, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 566, 0, 621, 0, 0, 0, 0, 0, 0,
	0, 547, 0, 0, 983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 75, 76, 77,
	0, 98, 79, 93, 96, 94, 95, 22, 71, 0,
	0, 0, 35, 36, 0, 0, 0, 0, 0, 28,
	0, 1015, 111, 0, 29, 44, 0, 30, 0, 0,
	0, 0, 0, 0, 0, 997, 998, 0, 0, 0,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 91, 0, 0, 0, 99,
	0, 74, 0, 0, 0, 0, 0, 325, 993, 992,
	0, 851, 0, 0, 1030, 1031, 0, 32, 97, 348,
	39, 37, 38, 34, 40, 0, 0, 0, 0, 0,
	0, 0, 42, 43, 461, 462, 0, 47, 48, 49,
	50, 41, 52, 53, 54, 45, 51, 55, 0, 0,
	0, 852, 0, 0, 31, 46, 102, 103, 104, 0,
	105, 106, 107, 108, 110, 0, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 83, 92, 70, 101, 75, 76, 77, 0,
	98, 79, 93, 96, 94, 95, 22, 71, 0, 0,
	0, 35, 36, 0, 0, 0, 0, 0, 28, 0,
	0, 111, 0, 29, 44, 0, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 0,
	74, 0, 0, 0, 0, 0, 0, 457, 456, 0,
	72, 0, 0, 0, 0, 0, 32, 97, 0, 39,
	37, 38, 34, 40, 0, 0, 0, 0, 0, 0,
	0, 42, 43, 461, 462, 73, 47, 48, 49, 50,
	41, 52, 53, 54, 45, 51, 55, 0, 0, 0,
	0, 0, 0, 31, 46, 102, 103, 104, 0, 105,
	106, 107, 108, 110, 0, 87, 85, 86, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 83, 92, 70, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 22, 71, 0, 0, 0,
	35, 36, 0, 0, 0, 0, 0, 28, 0, 0,
	111, 0, 29, 44, 0, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 74,
	0, 0, 0, 0, 0, 0, 848, 847, 0, 851,
	0, 0, 0, 0, 0, 32, 97, 0, 39, 37,
	38, 34, 40, 0, 0, 0, 0, 0, 0, 0,
	42, 43, 0, 0, 0, 47, 48, 49, 50, 41,
	52, 53, 54, 45, 51, 55, 0, 0, 0, 852,
	0, 0, 31, 46, 102, 103, 104, 0, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 92, 70, 101, 75, 76, 77, 0, 98, 79,
	93, 96, 94, 95, 22, 71, 0, 0, 0, 35,
	36, 0, 0, 0, 0, 0, 28, 0, 0, 111,
	0, 29, 44, 0, 30, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 74, 0,
	0, 0, 0, 0, 0, 24, 23, 0, 72, 0,
	0, 0, 0, 0, 32, 97, 0, 39, 37, 38,
	34, 40, 0, 0, 0, 0, 0, 0, 0, 42,
	43, 0, 0, 73, 47, 48, 49, 50, 41, 52,
	53, 54, 45, 51, 55, 0, 0, 0, 0, 0,
	0, 31, 46, 102, 103, 104, 0, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 70, 101, 75, 76, 77, 0, 98, 79, 93,
	96, 94, 95, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 111, 0,
	0, 0, 0, 0, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	350, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	110, 0, 351, 85, 349, 352, 353, 354, 355, 0,
	0, 0, 0, 0, 0, 347, 0, 82, 83, 92,
	70, 340, 350, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 110, 0, 351, 85, 349, 352, 353, 354,
	355, 0, 0, 0, 0, 0, 0, 347, 0, 82,
	83, 92, 70, 101, 75, 76, 77, 0, 98, 79,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 189, 97, 0, 0, 0,
	0, 350, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 110, 0, 351, 85, 349, 352, 353, 354, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 70, 188, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 92, 70, 101, 75, 76, 77, 0, 98, 79,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 265, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 118, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 82, 83,
	92, 70, 118, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 92, 70, 101, 75, 76, 77, 0, 98, 79,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 74, 0,
	0, 0, 0, 0, 0, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 118, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 70, 118, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 92, 70, 101, 75, 76, 77, 0, 98, 79,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	552, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 118, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 114, 118, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 92, 70, 101, 75, 300, 77, 0, 98, 79,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 70,
}
var yyPact = [...]int{

	2599, -1000, 346, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3519, 3360, -1000, -1000, 398, 339, 1068,
	1066, 351, 1439, -1000, 643, 1200, 1181, 1584, 1584, 656,
	1584, 3360, -1000, -1000, 3360, 3360, 1377, 3360, 3360, 3360,
	3360, 3360, 3360, -1000, 1584, 1584, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 350, -1000, -1000, -1000, -1000,
	3329, -1000, 2980, 1212, 1088, -1000, -1000, -1000, -1000, -1000,
	-1000, 1750, 3360, 3360, -51, 320, 318, 313, -1000, 412,
	308, 3360, 3360, -1000, -1000, -1000, -1000, 1584, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 302,
	294, -70, 2599, 702, 3329, -1000, 287, 285, 282, 3360,
	717, 1750, -1000, 1042, 1173, 1150, 1196, 1148, 534, 1078,
	821, -1000, 819, 3360, 1196, 1584, 1196, -1000, 821, 32,
	342, -1000, 490, -1000, 1584, 1175, 1584, 1584, 444, 441,
	-1000, 950, -1000, 1584, -1000, -1000, -1000, -1000, 3360, 3360,
	1192, 43, 938, 1054, 1186, -1000, 1185, -1000, -1000, 47,
	-51, -1000, -1000, 1382, -51, -1000, -1000, 3709, 3360, 367,
	192, 183, 187, 314, 617, 76, 895, 1206, 282, -1000,
	-1000, -1000, 31, 1584, -1000, 3360, 3360, 3360, 835, 3360,
	903, 85, 3360, 943, 3360, 3360, 3360, 3360, 3360, 3360,
	3360, -1000, -1000, 1367, 3170, 2758, 821, 821, 85, 85,
	928, 912, -1000, -1000, 44, -1000, 429, 821, 3360, 1300,
	-1000, 2599, 183, 179, 3360, 716, 673, 666, 3360, 1019,
	1006, 1178, 1154, 1206, 684, 1196, 1161, 28, -1000, -1000,
	-1000, -1000, 274, -1000, -1000, -1000, -1000, 1196, 684, 1184,
	26, 887, 887, 887, 2790, -1000, 176, -1000, 296, 317,
	1075, 3360, 1206, 3360, 499, 315, 273, 271, -1000, -1000,
	-1000, -1000, 3360, 3360, 3360, 3360, 3360, 1081, -1000, -1000,
	1214, 3360, 3360, 1203, 1203, 1196, 3360, 3360, 3360, -1000,
	3360, 1750, -1000, -1000, -1000, -1000, 1178, 2281, 1584, 1206,
	1584, 68, 889, 1088, 312, -15, 23, 23, 891, 1903,
	3360, 85, 3360, -1000, 3329, -1000, 23, 85, 85, 20,
	20, -1000, -1000, -1000, 303, 44, -1000, -1000, 174, 3360,
	-1000, 170, 15, 1144, -1000, 1750, -1000, -1000, -27, 269,
	268, 267, 266, 265, 264, 259, 3360, 3139, -1000, -1000,
	85, 194, 194, 194, 835, -1000, 3360, 1325, -1000, -1000,
	678, -1000, 3360, 589, 2599, 588, 3360, 1641, 700, 496,
	493, 3360, 3360, 2949, 1154, 1035, 3360, -1000, 13, -1000,
	71, 1329, -1000, -1000, 1137, -1000, 256, -1000, 198, 1110,
	1196, 3550, 186, 1154, 684, 1175, 314, -1000, 314, 314,
	-1000, -1000, 251, 1110, 1584, 819, -1000, 484, 231, 1110,
	1584, 166, -1000, 1750, 676, 1584, 819, 217, 1584, -1000,
	-51, -1000, -51, -51, -1000, -51, -1000, -1000, 10, 1143,
	1206, -1000, -1000, -1000, 8, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 587, 344, -1000, -1000, 3519, 3360, -1000, -1000,
	-1000, -1000, -1000, 616, -1000, 614, 1584, 1584, -1000, 250,
	1584, -1000, -1000, 3360, 1887, -1000, 23, -1000, -1000, -1000,
	165, -1000, 2790, 1584, 3170, 821, 821, 821, 821, 3360,
	3360, 3360, 164, 162, 160, 869, -1000, 128, -1000, 249,
	-1000, -1000, 539, 156, 3360, 585, 664, 2599, 3360, 793,
	-1000, -1000, 1750, 3360, 2599, 1176, 550, 498, 425, -1000,
	5, 1026, 1750, -1000, 1035, 1010, 1003, 1750, 978, 977,
	962, 962, 1007, 684, -1000, -1000, -1000, -1000, 1584, 163,
	3360, 85, 1110, -1000, 1178, 4, 307, -60, -1000, -8,
	-4, -51, -70, 246, 1110, -1000, 1154, -1000, 905, -1000,
	-1000, 905, 1110, 155, -5, 154, -9, -1000, 1120, 1584,
	1060, -1000, 1110, 1051, 1048, -1000, -1000, -1000, 153, -1000,
	1134, 152, -18, -1000, -1000, -19, 1057, -10, 3360, 1584,
	-1000, 3360, 751, 2281, 699, 715, 2281, 2281, 611, 609,
	819, 151, 44, 3360, -1000, -1000, -1000, 150, 3360, 3360,
	3360, 3139, 3360, 149, 143, 142, -1000, -1000, -1000, 85,
	140, -30, 3360, -1000, 812, 389, 1631, 783, 584, -1000,
	697, -1000, 1603, 711, -1000, 3360, -1000, -1000, 428, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2949, 379, -1000, -1000,
	1010, -1000, 3360, 3360, 684, 684, 973, -1000, 971, 968,
	962, -1000, -1000, -1000, -41, -1000, 139, 1154, 1110, 3360,
	-1000, 3360, 1175, 1110, 137, -1000, 136, 930, 1110, 1127,
	1584, -1000, -1000, -1000, 1110, 1110, 133, -58, 3360, 132,
	1584, 3360, 1126, 407, 1118, 1206, 1206, 3360, 1109, 1206,
	-1000, -1000, -1000, -1000, -1000, 2281, 661, 3360, 577, 573,
	2281, 2281, 131, 1103, 44, 476, 126, 125, 118, 117,
	116, 113, 473, 446, 439, -1000, -1000, 85, 93, -1000,
	1022, -1000, -1000, 780, 2599, -1000, -1000, 3360, 498, 983,
	-1000, 382, -1000, 1097, 1042, 1750, -1000, 1007, 1772, 684,
	684, 684, 965, 3360, 918, -1000, -1000, 1750, 106, -42,
	105, 910, 916, 245, -1000, 819, -1000, -1000, -1000, 1120,
	1584, 1750, -1000, -1000, -51, -1000, 819, 2440, 400, -1000,
	-1000, -1000, 1057, -1000, 395, 103, 652, 572, 2281, 695,
	748, 746, 566, 563, -1000, 241, 239, 466, 463, 462,
	450, 449, 408, 238, 236, 377, 235, 376, -1000, 3360,
	234, -1000, 761, 428, -1000, -1000, -1000, -1000, -1000, 1019,
	-1000, 3360, 232, 1772, 1601, 1007, 684, -61, 102, 85,
	-1000, -1000, -1000, 3360, 915, 226, 85, -1000, 1110, -1000,
	-1000, -1000, -1000, 561, 340, -1000, -1000, 3519, 3360, -1000,
	-1000, 2980, 3360, 2440, 2440, 1093, 558, 658, 2281, 3360,
	792, -1000, 2281, -1000, -1000, 745, 743, 819, 445, 225,
	224, 223, 222, 219, 206, 445, 445, 437, 445, 436,
	1578, 1042, -1000, -1000, 491, 1750, 1584, -1000, 3360, 1007,
	-1000, -1000, -1000, 101, 85, -1000, 1110, -1000, 100, -1000,
	2440, 694, 708, 608, 40, 888, 1206, -1000, 556, 555,
	393, 779, 553, -1000, 693, -1000, 707, -1000, -1000, 99,
	97, -1000, 1045, 998, 445, 445, 445, 445, 445, 445,
	92, 1042, 91, 195, 86, 27, -1000, 80, 1164, 78,
	1750, -1000, -1000, 73, 884, -1000, 2440, 651, 3360, 2122,
	1584, 1584, 25, 873, -1000, -1000, 2440, -1000, 778, 2281,
	-1000, 3360, -1000, -1000, -1000, 994, 3360, 70, 62, 54,
	52, 51, 37, -1000, -1000, 445, -1000, 445, -1000, -1000,
	-1000, 867, 85, -1000, 630, 549, 2440, 692, 548, 333,
	-1000, -1000, 3519, 3360, -1000, -1000, -1000, 606, 604, 1584,
	1584, 546, -1000, 756, 2949, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 36, -24, 85, -1000, -1000, 543, 637, 2440,
	3360, 788, -1000, 2440, 740, 2122, 691, 706, 2122, 2122,
	603, 551, -1000, -1000, 370, -1000, -1000, -1000, 777, 538,
	-1000, 686, -1000, 705, -1000, -1000, 2122, 629, 3360, 537,
	536, 2122, 2122, -1000, 855, -1000, 771, 2440, -1000, 3360,
	598, 535, 2122, 680, 739, 737, 532, 513, -1000, 924,
	809, 807, 797, -1000, 754, 511, 599, 2122, 3360, 785,
	-1000, 2122, -1000, -1000, 732, 724, 866, 806, -1000, 802,
	796, -1000, -1000, -1000, -1000, 770, 501, -1000, 657, -1000,
	677, -1000, -1000, 922, -1000, -1000, -1000, -1000, -1000, 764,
	2122, -1000, 3360, -1000, 804, -1000, -1000, 540, -1000, -1000,
}
var yyPgo = [...]int{

	0, 41, 703, 334, 100, 98, 86, 1378, 59, 20,
	39, 1377, 1375, 1374, 1372, 332, 112, 1367, 1366, 1365,
	1364, 1355, 1353, 1348, 81, 33, 32, 1347, 1346, 1345,
	67, 1344, 38, 1342, 1340, 36, 37, 1338, 1324, 1323,
	1322, 1318, 1169, 1317, 94, 84, 1165, 1305, 69, 47,
	75, 54, 27, 21, 25, 1303, 1298, 34, 1296, 35,
	141, 1295, 91, 1294, 87, 85, 78, 716, 0, 65,
	1088, 8, 12, 1293, 1292, 1288, 1287, 1192, 1286, 89,
	1285, 1282, 1274, 52, 1268, 1266, 1264, 11, 26, 57,
	18, 1263, 1262, 3, 1260, 1259, 44, 1258, 1257, 103,
	80, 82, 1254, 29, 1243, 23, 1242, 1241, 1239, 13,
	62, 1238, 72, 22, 56, 76, 19, 79, 1237, 1236,
	1234, 61, 1232, 1231, 30, 77, 10, 17, 5, 9,
	2, 7, 55, 1229, 16, 1228, 6, 1227, 4, 1225,
	1214, 31, 28, 14, 1224, 90, 1148, 1223, 96, 92,
	83, 70, 58, 68, 88, 1222, 43, 830,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 43, 43,
	44, 44, 44, 44, 45, 45, 46, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	53, 54, 54, 54, 55, 55, 56, 56, 57, 57,
	57, 58, 58, 58, 59, 59, 60, 60, 61, 61,
	62, 62, 63, 63, 63, 63, 63, 63, 64, 65,
	66, 66, 66, 66, 66, 67, 67, 67, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 69, 70, 70, 70, 71,
	71, 72, 72, 73, 73, 74, 74, 75, 75, 75,
	76, 76, 77, 78, 79, 79, 79, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 81, 81, 81, 81,
	81, 81, 81, 82, 82, 82, 82, 83, 83, 84,
	84, 84, 84, 84, 85, 85, 85, 85, 85, 85,
	86, 86, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 88, 89, 89, 90, 90, 91,
	91, 92, 92, 92, 93, 93, 93, 94, 94, 95,
	95, 96, 96, 97, 97, 97, 97, 98, 98, 98,
	98, 99, 99, 102, 102, 102, 102, 103, 103, 103,
	103, 103, 103, 104, 104, 104, 104, 104, 104, 105,
	105, 106, 106, 107, 107, 107, 108, 109, 109, 110,
	110, 111, 111, 112, 112, 113, 113, 114, 114, 115,
	115, 100, 100, 101, 101, 116, 116, 117, 117, 118,
	118, 118, 118, 119, 120, 121, 121, 122, 122, 122,
	122, 122, 122, 122, 122, 123, 123, 124, 124, 125,
	125, 126, 126, 127, 127, 128, 128, 129, 129, 130,
	130, 131, 131, 132, 132, 133, 133, 134, 134, 135,
	135, 136, 136, 137, 137, 138, 138, 139, 139, 140,
	140, 140, 140, 140, 140, 140, 140, 141, 142, 142,
	143, 144, 144, 145, 145, 146, 147, 148, 149, 149,
	150, 150, 151, 151, 152, 152, 153, 153, 154, 154,
	155, 155, 156, 156, 157, 157,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 9, 11,
	5, 4, 4, 4, 1, 1, 3, 2, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 1, 6,
	5, 0, 1, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 6, 9,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 3, 1, 6, 1,
	3, 1, 3, 2, 4, 1, 1, 0, 1, 1,
	1, 1, 3, 3, 3, 1, 6, 3, 3, 3,
	3, 4, 4, 5, 6, 6, 3, 4, 4, 3,
	4, 4, 4, 4, 4, 2, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 2, 2, 0, 1, 4,
	3, 4, 4, 4, 5, 5, 5, 5, 5, 1,
	5, 10, 8, 9, 9, 9, 9, 9, 9, 8,
	8, 10, 8, 10, 2, 1, 5, 0, 3, 2,
	5, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 4, 6, 6,
	8, 1, 1, 1, 6, 6, 1, 1, 2, 3,
	1, 1, 3, 4, 5, 6, 7, 5, 6, 2,
	4, 1, 1, 1, 3, 1, 5, 0, 1, 4,
	5, 0, 2, 1, 3, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 6,
	9, 5, 8, 7, 3, 1, 3, 10, 13, 9,
	12, 9, 12, 8, 11, 5, 6, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 0, 1,
	0, 1, 0, 1, 0, 1, 1, 1, 0, 1,
	0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -43, -118, -119, -122,
	-123, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 87, 86, -8, -10, -60, 27, 32,
	35, 132, 95, -143, 101, 20, 21, 99, 100, 98,
	102, 119, 110, 111, 33, 123, 133, 115, 116, 117,
	118, 124, 120, 121, 122, 125, -63, -81, -78, -77,
	-84, -85, -108, -80, -82, -141, -146, -147, -148, -39,
	162, 16, 89, 114, 79, 5, 6, 7, -64, 10,
	-65, -67, 159, 160, -140, 145, 146, 144, -86, -70,
	69, 73, 161, 11, 13, 14, 12, 96, 9, 77,
	-66, 4, 134, 135, 136, 138, 139, 140, 141, 147,
	142, 30, 156, -68, 162, -143, 87, 27, 132, 86,
	-109, -67, -68, -44, -46, 24, 19, 27, 22, -45,
	17, -77, 162, 162, 25, 36, 36, -145, 162, -144,
	-141, -145, -140, -141, 96, 44, 102, 126, -146, -148,
	-146, -140, -140, -38, 103, 104, 37, 38, 105, 106,
	-140, -140, -68, -68, -68, -148, -140, -68, -68, -68,
	-140, -68, -113, -67, -140, -68, -140, -140, 153, -67,
	-68, -113, -42, -60, -68, -141, -142, -9, 132, 95,
	6, -62, -61, -155, 31, 152, 151, 158, 76, 74,
	73, 70, 75, -157, 160, 159, 157, 164, 165, 72,
	71, -67, -67, 167, 162, 162, 162, 162, 151, 158,
	-150, -157, 73, -77, -67, -67, -140, 162, 162, 167,
	-1, 91, -113, -83, 162, -109, -132, -110, 90, -52,
	45, -47, -48, 25, 18, 25, -101, -99, -96, -98,
	-140, 30, -97, 138, 139, 140, 141, 25, 18, -100,
	-96, 64, 65, 66, -149, 78, -83, -113, -99, -140,
	-99, -149, 166, 153, 96, 44, 126, 127, -140, -96,
	-140, -140, 158, 43, 158, 43, 62, -140, -68, -68,
	18, 62, 62, 43, 18, 18, 166, 62, 166, -68,
	6, -67, 163, 163, 163, 163, -46, 93, 70, 166,
	70, -141, -142, 166, -140, -67, -67, -67, -150, -67,
	74, 70, 75, -70, 162, -77, -67, 68, 67, -67,
	-67, -67, -67, -67, -67, -67, -140, 6, -83, -149,
	163, -117, -107, -106, -69, -67, -87, 157, -140, 146,
	132, 144, 147, 148, 149, 150, -149, -149, -70, -70,
	74, 70, 68, 67, 76, 144, -149, -67, -140, 6,
	-1, 163, 90, -133, 92, -111, 92, -67, -68, -53,
	-59, 51, 52, 48, -48, -49, 23, -142, -141, -115,
	-103, -102, -104, 29, 162, -99, 143, -77, -99, 20,
	166, 162, -99, -115, 18, 166, -154, 67, -154, -154,
	-117, 163, 62, 162, 162, -156, 28, 33, 34, 42,
	20, -83, -145, -67, 97, 162, 28, 162, 162, -68,
	-140, -68, -140, -140, -68, -140, -68, -30, -29, -68,
	25, 5, -30, -114, -68, -148, -148, -99, -114, -114,
	-113, -68, -2, -12, -5, -13, 87, 86, -8, -10,
	-6, 112, 113, -140, -142, -140, 70, 70, -62, 28,
	162, -64, -65, 71, -67, -70, -67, -70, -70, 163,
	-83, 163, 166, 28, 162, 162, 162, 162, 162, 162,
	162, 162, -83, -83, -69, -70, -79, 162, -77, 142,
	-79, -79, -150, -83, 166, -125, -124, 92, 88, 94,
	-1, 94, -67, 91, 91, 97, 98, -68, -68, -72,
	-73, -74, -67, -87, -49, -50, 46, -67, 60, -151,
	-153, 59, 63, 166, 55, 57, 58, -140, 28, -103,
	162, 26, 162, -42, -121, -120, -66, -140, -101, -96,
	-68, -140, 30, 62, 162, -49, -115, -100, -45, -44,
	-45, -45, 162, -112, -66, -116, -140, -42, -24, 162,
	-140, -66, 162, -66, -140, 163, -42, -140, -116, -42,
	163, -36, -33, -35, -32, -34, -141, -140, 166, 28,
	-142, 166, 94, 156, -68, -109, 93, 93, -140, -140,
	162, -116, -67, 71, 163, -117, -140, -83, -149, -149,
	-149, -149, -149, -83, -83, -83, 163, 163, 163, 71,
	-71, -70, 162, 99, 70, 163, -67, 94, -125, -1,
	-68, 86, -67, -1, 19, -55, 37, 103, -56, -57,
	53, 85, 136, -58, 85, 136, 166, -75, 49, 50,
	-50, -51, 47, 48, 54, 54, -152, 56, -152, -151,
	-153, -115, -140, 163, -68, -71, -112, -48, 166, 158,
	163, 166, 166, 162, -112, -49, -112, 163, 166, 163,
	166, -26, 37, 38, 39, 40, -25, -24, 41, -112,
	43, 43, 163, 28, 163, 166, 166, 41, 163, 166,
	-30, -140, -114, 89, -2, 91, -134, 90, -2, -2,
	93, 93, -42, 163, -67, 163, -83, -83, -83, -83,
	-69, -83, 163, 163, 163, -70, 163, 166, -67, 80,
	131, 163, 87, 94, 91, -110, -132, 90, -68, -54,
	137, 79, -72, 135, -51, -67, -113, -103, -103, 54,
	54, 54, -152, 166, 163, -49, -121, -67, -83, -96,
	-112, 163, 163, 62, -112, -156, -116, -66, -66, 163,
	166, -67, 163, -140, -140, -68, 28, 128, 28, -32,
	-35, -35, -141, -68, 28, -36, -2, -135, 92, -68,
	94, 94, -2, -2, 163, 28, 109, 163, 163, 163,
	163, 163, 163, 109, 109, 130, 109, 130, -71, 166,
	46, 87, -1, -57, -59, 134, -76, 37, 38, -52,
	-105, 61, 62, -103, -103, -103, 54, -140, -68, 26,
	-42, 163, 163, 166, 163, 62, 26, -42, 162, -42,
	-26, -25, -42, -3, -14, -5, -18, 87, 86, -15,
	-16, 89, 129, 128, 128, 163, -127, -126, 92, 88,
	94, -2, 91, 89, 89, 94, 94, 162, 162, 109,
	109, 109, 109, 109, 109, 162, 162, 135, 162, 135,
	-67, 162, -124, -54, -53, -67, 162, -105, 61, -103,
	163, 163, -71, -83, 26, -42, 162, -71, -112, 94,
	156, -68, -109, -68, -141, -142, -9, -68, -3, -3,
	28, 94, -127, -2, -68, 86, -2, 89, 89, -42,
	-89, -88, -90, 108, 162, 162, 162, 162, 162, 162,
	-88, -90, -89, 109, -88, 109, 163, -52, 97, -116,
	-67, 163, -71, -112, 163, -3, 91, -136, 90, 93,
	70, 70, -141, -142, 94, 94, 128, 87, 94, 91,
	-134, 90, 163, 163, -52, 45, 48, -89, -89, -89,
	-89, -89, -88, 163, 163, 162, 163, 162, 163, 19,
	163, 163, 26, -42, -3, -137, 92, -68, -4, -17,
	-5, -19, 87, 86, -15, -16, -6, -140, -140, 70,
	70, -3, 87, -2, 48, -113, 163, 163, 163, 163,
	163, 163, -89, -88, 26, -42, -71, -129, -128, 92,
	88, 94, -3, 91, 94, 156, -68, -109, 93, 93,
	-140, -140, 94, -126, -72, 163, 163, -71, 94, -129,
	-3, -68, 86, -3, 89, -4, 91, -138, 90, -4,
	-4, 93, 93, -91, 136, 87, 94, 91, -136, 90,
	-4, -139, 92, -68, 94, 94, -4, -4, -92, 74,
	81, 6, 84, 87, -3, -131, -130, 92, 88, 94,
	-4, 91, 89, 89, 94, 94, -94, 81, -93, 6,
	84, 82, 82, 85, -128, 94, -131, -4, -68, 86,
	-4, 89, 89, 71, 82, 82, 83, 85, 87, 94,
	91, -138, 90, -95, 81, -93, 87, -4, 83, -130,
}
var yyDef = [...]int{

	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 387, 46, 47, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 139,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 171, 0, 0, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 249, 250, 251, 252,
	216, 254, 0, 39, 490, 222, 223, 224, 225, 226,
	227, 0, 0, 0, 230, 0, 0, 0, 319, 480,
	0, 0, 0, 467, 475, 476, 477, 0, 228, 229,
	235, 459, 460, 461, 462, 463, 464, 465, 466, 0,
	0, 0, -2, 236, -2, 248, 0, 0, 0, 387,
	0, 388, 236, -2, 188, 0, 0, 0, 0, 0,
	478, 185, 216, 307, 0, 0, 0, 76, 478, 473,
	471, 77, 0, 79, 0, 0, 0, 0, 0, 0,
	84, 108, 110, 0, 140, 141, 142, 143, 0, 0,
	0, -2, -2, 236, 236, 155, 167, -2, -2, -2,
	-2, -2, 166, 395, -2, -2, 172, 173, 0, 0,
	236, 0, 0, 0, 236, 247, 0, 0, 37, 38,
	40, 217, 220, 0, 491, 0, 494, 495, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 302, 0, 307, 0, 478, 478, 494, 495,
	0, 0, 481, 295, 305, 306, 0, 478, 0, 0,
	3, -2, 0, 0, 307, 0, 445, 391, 0, 214,
	0, 188, 190, 0, 0, 0, 0, 403, 361, 362,
	351, 352, 0, -2, -2, -2, -2, 0, 0, 0,
	401, 488, 488, 488, 0, 479, 0, 308, 0, 492,
	0, 307, 0, 0, 0, 0, 0, 0, 111, 116,
	124, 138, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	223, 470, 237, 253, 256, 272, 188, -2, 0, 0,
	0, 0, 0, 490, 0, 273, -2, -2, 0, 0,
	0, 0, 0, 286, 216, 257, -2, 0, 0, 296,
	297, 298, 299, 300, 303, 304, 231, 233, 0, 307,
	310, 0, 407, 383, 385, 381, 382, 255, 230, 0,
	0, 0, 0, 0, 0, 0, 307, 307, 278, 280,
	0, 0, 0, 0, 480, 148, 307, 0, 232, 234,
	429, 312, 0, 0, -2, 0, 0, 0, 236, 176,
	198, 0, 0, 0, 190, 192, 0, 187, 468, 189,
	-2, 367, 370, 371, 216, 363, 0, 366, 216, 0,
	0, 0, 0, 190, 0, 0, 0, 489, 0, 0,
	186, 313, 0, 0, 0, 216, 493, 0, 0, 0,
	0, 0, 474, 472, 216, 0, 216, 0, 0, -2,
	-2, -2, -2, -2, -2, -2, -2, 109, 119, -2,
	0, 121, 123, 164, -2, 153, 154, 168, 159, 160,
	396, -2, 0, 0, 41, 42, 0, 387, 51, 52,
	53, 28, 29, 0, 469, 0, 0, 0, 221, 0,
	0, 281, 282, 0, 0, 287, -2, 291, 293, 309,
	0, 311, 0, 0, 307, 478, 478, 478, 478, 307,
	307, 307, 0, 0, 0, 0, 288, 216, 275, 0,
	292, 294, 0, 0, 0, 0, 429, -2, 0, 0,
	446, 386, 392, 0, -2, 0, 0, -2, -2, 197,
	261, 267, 265, 266, 192, 194, 0, 191, 0, 0,
	484, 484, 482, 0, 483, 486, 487, 368, 0, 482,
	0, 0, 0, 411, 188, 415, 0, 230, 404, 0,
	236, -2, 352, 0, 0, 425, 190, 402, 181, 184,
	182, 183, 0, 0, 393, 0, 405, 89, 101, 0,
	97, 92, 0, 0, 0, 316, 106, 107, 0, 115,
	0, 0, 131, 132, 126, 129, 125, 0, 0, 0,
	112, 0, 0, -2, 236, 0, -2, -2, 0, 0,
	216, 0, 283, 0, 314, 408, 384, 0, 307, 307,
	307, 307, 307, 0, 0, 0, 315, 317, 318, 0,
	0, 259, 0, 146, 0, 320, 0, 0, 0, 430,
	236, 45, 389, 443, 177, 0, 204, 205, 201, 207,
	208, 209, 210, 215, 212, 213, 0, 263, 268, 269,
	194, 180, 0, 0, 0, 0, 0, 485, 0, 0,
	484, 400, 369, 372, 236, 409, 0, 190, 0, 0,
	357, 307, 0, 0, 0, 426, 0, 0, 0, -2,
	0, 90, 102, 103, 0, 0, 0, 99, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	120, 118, 398, 32, 5, -2, 449, 0, 0, 0,
	-2, -2, 0, 0, 284, 309, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 274, 0, 0, 147,
	0, 258, 43, 0, -2, 390, 444, 0, 236, 214,
	202, 0, 262, 0, 196, 195, 193, 373, 482, 0,
	0, 0, 0, 0, 216, 413, 416, 414, 0, 0,
	0, 0, 216, 0, 394, 216, 406, 104, 105, 101,
	0, 98, 93, 94, -2, -2, 216, -2, 0, 127,
	133, 130, 0, -2, 0, 0, 433, 0, -2, 236,
	0, 0, 0, 0, 218, 0, 0, 314, 315, 316,
	317, 318, 320, 0, 0, 0, 0, 0, 260, 0,
	0, 44, 427, 201, 200, 203, 264, 270, 271, 214,
	374, 0, 0, 482, 482, 377, 0, 230, 236, 0,
	412, 358, 359, 307, 216, 0, 0, 423, 0, 88,
	91, 100, 114, 0, 0, 54, 55, 0, 387, 68,
	69, 0, 61, -2, -2, 0, 0, 433, -2, 0,
	0, 450, -2, 33, 34, 0, 0, 216, 337, 0,
	0, 0, 0, 0, 0, 337, 337, 0, 337, 0,
	0, 196, 428, 199, 178, 379, 0, 375, 0, 378,
	364, 365, 410, 0, 0, 419, 0, 421, 0, 134,
	-2, 236, 0, 236, 247, 0, 0, -2, 0, 0,
	0, 0, 0, 434, 236, 50, 447, 35, 36, 0,
	0, 335, 196, 0, 337, 337, 337, 337, 337, 337,
	0, 196, 0, 0, 0, 0, 276, 0, 0, 0,
	376, 360, 417, 0, 216, 7, -2, 453, 0, -2,
	0, 0, 0, 0, 135, 136, -2, 48, 0, -2,
	448, 0, 219, 322, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 337, 332, 337, 321, 179,
	380, 216, 0, 424, 437, 0, -2, 236, 0, 0,
	63, 64, 0, 387, 73, 74, 75, 0, 0, 0,
	0, 0, 49, 431, 0, 338, 323, 324, 325, 326,
	327, 328, 0, 0, 0, 420, 422, 0, 437, -2,
	0, 0, 454, -2, 0, -2, 236, 0, -2, -2,
	0, 0, 137, 432, 197, 331, 333, 418, 0, 0,
	438, 236, 67, 451, 56, 9, -2, 457, 0, 0,
	0, -2, -2, 336, 0, 65, 0, -2, 452, 0,
	441, 0, -2, 236, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 66, 435, 0, 441, -2, 0, 0,
	458, -2, 57, 58, 0, 0, 0, 0, 348, 0,
	0, 341, 342, 343, 436, 0, 0, 442, 236, 72,
	455, 59, 60, 0, 347, 344, 345, 346, 70, 0,
	-2, 456, 0, 340, 0, 350, 71, 439, 349, 440,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 161, 3, 3, 3, 165, 3, 3,
	162, 163, 157, 160, 166, 159, 167, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 156,
	3, 158,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:245
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:250
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:255
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:262
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:266
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:272
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:276
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:282
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:286
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:320
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:328
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:336
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:340
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:344
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:348
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:352
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:356
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:360
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:370
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:380
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:386
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:390
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:398
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:402
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:408
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:412
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:418
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:422
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:432
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:438
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:442
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:446
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:450
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:454
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:460
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:464
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:468
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:472
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:476
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:480
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:490
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:500
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:504
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:512
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:518
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:522
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:532
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:538
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:542
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:546
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:550
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:554
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:560
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:564
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:568
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:572
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:576
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:580
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:586
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:590
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:594
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:598
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:604
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:608
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:612
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:616
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:620
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:630
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:636
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:640
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:644
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:648
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:652
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:656
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:660
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:664
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:668
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:672
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:678
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:682
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:688
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:692
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:698
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:702
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:706
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:710
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:714
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:720
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:724
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:728
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:732
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:736
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:740
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:744
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:750
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:754
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:758
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:762
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:768
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:772
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:778
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:782
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:788
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:792
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:796
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:800
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:806
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:812
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:816
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:822
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:828
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:832
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:838
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:842
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:846
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:852
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:856
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:860
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:864
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:868
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:874
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:878
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:882
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:886
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:890
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:894
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:898
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:908
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:912
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:918
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:922
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:926
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:930
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:934
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:938
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:942
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:946
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:954
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:958
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:962
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:966
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:970
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:974
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:978
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:982
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:986
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:990
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:994
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:998
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal,
			}
		}
	case 178:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause:    yyDollar[8].queryexpr,
				LimitClause:      yyDollar[9].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[10].token.Literal + " " + yyDollar[11].token.Literal,
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1107
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1127
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1137
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = IntoClause{Into: yyDollar[1].token.Literal, Variables: yyDollar[2].variables}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1149
		{
			yyVAL.queryexpr = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1159
		{
			yyVAL.queryexpr = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1169
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1179
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1189
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1199
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 199:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1207
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1223
		{
			yyVAL.token = Token{}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.token = yyDollar[1].token
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1231
		{
			tok := yyDollar[2].token
			tok.Literal = joinWithSpace([]string{yyDollar[1].token.Literal, tok.Literal})
			yyVAL.token = tok
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1239
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1243
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1249
		{
			yyVAL.token = Token{}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1253
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1259
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1273
		{
			yyVAL.token = Token{}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1287
		{
			yyVAL.queryexpr = nil
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1291
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = nil
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1307
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 219:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1311
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1327
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1331
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1335
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1339
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1343
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1347
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1387
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1391
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1401
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1405
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1409
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1413
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1417
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1433
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1437
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1449
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1453
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1457
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1465
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1481
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1489
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1505
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1509
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1515
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1525
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1529
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1535
		{
			yyVAL.token = Token{}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1539
		{
			yyVAL.token = yyDollar[1].token
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1543
		{
			yyVAL.token = yyDollar[1].token
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1549
		{
			yyVAL.token = yyDollar[1].token
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1553
		{
			yyVAL.token = yyDollar[1].token
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1559
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1565
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1588
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 276:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1596
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1606
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1610
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1614
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1618
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 285:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1634
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1654
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1680
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1684
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1688
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexprs = nil
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1761
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1765
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1769
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1773
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1777
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1781
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1787
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1791
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1797
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 323:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1801
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 324:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1805
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 325:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1809
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 326:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1813
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 327:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1817
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 328:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1821
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1825
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1829
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1833
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1837
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1841
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1847
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1853
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1857
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexpr = nil
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1888
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1899
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1904
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1909
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1915
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1919
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1925
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1929
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1935
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1939
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1945
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1949
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1953
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1957
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1967
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1971
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 360:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1975
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1981
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1985
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1991
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1995
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1999
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2003
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2009
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2013
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2017
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2021
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2025
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2029
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2035
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2039
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 375:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2043
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2047
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2051
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 378:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2055
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2061
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2065
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2071
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2075
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2081
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2085
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2089
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2095
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2101
		{
			yyVAL.queryexpr = nil
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2105
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2111
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2115
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2121
		{
			yyVAL.queryexpr = nil
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2125
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2131
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2135
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2141
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2145
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2151
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2155
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2161
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2165
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2171
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2175
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2181
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2185
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2191
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2195
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2201
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2205
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2211
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 410:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2215
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2219
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2223
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2229
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2235
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2241
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2245
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 417:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:2251
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 418:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line parser.y:2255
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 419:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2259
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 420:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2263
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 421:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2267
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 422:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2271
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2275
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 424:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:2279
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2285
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 426:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2290
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2297
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2301
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2307
		{
			yyVAL.elseexpr = Else{}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2311
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2317
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2321
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2327
		{
			yyVAL.elseexpr = Else{}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2331
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2337
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2341
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2347
		{
			yyVAL.elseexpr = Else{}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2351
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2357
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2361
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2367
		{
			yyVAL.elseexpr = Else{}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2371
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2377
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2381
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2387
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2391
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2397
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2401
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2407
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2411
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2417
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2421
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2427
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2431
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2437
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2441
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2447
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2451
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2457
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2461
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2465
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2469
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2473
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2477
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2481
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2485
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2491
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2497
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2501
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2507
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2513
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2517
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2523
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2527
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2533
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2539
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2545
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2551
		{
			yyVAL.token = Token{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2555
		{
			yyVAL.token = yyDollar[1].token
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2561
		{
			yyVAL.token = Token{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2565
		{
			yyVAL.token = yyDollar[1].token
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2571
		{
			yyVAL.token = Token{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2575
		{
			yyVAL.token = yyDollar[1].token
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2581
		{
			yyVAL.token = Token{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2585
		{
			yyVAL.token = yyDollar[1].token
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2591
		{
			yyVAL.token = yyDollar[1].token
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2595
		{
			yyVAL.token = yyDollar[1].token
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2601
		{
			yyVAL.token = Token{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2605
		{
			yyVAL.token = yyDollar[1].token
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2611
		{
			yyVAL.token = Token{}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2615
		{
			yyVAL.token = yyDollar[1].token
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2621
		{
			yyVAL.token = Token{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2625
		{
			yyVAL.token = yyDollar[1].token
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2631
		{
			yyVAL.token = yyDollar[1].token
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2635
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
