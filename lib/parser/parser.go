// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const SELECT = 57358
const FROM = 57359
const UPDATE = 57360
const SET = 57361
const UNSET = 57362
const DELETE = 57363
const WHERE = 57364
const INSERT = 57365
const INTO = 57366
const VALUES = 57367
const AS = 57368
const DUAL = 57369
const STDIN = 57370
const RECURSIVE = 57371
const CREATE = 57372
const ADD = 57373
const DROP = 57374
const ALTER = 57375
const TABLE = 57376
const FIRST = 57377
const LAST = 57378
const AFTER = 57379
const BEFORE = 57380
const DEFAULT = 57381
const RENAME = 57382
const TO = 57383
const VIEW = 57384
const ORDER = 57385
const GROUP = 57386
const HAVING = 57387
const BY = 57388
const ASC = 57389
const DESC = 57390
const LIMIT = 57391
const OFFSET = 57392
const PERCENT = 57393
const JOIN = 57394
const INNER = 57395
const OUTER = 57396
const LEFT = 57397
const RIGHT = 57398
const FULL = 57399
const CROSS = 57400
const ON = 57401
const USING = 57402
const NATURAL = 57403
const UNION = 57404
const INTERSECT = 57405
const EXCEPT = 57406
const ALL = 57407
const ANY = 57408
const EXISTS = 57409
const IN = 57410
const AND = 57411
const OR = 57412
const NOT = 57413
const BETWEEN = 57414
const LIKE = 57415
const IS = 57416
const NULL = 57417
const DISTINCT = 57418
const WITH = 57419
const RANGE = 57420
const UNBOUNDED = 57421
const PRECEDING = 57422
const FOLLOWING = 57423
const CURRENT = 57424
const ROW = 57425
const CASE = 57426
const IF = 57427
const ELSEIF = 57428
const WHILE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const DO = 57433
const END = 57434
const DECLARE = 57435
const CURSOR = 57436
const FOR = 57437
const FETCH = 57438
const OPEN = 57439
const CLOSE = 57440
const DISPOSE = 57441
const NEXT = 57442
const PRIOR = 57443
const ABSOLUTE = 57444
const RELATIVE = 57445
const SEPARATOR = 57446
const PARTITION = 57447
const OVER = 57448
const COMMIT = 57449
const ROLLBACK = 57450
const CONTINUE = 57451
const BREAK = 57452
const EXIT = 57453
const ECHO = 57454
const PRINT = 57455
const PRINTF = 57456
const SOURCE = 57457
const EXECUTE = 57458
const CHDIR = 57459
const PWD = 57460
const RELOAD = 57461
const TRIGGER = 57462
const FUNCTION = 57463
const AGGREGATE = 57464
const BEGIN = 57465
const RETURN = 57466
const IGNORE = 57467
const WITHIN = 57468
const VAR = 57469
const SHOW = 57470
const TIES = 57471
const NULLS = 57472
const ROWS = 57473
const JSON_ROW = 57474
const JSON_TABLE = 57475
const COUNT = 57476
const JSON_OBJECT = 57477
const AGGREGATE_FUNCTION = 57478
const LIST_FUNCTION = 57479
const ANALYTIC_FUNCTION = 57480
const FUNCTION_NTH = 57481
const FUNCTION_WITH_INS = 57482
const COMPARISON_OP = 57483
const STRING_OP = 57484
const SUBSTITUTION_OP = 57485
const UMINUS = 57486
const UPLUS = 57487

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2273

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 178,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 73,
	86, 73,
	88, 73,
	90, 73,
	92, 73,
	146, 73,
	-2, 208,
	-1, 96,
	16, 178,
	18, 178,
	21, 178,
	23, 178,
	-2, 1,
	-1, 114,
	153, 265,
	-2, 178,
	-1, 120,
	62, 158,
	63, 158,
	64, 158,
	-2, 169,
	-1, 157,
	1, 140,
	86, 140,
	88, 140,
	90, 140,
	92, 140,
	146, 140,
	-2, 192,
	-1, 160,
	1, 146,
	86, 146,
	88, 146,
	90, 146,
	92, 146,
	146, 146,
	-2, 192,
	-1, 201,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	141, 0,
	148, 0,
	-2, 235,
	-1, 202,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	141, 0,
	148, 0,
	-2, 237,
	-1, 211,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	141, 0,
	148, 0,
	-2, 247,
	-1, 221,
	86, 1,
	90, 1,
	92, 1,
	-2, 178,
	-1, 272,
	92, 4,
	-2, 178,
	-1, 320,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	141, 0,
	148, 0,
	-2, 248,
	-1, 327,
	92, 1,
	-2, 178,
	-1, 339,
	52, 415,
	-2, 347,
	-1, 372,
	1, 76,
	86, 76,
	88, 76,
	90, 76,
	92, 76,
	146, 76,
	-2, 192,
	-1, 373,
	1, 132,
	86, 132,
	88, 132,
	90, 132,
	92, 132,
	146, 132,
	-2, 192,
	-1, 431,
	92, 1,
	-2, 178,
	-1, 438,
	88, 1,
	90, 1,
	92, 1,
	-2, 178,
	-1, 503,
	86, 4,
	88, 4,
	90, 4,
	92, 4,
	-2, 178,
	-1, 506,
	92, 4,
	-2, 178,
	-1, 507,
	92, 4,
	-2, 178,
	-1, 574,
	16, 425,
	77, 425,
	152, 425,
	-2, 80,
	-1, 597,
	86, 4,
	90, 4,
	92, 4,
	-2, 178,
	-1, 602,
	92, 4,
	-2, 178,
	-1, 603,
	92, 4,
	-2, 178,
	-1, 624,
	86, 1,
	90, 1,
	92, 1,
	-2, 178,
	-1, 657,
	1, 88,
	86, 88,
	88, 88,
	90, 88,
	92, 88,
	146, 88,
	-2, 192,
	-1, 660,
	92, 6,
	-2, 178,
	-1, 671,
	92, 4,
	-2, 178,
	-1, 726,
	92, 6,
	-2, 178,
	-1, 727,
	92, 6,
	-2, 178,
	-1, 731,
	92, 4,
	-2, 178,
	-1, 735,
	88, 4,
	90, 4,
	92, 4,
	-2, 178,
	-1, 755,
	88, 1,
	90, 1,
	92, 1,
	-2, 178,
	-1, 767,
	86, 6,
	88, 6,
	90, 6,
	92, 6,
	-2, 178,
	-1, 807,
	86, 6,
	90, 6,
	92, 6,
	-2, 178,
	-1, 810,
	92, 8,
	-2, 178,
	-1, 815,
	92, 6,
	-2, 178,
	-1, 818,
	86, 4,
	90, 4,
	92, 4,
	-2, 178,
	-1, 841,
	92, 6,
	-2, 178,
	-1, 869,
	92, 6,
	-2, 178,
	-1, 873,
	88, 6,
	90, 6,
	92, 6,
	-2, 178,
	-1, 875,
	86, 8,
	88, 8,
	90, 8,
	92, 8,
	-2, 178,
	-1, 878,
	92, 8,
	-2, 178,
	-1, 879,
	92, 8,
	-2, 178,
	-1, 882,
	88, 4,
	90, 4,
	92, 4,
	-2, 178,
	-1, 894,
	86, 8,
	90, 8,
	92, 8,
	-2, 178,
	-1, 903,
	86, 6,
	90, 6,
	92, 6,
	-2, 178,
	-1, 908,
	92, 8,
	-2, 178,
	-1, 922,
	92, 8,
	-2, 178,
	-1, 926,
	88, 8,
	90, 8,
	92, 8,
	-2, 178,
	-1, 938,
	88, 6,
	90, 6,
	92, 6,
	-2, 178,
	-1, 952,
	86, 8,
	90, 8,
	92, 8,
	-2, 178,
	-1, 963,
	88, 8,
	90, 8,
	92, 8,
	-2, 178,
}

const yyPrivate = 57344

const yyLast = 3619

var yyAct = [...]int{

	18, 921, 895, 868, 931, 294, 867, 920, 808, 730,
	786, 442, 944, 118, 788, 823, 891, 284, 480, 115,
	29, 113, 119, 598, 430, 729, 24, 171, 782, 339,
	576, 702, 527, 5, 581, 227, 496, 389, 23, 494,
	154, 155, 156, 158, 159, 161, 552, 787, 223, 388,
	22, 560, 497, 542, 1, 358, 452, 723, 544, 226,
	429, 48, 292, 165, 169, 349, 460, 338, 238, 384,
	3, 289, 335, 582, 131, 183, 184, 232, 459, 190,
	166, 176, 352, 194, 195, 340, 73, 180, 181, 168,
	71, 764, 125, 180, 765, 397, 167, 182, 200, 201,
	202, 653, 204, 134, 477, 211, 811, 214, 215, 216,
	217, 218, 219, 220, 722, 165, 29, 273, 119, 390,
	407, 418, 80, 181, 762, 180, 634, 593, 180, 120,
	594, 225, 222, 617, 23, 464, 229, 465, 466, 461,
	458, 168, 591, 462, 590, 575, 22, 556, 167, 108,
	199, 259, 260, 547, 274, 168, 109, 110, 835, 405,
	337, 278, 167, 97, 265, 267, 3, 247, 108, 447,
	107, 106, 126, 88, 122, 109, 110, 123, 65, 121,
	203, 164, 285, 274, 885, 464, 293, 465, 466, 461,
	458, 126, 164, 462, 274, 233, 233, 67, 84, 314,
	277, 237, 400, 246, 884, 274, 318, 864, 320, 863,
	285, 108, 862, 107, 106, 861, 88, 833, 109, 110,
	860, 65, 838, 837, 836, 285, 208, 166, 834, 330,
	282, 88, 832, 95, 831, 95, 168, 822, 463, 343,
	235, 29, 821, 167, 293, 728, 684, 683, 682, 365,
	681, 680, 677, 209, 368, 209, 359, 371, 374, 23,
	655, 652, 633, 285, 285, 285, 616, 380, 614, 613,
	285, 22, 612, 120, 606, 323, 605, 589, 587, 574,
	377, 378, 379, 532, 285, 567, 525, 381, 524, 65,
	316, 3, 29, 523, 315, 512, 448, 794, 89, 90,
	91, 382, 394, 421, 285, 285, 404, 351, 128, 557,
	402, 305, 306, 324, 285, 356, 270, 334, 427, 271,
	793, 487, 364, 419, 354, 355, 433, 128, 401, 319,
	437, 792, 403, 441, 445, 321, 322, 791, 790, 446,
	493, 89, 90, 91, 758, 346, 753, 29, 750, 748,
	747, 475, 414, 415, 741, 740, 89, 90, 91, 529,
	399, 168, 425, 510, 344, 23, 471, 416, 449, 470,
	413, 168, 412, 411, 469, 410, 409, 22, 167, 484,
	367, 435, 357, 408, 370, 168, 491, 504, 119, 369,
	224, 424, 482, 168, 198, 168, 197, 3, 454, 128,
	490, 505, 492, 501, 457, 187, 293, 186, 285, 58,
	233, 185, 285, 285, 285, 456, 472, 192, 257, 256,
	511, 875, 767, 486, 488, 503, 96, 533, 248, 534,
	417, 422, 423, 538, 483, 164, 311, 133, 133, 541,
	136, 543, 900, 751, 749, 476, 168, 478, 479, 632,
	630, 29, 620, 167, 746, 815, 515, 727, 29, 688,
	520, 521, 522, 726, 686, 660, 800, 798, 789, 23,
	88, 568, 569, 170, 620, 745, 23, 513, 689, 744,
	551, 22, 88, 687, 743, 537, 742, 188, 22, 148,
	149, 536, 468, 685, 189, 236, 312, 679, 366, 951,
	939, 3, 924, 911, 910, 902, 235, 886, 3, 880,
	553, 88, 874, 562, 531, 84, 871, 285, 285, 285,
	285, 555, 817, 29, 814, 813, 29, 29, 88, 564,
	618, 565, 596, 451, 584, 600, 601, 168, 570, 88,
	625, 563, 528, 530, 604, 777, 138, 766, 445, 553,
	739, 738, 67, 446, 146, 147, 150, 151, 637, 631,
	250, 733, 343, 235, 674, 607, 608, 609, 611, 673,
	528, 623, 88, 646, 285, 535, 88, 626, 287, 502,
	152, 610, 276, 88, 654, 281, 88, 658, 638, 639,
	88, 647, 436, 666, 649, 89, 90, 91, 137, 923,
	672, 434, 627, 922, 629, 879, 878, 89, 90, 91,
	235, 870, 249, 636, 603, 869, 643, 29, 454, 602,
	732, 635, 29, 29, 731, 139, 669, 663, 664, 695,
	648, 675, 676, 507, 668, 506, 89, 90, 91, 251,
	252, 650, 651, 662, 29, 710, 922, 432, 908, 615,
	690, 431, 869, 89, 90, 91, 88, 133, 954, 841,
	168, 626, 23, 84, 89, 90, 91, 700, 346, 905,
	705, 706, 707, 731, 22, 168, 896, 716, 694, 671,
	29, 701, 712, 713, 395, 431, 168, 344, 714, 329,
	327, 29, 752, 715, 3, 820, 553, 89, 90, 91,
	734, 89, 90, 91, 757, 809, 628, 599, 89, 90,
	91, 89, 90, 91, 325, 89, 90, 91, 228, 754,
	928, 768, 119, 927, 892, 770, 773, 784, 243, 783,
	718, 737, 756, 780, 736, 769, 541, 759, 761, 923,
	528, 595, 870, 774, 775, 732, 29, 29, 432, 958,
	950, 29, 772, 917, 901, 29, 778, 855, 816, 797,
	779, 804, 796, 915, 693, 796, 285, 168, 622, 802,
	943, 890, 781, 540, 785, 29, 949, 803, 932, 499,
	932, 89, 90, 91, 806, 395, 936, 29, 947, 948,
	961, 105, 946, 23, 935, 795, 718, 718, 799, 934,
	699, 826, 827, 828, 829, 22, 819, 619, 65, 796,
	842, 546, 244, 92, 805, 206, 192, 945, 526, 205,
	207, 857, 528, 843, 839, 3, 285, 29, 812, 913,
	29, 398, 854, 275, 353, 29, 914, 718, 29, 916,
	241, 308, 830, 859, 865, 307, 561, 856, 876, 119,
	796, 956, 65, 930, 933, 708, 933, 642, 872, 445,
	641, 29, 877, 640, 446, 559, 881, 558, 850, 440,
	883, 889, 191, 332, 541, 887, 858, 718, 825, 93,
	845, 310, 309, 866, 572, 718, 888, 573, 893, 29,
	333, 897, 898, 29, 692, 29, 474, 909, 29, 29,
	904, 230, 29, 213, 212, 824, 919, 906, 549, 550,
	283, 718, 586, 585, 29, 303, 304, 240, 241, 242,
	918, 925, 937, 29, 942, 849, 313, 541, 29, 940,
	851, 592, 583, 850, 130, 941, 850, 850, 464, 718,
	465, 466, 29, 718, 129, 845, 29, 953, 845, 845,
	957, 179, 850, 697, 698, 960, 59, 776, 29, 678,
	667, 962, 661, 659, 845, 959, 850, 359, 66, 588,
	406, 375, 29, 718, 577, 578, 579, 580, 845, 231,
	850, 350, 336, 29, 850, 239, 348, 261, 140, 142,
	849, 85, 845, 849, 849, 851, 845, 135, 851, 851,
	499, 665, 143, 144, 499, 363, 84, 153, 718, 849,
	850, 157, 175, 160, 851, 162, 163, 360, 361, 141,
	85, 850, 845, 849, 178, 60, 362, 132, 851, 907,
	840, 670, 326, 845, 8, 453, 7, 849, 52, 6,
	328, 849, 851, 55, 103, 112, 851, 102, 101, 104,
	100, 290, 291, 342, 341, 955, 196, 929, 912, 899,
	79, 54, 53, 127, 57, 50, 56, 849, 51, 696,
	548, 464, 851, 465, 466, 461, 458, 760, 849, 462,
	444, 443, 49, 851, 103, 112, 111, 102, 101, 104,
	100, 234, 234, 177, 439, 331, 571, 473, 245, 234,
	124, 17, 16, 61, 145, 14, 253, 254, 255, 498,
	495, 13, 12, 9, 258, 15, 11, 98, 97, 10,
	193, 846, 719, 108, 99, 107, 106, 844, 717, 385,
	109, 110, 383, 4, 771, 172, 516, 517, 518, 519,
	2, 0, 210, 0, 0, 0, 0, 279, 0, 280,
	0, 286, 0, 0, 296, 0, 0, 98, 97, 0,
	0, 0, 0, 108, 99, 107, 106, 263, 0, 268,
	109, 110, 269, 0, 0, 103, 112, 111, 102, 101,
	104, 100, 0, 0, 0, 103, 112, 111, 102, 101,
	104, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 347, 0, 127, 347, 0,
	0, 0, 296, 103, 112, 111, 102, 101, 104, 100,
	0, 0, 0, 0, 0, 372, 373, 210, 210, 464,
	376, 465, 466, 461, 458, 703, 704, 462, 0, 0,
	0, 0, 393, 0, 396, 210, 0, 0, 98, 97,
	0, 210, 210, 0, 108, 99, 107, 106, 98, 97,
	0, 109, 110, 262, 108, 99, 107, 106, 0, 0,
	0, 109, 110, 691, 0, 345, 0, 103, 345, 0,
	102, 101, 104, 100, 0, 0, 98, 97, 0, 0,
	0, 0, 108, 99, 107, 106, 0, 0, 0, 109,
	110, 645, 296, 0, 450, 455, 234, 0, 0, 0,
	467, 0, 0, 347, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 0, 485,
	455, 455, 489, 0, 0, 0, 481, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 210, 420, 420, 420,
	98, 97, 0, 0, 0, 0, 108, 99, 107, 106,
	0, 0, 0, 109, 110, 0, 508, 509, 0, 0,
	481, 0, 0, 0, 296, 514, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 345, 0, 0,
	0, 127, 0, 127, 127, 103, 112, 111, 102, 101,
	104, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 566, 0, 0,
	0, 88, 68, 69, 70, 0, 92, 72, 84, 0,
	85, 86, 0, 485, 0, 0, 455, 0, 210, 0,
	0, 0, 0, 0, 0, 67, 0, 0, 98, 97,
	0, 0, 0, 0, 108, 99, 107, 106, 0, 0,
	0, 109, 110, 644, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 81, 0, 0, 0, 82, 0,
	0, 0, 93, 0, 0, 0, 296, 0, 0, 0,
	0, 117, 116, 0, 0, 455, 0, 347, 347, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 455, 455,
	0, 0, 0, 0, 656, 657, 0, 103, 112, 111,
	102, 101, 104, 100, 0, 210, 89, 90, 91, 95,
	0, 298, 76, 297, 299, 300, 301, 302, 0, 0,
	0, 0, 0, 0, 295, 0, 74, 75, 83, 62,
	288, 0, 0, 0, 0, 0, 0, 345, 345, 0,
	0, 0, 0, 455, 0, 0, 545, 0, 0, 347,
	347, 347, 0, 709, 711, 0, 0, 0, 0, 0,
	0, 0, 485, 103, 112, 111, 102, 101, 104, 100,
	98, 97, 546, 0, 0, 0, 108, 99, 107, 106,
	0, 0, 0, 109, 110, 426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 88,
	68, 69, 70, 0, 92, 72, 84, 0, 85, 86,
	19, 0, 0, 0, 31, 32, 0, 347, 0, 345,
	345, 345, 0, 67, 0, 25, 0, 0, 26, 0,
	0, 0, 0, 0, 0, 0, 98, 97, 0, 0,
	0, 0, 108, 99, 107, 106, 0, 0, 0, 109,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 82, 481, 0, 0,
	93, 0, 65, 0, 0, 0, 0, 0, 210, 848,
	847, 0, 724, 0, 0, 0, 0, 345, 28, 87,
	0, 35, 33, 34, 30, 0, 0, 0, 0, 0,
	0, 0, 36, 37, 391, 392, 0, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 0, 0, 0, 725,
	852, 853, 27, 38, 89, 90, 91, 95, 0, 78,
	76, 77, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 75, 83, 62, 88, 68,
	69, 70, 0, 92, 72, 84, 0, 85, 86, 19,
	0, 0, 0, 31, 32, 0, 0, 296, 0, 0,
	0, 0, 67, 0, 25, 0, 0, 26, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 82, 0, 0, 0, 93,
	0, 65, 0, 0, 0, 0, 0, 0, 387, 386,
	0, 63, 0, 0, 0, 0, 0, 28, 87, 0,
	35, 33, 34, 30, 0, 0, 0, 0, 0, 0,
	0, 36, 37, 391, 392, 64, 39, 40, 41, 42,
	43, 44, 45, 46, 47, 0, 0, 0, 0, 0,
	0, 27, 38, 89, 90, 91, 95, 0, 78, 76,
	77, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 75, 83, 62, 88, 68, 69,
	70, 0, 92, 72, 84, 0, 85, 86, 19, 0,
	0, 0, 31, 32, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 25, 0, 0, 26, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 82, 0, 0, 0, 93, 0,
	65, 0, 0, 0, 0, 0, 0, 721, 720, 0,
	724, 0, 0, 0, 0, 0, 28, 87, 0, 35,
	33, 34, 30, 0, 0, 0, 0, 0, 0, 0,
	36, 37, 0, 0, 0, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 0, 0, 0, 725, 0, 0,
	27, 38, 89, 90, 91, 95, 0, 78, 76, 77,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 75, 83, 62, 88, 68, 69, 70,
	0, 92, 72, 84, 0, 85, 86, 19, 0, 0,
	0, 31, 32, 0, 0, 0, 0, 0, 0, 0,
	67, 0, 25, 0, 0, 26, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 82, 0, 0, 0, 93, 0, 65,
	0, 0, 0, 0, 0, 0, 21, 20, 0, 63,
	0, 0, 0, 0, 0, 28, 87, 0, 35, 33,
	34, 30, 0, 0, 0, 0, 0, 0, 0, 36,
	37, 0, 0, 64, 39, 40, 41, 42, 43, 44,
	45, 46, 47, 0, 0, 0, 0, 0, 0, 27,
	38, 89, 90, 91, 95, 0, 78, 76, 77, 94,
	88, 68, 69, 70, 0, 92, 72, 84, 0, 85,
	86, 74, 75, 83, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 67, 88, 68, 69, 70, 0,
	92, 72, 84, 0, 85, 86, 0, 103, 112, 111,
	102, 101, 104, 100, 0, 0, 0, 0, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 963, 0,
	0, 0, 0, 81, 0, 0, 0, 82, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 116, 0, 0, 0, 0, 0, 0, 81, 0,
	87, 0, 82, 0, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 116, 0, 0, 0,
	98, 97, 0, 0, 0, 87, 108, 99, 107, 106,
	0, 0, 0, 109, 110, 89, 90, 91, 95, 0,
	298, 76, 297, 299, 300, 301, 302, 0, 0, 0,
	0, 0, 0, 295, 0, 74, 75, 83, 62, 0,
	89, 90, 91, 95, 0, 298, 76, 297, 299, 300,
	301, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 75, 83, 62, 88, 68, 69, 70, 0, 92,
	72, 84, 0, 85, 86, 88, 68, 69, 70, 0,
	92, 72, 84, 0, 85, 86, 0, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 82, 0, 0, 0, 93, 0, 0, 81, 0,
	0, 0, 82, 0, 117, 116, 93, 0, 0, 0,
	0, 0, 0, 174, 87, 117, 116, 0, 0, 0,
	0, 88, 68, 69, 70, 87, 92, 72, 84, 0,
	85, 86, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 173, 0, 89,
	90, 91, 95, 0, 78, 76, 77, 94, 0, 0,
	89, 90, 91, 95, 0, 78, 76, 77, 94, 74,
	75, 83, 62, 0, 0, 0, 0, 0, 295, 0,
	74, 75, 83, 62, 81, 0, 0, 0, 82, 0,
	0, 0, 93, 244, 0, 0, 0, 0, 0, 0,
	0, 117, 116, 0, 0, 0, 0, 88, 68, 69,
	70, 87, 92, 72, 84, 0, 85, 86, 88, 68,
	69, 70, 0, 92, 72, 84, 0, 85, 86, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 89, 90, 91, 95,
	0, 78, 76, 77, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 75, 83, 62,
	81, 0, 0, 0, 82, 0, 0, 0, 93, 0,
	65, 81, 0, 0, 0, 82, 0, 117, 116, 93,
	0, 0, 0, 0, 0, 0, 0, 87, 117, 116,
	0, 0, 0, 0, 88, 68, 69, 70, 87, 92,
	72, 84, 0, 85, 86, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 67, 0,
	0, 0, 89, 90, 91, 95, 0, 78, 76, 77,
	94, 0, 0, 89, 90, 91, 95, 0, 78, 76,
	77, 94, 74, 75, 83, 62, 0, 0, 0, 0,
	0, 0, 0, 74, 75, 83, 62, 81, 0, 0,
	0, 82, 0, 0, 0, 93, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 116, 0, 0, 0, 0,
	88, 68, 266, 70, 87, 92, 72, 84, 0, 85,
	86, 0, 103, 112, 111, 102, 101, 104, 100, 0,
	0, 0, 0, 0, 67, 0, 0, 0, 103, 112,
	111, 102, 101, 104, 100, 0, 0, 0, 0, 89,
	90, 91, 95, 0, 78, 76, 77, 94, 0, 952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	75, 83, 114, 81, 0, 0, 0, 82, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 116, 0, 0, 0, 98, 97, 0, 0, 0,
	87, 108, 99, 107, 106, 0, 0, 0, 109, 110,
	269, 98, 97, 0, 0, 0, 0, 108, 99, 107,
	106, 0, 0, 0, 109, 110, 103, 112, 111, 102,
	101, 104, 100, 0, 0, 89, 90, 91, 95, 0,
	78, 76, 77, 94, 0, 0, 0, 938, 103, 112,
	111, 102, 101, 104, 100, 74, 75, 83, 62, 103,
	112, 111, 102, 101, 104, 100, 0, 0, 0, 926,
	103, 112, 111, 102, 101, 104, 100, 0, 0, 0,
	903, 103, 112, 111, 102, 101, 104, 100, 0, 0,
	0, 894, 0, 0, 0, 0, 0, 0, 0, 98,
	97, 0, 882, 0, 0, 108, 99, 107, 106, 0,
	0, 0, 109, 110, 0, 0, 0, 0, 0, 0,
	0, 98, 97, 0, 0, 0, 0, 108, 99, 107,
	106, 0, 98, 97, 109, 110, 0, 0, 108, 99,
	107, 106, 0, 98, 97, 109, 110, 0, 0, 108,
	99, 107, 106, 0, 98, 97, 109, 110, 0, 0,
	108, 99, 107, 106, 0, 0, 0, 109, 110, 103,
	112, 111, 102, 101, 104, 100, 0, 0, 0, 103,
	112, 111, 102, 101, 104, 100, 0, 0, 0, 0,
	873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	818, 103, 112, 111, 102, 101, 104, 100, 0, 0,
	0, 103, 112, 111, 102, 101, 104, 100, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 0, 0,
	0, 0, 807, 103, 112, 111, 102, 101, 104, 100,
	0, 0, 98, 97, 0, 0, 0, 0, 108, 99,
	107, 106, 98, 97, 0, 109, 110, 0, 108, 99,
	107, 106, 0, 0, 0, 109, 110, 103, 112, 111,
	102, 101, 104, 100, 98, 97, 0, 0, 0, 0,
	108, 99, 107, 106, 98, 97, 0, 109, 110, 0,
	108, 99, 107, 106, 0, 0, 0, 109, 110, 0,
	0, 0, 0, 0, 0, 0, 98, 97, 0, 0,
	0, 0, 108, 99, 107, 106, 0, 0, 801, 109,
	110, 103, 112, 111, 102, 101, 104, 100, 0, 0,
	0, 103, 112, 111, 102, 101, 104, 100, 0, 0,
	98, 97, 755, 0, 0, 0, 108, 99, 107, 106,
	0, 325, 763, 109, 110, 103, 112, 111, 102, 101,
	104, 100, 0, 0, 0, 103, 112, 111, 102, 101,
	104, 100, 0, 0, 0, 0, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 624, 103, 112, 111,
	102, 101, 104, 100, 98, 97, 0, 0, 0, 0,
	108, 99, 107, 106, 98, 97, 0, 109, 110, 0,
	108, 99, 107, 106, 0, 0, 0, 109, 110, 103,
	112, 111, 102, 101, 104, 100, 0, 0, 98, 97,
	0, 0, 0, 0, 108, 99, 107, 106, 98, 97,
	597, 109, 110, 0, 108, 99, 107, 106, 0, 0,
	0, 109, 110, 0, 0, 0, 0, 0, 0, 0,
	98, 97, 0, 0, 0, 0, 108, 99, 107, 106,
	0, 0, 621, 109, 110, 103, 112, 111, 102, 101,
	104, 100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 97, 0, 0, 539, 0, 108, 99,
	107, 106, 0, 0, 0, 109, 110, 103, 112, 111,
	102, 101, 104, 100, 0, 0, 0, 103, 112, 111,
	102, 101, 104, 100, 264, 0, 0, 0, 438, 0,
	0, 0, 103, 112, 111, 102, 101, 104, 100, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 98, 97,
	0, 0, 0, 0, 108, 99, 107, 106, 0, 0,
	0, 109, 110, 103, 112, 111, 102, 101, 104, 100,
	0, 0, 0, 103, 112, 111, 102, 101, 104, 100,
	98, 97, 0, 0, 221, 0, 108, 99, 107, 106,
	98, 97, 0, 109, 110, 0, 108, 99, 107, 106,
	0, 0, 0, 109, 110, 98, 97, 0, 0, 0,
	0, 108, 99, 107, 106, 0, 0, 0, 109, 110,
	103, 428, 111, 102, 101, 104, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 98, 97, 0, 0,
	0, 0, 108, 99, 107, 106, 98, 97, 0, 109,
	110, 0, 108, 99, 107, 106, 0, 0, 0, 109,
	110, 103, 317, 111, 102, 101, 104, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 97, 0, 0, 0, 0, 108,
	99, 107, 106, 0, 0, 0, 109, 110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 97, 0, 0, 0, 0,
	108, 99, 107, 106, 0, 0, 0, 109, 110,
}
var yyPact = [...]int{

	2102, -1000, 280, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3375, -1000,
	2690, 2604, -1000, -1000, 156, 910, 900, 995, 652, -1000,
	504, 1007, 978, 586, 586, 454, -1000, -1000, 568, 2604,
	2604, 2604, 2604, 2604, 2604, -1000, 586, 586, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 292, -1000,
	-1000, -1000, 2593, 2410, 1006, 922, -64, -60, -1000, -1000,
	-1000, -1000, -1000, -1000, 2604, 2604, 259, 255, 253, -1000,
	346, 247, 2604, 2604, -1000, -1000, -1000, 586, -1000, -1000,
	-1000, -1000, -1000, -1000, 244, 242, 2102, 2604, 2604, 2604,
	745, 2604, 747, 103, 2604, 838, 2604, 2604, 2604, 2604,
	2604, 2604, 2604, 3365, 2593, -1000, 238, 2604, 630, 3375,
	858, 955, 582, 478, 968, 855, 736, -1000, 731, 586,
	582, -1000, 11, 285, -1000, 518, -1000, 586, 586, 586,
	271, 270, -1000, -1000, -1000, 586, -1000, -1000, -1000, -1000,
	2604, 2604, -1000, 970, 3375, 3375, 1107, -64, 3375, 3334,
	-64, 3375, -1000, 2776, 2604, 1016, 163, 166, 175, 3319,
	49, 765, 995, -1000, -1000, -1000, -1000, 5, 586, -1000,
	579, 2507, 572, -1000, -1000, 1437, 736, 736, 103, 103,
	773, 816, -1000, -1000, 1209, -1000, 362, 736, 2604, -1000,
	64, 21, 21, 804, 3463, 2604, 103, 2604, -1000, 2593,
	-1000, 21, 103, 103, 2, 2, -1000, -1000, -1000, 976,
	1209, 2102, 163, 160, 2604, 626, 600, 599, 2604, 824,
	844, 582, 963, 4, -1000, -1000, 535, 969, 959, 535,
	769, 769, 769, 2236, -1000, 230, 986, 995, 2604, 403,
	228, 237, 232, -1000, -1000, -1000, 2604, 2604, 947, 3375,
	3375, 586, 2604, 2604, 2604, 3375, 2604, 3375, -1000, 2604,
	-1000, -1000, 1804, 586, 995, 586, 27, 763, 922, 176,
	-1000, -1000, 157, 2604, -1000, 2724, -1000, -1000, -1000, 153,
	3, 944, -1000, 3375, -1000, -1000, -32, 231, 224, 223,
	221, 220, 218, 2604, 2421, -1000, -1000, 103, 171, 171,
	171, 745, -1000, 2604, 1489, -1000, -1000, 2604, 3422, -1000,
	21, -1000, -1000, 561, -1000, 2604, 509, 2102, 500, 2604,
	3309, 819, 2604, 2261, 144, 507, 524, 582, 959, 82,
	-1000, 466, -1000, -1000, 212, -1000, 217, 214, 535, 852,
	2604, -1000, 175, -1000, 175, 175, -1000, 586, 731, -1000,
	227, 169, 524, 586, -1000, 3375, 731, 586, 731, 187,
	586, 3375, -64, -64, 3375, 995, -1000, -1000, -1000, -1000,
	3375, -1000, 487, 279, -1000, -1000, 2690, 2604, -1000, -1000,
	-1000, -1000, -1000, 544, -1000, -2, 542, 586, 586, -1000,
	211, 586, -1000, 142, -1000, 2236, 586, 2507, 736, 736,
	736, 2604, 2604, 2604, 140, 135, 133, 749, -1000, 101,
	-1000, 207, -1000, -1000, 446, 130, 2604, 1209, 2604, 483,
	595, 2102, 2604, 3277, 689, -1000, -1000, 3375, 2102, -1000,
	2604, 1555, -1000, -3, 861, 3375, -1000, 103, 524, -1000,
	-1000, 586, 968, -9, 161, -70, -1000, -1000, 815, 813,
	792, 792, 885, 535, -1000, -1000, -1000, -1000, 586, 132,
	2604, 2604, 959, 839, 841, 3375, 777, -1000, -1000, 777,
	126, -11, -1000, 939, 586, 893, -1000, 524, 872, 871,
	-1000, 125, -1000, 943, 124, -12, -1000, -1000, -14, 892,
	-26, -1000, 654, 1804, 3221, 619, 1804, 1804, 528, 523,
	731, 123, -1000, -1000, -1000, 121, 2604, 2604, 2421, 2604,
	119, 116, 115, -1000, -1000, -1000, 103, 113, -23, 2604,
	-1000, 729, 326, 3189, 1209, 683, 479, -1000, 3167, 2604,
	-1000, 3133, 618, 3375, -1000, 734, 321, 2261, 319, -1000,
	-1000, -1000, 109, -30, -1000, 959, 524, 2604, 535, 535,
	811, -1000, 808, 805, 792, -1000, -1000, -1000, 1327, 1145,
	-1000, -1000, 2604, 2604, 941, 586, -1000, -1000, -1000, 524,
	524, 108, -55, 2604, 107, 586, 2604, 937, 342, 936,
	995, 995, 2604, 934, 995, -1000, -1000, 1804, 589, 2604,
	477, 472, 1804, 1804, 99, 933, 391, 98, 97, 95,
	94, 93, 387, 358, 353, -1000, -1000, 103, 1117, -1000,
	850, -1000, -1000, 679, 2102, 3133, -1000, -1000, 2604, -1000,
	-1000, -1000, 918, 775, 524, -1000, -1000, 3375, 885, 1176,
	535, 535, 535, 803, 2604, 586, 3375, -1000, 731, -1000,
	-1000, -1000, 939, 586, 3375, -1000, -1000, -64, 3375, 731,
	1953, 340, -1000, -1000, -1000, 892, 3375, 334, 92, 534,
	469, 1804, 3157, 647, 644, 459, 458, -1000, 203, 202,
	380, 378, 373, 369, 348, 198, 197, 314, 196, 313,
	-1000, 2604, 194, -1000, 662, 3123, -1000, -1000, -1000, 103,
	-1000, -1000, -1000, 2604, 192, 1176, 1018, 885, 535, -29,
	3069, -62, -1000, -1000, -1000, -1000, 455, 276, -1000, -1000,
	2690, 2604, -1000, -1000, 2604, 2604, 1953, 1953, 931, 453,
	583, 1804, 2604, 688, -1000, 1804, -1000, -1000, 642, 640,
	731, 363, 186, 185, 179, 168, 145, 363, 363, 361,
	363, 360, 3035, 858, -1000, 2102, -1000, 3375, 586, -1000,
	2604, 885, -1000, -1000, -1000, 2604, -1000, 1953, 3013, 617,
	3003, 38, 760, 3375, 433, 432, 332, 673, 430, -1000,
	2981, -1000, 607, -1000, -1000, 89, 84, -1000, 862, 832,
	363, 363, 363, 363, 363, 81, 858, 79, 65, 75,
	6, -1000, 71, 70, 3375, 69, -1000, 1953, 569, 2604,
	1655, 586, 586, -1000, -1000, 1953, -1000, 672, 1804, -1000,
	2604, -1000, -1000, -1000, 830, 2604, 67, 62, 59, 56,
	54, -1000, -1000, 363, -1000, 363, -1000, -1000, -1000, 525,
	424, 1953, 2971, 420, 275, -1000, -1000, 2690, 2604, -1000,
	-1000, -1000, 515, 514, 417, -1000, 659, 2883, 2261, -1000,
	-1000, -1000, -1000, -1000, -1000, 51, 31, 415, 562, 1953,
	2604, 687, -1000, 1953, 637, 1655, 2872, 588, 1655, 1655,
	-1000, -1000, 1804, 311, -1000, -1000, 669, 413, -1000, 2861,
	-1000, 581, -1000, -1000, 1655, 558, 2604, 412, 411, -1000,
	757, -1000, 668, 1953, -1000, 2604, 513, 410, 1655, 2850,
	636, 633, -1000, 774, 719, 714, 703, -1000, 656, 2828,
	408, 556, 1655, 2604, 686, -1000, 1655, -1000, -1000, 748,
	712, -1000, 708, 693, -1000, -1000, -1000, -1000, 1953, 665,
	407, -1000, 2740, -1000, 570, 772, -1000, -1000, -1000, -1000,
	-1000, 664, 1655, -1000, 2604, -1000, 709, -1000, -1000, 653,
	2209, -1000, -1000, 1655,
}
var yyPgo = [...]int{

	0, 53, 28, 16, 12, 69, 119, 1140, 49, 1135,
	37, 1133, 1132, 1129, 1128, 114, 57, 1127, 1122, 1121,
	1119, 1116, 1115, 1113, 73, 34, 30, 1112, 1111, 52,
	1110, 1109, 36, 39, 1105, 1104, 1103, 1102, 1101, 33,
	104, 92, 1100, 68, 65, 1097, 1096, 15, 1095, 58,
	1094, 26, 1093, 81, 1082, 90, 86, 61, 0, 62,
	122, 32, 11, 1081, 1080, 1070, 1069, 1038, 1068, 121,
	1066, 1065, 1064, 48, 1062, 1061, 1060, 5, 47, 10,
	14, 1059, 1058, 4, 1057, 1055, 72, 85, 77, 1054,
	29, 1053, 31, 1052, 1051, 1043, 13, 35, 1040, 46,
	17, 67, 18, 71, 1039, 1036, 1035, 56, 1034, 24,
	60, 9, 25, 3, 6, 1, 7, 59, 1032, 23,
	1031, 8, 1030, 2, 1029, 968, 409, 27, 19, 1027,
	74, 956, 1025, 728, 79, 78, 51, 66, 82, 1024,
	55, 791,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 7, 7, 8,
	8, 8, 8, 8, 9, 9, 10, 10, 12, 12,
	11, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
	19, 20, 20, 20, 20, 21, 21, 21, 22, 22,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	24, 24, 25, 25, 26, 26, 26, 26, 26, 27,
	27, 27, 27, 27, 28, 28, 28, 28, 29, 30,
	30, 31, 32, 32, 33, 33, 33, 34, 34, 34,
	34, 34, 35, 35, 35, 35, 35, 35, 35, 36,
	36, 36, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	38, 38, 38, 39, 40, 40, 40, 40, 41, 41,
	42, 43, 43, 44, 44, 45, 45, 46, 46, 47,
	47, 48, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 54, 54, 54, 54, 54, 54,
	55, 56, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 59, 60, 60, 60, 61, 61, 62,
	62, 63, 63, 64, 64, 65, 65, 65, 66, 66,
	67, 68, 69, 69, 69, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 71, 71, 71, 71, 71, 71,
	71, 72, 72, 72, 72, 73, 73, 74, 74, 74,
	74, 75, 75, 75, 75, 75, 76, 76, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 78,
	79, 79, 80, 80, 81, 81, 82, 82, 82, 83,
	83, 83, 84, 84, 85, 85, 86, 86, 87, 87,
	87, 89, 89, 89, 89, 89, 90, 90, 90, 90,
	90, 90, 90, 91, 91, 91, 91, 91, 91, 92,
	92, 93, 93, 94, 94, 94, 95, 96, 96, 97,
	97, 98, 98, 99, 99, 100, 100, 101, 101, 88,
	88, 102, 102, 103, 103, 104, 104, 104, 104, 105,
	106, 107, 107, 108, 108, 109, 109, 110, 110, 111,
	111, 112, 112, 113, 113, 114, 114, 115, 115, 116,
	116, 117, 117, 118, 118, 119, 119, 120, 120, 121,
	121, 122, 122, 123, 123, 124, 124, 125, 125, 125,
	125, 126, 127, 127, 128, 129, 129, 130, 130, 131,
	132, 133, 133, 134, 134, 135, 135, 136, 136, 137,
	137, 138, 138, 139, 139, 140, 140, 141, 141,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	8, 8, 9, 9, 1, 1, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 1, 1, 6, 8, 8, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 2, 2, 1, 2, 4, 4, 2, 1, 1,
	6, 8, 5, 6, 8, 5, 7, 7, 7, 7,
	1, 3, 1, 3, 0, 1, 1, 2, 2, 5,
	2, 2, 3, 5, 6, 8, 5, 3, 1, 1,
	3, 3, 1, 3, 1, 1, 3, 9, 10, 10,
	12, 3, 0, 1, 1, 1, 1, 2, 2, 5,
	6, 3, 4, 4, 2, 2, 2, 2, 4, 4,
	2, 2, 2, 4, 2, 4, 2, 2, 1, 2,
	2, 3, 4, 5, 5, 4, 4, 4, 1, 1,
	3, 0, 2, 0, 2, 0, 3, 0, 2, 0,
	3, 0, 3, 4, 0, 2, 0, 2, 0, 2,
	6, 9, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 6, 1, 3, 1,
	3, 2, 4, 1, 1, 0, 1, 1, 1, 1,
	3, 3, 3, 1, 6, 3, 3, 3, 3, 4,
	4, 5, 6, 6, 3, 4, 4, 3, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 3, 2,
	2, 3, 3, 2, 2, 0, 1, 4, 3, 4,
	4, 5, 5, 5, 5, 1, 5, 10, 8, 9,
	9, 9, 9, 9, 8, 8, 10, 8, 10, 2,
	1, 5, 0, 3, 2, 5, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 1, 1, 1, 1, 2,
	3, 1, 6, 6, 6, 8, 1, 1, 2, 3,
	1, 1, 3, 4, 5, 6, 7, 5, 6, 2,
	4, 1, 1, 1, 3, 1, 5, 0, 1, 4,
	5, 0, 2, 1, 3, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 6, 9, 5, 8, 7,
	3, 1, 3, 5, 6, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 1, 3, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -104, -105, -108, -23,
	-20, -21, -27, -28, -34, -22, -37, -38, -58, 15,
	85, 84, -8, -10, -51, 30, 33, 127, 93, -128,
	99, 19, 20, 97, 98, 96, 107, 108, 128, 112,
	113, 114, 115, 116, 117, 118, 119, 120, -57, -54,
	-71, -68, -67, -74, -75, -95, -70, -72, -126, -131,
	-132, -36, 152, 87, 111, 77, -125, 28, 5, 6,
	7, -55, 10, -56, 149, 150, 135, 136, 134, -76,
	-60, 67, 71, 151, 11, 13, 14, 94, 4, 129,
	130, 131, 9, 75, 137, 132, 146, 142, 141, 148,
	74, 72, 71, 68, 73, -141, 150, 149, 147, 154,
	155, 70, 69, -58, 152, -128, 85, 84, -96, -58,
	-40, 23, 18, 21, -42, -41, 16, -67, 152, 34,
	34, -130, -129, -126, -130, -125, -126, 94, 42, 121,
	-131, 12, -131, -125, -125, -35, 100, 101, 35, 36,
	102, 103, 12, -125, -58, -58, -58, -125, -58, -58,
	-125, -58, -125, -125, 143, -58, -100, -39, -51, -58,
	-126, -127, -9, 127, 93, 6, -53, -52, -139, 29,
	157, 152, 157, -58, -58, 152, 152, 152, 141, 148,
	-134, -141, 71, -67, -58, -58, -125, 152, 152, -1,
	-58, -58, -58, -134, -58, 72, 68, 73, -60, 152,
	-67, -58, 66, 65, -58, -58, -58, -58, -58, -58,
	-58, 89, -100, -73, 152, -96, -117, -97, 88, -47,
	43, 24, -88, -86, -125, 28, 17, -88, -43, 17,
	62, 63, 64, -133, 76, -125, -86, 156, 143, 94,
	42, 121, 122, -125, -125, -125, 148, 148, -125, -58,
	-58, 17, 156, 60, 60, -58, 6, -58, 153, 156,
	153, 153, 91, 68, 156, 68, -126, -127, 156, -125,
	-125, 6, -73, -133, -100, -58, -125, 6, 153, -103,
	-94, -93, -59, -58, -77, 147, -125, 136, 134, 137,
	138, 139, 140, -133, -133, -60, -60, 72, 68, 66,
	65, 74, 134, -133, -58, -55, -56, 69, -58, -60,
	-58, -60, -60, -1, 153, 88, -118, 90, -98, 90,
	-58, -48, 49, 46, -87, -86, 19, 156, -101, -90,
	-87, -89, -91, 27, 152, -67, 133, -125, 17, -44,
	22, -101, -138, 65, -138, -138, -103, 152, -140, 26,
	31, 32, 40, 19, -130, -58, 95, 152, 26, 152,
	152, -58, -125, -125, -58, 24, -125, -100, -100, -100,
	-58, -100, -2, -12, -5, -13, 85, 84, -8, -10,
	-6, 109, 110, -125, -127, -126, -125, 68, 68, -53,
	26, 152, 153, -73, 153, 156, 26, 152, 152, 152,
	152, 152, 152, 152, -73, -73, -59, -60, -69, 152,
	-67, 132, -69, -69, -134, -73, 156, -58, 69, -110,
	-109, 90, 86, -58, 92, -1, 92, -58, 89, -50,
	50, -58, -62, -63, -64, -58, -77, 25, 152, -39,
	-125, 26, -107, -106, -57, -125, -88, -44, 58, -135,
	-137, 57, 61, 156, 53, 55, 56, -125, 26, -90,
	152, 152, -101, -45, 44, -58, -41, -40, -41, -41,
	-102, -125, -39, -24, 152, -125, -57, 152, -57, -125,
	-39, -102, -39, 153, -33, -30, -32, -29, -31, -126,
	-125, -127, 92, 146, -58, -96, 91, 91, -125, -125,
	152, -102, 153, -103, -125, -73, -133, -133, -133, -133,
	-73, -73, -73, 153, 153, 153, 69, -61, -60, 152,
	97, 68, 153, -58, -58, 92, -110, -1, -58, 89,
	84, -58, -1, -58, -49, 51, 77, 156, -65, 47,
	48, -61, -99, -57, -125, -43, 156, 148, 52, 52,
	-136, 54, -136, -135, -137, -101, -125, 153, -58, -58,
	-44, -46, 45, 46, 153, 156, -26, 35, 36, 37,
	38, -25, -24, 39, -99, 41, 41, 153, 26, 153,
	156, 156, 39, 153, 156, 87, -2, 89, -119, 88,
	-2, -2, 91, 91, -39, 153, 153, -73, -73, -73,
	-59, -73, 153, 153, 153, -60, 153, 156, -58, 78,
	126, 153, 85, 92, 89, -58, -97, -117, 88, -49,
	129, -62, 130, 153, 156, -44, -107, -58, -90, -90,
	52, 52, 52, -136, 156, 156, -58, -100, -140, -102,
	-57, -57, 153, 156, -58, 153, -125, -125, -58, 26,
	123, 26, -29, -32, -32, -126, -58, 26, -33, -2,
	-120, 90, -58, 92, 92, -2, -2, 153, 26, 106,
	153, 153, 153, 153, 153, 106, 106, 125, 106, 125,
	-61, 156, 44, 85, -1, -58, -66, 35, 36, 25,
	-39, -99, -92, 59, 60, -90, -90, -90, 52, -125,
	-58, -125, -39, -26, -25, -39, -3, -14, -5, -18,
	85, 84, -15, -16, 87, 124, 123, 123, 153, -112,
	-111, 90, 86, 92, -2, 89, 87, 87, 92, 92,
	152, 152, 106, 106, 106, 106, 106, 152, 152, 130,
	152, 130, -58, 152, -109, 89, -61, -58, 152, -92,
	59, -90, 153, 153, 153, 156, 92, 146, -58, -96,
	-58, -126, -127, -58, -3, -3, 26, 92, -112, -2,
	-58, 84, -2, 87, 87, -39, -79, -78, -80, 105,
	152, 152, 152, 152, 152, -78, -80, -79, 106, -78,
	106, 153, -47, -102, -58, -73, -3, 89, -121, 88,
	91, 68, 68, 92, 92, 123, 85, 92, 89, -119,
	88, 153, 153, -47, 43, 46, -79, -79, -79, -79,
	-78, 153, 153, 152, 153, 152, 153, 153, 153, -3,
	-122, 90, -58, -4, -17, -5, -19, 85, 84, -15,
	-16, -6, -125, -125, -3, 85, -2, -58, 46, -100,
	153, 153, 153, 153, 153, -79, -78, -114, -113, 90,
	86, 92, -3, 89, 92, 146, -58, -96, 91, 91,
	92, -111, 89, -62, 153, 153, 92, -114, -3, -58,
	84, -3, 87, -4, 89, -123, 88, -4, -4, -81,
	131, 85, 92, 89, -121, 88, -4, -124, 90, -58,
	92, 92, -82, 72, 79, 6, 82, 85, -3, -58,
	-116, -115, 90, 86, 92, -4, 89, 87, 87, -84,
	79, -83, 6, 82, 80, 80, 83, -113, 89, 92,
	-116, -4, -58, 84, -4, 69, 80, 80, 81, 83,
	85, 92, 89, -123, 88, -85, 79, -83, 85, -4,
	-58, 81, -115, 89,
}
var yyDef = [...]int{

	-2, -2, 2, 27, 28, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	0, 337, 43, 44, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 122, 78, 79, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 209,
	210, 211, 178, 0, 36, 423, 192, 0, 184, 185,
	186, 187, 188, 189, 0, 0, 0, 0, 0, 275,
	413, 0, 0, 0, 401, 409, 410, 0, 397, 398,
	399, 400, 190, 191, 0, 0, -2, 0, 427, 428,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 208, 0, 337, 0, 338,
	-2, 0, 0, 0, 161, 0, 411, 159, 178, 0,
	0, 71, 407, 405, 72, 0, 74, 0, 0, 0,
	0, 0, 77, 100, 101, 0, 123, 124, 125, 126,
	0, 0, 134, 144, 135, 136, 137, -2, 141, 142,
	-2, 147, 149, 150, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 34, 35, 37, 179, 182, 0, 424,
	0, 265, 0, 259, 260, 0, 411, 411, 427, 428,
	0, 0, 414, 253, 263, 264, 0, 411, 0, 3,
	231, -2, -2, 0, 0, 0, 0, 0, 244, 178,
	215, -2, 0, 0, 254, 255, 256, 257, 258, 261,
	262, -2, 0, 0, 265, 0, 383, 341, 0, 171,
	0, 0, 0, 349, 306, 307, 0, 0, 163, 0,
	421, 421, 421, 0, 412, 425, 0, 0, 0, 0,
	0, 0, 0, 102, 107, 121, 0, 0, 0, 127,
	128, 0, 0, 0, 0, 151, 185, 404, 212, 0,
	214, 230, -2, 0, 0, 0, 0, 0, 423, 0,
	193, 195, 0, 265, 266, 345, 194, 196, 268, 0,
	353, 333, 335, 331, 332, 213, 192, 0, 0, 0,
	0, 0, 0, 265, 265, 236, 238, 0, 0, 0,
	0, 413, 131, 265, 0, 239, 240, 0, 0, 245,
	-2, 249, 251, 367, 270, 0, 0, -2, 0, 0,
	0, 176, 0, 0, 178, 308, 0, 0, 163, -2,
	316, 317, 320, 321, 178, 311, 0, 306, 0, 165,
	0, 162, 0, 422, 0, 0, 160, 0, 178, 426,
	0, 0, 0, 0, 408, 406, 178, 0, 178, 0,
	0, 75, -2, -2, 133, 0, 145, 138, 139, 143,
	152, 346, 0, 0, 38, 39, 0, 337, 48, 49,
	50, 25, 26, 0, 403, 402, 0, 0, 0, 183,
	0, 0, 267, 0, 269, 0, 0, 265, 411, 411,
	411, 265, 265, 265, 0, 0, 0, 0, 246, 178,
	233, 0, 250, 252, 0, 0, 0, 241, 0, 0,
	367, -2, 0, 0, 0, 384, 336, 342, -2, 153,
	0, 174, 170, 219, 225, 223, 224, 0, 0, 357,
	309, 0, 161, 361, 0, 192, 350, 363, 0, 0,
	417, 417, 415, 0, 416, 419, 420, 318, 0, 415,
	0, 0, 163, 167, 0, 164, 155, 158, 156, 157,
	0, 351, 82, 94, 0, 90, 85, 0, 0, 0,
	99, 0, 106, 0, 0, 114, 115, 109, 112, 108,
	0, 103, 0, -2, 0, 0, -2, -2, 0, 0,
	178, 0, 271, 354, 334, 0, 265, 265, 265, 265,
	0, 0, 0, 272, 273, 274, 0, 0, 217, 0,
	129, 0, 276, 0, 242, 0, 0, 368, 0, 0,
	42, 23, 381, 177, 172, 174, 0, 0, 221, 226,
	227, 355, 0, 343, 310, 163, 0, 0, 0, 0,
	0, 418, 0, 0, 417, 348, 319, 322, 0, 0,
	364, 154, 0, 0, -2, 0, 83, 95, 96, 0,
	0, 0, 92, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 0, 0, 29, 5, -2, 387, 0,
	0, 0, -2, -2, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 232, 0, 0, 130,
	0, 216, 40, 0, -2, 339, 340, 382, 0, 173,
	175, 220, 0, 178, 0, 359, 362, 360, 323, 415,
	0, 0, 0, 0, 0, 0, 168, 166, 178, 352,
	97, 98, 94, 0, 91, 86, 87, -2, 89, 178,
	-2, 0, 110, 116, 113, 0, 111, 0, 0, 371,
	0, -2, 0, 0, 0, 0, 0, 180, 0, 0,
	271, 272, 273, 274, 276, 0, 0, 0, 0, 0,
	218, 0, 0, 41, 365, 0, 222, 228, 229, 0,
	358, 344, 324, 0, 0, 415, 415, 327, 0, 192,
	0, 0, 81, 84, 93, 105, 0, 0, 51, 52,
	0, 337, 63, 64, 0, 56, -2, -2, 0, 0,
	371, -2, 0, 0, 388, -2, 30, 31, 0, 0,
	178, 292, 0, 0, 0, 0, 0, 292, 292, 0,
	292, 0, 0, 169, 366, -2, 356, 329, 0, 325,
	0, 328, 312, 313, 314, 265, 117, -2, 0, 0,
	0, 207, 0, 57, 0, 0, 0, 0, 0, 372,
	0, 47, 385, 32, 33, 0, 0, 290, 169, 0,
	292, 292, 292, 292, 292, 0, 169, 0, 0, 0,
	0, 234, 0, 0, 326, 0, 7, -2, 391, 0,
	-2, 0, 0, 118, 119, -2, 45, 0, -2, 386,
	0, 181, 278, 289, 0, 0, 0, 0, 0, 0,
	0, 284, 285, 292, 287, 292, 277, 330, 315, 375,
	0, -2, 0, 0, 0, 58, 59, 0, 337, 68,
	69, 70, 0, 0, 0, 46, 369, 0, 0, 293,
	279, 280, 281, 282, 283, 0, 0, 0, 375, -2,
	0, 0, 392, -2, 0, -2, 0, 0, -2, -2,
	120, 370, -2, 170, 286, 288, 0, 0, 376, 0,
	62, 389, 53, 9, -2, 395, 0, 0, 0, 291,
	0, 60, 0, -2, 390, 0, 379, 0, -2, 0,
	0, 0, 294, 0, 0, 0, 0, 61, 373, 0,
	0, 379, -2, 0, 0, 396, -2, 54, 55, 0,
	0, 303, 0, 0, 296, 297, 298, 374, -2, 0,
	0, 380, 0, 67, 393, 0, 302, 299, 300, 301,
	65, 0, -2, 394, 0, 295, 0, 305, 66, 377,
	0, 304, 378, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 151, 3, 3, 3, 155, 3, 3,
	152, 153, 147, 150, 156, 149, 157, 154, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 146,
	3, 148,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:231
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:236
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:247
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:257
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:267
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:377
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:381
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = Exit{}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:391
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:419
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:533
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:569
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:593
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:597
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:601
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:605
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:609
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:613
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:631
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:635
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:641
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:645
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:651
		{
			yyVAL.expression = nil
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:655
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:659
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:663
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:667
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:673
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:677
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:681
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:685
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:689
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 104:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:695
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:699
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:703
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:707
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:713
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:719
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:723
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:729
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:735
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:739
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:745
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:749
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:753
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 117:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:759
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 118:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:763
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 119:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:767
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 120:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:771
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:775
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:781
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:785
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:789
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:793
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:797
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:801
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:805
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:811
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:815
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:819
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:825
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:829
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:833
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:849
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:853
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:857
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:861
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:865
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:869
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:873
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:877
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:881
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:885
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:889
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:893
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:899
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:903
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:907
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:913
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:925
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:935
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:944
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:953
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:964
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:974
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = nil
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:984
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:990
		{
			yyVAL.queryexpr = nil
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:994
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.queryexpr = nil
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.queryexpr = nil
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexpr = nil
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = nil
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1034
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = nil
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.queryexpr = nil
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.queryexpr = nil
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 180:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 181:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1162
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1166
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1182
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1186
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1202
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1206
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1220
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1226
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 216:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1240
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1244
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1260
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1264
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1270
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1280
		{
			yyVAL.token = Token{}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1284
		{
			yyVAL.token = yyDollar[1].token
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1288
		{
			yyVAL.token = yyDollar[1].token
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.token = yyDollar[1].token
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1298
		{
			yyVAL.token = yyDollar[1].token
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1304
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1310
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 234:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1347
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1351
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1355
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 243:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1383
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1387
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1391
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1433
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1437
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1449
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1459
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1463
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1467
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexprs = nil
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1477
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1506
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1510
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1514
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1518
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 277:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1534
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 279:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 280:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 281:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1546
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 282:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 283:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1554
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 285:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 286:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 287:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 288:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1580
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1590
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1597
		{
			yyVAL.queryexpr = nil
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1607
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1611
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1617
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1621
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1632
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1637
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 314:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 325:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 326:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.queryexpr = nil
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.queryexpr = nil
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 356:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 358:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 359:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1940
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1945
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1952
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.elseexpr = Else{}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.elseexpr = Else{}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.elseexpr = Else{}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.elseexpr = Else{}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2032
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2052
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2072
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2076
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2092
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2096
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2112
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2120
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2124
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2130
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2140
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2146
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2166
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2184
		{
			yyVAL.token = Token{}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.token = yyDollar[1].token
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2194
		{
			yyVAL.token = Token{}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.token = yyDollar[1].token
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2204
		{
			yyVAL.token = Token{}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.token = yyDollar[1].token
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2214
		{
			yyVAL.token = Token{}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.token = yyDollar[1].token
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2234
		{
			yyVAL.token = Token{}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2238
		{
			yyVAL.token = yyDollar[1].token
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2244
		{
			yyVAL.token = Token{}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2248
		{
			yyVAL.token = yyDollar[1].token
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2254
		{
			yyVAL.token = Token{}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2258
		{
			yyVAL.token = yyDollar[1].token
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2268
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
