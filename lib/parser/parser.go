//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import "github.com/mithrandie/csvq/lib/value"

//line parser.y:7
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const ORDER = 57380
const GROUP = 57381
const HAVING = 57382
const BY = 57383
const ASC = 57384
const DESC = 57385
const LIMIT = 57386
const OFFSET = 57387
const PERCENT = 57388
const JOIN = 57389
const INNER = 57390
const OUTER = 57391
const LEFT = 57392
const RIGHT = 57393
const FULL = 57394
const CROSS = 57395
const ON = 57396
const USING = 57397
const NATURAL = 57398
const UNION = 57399
const INTERSECT = 57400
const EXCEPT = 57401
const ALL = 57402
const ANY = 57403
const EXISTS = 57404
const IN = 57405
const AND = 57406
const OR = 57407
const NOT = 57408
const BETWEEN = 57409
const LIKE = 57410
const IS = 57411
const NULL = 57412
const DISTINCT = 57413
const WITH = 57414
const CASE = 57415
const IF = 57416
const ELSEIF = 57417
const WHILE = 57418
const WHEN = 57419
const THEN = 57420
const ELSE = 57421
const DO = 57422
const END = 57423
const DECLARE = 57424
const CURSOR = 57425
const FOR = 57426
const FETCH = 57427
const OPEN = 57428
const CLOSE = 57429
const DISPOSE = 57430
const NEXT = 57431
const PRIOR = 57432
const ABSOLUTE = 57433
const RELATIVE = 57434
const RANGE = 57435
const SEPARATOR = 57436
const PARTITION = 57437
const OVER = 57438
const COMMIT = 57439
const ROLLBACK = 57440
const CONTINUE = 57441
const BREAK = 57442
const EXIT = 57443
const PRINT = 57444
const PRINTF = 57445
const SOURCE = 57446
const TRIGGER = 57447
const FUNCTION = 57448
const AGGREGATE = 57449
const BEGIN = 57450
const RETURN = 57451
const IGNORE = 57452
const WITHIN = 57453
const VAR = 57454
const TIES = 57455
const NULLS = 57456
const ERROR = 57457
const COUNT = 57458
const LISTAGG = 57459
const AGGREGATE_FUNCTION = 57460
const FUNCTION_WITH_INS = 57461
const COMPARISON_OP = 57462
const STRING_OP = 57463
const SUBSTITUTION_OP = 57464
const UMINUS = 57465
const UPLUS = 57466

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"RANGE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"TIES",
	"NULLS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2027

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 153,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 53,
	13, 153,
	15, 153,
	17, 153,
	19, 153,
	131, 153,
	-2, 1,
	-1, 55,
	132, 234,
	-2, 153,
	-1, 93,
	77, 284,
	-2, 361,
	-1, 95,
	57, 133,
	58, 133,
	59, 133,
	-2, 144,
	-1, 125,
	63, 361,
	67, 361,
	68, 361,
	-2, 121,
	-1, 126,
	63, 361,
	67, 361,
	68, 361,
	-2, 122,
	-1, 127,
	63, 361,
	67, 361,
	68, 361,
	-2, 124,
	-1, 139,
	75, 1,
	79, 1,
	81, 1,
	-2, 153,
	-1, 198,
	63, 361,
	67, 361,
	68, 361,
	-2, 291,
	-1, 210,
	63, 361,
	67, 361,
	68, 361,
	-2, 115,
	-1, 211,
	63, 361,
	67, 361,
	68, 361,
	-2, 116,
	-1, 214,
	63, 361,
	67, 361,
	68, 361,
	-2, 126,
	-1, 216,
	81, 4,
	-2, 153,
	-1, 225,
	69, 0,
	120, 0,
	127, 0,
	-2, 204,
	-1, 226,
	69, 0,
	120, 0,
	127, 0,
	-2, 206,
	-1, 266,
	81, 1,
	-2, 153,
	-1, 276,
	47, 363,
	-2, 293,
	-1, 295,
	63, 361,
	67, 361,
	68, 361,
	-2, 277,
	-1, 311,
	63, 361,
	67, 361,
	68, 361,
	-2, 356,
	-1, 320,
	63, 361,
	67, 361,
	68, 361,
	-2, 127,
	-1, 341,
	81, 1,
	-2, 153,
	-1, 347,
	69, 0,
	120, 0,
	127, 0,
	-2, 215,
	-1, 369,
	77, 1,
	79, 1,
	81, 1,
	-2, 153,
	-1, 372,
	63, 361,
	67, 361,
	68, 361,
	-2, 149,
	-1, 376,
	63, 361,
	67, 361,
	68, 361,
	-2, 195,
	-1, 404,
	63, 361,
	67, 361,
	68, 361,
	-2, 139,
	-1, 438,
	75, 4,
	77, 4,
	79, 4,
	81, 4,
	-2, 153,
	-1, 441,
	81, 4,
	-2, 153,
	-1, 442,
	81, 4,
	-2, 153,
	-1, 455,
	81, 288,
	-2, 361,
	-1, 467,
	63, 361,
	67, 361,
	68, 361,
	-2, 152,
	-1, 504,
	13, 373,
	72, 373,
	131, 373,
	-2, 71,
	-1, 526,
	75, 4,
	79, 4,
	81, 4,
	-2, 153,
	-1, 535,
	75, 1,
	79, 1,
	81, 1,
	-2, 153,
	-1, 537,
	79, 285,
	81, 285,
	-2, 361,
	-1, 554,
	63, 361,
	67, 361,
	68, 361,
	-2, 306,
	-1, 561,
	63, 361,
	67, 361,
	68, 361,
	-2, 143,
	-1, 576,
	63, 361,
	67, 361,
	68, 361,
	-2, 80,
	-1, 580,
	81, 6,
	-2, 153,
	-1, 586,
	132, 100,
	135, 100,
	-2, 361,
	-1, 591,
	81, 4,
	-2, 153,
	-1, 637,
	81, 6,
	-2, 153,
	-1, 638,
	81, 6,
	-2, 153,
	-1, 642,
	81, 4,
	-2, 153,
	-1, 646,
	77, 4,
	79, 4,
	81, 4,
	-2, 153,
	-1, 653,
	63, 361,
	67, 361,
	68, 361,
	-2, 275,
	-1, 667,
	75, 6,
	77, 6,
	79, 6,
	81, 6,
	-2, 153,
	-1, 673,
	125, 51,
	-2, 361,
	-1, 686,
	63, 361,
	67, 361,
	68, 361,
	-2, 272,
	-1, 698,
	75, 6,
	79, 6,
	81, 6,
	-2, 153,
	-1, 701,
	81, 8,
	-2, 153,
	-1, 706,
	81, 6,
	-2, 153,
	-1, 709,
	75, 4,
	79, 4,
	81, 4,
	-2, 153,
	-1, 726,
	81, 6,
	-2, 153,
	-1, 751,
	81, 6,
	-2, 153,
	-1, 755,
	77, 6,
	79, 6,
	81, 6,
	-2, 153,
	-1, 757,
	75, 8,
	77, 8,
	79, 8,
	81, 8,
	-2, 153,
	-1, 760,
	81, 8,
	-2, 153,
	-1, 761,
	81, 8,
	-2, 153,
	-1, 773,
	75, 8,
	79, 8,
	81, 8,
	-2, 153,
	-1, 780,
	75, 6,
	79, 6,
	81, 6,
	-2, 153,
	-1, 784,
	81, 8,
	-2, 153,
	-1, 792,
	81, 8,
	-2, 153,
	-1, 796,
	77, 8,
	79, 8,
	81, 8,
	-2, 153,
	-1, 808,
	75, 8,
	79, 8,
	81, 8,
	-2, 153,
}

const yyPrivate = 57344

const yyLast = 2510

var yyAct = [...]int{

	69, 23, 774, 790, 791, 641, 699, 92, 749, 750,
	640, 527, 180, 197, 608, 131, 506, 634, 416, 252,
	276, 340, 633, 511, 84, 458, 429, 284, 111, 432,
	476, 115, 116, 484, 383, 305, 296, 291, 177, 275,
	687, 157, 373, 431, 294, 512, 194, 468, 189, 1,
	321, 56, 391, 339, 23, 390, 100, 144, 76, 74,
	272, 277, 107, 57, 133, 183, 329, 287, 411, 155,
	328, 21, 406, 159, 327, 20, 395, 159, 396, 397,
	392, 389, 702, 522, 393, 148, 523, 147, 146, 175,
	110, 167, 149, 150, 217, 95, 629, 3, 185, 185,
	160, 161, 575, 138, 140, 159, 199, 185, 179, 148,
	728, 147, 146, 148, 207, 208, 149, 150, 209, 551,
	149, 150, 52, 540, 21, 520, 519, 395, 20, 396,
	397, 392, 389, 505, 480, 393, 221, 471, 218, 409,
	23, 137, 170, 274, 220, 201, 196, 764, 378, 747,
	3, 757, 746, 137, 218, 745, 744, 743, 184, 184,
	245, 722, 248, 394, 188, 714, 218, 200, 713, 712,
	711, 639, 620, 619, 618, 617, 152, 151, 153, 616,
	101, 143, 97, 185, 98, 595, 96, 577, 185, 223,
	574, 185, 569, 254, 257, 298, 563, 627, 550, 42,
	542, 227, 196, 541, 539, 532, 518, 247, 516, 504,
	21, 491, 250, 251, 20, 464, 453, 23, 332, 42,
	335, 452, 451, 264, 450, 101, 303, 319, 242, 337,
	286, 95, 141, 140, 333, 244, 3, 243, 148, 142,
	147, 146, 314, 428, 271, 149, 150, 241, 723, 694,
	306, 693, 692, 691, 346, 350, 348, 349, 379, 690,
	289, 290, 664, 43, 310, 658, 654, 23, 255, 179,
	651, 298, 649, 381, 386, 185, 318, 443, 255, 398,
	415, 414, 185, 358, 185, 336, 344, 343, 413, 351,
	412, 363, 352, 353, 361, 359, 354, 316, 103, 315,
	176, 103, 400, 388, 166, 417, 366, 377, 421, 386,
	386, 165, 164, 323, 417, 104, 368, 435, 481, 212,
	365, 667, 438, 401, 53, 385, 202, 137, 66, 51,
	128, 665, 426, 436, 440, 184, 549, 21, 338, 417,
	387, 20, 23, 103, 405, 153, 407, 408, 547, 262,
	663, 313, 621, 419, 544, 109, 109, 444, 112, 304,
	422, 424, 696, 3, 662, 544, 622, 689, 706, 130,
	23, 638, 44, 45, 50, 46, 47, 48, 49, 637,
	386, 580, 51, 478, 459, 43, 459, 460, 459, 461,
	420, 447, 661, 660, 446, 185, 263, 204, 659, 168,
	490, 615, 543, 459, 475, 70, 169, 463, 312, 807,
	298, 497, 21, 800, 794, 787, 20, 145, 52, 466,
	786, 421, 779, 765, 386, 761, 486, 120, 121, 492,
	462, 477, 479, 762, 489, 756, 753, 114, 3, 23,
	21, 708, 23, 23, 20, 705, 488, 496, 760, 487,
	203, 704, 677, 498, 514, 666, 644, 503, 499, 500,
	501, 502, 775, 594, 593, 534, 3, 454, 51, 445,
	437, 367, 298, 205, 206, 477, 793, 442, 441, 792,
	792, 386, 538, 185, 185, 118, 119, 122, 123, 525,
	113, 784, 529, 530, 44, 45, 50, 46, 47, 48,
	49, 751, 171, 555, 556, 545, 417, 552, 377, 562,
	386, 386, 423, 726, 548, 553, 578, 546, 642, 752,
	591, 643, 560, 751, 571, 642, 341, 23, 356, 342,
	109, 266, 385, 341, 198, 323, 23, 700, 323, 323,
	570, 564, 565, 566, 568, 51, 567, 334, 528, 582,
	588, 178, 386, 54, 93, 67, 28, 599, 185, 185,
	185, 572, 573, 583, 584, 459, 600, 253, 798, 797,
	771, 125, 126, 127, 648, 129, 421, 589, 611, 612,
	613, 23, 607, 647, 524, 598, 793, 752, 643, 342,
	154, 624, 23, 810, 806, 51, 71, 72, 73, 625,
	90, 75, 788, 477, 778, 740, 21, 707, 597, 28,
	20, 533, 162, 163, 804, 185, 769, 681, 93, 465,
	650, 173, 174, 323, 42, 470, 655, 605, 195, 154,
	459, 652, 3, 259, 153, 657, 457, 258, 23, 23,
	669, 703, 645, 23, 434, 90, 334, 23, 219, 229,
	288, 672, 678, 228, 230, 417, 192, 210, 211, 261,
	260, 91, 485, 214, 684, 232, 231, 614, 23, 559,
	51, 558, 222, 685, 557, 224, 225, 226, 42, 371,
	483, 233, 234, 235, 236, 237, 238, 239, 323, 191,
	192, 193, 482, 679, 710, 28, 269, 682, 51, 23,
	716, 715, 23, 737, 738, 695, 91, 23, 473, 474,
	23, 495, 395, 267, 396, 397, 392, 389, 656, 735,
	393, 270, 61, 9, 734, 494, 601, 23, 403, 295,
	742, 717, 718, 719, 720, 721, 181, 311, 515, 323,
	521, 759, 395, 323, 396, 397, 513, 763, 307, 308,
	320, 136, 23, 603, 604, 106, 23, 309, 23, 766,
	741, 23, 23, 345, 748, 347, 105, 51, 736, 676,
	51, 51, 28, 596, 23, 735, 9, 781, 735, 735,
	734, 23, 587, 734, 734, 23, 581, 579, 357, 306,
	517, 735, 410, 23, 317, 801, 734, 23, 730, 799,
	182, 43, 735, 285, 372, 376, 323, 734, 809, 23,
	735, 187, 273, 190, 735, 734, 812, 283, 124, 734,
	404, 186, 28, 52, 736, 132, 735, 736, 736, 135,
	108, 734, 783, 725, 590, 674, 675, 265, 8, 395,
	736, 396, 397, 392, 389, 609, 610, 393, 434, 585,
	384, 736, 434, 7, 730, 51, 6, 730, 730, 736,
	439, 93, 9, 736, 51, 697, 355, 63, 772, 292,
	730, 776, 777, 153, 293, 736, 143, 448, 279, 278,
	688, 730, 82, 62, 782, 65, 22, 58, 64, 730,
	59, 455, 602, 730, 472, 795, 724, 28, 507, 508,
	509, 510, 375, 802, 739, 730, 467, 805, 374, 51,
	44, 45, 50, 46, 47, 48, 49, 134, 370, 811,
	51, 268, 493, 402, 754, 28, 99, 141, 140, 17,
	16, 68, 117, 148, 142, 147, 146, 14, 433, 9,
	149, 150, 158, 430, 295, 13, 12, 10, 15, 767,
	11, 731, 630, 770, 729, 152, 151, 153, 5, 628,
	143, 324, 322, 4, 671, 2, 51, 51, 0, 0,
	0, 51, 0, 0, 0, 51, 0, 0, 789, 0,
	0, 158, 0, 0, 536, 0, 0, 0, 0, 9,
	158, 537, 0, 0, 28, 0, 51, 28, 28, 0,
	0, 0, 0, 152, 151, 153, 376, 0, 143, 0,
	0, 141, 140, 469, 156, 0, 554, 148, 142, 147,
	146, 0, 0, 240, 149, 150, 241, 51, 0, 561,
	51, 152, 151, 153, 0, 51, 143, 0, 51, 470,
	0, 152, 151, 153, 0, 0, 143, 0, 576, 0,
	0, 0, 0, 156, 0, 51, 586, 701, 0, 141,
	140, 0, 156, 592, 9, 148, 142, 147, 146, 0,
	0, 0, 149, 150, 213, 0, 0, 0, 0, 0,
	51, 0, 28, 0, 51, 0, 51, 141, 140, 51,
	51, 28, 9, 148, 142, 147, 146, 141, 140, 0,
	149, 150, 51, 148, 142, 147, 146, 0, 0, 51,
	149, 150, 0, 51, 0, 0, 0, 0, 152, 151,
	153, 51, 0, 143, 0, 51, 0, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 28, 51, 0, 0,
	0, 0, 158, 0, 653, 0, 0, 28, 152, 151,
	153, 0, 0, 143, 0, 0, 60, 0, 158, 0,
	0, 9, 796, 0, 9, 9, 668, 93, 158, 0,
	670, 673, 0, 0, 141, 140, 0, 0, 680, 102,
	148, 142, 147, 146, 0, 0, 0, 149, 150, 0,
	0, 686, 158, 28, 28, 0, 0, 0, 28, 158,
	0, 158, 28, 0, 141, 140, 0, 0, 0, 0,
	148, 142, 147, 146, 156, 0, 0, 149, 150, 0,
	0, 0, 0, 28, 0, 0, 0, 152, 151, 153,
	380, 0, 143, 0, 0, 727, 0, 0, 0, 0,
	156, 780, 172, 0, 0, 0, 158, 0, 158, 9,
	158, 0, 0, 0, 28, 0, 0, 28, 9, 0,
	0, 0, 28, 0, 418, 28, 43, 758, 93, 0,
	0, 425, 0, 427, 0, 0, 0, 0, 0, 0,
	0, 0, 28, 141, 140, 280, 186, 768, 0, 148,
	142, 147, 146, 0, 0, 0, 149, 150, 0, 0,
	0, 0, 0, 9, 0, 0, 0, 28, 0, 0,
	785, 28, 0, 28, 9, 102, 28, 28, 156, 0,
	156, 0, 156, 0, 0, 256, 256, 0, 803, 28,
	158, 0, 0, 0, 42, 0, 28, 0, 0, 0,
	28, 152, 151, 153, 282, 0, 143, 282, 28, 0,
	0, 0, 28, 0, 0, 773, 0, 0, 0, 0,
	9, 9, 0, 0, 28, 9, 0, 0, 0, 9,
	0, 0, 0, 0, 0, 44, 45, 50, 46, 47,
	48, 49, 0, 0, 0, 0, 256, 0, 256, 256,
	9, 0, 0, 281, 0, 0, 0, 141, 140, 0,
	0, 0, 531, 148, 142, 147, 146, 152, 151, 153,
	149, 150, 143, 0, 0, 256, 360, 362, 364, 0,
	253, 9, 0, 0, 9, 0, 0, 0, 0, 9,
	0, 0, 9, 43, 0, 0, 0, 158, 282, 0,
	282, 0, 0, 0, 102, 0, 102, 102, 0, 9,
	0, 0, 280, 186, 0, 43, 0, 158, 0, 0,
	0, 0, 0, 141, 140, 0, 158, 0, 0, 148,
	142, 147, 146, 0, 9, 70, 149, 150, 9, 0,
	9, 0, 0, 9, 9, 0, 0, 0, 0, 0,
	0, 0, 43, 71, 72, 73, 9, 90, 75, 52,
	0, 0, 0, 9, 0, 0, 0, 9, 0, 606,
	0, 0, 70, 0, 0, 9, 256, 0, 256, 9,
	256, 43, 71, 72, 73, 0, 90, 75, 52, 623,
	0, 9, 0, 0, 0, 256, 158, 0, 626, 0,
	0, 70, 44, 45, 50, 46, 47, 48, 49, 0,
	85, 282, 0, 0, 86, 43, 0, 0, 91, 195,
	281, 83, 79, 43, 44, 45, 50, 46, 47, 48,
	49, 88, 0, 399, 0, 0, 0, 0, 0, 85,
	0, 382, 0, 86, 0, 0, 0, 91, 0, 0,
	83, 79, 0, 152, 151, 153, 0, 0, 143, 0,
	88, 44, 45, 50, 81, 89, 80, 49, 683, 216,
	43, 0, 249, 0, 256, 0, 77, 78, 87, 94,
	0, 43, 71, 72, 73, 0, 90, 75, 52, 0,
	44, 45, 50, 81, 89, 80, 49, 0, 0, 282,
	282, 70, 0, 297, 0, 77, 78, 87, 94, 141,
	140, 0, 0, 0, 0, 148, 142, 147, 146, 0,
	0, 0, 149, 150, 44, 45, 50, 46, 47, 48,
	49, 0, 44, 45, 50, 46, 47, 48, 49, 85,
	0, 0, 0, 86, 0, 0, 0, 91, 0, 0,
	83, 79, 0, 0, 0, 0, 152, 256, 153, 0,
	88, 143, 0, 0, 0, 0, 43, 71, 72, 73,
	0, 90, 75, 52, 282, 282, 282, 0, 0, 44,
	45, 50, 46, 47, 48, 49, 70, 0, 0, 0,
	44, 45, 50, 300, 301, 299, 302, 0, 0, 0,
	0, 0, 0, 297, 0, 77, 78, 87, 94, 0,
	0, 0, 141, 140, 0, 0, 0, 0, 148, 142,
	147, 146, 256, 0, 85, 149, 150, 0, 86, 0,
	0, 282, 91, 0, 42, 83, 79, 43, 71, 72,
	73, 0, 90, 75, 52, 88, 0, 0, 152, 151,
	153, 0, 0, 143, 0, 0, 0, 70, 0, 0,
	0, 0, 43, 71, 72, 73, 0, 90, 75, 52,
	0, 0, 0, 0, 0, 44, 45, 50, 81, 89,
	80, 49, 70, 0, 0, 0, 0, 0, 0, 0,
	77, 78, 87, 94, 0, 85, 0, 0, 0, 86,
	0, 0, 0, 91, 141, 140, 83, 79, 0, 0,
	148, 142, 147, 146, 0, 0, 88, 149, 150, 0,
	85, 0, 0, 0, 86, 0, 0, 0, 91, 0,
	0, 83, 79, 43, 71, 72, 73, 0, 90, 75,
	52, 88, 0, 0, 0, 0, 44, 45, 50, 81,
	89, 80, 49, 70, 0, 0, 0, 0, 0, 0,
	0, 77, 78, 87, 94, 152, 151, 153, 0, 0,
	143, 44, 45, 50, 81, 89, 80, 49, 0, 755,
	0, 0, 0, 0, 0, 0, 77, 78, 87, 55,
	0, 85, 0, 0, 0, 86, 0, 0, 0, 91,
	0, 0, 83, 79, 43, 71, 215, 73, 0, 90,
	75, 52, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 140, 0, 70, 0, 0, 148, 142, 147,
	146, 0, 0, 0, 149, 150, 152, 151, 153, 0,
	0, 143, 44, 45, 50, 300, 301, 299, 302, 0,
	709, 0, 0, 0, 0, 0, 0, 77, 78, 87,
	94, 0, 85, 0, 43, 0, 86, 0, 0, 0,
	91, 52, 0, 83, 79, 0, 35, 0, 0, 0,
	0, 0, 0, 88, 43, 0, 24, 0, 0, 25,
	0, 0, 141, 140, 0, 0, 0, 0, 148, 142,
	147, 146, 0, 0, 186, 149, 150, 0, 0, 0,
	0, 0, 43, 44, 45, 50, 81, 89, 80, 49,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 78,
	87, 94, 42, 733, 732, 0, 635, 0, 0, 0,
	0, 0, 27, 0, 0, 32, 30, 31, 29, 0,
	449, 151, 153, 0, 0, 143, 0, 33, 34, 330,
	331, 0, 36, 37, 38, 39, 0, 0, 0, 636,
	0, 0, 26, 44, 45, 50, 46, 47, 48, 49,
	43, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 35, 44, 45, 50, 46, 47, 48, 49,
	0, 0, 24, 0, 0, 25, 141, 140, 0, 0,
	0, 0, 148, 142, 147, 146, 0, 0, 0, 149,
	150, 44, 45, 50, 46, 47, 48, 49, 0, 43,
	0, 0, 0, 0, 0, 0, 52, 43, 0, 246,
	0, 35, 0, 0, 0, 0, 0, 0, 42, 326,
	325, 24, 40, 0, 25, 0, 0, 0, 27, 0,
	0, 32, 30, 31, 29, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 330, 331, 41, 36, 37,
	38, 39, 0, 0, 0, 0, 0, 0, 26, 44,
	45, 50, 46, 47, 48, 49, 43, 42, 632, 631,
	0, 635, 0, 52, 0, 0, 0, 27, 35, 0,
	32, 30, 31, 29, 0, 0, 0, 0, 24, 0,
	0, 25, 33, 34, 0, 0, 0, 36, 37, 38,
	39, 0, 0, 0, 636, 0, 0, 26, 44, 45,
	50, 46, 47, 48, 49, 0, 44, 45, 50, 46,
	47, 48, 49, 0, 0, 0, 0, 152, 151, 153,
	43, 0, 143, 0, 42, 19, 18, 52, 40, 0,
	0, 698, 0, 0, 27, 0, 0, 32, 30, 31,
	29, 0, 0, 0, 0, 0, 152, 151, 153, 33,
	34, 143, 0, 41, 36, 37, 38, 39, 0, 0,
	646, 0, 0, 0, 26, 44, 45, 50, 46, 47,
	48, 49, 0, 141, 140, 0, 0, 0, 0, 148,
	142, 147, 146, 152, 151, 153, 149, 150, 143, 0,
	0, 0, 0, 152, 151, 153, 0, 535, 143, 0,
	0, 0, 141, 140, 0, 0, 0, 526, 148, 142,
	147, 146, 152, 151, 153, 149, 150, 143, 0, 0,
	0, 0, 152, 151, 153, 0, 456, 143, 0, 44,
	45, 50, 46, 47, 48, 49, 369, 0, 0, 141,
	140, 0, 0, 0, 0, 148, 142, 147, 146, 141,
	140, 0, 149, 150, 0, 148, 142, 147, 146, 152,
	151, 153, 149, 150, 143, 0, 0, 0, 141, 140,
	0, 0, 0, 139, 148, 142, 147, 146, 141, 140,
	0, 149, 150, 0, 148, 142, 147, 146, 0, 0,
	0, 149, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 140, 0, 0, 0,
	0, 148, 142, 147, 146, 0, 0, 0, 149, 150,
}
var yyPact = [...]int{

	2232, -1000, 199, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1798, 1773,
	-1000, -1000, 167, 184, 736, 725, 812, 2296, -1000, 407,
	2048, 2048, 396, -1000, -1000, 806, 1773, 1773, 1773, 215,
	1773, 819, 726, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 205, -1000, 2232, 2375, 1702, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 205, -1000, -1000, -31,
	-35, -1000, -1000, -1000, -1000, -1000, -1000, 1773, 1773, 181,
	180, 173, -1000, 1773, 279, 170, 1773, 1773, 2048, 169,
	-1000, -1000, 474, 1724, 1702, 698, 780, 2020, 797, 799,
	632, 557, -1000, 552, 1773, 2048, 2020, -1000, 10, 204,
	-1000, 367, -1000, 2048, 2048, -1000, -1000, 2048, -1000, -1000,
	-1000, -1000, 1773, 1773, 192, 1724, 939, 1724, 1940, 1529,
	31, 585, -1000, -1000, 9, 2048, -1000, 1773, -1000, 2232,
	1773, 1773, 1773, 568, 586, 605, 1773, 1773, 1773, 1773,
	1773, 1773, 1773, -1000, 891, 96, 105, 103, 212, 2173,
	1488, 1606, -1000, -1000, 1773, 557, 557, 490, 137, 137,
	570, 599, -1000, 807, -1000, 280, 557, 452, 1773, 96,
	652, 680, 2020, 796, 8, -1000, -1000, 1429, 803, 785,
	1429, 590, 590, 590, 1617, -1000, 94, -1000, 112, 228,
	721, 812, 1773, 324, 220, 168, 166, -1000, -1000, 774,
	1724, 1724, 591, 1773, 1724, 1773, 2116, 2048, 812, 2048,
	726, 207, 1724, 454, -41, -17, -17, 636, 1773, 137,
	1773, 137, 137, -13, -13, -1000, -1000, -1000, 1632, 807,
	-1000, 1773, -1000, -1000, -1000, -1000, -1000, 1773, -1000, -1000,
	1773, 1517, 449, 1773, -1000, 1702, -1000, -1000, 137, 164,
	163, 160, 568, -1000, 1773, 390, 2232, 2338, 634, 1773,
	1869, 127, 1559, 1451, 2020, 785, 28, -1000, 1551, -1000,
	-1000, 1262, -1000, 1429, 689, 1773, -1000, 212, -1000, 212,
	212, -1000, 4, 770, -1000, 1724, -1000, -1000, -63, 159,
	157, 150, 149, -1000, 2048, 552, -1000, 259, 381, 1451,
	-1000, 1724, 552, 2048, 552, 111, 2048, 812, -1000, -1000,
	1724, 389, 197, -1000, -1000, 1798, 1773, -1000, -1000, -1000,
	-1000, -1000, 398, -1000, 3, 397, -1000, 146, 2048, 388,
	447, 2232, 1773, -1000, -1000, 2026, -1000, -17, -1000, -1000,
	-1000, 92, 90, 89, 84, 386, 1773, 2328, 572, 147,
	-1000, 147, -1000, 147, -1000, 344, 83, 546, -1000, 2232,
	-1000, 1773, 967, -1000, 2, 666, 1724, -1000, 137, 1451,
	-1000, -1000, 2048, 799, -1, 191, -59, -1000, -1000, 645,
	633, 613, 613, 694, 1429, -1000, -1000, -1000, -1000, 2048,
	79, 785, 685, 670, 1724, 598, -1000, -1000, 598, 1617,
	2048, 1488, 557, 557, 557, 1773, 77, -2, -1000, 867,
	2048, 711, -1000, 1451, 701, -1000, 76, -1000, 768, 74,
	-9, -1000, -1000, -10, 705, -49, -1000, 508, 2116, 2309,
	471, 2116, 2116, 552, 73, 537, 384, -1000, 2299, 1773,
	-1000, -1000, -1000, -1000, -1000, 1724, 1773, 137, 72, -12,
	71, 68, -1000, 309, 243, -1000, 474, 1724, -1000, 553,
	235, 1869, 222, -1000, -1000, -1000, 66, -16, -1000, 785,
	1451, 1773, 1429, 1429, 627, -1000, 624, 622, 613, -1000,
	-1000, -1000, -1000, -1000, 1773, 1773, -1000, -1000, 64, 1773,
	1773, 1517, 1773, 60, 767, 2048, -1000, -1000, -1000, 1451,
	1451, 58, -33, 1773, 55, 2048, 765, 273, 764, 812,
	812, 1773, 760, 812, -1000, -1000, 2116, 441, 1773, 383,
	382, 53, 751, -1000, 534, 2232, 807, 1343, -1000, -1000,
	137, -1000, -1000, -1000, 687, -1000, -1000, -1000, -1000, 722,
	606, 1451, -1000, -1000, 1724, 694, 791, 1429, 1429, 1429,
	620, 1724, -1000, 305, 47, 43, 42, 41, 40, 256,
	552, -1000, -1000, -1000, 867, 2048, 1724, -1000, -1000, 552,
	2165, 271, -1000, -1000, -1000, 705, 1724, 263, 39, 446,
	375, 2116, 2262, 507, 498, -1000, 141, -1000, 514, -1000,
	-1000, 139, -1000, -1000, -1000, 137, -1000, -1000, -1000, 1773,
	135, 791, 664, 694, 1429, 134, 302, 297, 296, 268,
	254, 131, 217, -1000, -1000, -1000, -1000, 374, 196, -1000,
	-1000, 1798, 1773, -1000, -1000, 1773, 1773, 2165, 2165, 747,
	371, 439, 2116, 1773, 544, -1000, 2116, -1000, -1000, 552,
	-1000, 698, -1000, 1724, 2048, -1000, 1773, 694, 272, 128,
	122, 121, 120, 118, 272, 266, -1000, 2165, 2233, 460,
	977, 19, 578, 1724, 370, 364, 260, 533, 360, -1000,
	1912, -1000, 471, 38, 37, 36, 1724, 33, 698, 659,
	272, 272, 272, 272, 272, 29, 117, -1000, 2165, 434,
	1773, 2000, 2048, 2048, -1000, -1000, 2165, -1000, 531, 2116,
	-1000, -1000, -1000, -1000, -1000, -1000, 1773, 25, 24, 23,
	20, 17, -1000, 272, 444, 355, 2165, 1841, 354, 26,
	-1000, -1000, 1798, 1773, -1000, -1000, -1000, 368, 345, 352,
	-1000, 513, -1000, -1000, -1000, -1000, -1000, -1000, 15, 342,
	422, 2165, 1773, 543, -1000, 2165, 494, 2000, 1277, 385,
	2000, 2000, -1000, -1000, -1000, 530, 341, -1000, 1163, -1000,
	460, -1000, -1000, 2000, 412, 1773, 339, 334, -1000, 528,
	2165, -1000, 401, 333, 2000, 1084, 493, 492, -1000, 512,
	332, 400, 2000, 1773, 541, -1000, 2000, -1000, -1000, -1000,
	520, 328, -1000, 1054, -1000, 385, -1000, 519, 2000, -1000,
	-1000, 511, -1000,
}
var yyPgo = [...]int{

	0, 49, 50, 197, 110, 96, 66, 965, 74, 70,
	963, 962, 961, 959, 22, 17, 954, 952, 951, 950,
	948, 947, 45, 23, 16, 946, 945, 29, 943, 938,
	43, 26, 937, 932, 931, 930, 929, 958, 72, 56,
	926, 48, 27, 923, 922, 12, 921, 47, 918, 886,
	917, 64, 63, 59, 58, 51, 534, 44, 24, 25,
	42, 908, 902, 894, 892, 1156, 890, 888, 887, 885,
	41, 722, 883, 882, 36, 40, 880, 60, 61, 65,
	879, 20, 878, 14, 874, 869, 867, 7, 19, 866,
	30, 13, 39, 18, 37, 856, 853, 850, 34, 838,
	21, 53, 5, 10, 9, 8, 4, 3, 38, 837,
	11, 834, 6, 833, 2, 832, 0, 328, 15, 555,
	830, 62, 46, 57, 55, 33, 52, 67, 829, 35,
	417,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	9, 9, 11, 11, 10, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 12, 13, 13, 14, 14, 14,
	15, 15, 16, 16, 17, 17, 17, 17, 17, 18,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 20,
	20, 21, 21, 21, 21, 21, 21, 21, 21, 22,
	22, 23, 23, 24, 24, 24, 24, 24, 25, 25,
	25, 25, 25, 26, 26, 26, 26, 27, 28, 28,
	29, 30, 30, 31, 31, 31, 32, 32, 32, 32,
	33, 33, 33, 33, 33, 33, 33, 34, 34, 34,
	35, 35, 35, 35, 35, 36, 36, 36, 37, 38,
	38, 38, 38, 39, 39, 40, 41, 41, 42, 42,
	43, 43, 44, 44, 45, 45, 46, 46, 46, 47,
	47, 48, 48, 49, 49, 50, 50, 51, 51, 52,
	52, 52, 52, 52, 52, 53, 54, 55, 55, 55,
	55, 55, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 57, 58, 58, 59,
	59, 60, 60, 61, 61, 62, 62, 63, 63, 63,
	64, 64, 65, 66, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 68, 68, 68, 68, 68, 68, 68,
	69, 69, 69, 69, 70, 70, 71, 71, 72, 72,
	72, 72, 72, 73, 73, 74, 74, 74, 74, 74,
	74, 74, 74, 75, 76, 76, 77, 77, 78, 78,
	78, 80, 81, 81, 81, 81, 81, 81, 81, 82,
	82, 82, 82, 82, 82, 83, 83, 84, 84, 85,
	85, 85, 86, 87, 87, 88, 88, 89, 89, 90,
	90, 91, 91, 92, 92, 79, 79, 93, 93, 94,
	94, 95, 95, 95, 95, 96, 97, 98, 98, 99,
	99, 100, 100, 101, 101, 102, 102, 103, 103, 104,
	104, 105, 105, 106, 106, 107, 107, 108, 108, 109,
	109, 110, 110, 111, 111, 112, 112, 113, 113, 114,
	114, 115, 115, 116, 116, 116, 116, 116, 116, 116,
	116, 117, 118, 118, 119, 120, 120, 121, 121, 122,
	122, 123, 123, 124, 124, 125, 125, 126, 126, 127,
	127, 128, 128, 129, 129, 130, 130,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	1, 2, 1, 1, 7, 8, 6, 1, 1, 7,
	8, 6, 1, 1, 1, 1, 1, 6, 8, 8,
	1, 2, 1, 1, 7, 8, 6, 1, 1, 7,
	8, 6, 1, 1, 1, 2, 2, 1, 2, 1,
	1, 6, 8, 5, 6, 8, 5, 7, 7, 1,
	3, 1, 3, 0, 1, 1, 2, 2, 5, 2,
	2, 3, 5, 6, 8, 5, 3, 1, 1, 3,
	3, 1, 3, 1, 1, 3, 9, 10, 10, 12,
	0, 1, 1, 1, 1, 2, 2, 5, 6, 3,
	4, 2, 2, 4, 2, 2, 3, 4, 5, 5,
	4, 4, 4, 1, 1, 3, 0, 2, 0, 2,
	0, 3, 0, 2, 0, 3, 0, 3, 4, 0,
	2, 0, 2, 0, 2, 6, 9, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 3, 2, 4, 1, 1, 0, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 4, 4,
	6, 6, 4, 6, 4, 4, 4, 6, 4, 4,
	6, 4, 2, 3, 3, 3, 3, 3, 2, 2,
	3, 3, 2, 2, 0, 1, 4, 4, 5, 5,
	5, 5, 1, 5, 10, 8, 9, 9, 9, 9,
	9, 8, 10, 2, 0, 3, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 3, 1, 1, 3, 4,
	5, 6, 7, 5, 6, 2, 4, 1, 1, 1,
	3, 1, 5, 0, 1, 4, 5, 0, 2, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 6, 9, 5, 8, 7, 3, 1, 3, 5,
	6, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 1, 3, 0,
	1, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -10, -37, -95, -96, -99, -71,
	-21, -19, -25, -26, -32, -20, -35, -36, 74, 73,
	-8, -9, -49, -116, 26, 29, 112, 82, -119, 88,
	86, 87, 85, 97, 98, 16, 102, 103, 104, 105,
	76, 101, 72, 4, 113, 114, 116, 117, 118, 119,
	115, -117, 11, 125, -56, 131, -55, -52, -68, -66,
	-65, -71, -72, -86, -67, -69, -117, -119, -34, -116,
	24, 5, 6, 7, -53, 10, -54, 128, 129, 74,
	118, 116, -73, 73, -58, 62, 66, 130, 83, 117,
	9, 70, -87, -56, 131, -38, 19, 15, 17, -40,
	-39, 13, -65, 131, 131, 30, 30, -121, -120, -117,
	-121, -116, -117, 83, 30, -116, -116, -33, 89, 90,
	31, 32, 91, 92, 12, -56, -56, -56, 115, -56,
	-117, -118, 6, -51, -50, -128, 25, 122, -1, 78,
	121, 120, 127, 69, -123, -130, 129, 128, 126, 133,
	134, 65, 64, 66, -56, -91, -37, -70, -49, 136,
	131, 136, -56, -56, 131, 131, 131, -87, 120, 127,
	-123, -130, -65, -56, -56, -116, 131, -108, 77, -91,
	-45, 38, 20, -79, -77, -116, 24, 14, -79, -41,
	14, 57, 58, 59, -122, 71, -70, -91, -56, -116,
	-77, 135, 122, 83, 30, 106, 107, -116, -116, -116,
	-56, -56, 127, 135, -56, 6, 80, 63, 135, 63,
	135, -116, -56, -1, -56, -56, -56, -123, 67, 63,
	68, 61, 60, -56, -56, -56, -56, -56, -56, -56,
	132, 135, 132, 132, 132, -116, 6, -122, -116, 6,
	-122, -122, -88, 77, -58, 131, -65, -58, 67, 63,
	61, 60, 69, 116, -122, -109, 79, -56, -46, 44,
	41, -78, -77, 16, 135, -92, -81, -78, -80, -82,
	23, 131, -65, 14, -42, 18, -92, -127, 60, -127,
	-127, -94, -85, -84, -57, -56, -74, 126, -116, 118,
	116, 117, 119, 132, 131, -129, 22, 27, 28, 36,
	-121, -56, 84, 131, 22, 131, 131, 20, -52, -91,
	-56, -2, -11, -5, -12, 74, 73, -8, -9, -6,
	99, 100, -116, -118, -117, -116, -51, 22, 131, -101,
	-100, 79, 75, -53, -54, -56, -58, -56, -58, -58,
	-91, -70, -70, -70, -57, -89, 79, -56, -58, 131,
	-65, 131, -65, 131, -65, -123, -70, 81, -1, 78,
	-48, 45, -56, -60, -61, -62, -56, -74, 21, 131,
	-37, -116, 22, -98, -97, -55, -116, -79, -42, 53,
	-124, -126, 52, 56, 135, 48, 50, 51, -116, 22,
	-81, -92, -43, 39, -56, -39, -38, -39, -39, 135,
	22, 131, 131, 131, 131, 131, -93, -116, -37, -22,
	131, -116, -55, 131, -55, -37, -93, -37, 132, -31,
	-28, -30, -27, -29, -117, -116, -118, 81, 125, -56,
	-87, 80, 80, 131, -93, 81, -101, -1, -56, 64,
	132, 132, 132, 132, 81, -56, 78, 64, -59, -58,
	-59, -59, 86, 63, 132, 73, -1, -56, -47, 46,
	72, 135, -63, 42, 43, -59, -90, -55, -116, -41,
	135, 127, 47, 47, -125, 49, -125, -124, -126, -92,
	-116, 132, -42, -44, 40, 41, -94, -116, -70, -122,
	-122, -122, -122, -70, 132, 135, -24, 31, 32, 33,
	34, -23, -22, 35, -90, 37, 132, 22, 132, 135,
	135, 35, 132, 135, 76, -2, 78, -110, 77, -2,
	-2, -37, 132, 74, 81, 78, -56, -56, -58, 132,
	135, 132, 132, 93, 111, -108, -47, 113, -60, 114,
	132, 135, -42, -98, -56, -81, -81, 47, 47, 47,
	-125, -56, -91, 132, -70, -70, -70, -57, -70, 132,
	-129, -93, -55, -55, 132, 135, -56, 132, -116, 22,
	108, 22, -27, -30, -30, -117, -56, 22, -31, -2,
	-111, 79, -56, 81, 81, 132, 22, 74, -1, -88,
	-59, 39, -64, 31, 32, 21, -37, -90, -83, 54,
	55, -81, -81, -81, 47, 96, 132, 132, 132, 132,
	132, 96, 110, -37, -24, -23, -37, -3, -13, -5,
	-17, 74, 73, -14, -15, 76, 109, 108, 108, 132,
	-103, -102, 79, 75, 81, -2, 78, 76, 76, 131,
	-100, 131, -59, -56, 131, -83, 54, -81, 131, 96,
	96, 96, 96, 96, 131, 114, 81, 125, -56, -87,
	-56, -117, -118, -56, -3, -3, 22, 81, -103, -2,
	-56, 73, -2, -37, -45, -93, -56, -75, -76, 95,
	131, 131, 131, 131, 131, -75, 96, -3, 78, -112,
	77, 80, 63, 63, 81, 81, 108, 74, 81, 78,
	-110, 132, 132, 132, 132, -45, 41, -75, -75, -75,
	-75, -75, 132, 131, -3, -113, 79, -56, -4, -16,
	-5, -18, 74, 73, -14, -15, -6, -116, -116, -3,
	74, -2, -91, 132, 132, 132, 132, 132, -75, -105,
	-104, 79, 75, 81, -3, 78, 81, 125, -56, -87,
	80, 80, 81, -102, 132, 81, -105, -3, -56, 73,
	-3, 76, -4, 78, -114, 77, -4, -4, 74, 81,
	78, -112, -4, -115, 79, -56, 81, 81, 74, -3,
	-107, -106, 79, 75, 81, -4, 78, 76, 76, -104,
	81, -107, -4, -56, 73, -4, 74, 81, 78, -114,
	74, -4, -106,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 283,
	37, 38, 0, 0, 0, 0, 0, 0, 67, 0,
	0, 0, 110, 69, 70, 0, 0, 0, 0, 0,
	0, 30, 371, 343, 344, 345, 346, 347, 348, 349,
	350, 0, 351, -2, 361, -2, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 167,
	0, 159, 160, 161, 162, 163, 164, 0, 0, 0,
	348, 346, 242, 283, 361, 0, 0, 0, 0, 347,
	165, 166, 0, -2, 153, -2, 0, 0, 0, 136,
	0, 359, 134, 153, 234, 0, 0, 65, 357, 355,
	66, 0, 68, 0, 0, 89, 90, 0, 111, 112,
	113, 114, 0, 0, 0, -2, -2, -2, 125, 361,
	182, 0, 31, 154, 157, 0, 372, 0, 3, -2,
	0, 375, 376, 361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 361, 0, 0, 0, 0, 0,
	234, 0, 228, 229, 234, 359, 359, 0, 375, 376,
	0, 0, 222, 232, 233, 0, 359, 329, 0, 0,
	146, 0, 0, 0, 295, 256, 257, 0, 0, 138,
	0, 369, 369, 369, 0, 360, 0, 235, -2, 373,
	0, 0, 0, 0, 0, 0, 0, 91, 96, 0,
	-2, -2, 0, 0, -2, 160, -2, 0, 0, 0,
	371, 0, 354, 313, 203, -2, -2, 0, 0, 0,
	0, 0, 0, 223, 224, 225, 226, 227, 230, 231,
	185, 0, 187, 202, 237, 168, 170, 234, 169, 171,
	234, 234, 287, 0, 205, 153, 188, 207, 0, 0,
	0, 0, 361, 119, 234, 0, -2, 361, 151, 0,
	0, 153, 258, 0, 0, 138, -2, 262, 263, 266,
	267, 153, 261, 0, 140, 0, 137, 0, 370, 0,
	0, 135, 299, 279, 281, -2, 278, 186, 167, 348,
	346, 347, 349, 236, 0, 153, 374, 0, 0, 0,
	358, -2, 153, 0, 153, 0, 0, 0, 120, 123,
	-2, 0, 0, 32, 33, 0, 283, 42, 43, 44,
	23, 24, 0, 353, 352, 0, 158, 0, 0, 0,
	313, -2, 0, 208, 209, 361, 212, -2, 216, 219,
	292, 0, 0, 0, 0, 0, 0, 361, 0, 153,
	214, 153, 218, 153, 221, 0, 0, 0, 330, -2,
	128, 0, -2, 145, 191, 197, -2, 196, 0, 0,
	303, 259, 0, 136, 307, 0, 167, 296, 309, 0,
	0, 365, 365, 363, 0, 364, 367, 368, 264, 0,
	363, 138, 142, 0, -2, 130, 133, 131, 132, 0,
	0, 234, 359, 359, 359, 234, 0, 297, 73, 83,
	0, 79, 76, 0, 0, 88, 0, 95, 0, 0,
	103, 104, 98, 101, 97, 0, 92, 0, -2, 361,
	0, -2, -2, 153, 0, 0, 0, 314, 361, 0,
	238, 239, 240, 241, 282, -2, 0, 0, 0, 189,
	0, 0, 117, 0, 243, 36, 327, -2, 147, 149,
	0, 0, 193, 198, 199, 301, 0, 289, 260, 138,
	0, 0, 0, 0, 0, 366, 0, 0, 365, 294,
	265, 268, 310, 129, 0, 0, 300, 280, 0, 234,
	234, 234, 234, 0, -2, 0, 74, 84, 85, 0,
	0, 0, 81, 0, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 27, 5, -2, 333, 0, 0,
	0, 0, 0, 34, 0, -2, 210, -2, 211, 213,
	0, 217, 220, 118, 0, 328, 148, 150, 192, 0,
	153, 0, 305, 308, -2, 269, 363, 0, 0, 0,
	0, -2, 141, 236, 0, 0, 0, 0, 0, 0,
	153, 298, 86, 87, 83, 0, -2, 77, 78, 153,
	-2, 0, 99, 105, 102, 0, -2, 0, 0, 317,
	0, -2, 361, 0, 0, 155, 0, 35, 311, 286,
	190, 0, 194, 200, 201, 0, 304, 290, 270, 0,
	0, 363, 363, 273, 0, 0, 238, 239, 240, 241,
	243, 0, 0, 72, 75, 82, 94, 0, 0, 45,
	46, 0, 283, 57, 58, 0, 50, -2, -2, 0,
	0, 317, -2, 0, 0, 334, -2, 28, 29, 153,
	312, 144, 302, -2, 0, 271, 0, 274, 254, 0,
	0, 0, 0, 0, 254, 0, 106, -2, 361, 0,
	361, 182, 0, -2, 0, 0, 0, 0, 0, 318,
	361, 41, 331, 0, 0, 0, -2, 0, 144, 0,
	254, 254, 254, 254, 254, 0, 0, 7, -2, 337,
	0, -2, 0, 0, 107, 108, -2, 39, 0, -2,
	332, 156, 244, 276, 245, 253, 0, 0, 0, 0,
	0, 0, 251, 254, 321, 0, -2, 361, 0, 0,
	52, 53, 0, 283, 62, 63, 64, 0, 0, 0,
	40, 315, 255, 246, 247, 248, 249, 250, 0, 0,
	321, -2, 0, 0, 338, -2, 0, -2, 361, 0,
	-2, -2, 109, 316, 252, 0, 0, 322, 361, 56,
	335, 47, 9, -2, 341, 0, 0, 0, 54, 0,
	-2, 336, 325, 0, -2, 361, 0, 0, 55, 319,
	0, 325, -2, 0, 0, 342, -2, 48, 49, 320,
	0, 0, 326, 361, 61, 339, 59, 0, -2, 340,
	60, 323, 324,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 130, 3, 3, 3, 134, 3, 3,
	131, 132, 126, 129, 135, 128, 136, 133, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 125,
	3, 127,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:208
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:218
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:225
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:230
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:237
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:242
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:254
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:261
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:265
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:269
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = Exit{}
		}
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 34:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:369
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 35:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:373
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 36:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:377
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:381
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:391
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:451
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:517
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 74:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:561
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:571
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:575
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:581
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:585
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:591
		{
			yyVAL.expression = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:595
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:599
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:603
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:607
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:613
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:635
		{
			yyVAL.statement = TableDeclaration{Table: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:639
		{
			yyVAL.statement = TableDeclaration{Table: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:643
		{
			yyVAL.statement = TableDeclaration{Table: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:647
		{
			yyVAL.statement = DisposeTable{Table: yyDollar[3].identifier}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:653
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:659
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:663
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:669
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:675
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:679
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:685
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:689
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:693
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:699
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 107:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:703
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 108:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:707
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 109:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:711
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:717
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:721
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:725
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:729
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:733
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:737
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:741
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:747
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:751
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:755
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:761
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:769
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:773
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:777
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:783
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:787
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:791
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:797
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:809
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:819
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:828
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:837
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:848
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:852
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:858
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:864
		{
			yyVAL.queryexpr = nil
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:868
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:874
		{
			yyVAL.queryexpr = nil
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:878
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:884
		{
			yyVAL.queryexpr = nil
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:888
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:894
		{
			yyVAL.queryexpr = nil
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:898
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = nil
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:908
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:914
		{
			yyVAL.queryexpr = nil
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:918
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:922
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:928
		{
			yyVAL.queryexpr = nil
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:932
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:938
		{
			yyVAL.queryexpr = nil
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:942
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:948
		{
			yyVAL.queryexpr = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:952
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:958
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 156:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:962
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:972
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:978
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:982
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:990
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:994
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:998
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1046
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1066
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1082
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1086
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1112
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1122
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1146
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.token = Token{}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.token = yyDollar[1].token
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.token = yyDollar[1].token
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1166
		{
			yyVAL.token = yyDollar[1].token
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.token = yyDollar[1].token
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1176
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1182
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1205
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1209
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1213
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1221
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1225
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 210:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1229
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1233
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1237
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 213:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1241
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1245
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1249
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1253
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 217:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1257
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1261
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1265
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1273
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1283
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1287
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1291
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1295
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1299
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1303
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1307
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1331
		{
			yyVAL.queryexprs = nil
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1335
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1352
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 239:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1356
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1360
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1364
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1368
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1374
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 244:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1378
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1384
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 246:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1388
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 247:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1392
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 248:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 249:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1400
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 250:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1404
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 251:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1408
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 252:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1412
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1418
		{
			yyVAL.queryexpr = AnalyticClause{Partition: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1424
		{
			yyVAL.queryexpr = nil
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1428
		{
			yyVAL.queryexpr = Partition{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1434
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1438
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1444
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1448
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1452
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1458
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1464
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1494
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1498
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1506
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1510
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1514
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1530
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1534
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1540
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1554
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1560
		{
			yyVAL.queryexpr = nil
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1564
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1580
		{
			yyVAL.queryexpr = nil
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1584
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1600
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1610
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1614
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1634
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 301:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 302:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1654
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 305:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1680
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1684
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1690
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1695
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1706
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.elseexpr = Else{}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.elseexpr = Else{}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1736
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.elseexpr = Else{}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1766
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1772
		{
			yyVAL.elseexpr = Else{}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1782
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1786
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1796
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1832
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1836
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1842
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1862
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1866
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1906
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1922
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1932
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1938
		{
			yyVAL.token = Token{}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1942
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.token = Token{}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1952
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.token = Token{}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1968
		{
			yyVAL.token = Token{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.token = yyDollar[1].token
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1978
		{
			yyVAL.token = yyDollar[1].token
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.token = yyDollar[1].token
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1988
		{
			yyVAL.token = Token{}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.token = yyDollar[1].token
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1998
		{
			yyVAL.token = Token{}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.token = yyDollar[1].token
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2008
		{
			yyVAL.token = Token{}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.token = yyDollar[1].token
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.token = yyDollar[1].token
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2022
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
