// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvVar
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const EXTERNAL_COMMAND = 57356
const SELECT = 57357
const FROM = 57358
const UPDATE = 57359
const SET = 57360
const UNSET = 57361
const DELETE = 57362
const WHERE = 57363
const INSERT = 57364
const INTO = 57365
const VALUES = 57366
const AS = 57367
const DUAL = 57368
const STDIN = 57369
const RECURSIVE = 57370
const CREATE = 57371
const ADD = 57372
const DROP = 57373
const ALTER = 57374
const TABLE = 57375
const FIRST = 57376
const LAST = 57377
const AFTER = 57378
const BEFORE = 57379
const DEFAULT = 57380
const RENAME = 57381
const TO = 57382
const VIEW = 57383
const ORDER = 57384
const GROUP = 57385
const HAVING = 57386
const BY = 57387
const ASC = 57388
const DESC = 57389
const LIMIT = 57390
const OFFSET = 57391
const PERCENT = 57392
const JOIN = 57393
const INNER = 57394
const OUTER = 57395
const LEFT = 57396
const RIGHT = 57397
const FULL = 57398
const CROSS = 57399
const ON = 57400
const USING = 57401
const NATURAL = 57402
const UNION = 57403
const INTERSECT = 57404
const EXCEPT = 57405
const ALL = 57406
const ANY = 57407
const EXISTS = 57408
const IN = 57409
const AND = 57410
const OR = 57411
const NOT = 57412
const BETWEEN = 57413
const LIKE = 57414
const IS = 57415
const NULL = 57416
const DISTINCT = 57417
const WITH = 57418
const RANGE = 57419
const UNBOUNDED = 57420
const PRECEDING = 57421
const FOLLOWING = 57422
const CURRENT = 57423
const ROW = 57424
const CASE = 57425
const IF = 57426
const ELSEIF = 57427
const WHILE = 57428
const WHEN = 57429
const THEN = 57430
const ELSE = 57431
const DO = 57432
const END = 57433
const DECLARE = 57434
const CURSOR = 57435
const FOR = 57436
const FETCH = 57437
const OPEN = 57438
const CLOSE = 57439
const DISPOSE = 57440
const NEXT = 57441
const PRIOR = 57442
const ABSOLUTE = 57443
const RELATIVE = 57444
const SEPARATOR = 57445
const PARTITION = 57446
const OVER = 57447
const COMMIT = 57448
const ROLLBACK = 57449
const CONTINUE = 57450
const BREAK = 57451
const EXIT = 57452
const ECHO = 57453
const PRINT = 57454
const PRINTF = 57455
const SOURCE = 57456
const EXECUTE = 57457
const CHDIR = 57458
const PWD = 57459
const TRIGGER = 57460
const FUNCTION = 57461
const AGGREGATE = 57462
const BEGIN = 57463
const RETURN = 57464
const IGNORE = 57465
const WITHIN = 57466
const VAR = 57467
const SHOW = 57468
const TIES = 57469
const NULLS = 57470
const ROWS = 57471
const JSON_ROW = 57472
const JSON_TABLE = 57473
const COUNT = 57474
const JSON_OBJECT = 57475
const AGGREGATE_FUNCTION = 57476
const LIST_FUNCTION = 57477
const ANALYTIC_FUNCTION = 57478
const FUNCTION_NTH = 57479
const FUNCTION_WITH_INS = 57480
const COMPARISON_OP = 57481
const STRING_OP = 57482
const SUBSTITUTION_OP = 57483
const UMINUS = 57484
const UPLUS = 57485

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"EXTERNAL_COMMAND",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2257

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 177,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 73,
	85, 73,
	87, 73,
	89, 73,
	91, 73,
	144, 73,
	-2, 207,
	-1, 93,
	15, 177,
	17, 177,
	20, 177,
	22, 177,
	-2, 1,
	-1, 111,
	151, 263,
	-2, 177,
	-1, 117,
	61, 157,
	62, 157,
	63, 157,
	-2, 168,
	-1, 154,
	1, 140,
	85, 140,
	87, 140,
	89, 140,
	91, 140,
	144, 140,
	-2, 191,
	-1, 157,
	1, 146,
	85, 146,
	87, 146,
	89, 146,
	91, 146,
	144, 146,
	-2, 191,
	-1, 197,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	139, 0,
	146, 0,
	-2, 233,
	-1, 198,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	139, 0,
	146, 0,
	-2, 235,
	-1, 207,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	139, 0,
	146, 0,
	-2, 245,
	-1, 217,
	85, 1,
	89, 1,
	91, 1,
	-2, 177,
	-1, 268,
	91, 4,
	-2, 177,
	-1, 316,
	67, 0,
	71, 0,
	72, 0,
	73, 0,
	139, 0,
	146, 0,
	-2, 246,
	-1, 323,
	91, 1,
	-2, 177,
	-1, 335,
	51, 412,
	-2, 345,
	-1, 368,
	1, 76,
	85, 76,
	87, 76,
	89, 76,
	91, 76,
	144, 76,
	-2, 191,
	-1, 369,
	1, 132,
	85, 132,
	87, 132,
	89, 132,
	91, 132,
	144, 132,
	-2, 191,
	-1, 427,
	91, 1,
	-2, 177,
	-1, 434,
	87, 1,
	89, 1,
	91, 1,
	-2, 177,
	-1, 499,
	85, 4,
	87, 4,
	89, 4,
	91, 4,
	-2, 177,
	-1, 502,
	91, 4,
	-2, 177,
	-1, 503,
	91, 4,
	-2, 177,
	-1, 570,
	15, 422,
	76, 422,
	150, 422,
	-2, 80,
	-1, 593,
	85, 4,
	89, 4,
	91, 4,
	-2, 177,
	-1, 598,
	91, 4,
	-2, 177,
	-1, 599,
	91, 4,
	-2, 177,
	-1, 620,
	85, 1,
	89, 1,
	91, 1,
	-2, 177,
	-1, 653,
	1, 88,
	85, 88,
	87, 88,
	89, 88,
	91, 88,
	144, 88,
	-2, 191,
	-1, 656,
	91, 6,
	-2, 177,
	-1, 667,
	91, 4,
	-2, 177,
	-1, 722,
	91, 6,
	-2, 177,
	-1, 723,
	91, 6,
	-2, 177,
	-1, 727,
	91, 4,
	-2, 177,
	-1, 731,
	87, 4,
	89, 4,
	91, 4,
	-2, 177,
	-1, 751,
	87, 1,
	89, 1,
	91, 1,
	-2, 177,
	-1, 763,
	85, 6,
	87, 6,
	89, 6,
	91, 6,
	-2, 177,
	-1, 803,
	85, 6,
	89, 6,
	91, 6,
	-2, 177,
	-1, 806,
	91, 8,
	-2, 177,
	-1, 811,
	91, 6,
	-2, 177,
	-1, 814,
	85, 4,
	89, 4,
	91, 4,
	-2, 177,
	-1, 837,
	91, 6,
	-2, 177,
	-1, 865,
	91, 6,
	-2, 177,
	-1, 869,
	87, 6,
	89, 6,
	91, 6,
	-2, 177,
	-1, 871,
	85, 8,
	87, 8,
	89, 8,
	91, 8,
	-2, 177,
	-1, 874,
	91, 8,
	-2, 177,
	-1, 875,
	91, 8,
	-2, 177,
	-1, 878,
	87, 4,
	89, 4,
	91, 4,
	-2, 177,
	-1, 890,
	85, 8,
	89, 8,
	91, 8,
	-2, 177,
	-1, 899,
	85, 6,
	89, 6,
	91, 6,
	-2, 177,
	-1, 904,
	91, 8,
	-2, 177,
	-1, 918,
	91, 8,
	-2, 177,
	-1, 922,
	87, 8,
	89, 8,
	91, 8,
	-2, 177,
	-1, 934,
	87, 6,
	89, 6,
	91, 6,
	-2, 177,
	-1, 948,
	85, 8,
	89, 8,
	91, 8,
	-2, 177,
	-1, 959,
	87, 8,
	89, 8,
	91, 8,
	-2, 177,
}

const yyPrivate = 57344

const yyLast = 3474

var yyAct = [...]int{

	18, 917, 891, 916, 927, 290, 863, 864, 804, 726,
	782, 438, 940, 115, 784, 819, 887, 280, 476, 112,
	29, 110, 116, 594, 426, 725, 24, 167, 778, 335,
	577, 698, 523, 5, 572, 223, 492, 385, 23, 490,
	151, 152, 153, 155, 156, 158, 548, 783, 219, 384,
	22, 493, 448, 538, 1, 354, 540, 719, 222, 556,
	57, 161, 165, 234, 288, 345, 456, 425, 285, 380,
	3, 578, 331, 179, 180, 334, 172, 228, 162, 455,
	348, 190, 191, 78, 336, 176, 178, 164, 130, 130,
	128, 133, 122, 186, 163, 196, 197, 198, 393, 200,
	473, 239, 207, 71, 210, 211, 212, 213, 214, 215,
	216, 718, 161, 29, 807, 116, 69, 760, 386, 131,
	761, 177, 166, 649, 414, 117, 176, 589, 221, 218,
	590, 23, 460, 225, 461, 462, 457, 454, 164, 403,
	458, 177, 758, 22, 176, 163, 176, 195, 255, 256,
	630, 613, 164, 587, 269, 586, 571, 94, 552, 163,
	261, 263, 105, 3, 104, 103, 543, 270, 401, 106,
	107, 100, 109, 108, 99, 98, 101, 97, 281, 105,
	333, 274, 289, 243, 204, 270, 106, 107, 160, 881,
	880, 199, 229, 229, 443, 310, 273, 860, 233, 82,
	242, 270, 314, 859, 316, 858, 281, 460, 63, 461,
	462, 457, 454, 85, 857, 458, 856, 834, 833, 47,
	832, 281, 830, 162, 828, 326, 278, 827, 160, 272,
	85, 123, 164, 818, 459, 339, 231, 29, 396, 163,
	289, 270, 817, 95, 94, 361, 63, 724, 680, 105,
	96, 104, 103, 367, 370, 23, 106, 107, 687, 281,
	281, 281, 92, 376, 679, 117, 281, 22, 301, 302,
	678, 319, 677, 676, 673, 651, 373, 374, 375, 279,
	281, 648, 205, 377, 299, 300, 315, 3, 29, 123,
	85, 119, 317, 318, 120, 309, 118, 378, 390, 629,
	281, 281, 612, 312, 130, 92, 563, 610, 352, 609,
	281, 347, 330, 65, 423, 608, 311, 602, 350, 351,
	444, 364, 429, 601, 585, 205, 433, 583, 399, 437,
	441, 391, 570, 528, 360, 442, 86, 87, 88, 489,
	342, 521, 520, 29, 519, 508, 400, 471, 410, 411,
	398, 395, 417, 86, 87, 88, 320, 164, 421, 340,
	355, 23, 266, 397, 445, 412, 125, 164, 267, 831,
	465, 829, 415, 22, 163, 790, 480, 431, 789, 788,
	787, 164, 487, 500, 116, 786, 754, 413, 478, 164,
	749, 164, 746, 3, 744, 743, 486, 501, 488, 497,
	453, 420, 289, 737, 281, 736, 229, 525, 281, 281,
	281, 452, 506, 86, 87, 88, 507, 467, 466, 409,
	468, 408, 407, 529, 125, 530, 495, 406, 479, 534,
	418, 419, 391, 405, 404, 537, 483, 539, 366, 365,
	220, 472, 164, 474, 475, 194, 363, 29, 193, 163,
	125, 183, 511, 182, 29, 181, 516, 517, 518, 553,
	253, 252, 871, 763, 499, 23, 93, 564, 565, 244,
	509, 105, 23, 104, 103, 160, 547, 22, 106, 107,
	307, 533, 188, 896, 22, 353, 747, 85, 745, 628,
	626, 616, 811, 246, 532, 723, 722, 3, 656, 524,
	796, 794, 742, 741, 3, 512, 513, 514, 515, 339,
	231, 85, 551, 281, 281, 281, 281, 558, 82, 29,
	85, 616, 29, 29, 684, 560, 614, 524, 592, 85,
	580, 596, 597, 164, 566, 561, 621, 85, 559, 308,
	600, 740, 685, 65, 441, 245, 739, 682, 738, 442,
	464, 184, 450, 681, 633, 627, 675, 785, 185, 63,
	231, 603, 604, 605, 607, 683, 527, 362, 85, 642,
	281, 247, 248, 622, 918, 947, 149, 482, 484, 606,
	650, 85, 935, 654, 634, 635, 85, 643, 920, 662,
	645, 907, 906, 232, 898, 526, 668, 623, 625, 82,
	85, 882, 283, 876, 231, 632, 611, 447, 870, 867,
	86, 87, 88, 29, 342, 813, 875, 631, 29, 29,
	639, 85, 665, 659, 660, 691, 644, 671, 672, 135,
	664, 810, 809, 340, 86, 87, 88, 773, 658, 762,
	29, 706, 735, 86, 87, 88, 686, 495, 661, 734,
	729, 495, 86, 87, 88, 874, 164, 622, 23, 670,
	86, 87, 88, 696, 549, 669, 701, 702, 703, 619,
	22, 164, 531, 712, 690, 498, 29, 697, 708, 599,
	710, 134, 164, 709, 85, 432, 277, 29, 748, 711,
	3, 86, 87, 88, 430, 919, 730, 524, 598, 918,
	753, 145, 146, 549, 86, 87, 88, 136, 866, 86,
	87, 88, 865, 950, 503, 750, 728, 764, 116, 502,
	727, 766, 769, 86, 87, 88, 714, 904, 752, 776,
	865, 765, 537, 755, 757, 837, 727, 428, 667, 770,
	771, 427, 29, 29, 86, 87, 88, 29, 768, 427,
	325, 29, 774, 323, 924, 793, 775, 800, 792, 901,
	892, 792, 281, 164, 816, 798, 143, 144, 147, 148,
	781, 29, 450, 799, 805, 624, 595, 321, 224, 524,
	802, 767, 923, 29, 888, 780, 779, 733, 732, 23,
	591, 791, 714, 714, 795, 646, 647, 822, 823, 824,
	825, 22, 815, 919, 866, 792, 838, 86, 87, 88,
	801, 728, 428, 954, 946, 913, 897, 853, 851, 839,
	835, 3, 281, 29, 812, 911, 29, 689, 850, 618,
	939, 29, 886, 714, 29, 777, 928, 928, 826, 855,
	861, 536, 945, 852, 872, 116, 792, 932, 943, 944,
	549, 957, 942, 931, 868, 441, 930, 29, 873, 615,
	442, 102, 877, 695, 846, 63, 879, 885, 542, 240,
	537, 883, 89, 714, 304, 188, 841, 941, 303, 862,
	522, 714, 884, 808, 889, 29, 349, 893, 894, 29,
	909, 29, 394, 905, 29, 29, 900, 910, 29, 271,
	912, 202, 915, 902, 237, 201, 203, 714, 952, 926,
	29, 929, 929, 306, 305, 63, 914, 921, 845, 29,
	938, 936, 933, 537, 29, 847, 209, 208, 557, 846,
	704, 937, 846, 846, 638, 714, 637, 90, 29, 714,
	187, 841, 29, 949, 841, 841, 953, 460, 846, 461,
	462, 956, 636, 854, 29, 555, 554, 958, 436, 328,
	841, 955, 846, 236, 237, 238, 545, 546, 29, 714,
	821, 569, 329, 568, 841, 688, 846, 470, 226, 29,
	846, 820, 582, 845, 581, 588, 845, 845, 841, 579,
	847, 127, 841, 847, 847, 693, 694, 64, 359, 126,
	175, 772, 845, 235, 714, 346, 846, 674, 371, 847,
	356, 357, 573, 574, 575, 576, 845, 846, 841, 358,
	663, 657, 655, 847, 355, 58, 132, 584, 402, 841,
	845, 140, 141, 227, 845, 332, 150, 847, 344, 257,
	154, 847, 157, 83, 159, 138, 83, 82, 171, 174,
	100, 109, 108, 99, 98, 101, 97, 137, 139, 129,
	845, 51, 903, 836, 666, 322, 8, 847, 449, 7,
	6, 845, 324, 54, 286, 287, 338, 337, 847, 951,
	925, 908, 192, 895, 77, 100, 124, 53, 99, 98,
	101, 97, 460, 52, 461, 462, 457, 454, 699, 700,
	458, 56, 49, 55, 50, 100, 109, 108, 99, 98,
	101, 97, 692, 544, 440, 439, 48, 230, 230, 173,
	435, 327, 95, 94, 241, 230, 567, 469, 105, 96,
	104, 103, 249, 250, 251, 106, 107, 641, 121, 17,
	254, 189, 100, 109, 108, 99, 98, 101, 97, 16,
	59, 142, 14, 494, 491, 13, 12, 95, 94, 9,
	15, 11, 206, 105, 96, 104, 103, 10, 842, 715,
	106, 107, 275, 840, 276, 713, 282, 95, 94, 292,
	381, 379, 4, 105, 96, 104, 103, 168, 2, 264,
	106, 107, 265, 259, 0, 0, 0, 0, 0, 0,
	0, 100, 109, 108, 99, 98, 101, 97, 0, 0,
	0, 0, 0, 0, 95, 94, 0, 0, 0, 0,
	105, 96, 104, 103, 0, 230, 124, 106, 107, 640,
	343, 0, 0, 343, 0, 0, 0, 292, 100, 109,
	108, 99, 98, 101, 97, 0, 206, 206, 0, 0,
	368, 369, 0, 0, 460, 372, 461, 462, 457, 454,
	756, 0, 458, 0, 206, 0, 0, 389, 0, 392,
	206, 206, 0, 95, 94, 0, 0, 0, 0, 105,
	96, 104, 103, 0, 0, 0, 106, 107, 258, 0,
	0, 0, 0, 0, 341, 0, 0, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 94, 0, 0, 0, 0, 105, 96, 104, 103,
	0, 0, 0, 106, 107, 422, 541, 292, 0, 446,
	451, 230, 0, 0, 0, 463, 0, 0, 343, 0,
	0, 0, 343, 100, 109, 108, 99, 98, 101, 97,
	0, 477, 542, 0, 481, 451, 451, 485, 0, 0,
	0, 477, 0, 0, 496, 206, 416, 416, 416, 0,
	85, 66, 67, 68, 0, 89, 70, 82, 0, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 505, 65, 0, 477, 0, 0, 0, 292,
	510, 0, 341, 0, 0, 0, 341, 0, 0, 0,
	124, 0, 124, 124, 0, 95, 94, 0, 0, 0,
	0, 105, 96, 104, 103, 0, 0, 0, 106, 107,
	0, 0, 79, 0, 0, 0, 80, 0, 0, 0,
	90, 0, 451, 0, 0, 550, 0, 0, 0, 114,
	113, 0, 0, 0, 0, 0, 0, 343, 0, 84,
	0, 0, 562, 0, 0, 85, 66, 67, 68, 0,
	89, 70, 82, 0, 83, 0, 0, 206, 481, 0,
	0, 451, 0, 0, 0, 0, 100, 109, 65, 99,
	98, 101, 97, 86, 87, 88, 92, 0, 294, 74,
	293, 295, 296, 297, 298, 206, 0, 0, 0, 0,
	0, 291, 0, 72, 73, 81, 60, 284, 0, 0,
	0, 341, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 80, 0, 0, 0, 90, 0, 0, 0, 0,
	0, 292, 0, 0, 114, 113, 0, 0, 0, 0,
	451, 0, 343, 343, 84, 0, 0, 0, 95, 94,
	0, 0, 0, 0, 105, 96, 104, 103, 0, 477,
	0, 106, 107, 451, 451, 0, 0, 0, 0, 652,
	653, 0, 0, 0, 206, 0, 0, 0, 86, 87,
	88, 92, 0, 294, 74, 293, 295, 296, 297, 298,
	0, 0, 0, 0, 0, 0, 291, 0, 72, 73,
	81, 60, 0, 0, 0, 0, 341, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 451, 0,
	0, 0, 0, 0, 343, 343, 343, 0, 705, 707,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 0,
	0, 85, 66, 67, 68, 0, 89, 70, 82, 0,
	83, 19, 0, 0, 0, 31, 32, 0, 0, 0,
	0, 0, 0, 0, 65, 206, 25, 0, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 341,
	341, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 80, 0, 0,
	0, 90, 0, 63, 0, 0, 0, 0, 0, 0,
	844, 843, 0, 720, 0, 0, 0, 0, 0, 28,
	84, 0, 35, 33, 34, 30, 0, 0, 0, 0,
	0, 0, 477, 36, 37, 387, 388, 206, 39, 40,
	41, 42, 43, 44, 45, 46, 341, 0, 0, 721,
	0, 0, 27, 38, 86, 87, 88, 92, 0, 76,
	74, 75, 91, 0, 0, 100, 109, 108, 99, 98,
	101, 97, 0, 0, 72, 73, 81, 60, 0, 0,
	0, 0, 0, 0, 0, 848, 849, 85, 66, 67,
	68, 0, 89, 70, 82, 0, 83, 19, 0, 0,
	0, 31, 32, 0, 0, 0, 0, 0, 0, 0,
	65, 0, 25, 0, 0, 26, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 0, 0, 0, 95, 94, 0,
	0, 0, 0, 105, 96, 104, 103, 0, 0, 79,
	106, 107, 265, 80, 0, 0, 0, 90, 0, 63,
	0, 0, 0, 0, 0, 0, 383, 382, 0, 61,
	0, 0, 0, 0, 0, 28, 84, 0, 35, 33,
	34, 30, 0, 0, 0, 0, 0, 0, 0, 36,
	37, 387, 388, 62, 39, 40, 41, 42, 43, 44,
	45, 46, 0, 0, 0, 0, 0, 0, 27, 38,
	86, 87, 88, 92, 0, 76, 74, 75, 91, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 73, 81, 60, 85, 66, 67, 68, 0, 89,
	70, 82, 0, 83, 19, 0, 0, 0, 31, 32,
	0, 0, 0, 0, 0, 0, 0, 65, 0, 25,
	0, 0, 26, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	80, 0, 0, 0, 90, 0, 63, 0, 0, 0,
	0, 0, 0, 717, 716, 0, 720, 0, 0, 0,
	0, 0, 28, 84, 0, 35, 33, 34, 30, 0,
	0, 0, 0, 0, 0, 0, 36, 37, 0, 0,
	0, 39, 40, 41, 42, 43, 44, 45, 46, 0,
	0, 0, 721, 0, 0, 27, 38, 86, 87, 88,
	92, 0, 76, 74, 75, 91, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 72, 73, 81,
	60, 85, 66, 67, 68, 0, 89, 70, 82, 0,
	83, 19, 0, 0, 0, 31, 32, 0, 0, 0,
	0, 0, 0, 0, 65, 0, 25, 0, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 80, 0, 0,
	0, 90, 0, 63, 0, 0, 0, 0, 0, 0,
	21, 20, 0, 61, 0, 0, 0, 0, 0, 28,
	84, 0, 35, 33, 34, 30, 0, 0, 0, 0,
	0, 0, 0, 36, 37, 0, 0, 62, 39, 40,
	41, 42, 43, 44, 45, 46, 0, 0, 0, 0,
	0, 0, 27, 38, 86, 87, 88, 92, 0, 76,
	74, 75, 91, 85, 66, 67, 68, 0, 89, 70,
	82, 0, 83, 0, 72, 73, 81, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 65, 0, 0, 85,
	66, 67, 68, 0, 89, 70, 82, 0, 83, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 65, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 80,
	0, 0, 0, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 113, 0, 0, 0, 0, 0, 0,
	0, 79, 84, 0, 0, 80, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 113,
	0, 0, 0, 0, 0, 0, 0, 170, 84, 0,
	0, 0, 0, 0, 0, 0, 86, 87, 88, 92,
	0, 294, 74, 293, 295, 296, 297, 298, 0, 100,
	109, 108, 99, 98, 101, 97, 72, 73, 81, 60,
	169, 0, 86, 87, 88, 92, 0, 76, 74, 75,
	91, 85, 66, 67, 68, 0, 89, 70, 82, 0,
	83, 0, 72, 73, 81, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 65, 85, 66, 67, 68, 0,
	89, 70, 82, 0, 83, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	0, 95, 94, 0, 0, 0, 0, 105, 96, 104,
	103, 0, 0, 79, 106, 107, 0, 80, 0, 0,
	0, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 113, 0, 0, 0, 0, 0, 79, 0, 0,
	84, 80, 0, 0, 0, 90, 240, 0, 0, 0,
	0, 0, 0, 0, 114, 113, 0, 0, 0, 0,
	85, 66, 67, 68, 84, 89, 70, 82, 0, 83,
	0, 0, 0, 0, 86, 87, 88, 92, 0, 76,
	74, 75, 91, 65, 85, 66, 67, 68, 0, 89,
	70, 82, 291, 83, 72, 73, 81, 60, 86, 87,
	88, 92, 0, 76, 74, 75, 91, 65, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 72, 73,
	81, 60, 79, 0, 0, 0, 80, 0, 0, 0,
	90, 0, 63, 0, 0, 0, 0, 0, 0, 114,
	113, 0, 0, 0, 0, 0, 79, 0, 0, 84,
	80, 0, 0, 0, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 113, 0, 0, 0, 0, 85,
	66, 67, 68, 84, 89, 70, 82, 0, 83, 0,
	0, 0, 0, 86, 87, 88, 92, 0, 76, 74,
	75, 91, 65, 85, 66, 262, 68, 0, 89, 70,
	82, 0, 83, 72, 73, 81, 60, 86, 87, 88,
	92, 0, 76, 74, 75, 91, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 72, 73, 81,
	60, 79, 0, 0, 0, 80, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 113,
	0, 0, 0, 0, 0, 79, 0, 0, 84, 80,
	0, 0, 0, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 113, 0, 100, 109, 108, 99, 98,
	101, 97, 84, 0, 0, 100, 109, 108, 99, 98,
	101, 97, 86, 87, 88, 92, 959, 76, 74, 75,
	91, 0, 0, 0, 0, 0, 948, 0, 0, 0,
	0, 0, 72, 73, 81, 111, 86, 87, 88, 92,
	0, 76, 74, 75, 91, 100, 109, 108, 99, 98,
	101, 97, 0, 0, 0, 0, 72, 73, 81, 60,
	0, 0, 0, 0, 0, 0, 934, 95, 94, 0,
	0, 0, 0, 105, 96, 104, 103, 95, 94, 0,
	106, 107, 0, 105, 96, 104, 103, 0, 0, 0,
	106, 107, 100, 109, 108, 99, 98, 101, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 922, 0, 0, 0, 95, 94, 0,
	0, 0, 0, 105, 96, 104, 103, 0, 0, 0,
	106, 107, 100, 109, 108, 99, 98, 101, 97, 0,
	0, 0, 100, 109, 108, 99, 98, 101, 97, 0,
	0, 0, 0, 899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 890, 95, 94, 0, 0, 0, 0,
	105, 96, 104, 103, 0, 0, 0, 106, 107, 100,
	109, 108, 99, 98, 101, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 95, 94, 0, 0, 0, 0,
	105, 96, 104, 103, 95, 94, 0, 106, 107, 0,
	105, 96, 104, 103, 0, 0, 0, 106, 107, 100,
	109, 108, 99, 98, 101, 97, 0, 0, 0, 0,
	100, 109, 108, 99, 98, 101, 97, 0, 0, 0,
	869, 95, 94, 0, 0, 0, 0, 105, 96, 104,
	103, 814, 0, 0, 106, 107, 100, 109, 108, 99,
	98, 101, 97, 0, 0, 0, 100, 109, 108, 99,
	98, 101, 97, 0, 0, 0, 0, 0, 0, 806,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 95, 94, 0, 0, 0, 0, 105, 96, 104,
	103, 0, 95, 94, 106, 107, 0, 0, 105, 96,
	104, 103, 0, 0, 0, 106, 107, 100, 109, 108,
	99, 98, 101, 97, 0, 0, 0, 0, 95, 94,
	0, 0, 0, 0, 105, 96, 104, 103, 95, 94,
	0, 106, 107, 0, 105, 96, 104, 103, 0, 0,
	0, 106, 107, 100, 109, 108, 99, 98, 101, 97,
	0, 0, 0, 100, 109, 108, 99, 98, 101, 97,
	0, 0, 0, 100, 109, 108, 99, 98, 101, 97,
	0, 0, 0, 0, 751, 0, 0, 0, 0, 95,
	94, 0, 0, 0, 731, 105, 96, 104, 103, 0,
	0, 797, 106, 107, 100, 109, 108, 99, 98, 101,
	97, 0, 0, 0, 100, 109, 108, 99, 98, 101,
	97, 0, 0, 0, 321, 95, 94, 0, 0, 0,
	0, 105, 96, 104, 103, 95, 94, 759, 106, 107,
	0, 105, 96, 104, 103, 95, 94, 0, 106, 107,
	0, 105, 96, 104, 103, 0, 0, 0, 106, 107,
	100, 109, 108, 99, 98, 101, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 94, 0, 0,
	0, 620, 105, 96, 104, 103, 95, 94, 0, 106,
	107, 0, 105, 96, 104, 103, 0, 0, 617, 106,
	107, 100, 109, 108, 99, 98, 101, 97, 0, 0,
	0, 0, 100, 109, 108, 99, 98, 101, 97, 0,
	0, 0, 593, 100, 109, 108, 99, 98, 101, 97,
	0, 0, 95, 94, 0, 268, 0, 0, 105, 96,
	104, 103, 0, 0, 535, 106, 107, 100, 109, 108,
	99, 98, 101, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 0,
	0, 0, 0, 95, 94, 0, 0, 0, 0, 105,
	96, 104, 103, 0, 95, 94, 106, 107, 0, 0,
	105, 96, 104, 103, 0, 95, 94, 106, 107, 0,
	0, 105, 96, 104, 103, 0, 0, 0, 106, 107,
	100, 109, 108, 99, 98, 101, 97, 0, 0, 95,
	94, 0, 0, 0, 0, 105, 96, 104, 103, 260,
	0, 217, 106, 107, 0, 0, 0, 100, 109, 108,
	99, 98, 101, 97, 0, 0, 0, 100, 424, 108,
	99, 98, 101, 97, 0, 0, 0, 100, 313, 108,
	99, 98, 101, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 94, 0, 0, 0, 0, 105, 96,
	104, 103, 0, 0, 0, 106, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	94, 0, 0, 0, 0, 105, 96, 104, 103, 95,
	94, 0, 106, 107, 0, 105, 96, 104, 103, 95,
	94, 0, 106, 107, 0, 105, 96, 104, 103, 0,
	0, 0, 106, 107,
}
var yyPact = [...]int{

	2097, -1000, 322, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2302, -1000,
	2605, 2520, -1000, -1000, 274, 966, 958, 1036, 507, -1000,
	588, 1033, 1030, 617, 617, 667, -1000, -1000, 564, 2520,
	2520, 2520, 2520, 2520, 2520, -1000, 617, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 334, -1000, -1000,
	2496, 2255, 1042, 972, -29, -69, -1000, -1000, -1000, -1000,
	-1000, -1000, 2520, 2520, 305, 303, 301, -1000, 412, 300,
	2520, 2520, -1000, -1000, 617, -1000, -1000, -1000, -1000, -1000,
	-1000, 298, 295, 2097, 2520, 2520, 2520, 805, 2520, 834,
	175, 2520, 862, 2520, 2520, 2520, 2520, 2520, 2520, 2520,
	3273, 2496, -1000, 290, 2520, 691, 2302, 936, 1010, 533,
	577, 987, 902, 794, -1000, 789, 617, 533, -1000, 29,
	328, -1000, 452, -1000, 617, 617, 617, 315, 314, -1000,
	-1000, -1000, 617, -1000, -1000, -1000, -1000, 2520, 2520, -1000,
	1023, 2302, 2302, 1134, -29, 2302, 3300, -29, 2302, 2629,
	2520, 1038, 211, 217, 216, 3175, 87, 832, 1036, -1000,
	-1000, -1000, -1000, 27, 617, -1000, 680, 2411, 596, -1000,
	-1000, 1366, 794, 794, 175, 175, 807, 849, -1000, -1000,
	1018, -1000, 407, 794, 2520, -1000, 326, 17, 17, 863,
	3320, 2520, 175, 2520, -1000, 2496, -1000, 17, 175, 175,
	34, 34, -1000, -1000, -1000, 1419, 1018, 2097, 211, 205,
	2520, 690, 664, 661, 2520, 911, 927, 533, 1017, 26,
	-1000, -1000, 209, 1022, 984, 209, 822, 822, 822, 1461,
	-1000, 335, 980, 1036, 2520, 473, 296, 289, 288, -1000,
	-1000, -1000, 2520, 2520, 985, 2302, 2302, 617, 2520, 2520,
	2520, 2302, 2520, 2302, -1000, 2520, -1000, -1000, 1803, 617,
	1036, 617, 31, 825, 972, 213, -1000, -1000, 199, 2520,
	-1000, 1718, -1000, -1000, -1000, 195, 14, 1003, -1000, 2302,
	-1000, -1000, -11, 284, 283, 277, 272, 271, 269, 2520,
	2387, -1000, -1000, 175, 222, 222, 222, 805, -1000, 2520,
	1171, -1000, -1000, 2520, 3310, -1000, 17, -1000, -1000, 652,
	-1000, 2520, 603, 2097, 594, 2520, 3210, 909, 2520, 2229,
	170, 582, 516, 533, 984, 80, -1000, 525, -1000, -1000,
	483, -1000, 268, 267, 209, 934, 2520, -1000, 216, -1000,
	216, 216, -1000, 617, 789, -1000, 226, 286, 516, 617,
	-1000, 2302, 789, 617, 789, 188, 617, 2302, -29, -29,
	2302, 1036, -1000, -1000, -1000, -1000, 2302, -1000, 584, 320,
	-1000, -1000, 2605, 2520, -1000, -1000, -1000, -1000, -1000, 629,
	-1000, 13, 624, 617, 617, -1000, 262, 617, -1000, 194,
	-1000, 1461, 617, 2411, 794, 794, 794, 2520, 2520, 2520,
	193, 191, 190, 812, -1000, 132, -1000, 257, -1000, -1000,
	499, 182, 2520, 1018, 2520, 581, 660, 2097, 2520, 3186,
	758, -1000, -1000, 2302, 2097, -1000, 2520, 1276, -1000, 12,
	920, 2302, -1000, 175, 516, -1000, -1000, 617, 987, 4,
	313, -70, -1000, -1000, 905, 904, 875, 875, 895, 209,
	-1000, -1000, -1000, -1000, 617, 155, 2520, 2520, 984, 929,
	926, 2302, 842, -1000, -1000, 842, 181, 2, -1000, 978,
	617, 951, -1000, 516, 944, 942, -1000, 176, -1000, 1002,
	173, 1, -1000, -1000, -1, 947, -24, -1000, 704, 1803,
	3164, 689, 1803, 1803, 608, 589, 789, 172, -1000, -1000,
	-1000, 166, 2520, 2520, 2387, 2520, 164, 158, 156, -1000,
	-1000, -1000, 175, 151, -3, 2520, -1000, 782, 367, 3077,
	1018, 745, 578, -1000, 3123, 2520, -1000, 3067, 688, 2302,
	-1000, 792, 363, 2229, 361, -1000, -1000, -1000, 148, -4,
	-1000, 984, 516, 2520, 209, 209, 901, -1000, 885, 883,
	875, -1000, -1000, -1000, 1075, 983, -1000, -1000, 2520, 2520,
	999, 617, -1000, -1000, -1000, 516, 516, 130, -31, 2520,
	124, 617, 2520, 997, 377, 996, 1036, 1036, 2520, 995,
	1036, -1000, -1000, 1803, 649, 2520, 574, 568, 1803, 1803,
	123, 982, 451, 122, 121, 119, 113, 97, 448, 442,
	419, -1000, -1000, 175, 104, -1000, 932, -1000, -1000, 743,
	2097, 3067, -1000, -1000, 2520, -1000, -1000, -1000, 961, 839,
	516, -1000, -1000, 2302, 895, 1040, 209, 209, 209, 879,
	2520, 617, 2302, -1000, 789, -1000, -1000, -1000, 978, 617,
	2302, -1000, -1000, -29, 2302, 789, 1950, 375, -1000, -1000,
	-1000, 947, 2302, 374, 96, 631, 559, 1803, 3036, 702,
	701, 558, 551, -1000, 255, 253, 443, 441, 436, 398,
	397, 245, 244, 360, 242, 358, -1000, 2520, 240, -1000,
	727, 3026, -1000, -1000, -1000, 175, -1000, -1000, -1000, 2520,
	236, 1040, 1202, 895, 209, -9, 3016, -34, -1000, -1000,
	-1000, -1000, 548, 319, -1000, -1000, 2605, 2520, -1000, -1000,
	2520, 2520, 1950, 1950, 976, 546, 647, 1803, 2520, 752,
	-1000, 1803, -1000, -1000, 700, 699, 789, 453, 235, 230,
	229, 228, 225, 453, 453, 396, 453, 395, 2980, 936,
	-1000, 2097, -1000, 2302, 617, -1000, 2520, 895, -1000, -1000,
	-1000, 2520, -1000, 1950, 2929, 687, 2919, 47, 816, 2302,
	541, 540, 371, 740, 524, -1000, 2893, -1000, 677, -1000,
	-1000, 91, 82, -1000, 939, 925, 453, 453, 453, 453,
	453, 76, 936, 73, 221, 71, 219, -1000, 69, 67,
	2302, 66, -1000, 1950, 646, 2520, 1647, 617, 617, -1000,
	-1000, 1950, -1000, 734, 1803, -1000, 2520, -1000, -1000, -1000,
	908, 2520, 65, 63, 54, 52, 46, -1000, -1000, 453,
	-1000, 453, -1000, -1000, -1000, 623, 518, 1950, 2882, 517,
	318, -1000, -1000, 2605, 2520, -1000, -1000, -1000, 565, 526,
	512, -1000, 726, 2832, 2229, -1000, -1000, -1000, -1000, -1000,
	-1000, 39, 38, 510, 641, 1950, 2520, 749, -1000, 1950,
	698, 1647, 2795, 673, 1647, 1647, -1000, -1000, 1803, 354,
	-1000, -1000, 732, 503, -1000, 2785, -1000, 672, -1000, -1000,
	1647, 638, 2520, 501, 500, -1000, 819, -1000, 731, 1950,
	-1000, 2520, 610, 497, 1647, 2745, 696, 668, -1000, 831,
	777, 774, 765, -1000, 719, 2698, 491, 485, 1647, 2520,
	747, -1000, 1647, -1000, -1000, 809, 773, -1000, 769, 760,
	-1000, -1000, -1000, -1000, 1950, 730, 484, -1000, 2658, -1000,
	626, 830, -1000, -1000, -1000, -1000, -1000, 729, 1647, -1000,
	2520, -1000, 771, -1000, -1000, 718, 2648, -1000, -1000, 1647,
}
var yyPgo = [...]int{

	0, 53, 28, 16, 12, 69, 118, 1188, 49, 1187,
	37, 1182, 1181, 1180, 1175, 111, 57, 1173, 1169, 1168,
	1167, 1161, 1160, 1159, 71, 30, 34, 1156, 1155, 51,
	1154, 1153, 36, 39, 1152, 1151, 1150, 1149, 1139, 33,
	100, 92, 1138, 63, 65, 1127, 1126, 15, 1121, 56,
	1120, 26, 1119, 76, 1116, 116, 103, 219, 0, 64,
	83, 32, 11, 1115, 1114, 1113, 1112, 1061, 1104, 124,
	1103, 1102, 1101, 48, 1093, 1087, 1084, 5, 47, 10,
	14, 1083, 1081, 4, 1080, 1079, 72, 84, 77, 1077,
	29, 1076, 31, 1075, 1074, 1073, 13, 35, 1072, 46,
	17, 75, 18, 68, 1070, 1069, 1068, 52, 1066, 24,
	67, 9, 25, 7, 6, 1, 3, 58, 1065, 23,
	1064, 8, 1063, 2, 1062, 997, 60, 27, 19, 1059,
	90, 1025, 101, 93, 79, 59, 66, 80, 1049, 55,
	861,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 7, 7, 8,
	8, 8, 8, 8, 9, 9, 10, 10, 12, 12,
	11, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
	19, 20, 20, 20, 20, 21, 21, 21, 22, 22,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	24, 24, 25, 25, 26, 26, 26, 26, 26, 27,
	27, 27, 27, 27, 28, 28, 28, 28, 29, 30,
	30, 31, 32, 32, 33, 33, 33, 34, 34, 34,
	34, 34, 35, 35, 35, 35, 35, 35, 35, 36,
	36, 36, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 38,
	38, 38, 39, 40, 40, 40, 40, 41, 41, 42,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	48, 48, 48, 49, 49, 50, 50, 51, 51, 52,
	52, 53, 53, 54, 54, 54, 54, 54, 54, 55,
	56, 57, 57, 57, 57, 57, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 59, 60, 60, 60, 61, 61, 62, 62, 63,
	63, 64, 64, 65, 65, 65, 66, 66, 67, 68,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 71, 71, 71, 71, 71, 71, 71, 72,
	72, 72, 72, 73, 73, 74, 74, 74, 74, 75,
	75, 75, 75, 75, 76, 76, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 78, 79, 79,
	80, 80, 81, 81, 82, 82, 82, 83, 83, 83,
	84, 84, 85, 85, 86, 86, 87, 87, 87, 89,
	89, 89, 89, 89, 90, 90, 90, 90, 90, 90,
	90, 91, 91, 91, 91, 91, 91, 92, 92, 93,
	93, 94, 94, 94, 95, 96, 96, 97, 97, 98,
	98, 99, 99, 100, 100, 101, 101, 88, 88, 102,
	102, 103, 103, 104, 104, 104, 104, 105, 106, 107,
	107, 108, 108, 109, 109, 110, 110, 111, 111, 112,
	112, 113, 113, 114, 114, 115, 115, 116, 116, 117,
	117, 118, 118, 119, 119, 120, 120, 121, 121, 122,
	122, 123, 123, 124, 124, 125, 125, 125, 125, 126,
	127, 127, 128, 129, 129, 130, 130, 131, 132, 132,
	133, 133, 134, 134, 135, 135, 136, 136, 137, 137,
	138, 138, 139, 139, 140, 140,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	8, 8, 9, 9, 1, 1, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 1, 1, 6, 8, 8, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 2, 2, 1, 2, 4, 4, 2, 1, 1,
	6, 8, 5, 6, 8, 5, 7, 7, 7, 7,
	1, 3, 1, 3, 0, 1, 1, 2, 2, 5,
	2, 2, 3, 5, 6, 8, 5, 3, 1, 1,
	3, 3, 1, 3, 1, 1, 3, 9, 10, 10,
	12, 3, 0, 1, 1, 1, 1, 2, 2, 5,
	6, 3, 4, 4, 2, 2, 2, 2, 4, 4,
	2, 2, 2, 4, 2, 4, 2, 2, 1, 2,
	3, 4, 5, 5, 4, 4, 4, 1, 1, 3,
	0, 2, 0, 2, 0, 3, 0, 2, 0, 3,
	0, 3, 4, 0, 2, 0, 2, 0, 2, 6,
	9, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 6, 1, 3, 1, 3, 2,
	4, 1, 1, 0, 1, 1, 1, 1, 3, 3,
	3, 1, 6, 3, 3, 3, 3, 4, 4, 5,
	6, 6, 3, 4, 4, 3, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 3, 3, 2, 2, 3,
	3, 2, 2, 0, 1, 4, 3, 4, 4, 5,
	5, 5, 5, 1, 5, 10, 8, 9, 9, 9,
	9, 9, 8, 8, 10, 8, 10, 2, 1, 5,
	0, 3, 2, 5, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 1, 1, 1, 1, 2, 3, 1,
	6, 6, 6, 8, 1, 1, 2, 3, 1, 1,
	3, 4, 5, 6, 7, 5, 6, 2, 4, 1,
	1, 1, 3, 1, 5, 0, 1, 4, 5, 0,
	2, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 1, 3, 6, 9, 5, 8, 7, 3, 1,
	3, 5, 6, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 1, 1, 1, 1, 1,
	1, 3, 3, 1, 3, 1, 3, 1, 0, 1,
	0, 1, 0, 1, 0, 1, 1, 1, 0, 1,
	0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -104, -105, -108, -23,
	-20, -21, -27, -28, -34, -22, -37, -38, -58, 14,
	84, 83, -8, -10, -51, 29, 32, 125, 92, -128,
	98, 18, 19, 96, 97, 95, 106, 107, 126, 111,
	112, 113, 114, 115, 116, 117, 118, -57, -54, -71,
	-68, -67, -74, -75, -95, -70, -72, -126, -131, -36,
	150, 86, 110, 76, -125, 27, 5, 6, 7, -55,
	10, -56, 147, 148, 133, 134, 132, -76, -60, 66,
	70, 149, 11, 13, 93, 4, 127, 128, 129, 9,
	74, 135, 130, 144, 140, 139, 146, 73, 71, 70,
	67, 72, -140, 148, 147, 145, 152, 153, 69, 68,
	-58, 150, -128, 84, 83, -96, -58, -40, 22, 17,
	20, -42, -41, 15, -67, 150, 33, 33, -130, -129,
	-126, -130, -125, -126, 93, 41, 119, -131, 12, -131,
	-125, -125, -35, 99, 100, 34, 35, 101, 102, 12,
	-125, -58, -58, -58, -125, -58, -58, -125, -58, -125,
	141, -58, -100, -39, -51, -58, -126, -127, -9, 125,
	92, 6, -53, -52, -138, 28, 155, 150, 155, -58,
	-58, 150, 150, 150, 139, 146, -133, -140, 70, -67,
	-58, -58, -125, 150, 150, -1, -58, -58, -58, -133,
	-58, 71, 67, 72, -60, 150, -67, -58, 65, 64,
	-58, -58, -58, -58, -58, -58, -58, 88, -100, -73,
	150, -96, -117, -97, 87, -47, 42, 23, -88, -86,
	-125, 27, 16, -88, -43, 16, 61, 62, 63, -132,
	75, -125, -86, 154, 141, 93, 41, 119, 120, -125,
	-125, -125, 146, 146, -125, -58, -58, 16, 154, 59,
	59, -58, 6, -58, 151, 154, 151, 151, 90, 67,
	154, 67, -126, -127, 154, -125, -125, 6, -73, -132,
	-100, -58, -125, 6, 151, -103, -94, -93, -59, -58,
	-77, 145, -125, 134, 132, 135, 136, 137, 138, -132,
	-132, -60, -60, 71, 67, 65, 64, 73, 132, -132,
	-58, -55, -56, 68, -58, -60, -58, -60, -60, -1,
	151, 87, -118, 89, -98, 89, -58, -48, 48, 45,
	-87, -86, 18, 154, -101, -90, -87, -89, -91, 26,
	150, -67, 131, -125, 16, -44, 21, -101, -137, 64,
	-137, -137, -103, 150, -139, 25, 30, 31, 39, 18,
	-130, -58, 94, 150, 25, 150, 150, -58, -125, -125,
	-58, 23, -125, -100, -100, -100, -58, -100, -2, -12,
	-5, -13, 84, 83, -8, -10, -6, 108, 109, -125,
	-127, -126, -125, 67, 67, -53, 25, 150, 151, -73,
	151, 154, 25, 150, 150, 150, 150, 150, 150, 150,
	-73, -73, -59, -60, -69, 150, -67, 130, -69, -69,
	-133, -73, 154, -58, 68, -110, -109, 89, 85, -58,
	91, -1, 91, -58, 88, -50, 49, -58, -62, -63,
	-64, -58, -77, 24, 150, -39, -125, 25, -107, -106,
	-57, -125, -88, -44, 57, -134, -136, 56, 60, 154,
	52, 54, 55, -125, 25, -90, 150, 150, -101, -45,
	43, -58, -41, -40, -41, -41, -102, -125, -39, -24,
	150, -125, -57, 150, -57, -125, -39, -102, -39, 151,
	-33, -30, -32, -29, -31, -126, -125, -127, 91, 144,
	-58, -96, 90, 90, -125, -125, 150, -102, 151, -103,
	-125, -73, -132, -132, -132, -132, -73, -73, -73, 151,
	151, 151, 68, -61, -60, 150, 96, 67, 151, -58,
	-58, 91, -110, -1, -58, 88, 83, -58, -1, -58,
	-49, 50, 76, 154, -65, 46, 47, -61, -99, -57,
	-125, -43, 154, 146, 51, 51, -135, 53, -135, -134,
	-136, -101, -125, 151, -58, -58, -44, -46, 44, 45,
	151, 154, -26, 34, 35, 36, 37, -25, -24, 38,
	-99, 40, 40, 151, 25, 151, 154, 154, 38, 151,
	154, 86, -2, 88, -119, 87, -2, -2, 90, 90,
	-39, 151, 151, -73, -73, -73, -59, -73, 151, 151,
	151, -60, 151, 154, -58, 77, 124, 151, 84, 91,
	88, -58, -97, -117, 87, -49, 127, -62, 128, 151,
	154, -44, -107, -58, -90, -90, 51, 51, 51, -135,
	154, 154, -58, -100, -139, -102, -57, -57, 151, 154,
	-58, 151, -125, -125, -58, 25, 121, 25, -29, -32,
	-32, -126, -58, 25, -33, -2, -120, 89, -58, 91,
	91, -2, -2, 151, 25, 105, 151, 151, 151, 151,
	151, 105, 105, 123, 105, 123, -61, 154, 43, 84,
	-1, -58, -66, 34, 35, 24, -39, -99, -92, 58,
	59, -90, -90, -90, 51, -125, -58, -125, -39, -26,
	-25, -39, -3, -14, -5, -18, 84, 83, -15, -16,
	86, 122, 121, 121, 151, -112, -111, 89, 85, 91,
	-2, 88, 86, 86, 91, 91, 150, 150, 105, 105,
	105, 105, 105, 150, 150, 128, 150, 128, -58, 150,
	-109, 88, -61, -58, 150, -92, 58, -90, 151, 151,
	151, 154, 91, 144, -58, -96, -58, -126, -127, -58,
	-3, -3, 25, 91, -112, -2, -58, 83, -2, 86,
	86, -39, -79, -78, -80, 104, 150, 150, 150, 150,
	150, -78, -80, -79, 105, -78, 105, 151, -47, -102,
	-58, -73, -3, 88, -121, 87, 90, 67, 67, 91,
	91, 121, 84, 91, 88, -119, 87, 151, 151, -47,
	42, 45, -79, -79, -79, -79, -78, 151, 151, 150,
	151, 150, 151, 151, 151, -3, -122, 89, -58, -4,
	-17, -5, -19, 84, 83, -15, -16, -6, -125, -125,
	-3, 84, -2, -58, 45, -100, 151, 151, 151, 151,
	151, -79, -78, -114, -113, 89, 85, 91, -3, 88,
	91, 144, -58, -96, 90, 90, 91, -111, 88, -62,
	151, 151, 91, -114, -3, -58, 83, -3, 86, -4,
	88, -123, 87, -4, -4, -81, 129, 84, 91, 88,
	-121, 87, -4, -124, 89, -58, 91, 91, -82, 71,
	78, 6, 81, 84, -3, -58, -116, -115, 89, 85,
	91, -4, 88, 86, 86, -84, 78, -83, 6, 81,
	79, 79, 82, -113, 88, 91, -116, -4, -58, 83,
	-4, 68, 79, 79, 80, 82, 84, 91, 88, -123,
	87, -85, 78, -83, 84, -4, -58, 80, -115, 88,
}
var yyDef = [...]int{

	-2, -2, 2, 27, 28, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	0, 335, 43, 44, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 122, 78, 79, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 208, 209,
	177, 0, 36, 420, 191, 0, 183, 184, 185, 186,
	187, 188, 0, 0, 0, 0, 0, 273, 410, 0,
	0, 0, 399, 407, 0, 395, 396, 397, 398, 189,
	190, 0, 0, -2, 0, 424, 425, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 207, 0, 335, 0, 336, -2, 0, 0,
	0, 160, 0, 408, 158, 177, 0, 0, 71, 405,
	403, 72, 0, 74, 0, 0, 0, 0, 0, 77,
	100, 101, 0, 123, 124, 125, 126, 0, 0, 134,
	144, 135, 136, 137, -2, 141, 142, -2, 147, 149,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 34,
	35, 37, 178, 181, 0, 421, 0, 263, 0, 257,
	258, 0, 408, 408, 424, 425, 0, 0, 411, 251,
	261, 262, 0, 408, 0, 3, 229, -2, -2, 0,
	0, 0, 0, 0, 242, 177, 213, -2, 0, 0,
	252, 253, 254, 255, 256, 259, 260, -2, 0, 0,
	263, 0, 381, 339, 0, 170, 0, 0, 0, 347,
	304, 305, 0, 0, 162, 0, 418, 418, 418, 0,
	409, 422, 0, 0, 0, 0, 0, 0, 0, 102,
	107, 121, 0, 0, 0, 127, 128, 0, 0, 0,
	0, 150, 184, 402, 210, 0, 212, 228, -2, 0,
	0, 0, 0, 0, 420, 0, 192, 194, 0, 263,
	264, 343, 193, 195, 266, 0, 351, 331, 333, 329,
	330, 211, 191, 0, 0, 0, 0, 0, 0, 263,
	263, 234, 236, 0, 0, 0, 0, 410, 131, 263,
	0, 237, 238, 0, 0, 243, -2, 247, 249, 365,
	268, 0, 0, -2, 0, 0, 0, 175, 0, 0,
	177, 306, 0, 0, 162, -2, 314, 315, 318, 319,
	177, 309, 0, 304, 0, 164, 0, 161, 0, 419,
	0, 0, 159, 0, 177, 423, 0, 0, 0, 0,
	406, 404, 177, 0, 177, 0, 0, 75, -2, -2,
	133, 0, 145, 138, 139, 143, 151, 344, 0, 0,
	38, 39, 0, 335, 48, 49, 50, 25, 26, 0,
	401, 400, 0, 0, 0, 182, 0, 0, 265, 0,
	267, 0, 0, 263, 408, 408, 408, 263, 263, 263,
	0, 0, 0, 0, 244, 177, 231, 0, 248, 250,
	0, 0, 0, 239, 0, 0, 365, -2, 0, 0,
	0, 382, 334, 340, -2, 152, 0, 173, 169, 217,
	223, 221, 222, 0, 0, 355, 307, 0, 160, 359,
	0, 191, 348, 361, 0, 0, 414, 414, 412, 0,
	413, 416, 417, 316, 0, 412, 0, 0, 162, 166,
	0, 163, 154, 157, 155, 156, 0, 349, 82, 94,
	0, 90, 85, 0, 0, 0, 99, 0, 106, 0,
	0, 114, 115, 109, 112, 108, 0, 103, 0, -2,
	0, 0, -2, -2, 0, 0, 177, 0, 269, 352,
	332, 0, 263, 263, 263, 263, 0, 0, 0, 270,
	271, 272, 0, 0, 215, 0, 129, 0, 274, 0,
	240, 0, 0, 366, 0, 0, 42, 23, 379, 176,
	171, 173, 0, 0, 219, 224, 225, 353, 0, 341,
	308, 162, 0, 0, 0, 0, 0, 415, 0, 0,
	414, 346, 317, 320, 0, 0, 362, 153, 0, 0,
	-2, 0, 83, 95, 96, 0, 0, 0, 92, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 29, 5, -2, 385, 0, 0, 0, -2, -2,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 230, 0, 0, 130, 0, 214, 40, 0,
	-2, 337, 338, 380, 0, 172, 174, 218, 0, 177,
	0, 357, 360, 358, 321, 412, 0, 0, 0, 0,
	0, 0, 167, 165, 177, 350, 97, 98, 94, 0,
	91, 86, 87, -2, 89, 177, -2, 0, 110, 116,
	113, 0, 111, 0, 0, 369, 0, -2, 0, 0,
	0, 0, 0, 179, 0, 0, 269, 270, 271, 272,
	274, 0, 0, 0, 0, 0, 216, 0, 0, 41,
	363, 0, 220, 226, 227, 0, 356, 342, 322, 0,
	0, 412, 412, 325, 0, 191, 0, 0, 81, 84,
	93, 105, 0, 0, 51, 52, 0, 335, 63, 64,
	0, 56, -2, -2, 0, 0, 369, -2, 0, 0,
	386, -2, 30, 31, 0, 0, 177, 290, 0, 0,
	0, 0, 0, 290, 290, 0, 290, 0, 0, 168,
	364, -2, 354, 327, 0, 323, 0, 326, 310, 311,
	312, 263, 117, -2, 0, 0, 0, 206, 0, 57,
	0, 0, 0, 0, 0, 370, 0, 47, 383, 32,
	33, 0, 0, 288, 168, 0, 290, 290, 290, 290,
	290, 0, 168, 0, 0, 0, 0, 232, 0, 0,
	324, 0, 7, -2, 389, 0, -2, 0, 0, 118,
	119, -2, 45, 0, -2, 384, 0, 180, 276, 287,
	0, 0, 0, 0, 0, 0, 0, 282, 283, 290,
	285, 290, 275, 328, 313, 373, 0, -2, 0, 0,
	0, 58, 59, 0, 335, 68, 69, 70, 0, 0,
	0, 46, 367, 0, 0, 291, 277, 278, 279, 280,
	281, 0, 0, 0, 373, -2, 0, 0, 390, -2,
	0, -2, 0, 0, -2, -2, 120, 368, -2, 169,
	284, 286, 0, 0, 374, 0, 62, 387, 53, 9,
	-2, 393, 0, 0, 0, 289, 0, 60, 0, -2,
	388, 0, 377, 0, -2, 0, 0, 0, 292, 0,
	0, 0, 0, 61, 371, 0, 0, 377, -2, 0,
	0, 394, -2, 54, 55, 0, 0, 301, 0, 0,
	294, 295, 296, 372, -2, 0, 0, 378, 0, 67,
	391, 0, 300, 297, 298, 299, 65, 0, -2, 392,
	0, 293, 0, 303, 66, 375, 0, 302, 376, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 149, 3, 3, 3, 153, 3, 3,
	150, 151, 145, 148, 154, 147, 155, 152, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 144,
	3, 146,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:224
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:229
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:234
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:245
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:255
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:265
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:361
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:365
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:369
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:379
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = Exit{}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:409
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:413
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:439
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:463
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:501
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:505
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:595
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:599
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:603
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:619
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:623
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:629
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:633
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:639
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:643
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:649
		{
			yyVAL.expression = nil
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:653
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:657
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:661
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:665
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:671
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:675
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:679
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:683
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:687
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 104:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:701
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:705
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:711
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:717
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:721
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:727
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:733
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:737
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:743
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:747
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:751
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 117:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:757
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 118:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:761
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 119:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 120:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:769
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:773
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:779
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:783
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:787
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:791
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:795
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:799
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:803
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:809
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:813
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:817
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:823
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:827
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:831
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:835
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:839
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:843
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:847
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:851
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:855
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:859
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:863
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:867
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:871
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:875
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:879
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:883
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:887
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:893
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:897
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:901
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:907
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:919
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:929
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:938
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:947
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:958
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:962
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:974
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:978
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:984
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:988
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:994
		{
			yyVAL.queryexpr = nil
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:998
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = nil
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexpr = nil
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1018
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexpr = nil
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = nil
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = nil
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = nil
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 180:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1082
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1176
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1192
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1196
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1200
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1216
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1220
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 214:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1224
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1240
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1244
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1260
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1264
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1270
		{
			yyVAL.token = Token{}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.token = yyDollar[1].token
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1278
		{
			yyVAL.token = yyDollar[1].token
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1284
		{
			yyVAL.token = yyDollar[1].token
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1288
		{
			yyVAL.token = yyDollar[1].token
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1300
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1327
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1331
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 239:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1361
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 241:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1401
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1405
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1409
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1423
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1427
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1431
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1449
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1453
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1457
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1463
		{
			yyVAL.queryexprs = nil
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1467
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1477
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1481
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1508
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1514
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 275:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1518
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 277:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 278:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 279:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1536
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 280:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1540
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 281:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 282:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 284:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 285:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1560
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 286:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1564
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1576
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1580
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1587
		{
			yyVAL.queryexpr = nil
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1591
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1597
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1607
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1611
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1622
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1627
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1676
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 313:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 323:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 326:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.queryexpr = nil
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexpr = nil
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 354:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1898
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 356:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1914
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1930
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 362:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1935
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1942
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1946
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1952
		{
			yyVAL.elseexpr = Else{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.elseexpr = Else{}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.elseexpr = Else{}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.elseexpr = Else{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2032
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2052
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2072
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2076
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2092
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2096
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2110
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2114
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2120
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2126
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2130
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2146
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.envvar = EnvVar{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.token = Token{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.token = yyDollar[1].token
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.token = Token{}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2182
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.token = Token{}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.token = yyDollar[1].token
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.token = Token{}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.token = yyDollar[1].token
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.token = yyDollar[1].token
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.token = Token{}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.token = yyDollar[1].token
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.token = Token{}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2232
		{
			yyVAL.token = yyDollar[1].token
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2238
		{
			yyVAL.token = Token{}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2242
		{
			yyVAL.token = yyDollar[1].token
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2248
		{
			yyVAL.token = yyDollar[1].token
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2252
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
