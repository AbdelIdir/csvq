//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import "github.com/mithrandie/csvq/lib/value"

//line parser.y:7
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const CASE = 57416
const IF = 57417
const ELSEIF = 57418
const WHILE = 57419
const WHEN = 57420
const THEN = 57421
const ELSE = 57422
const DO = 57423
const END = 57424
const DECLARE = 57425
const CURSOR = 57426
const FOR = 57427
const FETCH = 57428
const OPEN = 57429
const CLOSE = 57430
const DISPOSE = 57431
const NEXT = 57432
const PRIOR = 57433
const ABSOLUTE = 57434
const RELATIVE = 57435
const RANGE = 57436
const SEPARATOR = 57437
const PARTITION = 57438
const OVER = 57439
const COMMIT = 57440
const ROLLBACK = 57441
const CONTINUE = 57442
const BREAK = 57443
const EXIT = 57444
const PRINT = 57445
const PRINTF = 57446
const SOURCE = 57447
const TRIGGER = 57448
const FUNCTION = 57449
const AGGREGATE = 57450
const BEGIN = 57451
const RETURN = 57452
const IGNORE = 57453
const WITHIN = 57454
const VAR = 57455
const SHOW = 57456
const TIES = 57457
const NULLS = 57458
const ERROR = 57459
const COUNT = 57460
const LISTAGG = 57461
const AGGREGATE_FUNCTION = 57462
const FUNCTION_WITH_INS = 57463
const COMPARISON_OP = 57464
const STRING_OP = 57465
const SUBSTITUTION_OP = 57466
const UMINUS = 57467
const UPLUS = 57468

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"RANGE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2025

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 154,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 54,
	13, 154,
	15, 154,
	17, 154,
	19, 154,
	133, 154,
	-2, 1,
	-1, 56,
	134, 235,
	-2, 154,
	-1, 94,
	78, 285,
	-2, 362,
	-1, 96,
	58, 134,
	59, 134,
	60, 134,
	-2, 145,
	-1, 127,
	64, 362,
	68, 362,
	69, 362,
	-2, 122,
	-1, 128,
	64, 362,
	68, 362,
	69, 362,
	-2, 123,
	-1, 129,
	64, 362,
	68, 362,
	69, 362,
	-2, 125,
	-1, 141,
	76, 1,
	80, 1,
	82, 1,
	-2, 154,
	-1, 200,
	64, 362,
	68, 362,
	69, 362,
	-2, 292,
	-1, 212,
	64, 362,
	68, 362,
	69, 362,
	-2, 115,
	-1, 213,
	64, 362,
	68, 362,
	69, 362,
	-2, 116,
	-1, 216,
	64, 362,
	68, 362,
	69, 362,
	-2, 127,
	-1, 218,
	82, 4,
	-2, 154,
	-1, 227,
	70, 0,
	122, 0,
	129, 0,
	-2, 205,
	-1, 228,
	70, 0,
	122, 0,
	129, 0,
	-2, 207,
	-1, 268,
	82, 1,
	-2, 154,
	-1, 278,
	48, 364,
	-2, 294,
	-1, 297,
	64, 362,
	68, 362,
	69, 362,
	-2, 278,
	-1, 313,
	64, 362,
	68, 362,
	69, 362,
	-2, 357,
	-1, 322,
	64, 362,
	68, 362,
	69, 362,
	-2, 128,
	-1, 343,
	82, 1,
	-2, 154,
	-1, 349,
	70, 0,
	122, 0,
	129, 0,
	-2, 216,
	-1, 371,
	78, 1,
	80, 1,
	82, 1,
	-2, 154,
	-1, 374,
	64, 362,
	68, 362,
	69, 362,
	-2, 150,
	-1, 378,
	64, 362,
	68, 362,
	69, 362,
	-2, 196,
	-1, 406,
	64, 362,
	68, 362,
	69, 362,
	-2, 140,
	-1, 440,
	76, 4,
	78, 4,
	80, 4,
	82, 4,
	-2, 154,
	-1, 443,
	82, 4,
	-2, 154,
	-1, 444,
	82, 4,
	-2, 154,
	-1, 457,
	82, 289,
	-2, 362,
	-1, 469,
	64, 362,
	68, 362,
	69, 362,
	-2, 153,
	-1, 506,
	13, 374,
	73, 374,
	133, 374,
	-2, 71,
	-1, 528,
	76, 4,
	80, 4,
	82, 4,
	-2, 154,
	-1, 537,
	76, 1,
	80, 1,
	82, 1,
	-2, 154,
	-1, 539,
	80, 286,
	82, 286,
	-2, 362,
	-1, 556,
	64, 362,
	68, 362,
	69, 362,
	-2, 307,
	-1, 563,
	64, 362,
	68, 362,
	69, 362,
	-2, 144,
	-1, 578,
	64, 362,
	68, 362,
	69, 362,
	-2, 80,
	-1, 582,
	82, 6,
	-2, 154,
	-1, 588,
	134, 100,
	137, 100,
	-2, 362,
	-1, 593,
	82, 4,
	-2, 154,
	-1, 639,
	82, 6,
	-2, 154,
	-1, 640,
	82, 6,
	-2, 154,
	-1, 644,
	82, 4,
	-2, 154,
	-1, 648,
	78, 4,
	80, 4,
	82, 4,
	-2, 154,
	-1, 655,
	64, 362,
	68, 362,
	69, 362,
	-2, 276,
	-1, 669,
	76, 6,
	78, 6,
	80, 6,
	82, 6,
	-2, 154,
	-1, 675,
	127, 51,
	-2, 362,
	-1, 688,
	64, 362,
	68, 362,
	69, 362,
	-2, 273,
	-1, 700,
	76, 6,
	80, 6,
	82, 6,
	-2, 154,
	-1, 703,
	82, 8,
	-2, 154,
	-1, 708,
	82, 6,
	-2, 154,
	-1, 711,
	76, 4,
	80, 4,
	82, 4,
	-2, 154,
	-1, 728,
	82, 6,
	-2, 154,
	-1, 753,
	82, 6,
	-2, 154,
	-1, 757,
	78, 6,
	80, 6,
	82, 6,
	-2, 154,
	-1, 759,
	76, 8,
	78, 8,
	80, 8,
	82, 8,
	-2, 154,
	-1, 762,
	82, 8,
	-2, 154,
	-1, 763,
	82, 8,
	-2, 154,
	-1, 775,
	76, 8,
	80, 8,
	82, 8,
	-2, 154,
	-1, 782,
	76, 6,
	80, 6,
	82, 6,
	-2, 154,
	-1, 786,
	82, 8,
	-2, 154,
	-1, 794,
	82, 8,
	-2, 154,
	-1, 798,
	78, 8,
	80, 8,
	82, 8,
	-2, 154,
	-1, 810,
	76, 8,
	80, 8,
	82, 8,
	-2, 154,
}

const yyPrivate = 57344

const yyLast = 2574

var yyAct = [...]int{

	70, 23, 792, 793, 776, 643, 752, 701, 751, 93,
	529, 323, 182, 278, 642, 133, 254, 418, 610, 431,
	342, 689, 199, 513, 434, 307, 636, 478, 112, 85,
	508, 116, 117, 296, 470, 286, 486, 375, 57, 385,
	179, 433, 393, 191, 635, 298, 330, 21, 293, 341,
	277, 514, 392, 77, 185, 23, 135, 146, 75, 58,
	274, 460, 289, 108, 101, 279, 408, 413, 162, 154,
	153, 155, 161, 161, 145, 524, 196, 161, 525, 157,
	163, 577, 553, 810, 542, 704, 329, 20, 150, 96,
	177, 111, 522, 521, 169, 151, 152, 766, 507, 187,
	187, 21, 331, 482, 473, 220, 219, 201, 187, 730,
	1, 411, 154, 153, 155, 209, 210, 145, 181, 211,
	397, 276, 398, 399, 394, 391, 143, 142, 395, 222,
	203, 53, 150, 144, 149, 148, 749, 380, 223, 151,
	152, 20, 23, 172, 748, 139, 747, 746, 150, 745,
	149, 148, 68, 28, 190, 151, 152, 724, 220, 186,
	186, 716, 247, 715, 250, 140, 139, 714, 202, 143,
	142, 713, 641, 622, 621, 150, 144, 149, 148, 220,
	620, 242, 151, 152, 243, 187, 619, 618, 21, 43,
	187, 597, 579, 187, 576, 571, 565, 300, 552, 544,
	256, 259, 543, 229, 142, 43, 541, 28, 396, 150,
	534, 149, 148, 520, 518, 725, 151, 152, 506, 23,
	334, 466, 337, 455, 454, 453, 452, 96, 20, 339,
	305, 102, 316, 244, 246, 154, 335, 155, 321, 249,
	145, 308, 245, 288, 252, 253, 696, 695, 694, 381,
	273, 693, 225, 629, 430, 266, 692, 291, 292, 666,
	660, 348, 656, 350, 351, 257, 352, 312, 257, 23,
	653, 651, 445, 300, 320, 383, 388, 187, 417, 338,
	181, 400, 416, 346, 187, 415, 187, 356, 345, 414,
	360, 365, 143, 142, 28, 363, 361, 402, 150, 144,
	149, 148, 318, 483, 317, 151, 152, 419, 178, 104,
	423, 388, 388, 390, 387, 21, 419, 168, 379, 437,
	167, 166, 367, 102, 105, 98, 200, 99, 214, 97,
	759, 389, 155, 428, 130, 438, 403, 186, 442, 669,
	340, 419, 440, 315, 23, 55, 94, 54, 204, 424,
	426, 104, 306, 139, 407, 20, 409, 410, 446, 667,
	551, 421, 549, 665, 127, 128, 129, 623, 131, 264,
	546, 28, 23, 708, 698, 664, 640, 639, 546, 370,
	582, 624, 388, 156, 663, 480, 662, 170, 661, 617,
	21, 461, 448, 461, 171, 461, 691, 187, 545, 314,
	809, 465, 492, 802, 796, 164, 165, 67, 52, 147,
	461, 94, 300, 499, 175, 176, 789, 265, 21, 763,
	479, 28, 156, 423, 464, 462, 388, 463, 788, 481,
	20, 488, 53, 781, 110, 110, 767, 113, 490, 494,
	764, 23, 477, 104, 23, 23, 758, 491, 489, 132,
	212, 213, 527, 516, 449, 531, 532, 216, 20, 115,
	498, 755, 52, 710, 479, 707, 224, 706, 679, 226,
	227, 228, 668, 646, 300, 235, 236, 237, 238, 239,
	240, 241, 468, 388, 596, 187, 187, 595, 536, 540,
	501, 502, 503, 504, 456, 173, 28, 447, 557, 558,
	439, 369, 777, 762, 444, 114, 548, 269, 419, 547,
	795, 550, 388, 388, 794, 702, 443, 554, 580, 379,
	564, 387, 555, 297, 28, 573, 754, 562, 794, 23,
	753, 313, 572, 786, 753, 728, 644, 569, 23, 206,
	591, 593, 343, 358, 322, 590, 584, 62, 9, 52,
	574, 575, 268, 530, 388, 180, 601, 347, 255, 349,
	187, 187, 187, 585, 586, 631, 3, 645, 806, 800,
	799, 644, 461, 613, 614, 615, 344, 771, 423, 773,
	343, 609, 359, 23, 21, 205, 650, 649, 526, 795,
	754, 645, 479, 28, 23, 344, 28, 28, 374, 378,
	812, 627, 9, 808, 602, 647, 790, 626, 207, 208,
	780, 110, 742, 709, 406, 599, 535, 187, 121, 122,
	3, 652, 683, 607, 20, 467, 52, 43, 336, 472,
	659, 197, 657, 155, 91, 261, 705, 461, 231, 260,
	23, 23, 230, 232, 671, 23, 459, 221, 600, 23,
	263, 262, 290, 674, 441, 94, 681, 419, 680, 397,
	684, 398, 399, 394, 391, 194, 686, 395, 487, 654,
	23, 450, 234, 233, 687, 43, 52, 119, 120, 123,
	124, 28, 193, 194, 195, 457, 616, 561, 697, 9,
	28, 397, 560, 398, 399, 712, 92, 559, 485, 484,
	469, 23, 373, 717, 23, 739, 740, 3, 271, 23,
	475, 476, 23, 718, 719, 720, 721, 722, 723, 497,
	272, 496, 603, 743, 405, 436, 183, 336, 517, 23,
	737, 309, 310, 523, 515, 28, 605, 606, 297, 107,
	311, 744, 106, 138, 493, 761, 28, 750, 736, 765,
	678, 52, 598, 589, 23, 583, 581, 308, 23, 519,
	23, 768, 412, 23, 23, 319, 9, 72, 73, 74,
	184, 91, 76, 287, 275, 192, 23, 285, 538, 52,
	783, 126, 125, 23, 325, 539, 737, 23, 53, 737,
	737, 134, 28, 28, 137, 23, 803, 28, 801, 23,
	378, 28, 737, 109, 736, 785, 738, 736, 736, 727,
	556, 23, 811, 737, 592, 267, 9, 814, 8, 386,
	736, 737, 28, 563, 397, 737, 398, 399, 394, 391,
	658, 736, 395, 92, 3, 7, 6, 737, 357, 736,
	64, 294, 578, 736, 509, 510, 511, 512, 52, 295,
	588, 52, 52, 28, 281, 736, 28, 594, 280, 690,
	83, 28, 738, 63, 28, 738, 738, 66, 59, 774,
	65, 60, 778, 779, 22, 604, 474, 377, 738, 376,
	136, 28, 372, 270, 495, 784, 404, 100, 17, 738,
	159, 9, 16, 676, 677, 69, 797, 738, 118, 14,
	435, 738, 44, 432, 804, 13, 28, 12, 807, 3,
	28, 10, 28, 738, 15, 28, 28, 11, 733, 9,
	813, 632, 71, 699, 731, 630, 44, 5, 28, 436,
	587, 160, 326, 436, 324, 28, 52, 3, 655, 28,
	4, 2, 0, 0, 0, 52, 71, 28, 0, 0,
	0, 28, 0, 0, 726, 0, 0, 0, 44, 0,
	670, 94, 741, 28, 672, 675, 0, 0, 0, 0,
	160, 0, 682, 0, 0, 0, 0, 282, 188, 160,
	0, 0, 756, 0, 158, 688, 0, 0, 9, 0,
	52, 9, 9, 0, 0, 0, 198, 0, 0, 0,
	0, 52, 0, 0, 0, 0, 325, 769, 471, 325,
	325, 772, 0, 45, 46, 51, 47, 48, 49, 50,
	0, 0, 0, 158, 0, 0, 154, 153, 155, 729,
	0, 145, 158, 0, 472, 0, 791, 45, 46, 51,
	47, 48, 49, 50, 0, 673, 0, 52, 52, 0,
	0, 0, 52, 198, 0, 425, 52, 0, 0, 0,
	0, 760, 94, 154, 153, 155, 0, 0, 145, 45,
	46, 51, 47, 48, 49, 50, 9, 52, 0, 0,
	0, 770, 0, 143, 142, 9, 0, 283, 0, 150,
	144, 149, 148, 0, 325, 0, 151, 152, 0, 0,
	0, 0, 0, 3, 787, 0, 0, 0, 52, 0,
	0, 52, 0, 0, 0, 0, 52, 0, 0, 52,
	143, 142, 805, 0, 0, 0, 150, 144, 149, 148,
	9, 0, 160, 151, 152, 243, 52, 0, 0, 0,
	353, 9, 0, 354, 355, 0, 0, 397, 160, 398,
	399, 394, 391, 611, 612, 395, 0, 368, 160, 325,
	155, 52, 0, 145, 0, 52, 0, 52, 44, 0,
	52, 52, 0, 0, 0, 0, 61, 0, 0, 0,
	0, 0, 160, 52, 0, 158, 0, 9, 9, 160,
	52, 160, 9, 0, 52, 0, 9, 0, 0, 103,
	0, 382, 52, 0, 0, 0, 52, 0, 0, 0,
	325, 158, 0, 0, 325, 143, 142, 9, 52, 0,
	0, 150, 144, 149, 148, 0, 0, 0, 151, 152,
	0, 0, 0, 0, 0, 420, 160, 0, 160, 0,
	160, 0, 427, 0, 429, 0, 0, 0, 9, 0,
	0, 9, 0, 0, 0, 0, 9, 0, 0, 9,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 9, 325, 0, 45,
	46, 51, 47, 48, 49, 50, 44, 0, 0, 158,
	0, 158, 0, 158, 0, 0, 189, 422, 0, 0,
	0, 9, 0, 0, 500, 9, 188, 9, 505, 0,
	9, 9, 0, 0, 154, 153, 155, 0, 0, 145,
	160, 0, 0, 9, 0, 732, 0, 0, 732, 732,
	9, 0, 0, 0, 9, 0, 0, 103, 0, 0,
	0, 732, 9, 0, 0, 0, 9, 258, 258, 154,
	153, 155, 732, 0, 145, 0, 0, 0, 9, 0,
	732, 0, 0, 798, 732, 0, 284, 0, 0, 284,
	0, 143, 142, 533, 0, 0, 732, 150, 144, 149,
	148, 0, 0, 0, 151, 152, 215, 0, 0, 0,
	0, 0, 566, 567, 568, 570, 0, 45, 46, 51,
	47, 48, 49, 50, 0, 0, 143, 142, 258, 0,
	258, 258, 150, 144, 149, 148, 0, 0, 0, 151,
	152, 0, 0, 0, 0, 0, 0, 160, 154, 153,
	155, 0, 0, 145, 0, 0, 0, 258, 362, 364,
	366, 0, 782, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 154, 153, 155, 160, 0, 145, 0,
	284, 0, 284, 0, 0, 0, 103, 775, 103, 103,
	0, 0, 0, 0, 0, 0, 44, 72, 73, 74,
	608, 91, 76, 53, 0, 143, 142, 0, 0, 0,
	0, 150, 144, 149, 148, 0, 71, 0, 151, 152,
	625, 44, 72, 73, 74, 0, 91, 76, 53, 628,
	143, 142, 0, 0, 0, 0, 150, 144, 149, 148,
	0, 71, 0, 151, 152, 0, 160, 0, 0, 44,
	0, 0, 0, 0, 0, 86, 0, 0, 258, 87,
	258, 0, 258, 92, 0, 0, 84, 80, 282, 188,
	0, 0, 0, 0, 0, 0, 89, 258, 0, 0,
	86, 0, 0, 0, 87, 0, 0, 44, 92, 197,
	0, 84, 80, 284, 0, 0, 0, 0, 0, 685,
	0, 89, 0, 0, 0, 401, 0, 45, 46, 51,
	82, 90, 81, 50, 0, 0, 0, 0, 43, 0,
	299, 0, 78, 79, 88, 95, 154, 153, 155, 44,
	0, 145, 45, 46, 51, 82, 90, 81, 50, 0,
	757, 0, 0, 0, 0, 0, 0, 78, 79, 88,
	95, 0, 44, 72, 73, 74, 258, 91, 76, 53,
	45, 46, 51, 47, 48, 49, 50, 0, 0, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 283, 0,
	0, 284, 284, 143, 142, 0, 0, 0, 0, 150,
	144, 149, 148, 0, 0, 0, 151, 152, 45, 46,
	51, 47, 48, 49, 50, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 87, 0, 0, 0, 92,
	0, 0, 84, 80, 0, 0, 0, 0, 44, 72,
	73, 74, 89, 91, 76, 53, 44, 0, 0, 258,
	45, 46, 51, 47, 48, 49, 50, 0, 71, 0,
	0, 0, 0, 0, 384, 0, 284, 284, 284, 0,
	0, 0, 44, 45, 46, 51, 302, 303, 301, 304,
	0, 0, 0, 0, 0, 0, 299, 0, 78, 79,
	88, 95, 188, 0, 0, 0, 0, 86, 0, 0,
	0, 87, 0, 0, 0, 92, 0, 43, 84, 80,
	44, 72, 73, 74, 258, 91, 76, 53, 89, 0,
	0, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 44, 72, 73, 74,
	0, 91, 76, 53, 44, 0, 251, 0, 0, 45,
	46, 51, 82, 90, 81, 50, 71, 45, 46, 51,
	47, 48, 49, 50, 78, 79, 88, 95, 0, 86,
	0, 0, 0, 87, 0, 0, 0, 92, 0, 0,
	84, 80, 0, 45, 46, 51, 47, 48, 49, 50,
	89, 0, 0, 0, 0, 86, 0, 0, 0, 87,
	0, 0, 0, 92, 0, 0, 84, 80, 44, 72,
	73, 74, 0, 91, 76, 53, 89, 0, 0, 0,
	0, 45, 46, 51, 82, 90, 81, 50, 71, 0,
	0, 0, 0, 0, 0, 0, 78, 79, 88, 95,
	154, 153, 155, 0, 0, 145, 0, 45, 46, 51,
	82, 90, 81, 50, 711, 45, 46, 51, 47, 48,
	49, 50, 78, 79, 88, 56, 0, 86, 0, 0,
	0, 87, 0, 0, 0, 92, 0, 0, 84, 80,
	44, 72, 217, 74, 0, 91, 76, 53, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 142, 0,
	71, 0, 0, 150, 144, 149, 148, 0, 0, 0,
	151, 152, 154, 153, 155, 0, 0, 145, 0, 45,
	46, 51, 302, 303, 301, 304, 0, 0, 703, 0,
	0, 0, 0, 0, 78, 79, 88, 95, 0, 86,
	0, 44, 0, 87, 0, 0, 0, 92, 53, 0,
	84, 80, 0, 35, 0, 0, 0, 0, 0, 0,
	89, 0, 44, 24, 248, 0, 25, 0, 0, 143,
	142, 0, 0, 0, 0, 150, 144, 149, 148, 0,
	0, 0, 151, 152, 0, 0, 0, 0, 0, 0,
	0, 45, 46, 51, 82, 90, 81, 50, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 79, 88, 95,
	43, 735, 734, 0, 637, 0, 0, 0, 0, 0,
	27, 0, 0, 32, 30, 31, 29, 0, 154, 153,
	155, 0, 0, 145, 0, 33, 34, 332, 333, 0,
	37, 38, 39, 40, 218, 0, 0, 638, 0, 0,
	26, 36, 45, 46, 51, 47, 48, 49, 50, 44,
	0, 0, 0, 0, 0, 0, 53, 0, 0, 0,
	0, 35, 0, 45, 46, 51, 47, 48, 49, 50,
	0, 24, 0, 0, 25, 143, 142, 0, 0, 0,
	0, 150, 144, 149, 148, 0, 0, 0, 151, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 44,
	0, 0, 0, 0, 0, 0, 53, 44, 0, 0,
	0, 35, 0, 0, 53, 0, 0, 0, 43, 328,
	327, 24, 41, 0, 25, 0, 0, 0, 27, 0,
	0, 32, 30, 31, 29, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 34, 332, 333, 42, 37, 38,
	39, 40, 0, 0, 0, 0, 0, 0, 26, 36,
	45, 46, 51, 47, 48, 49, 50, 44, 43, 634,
	633, 0, 637, 0, 53, 0, 0, 0, 27, 35,
	0, 32, 30, 31, 29, 0, 0, 0, 0, 24,
	0, 0, 25, 33, 34, 0, 0, 0, 37, 38,
	39, 40, 0, 0, 0, 638, 0, 0, 26, 36,
	45, 46, 51, 47, 48, 49, 50, 0, 45, 46,
	51, 47, 48, 49, 50, 0, 0, 0, 0, 154,
	153, 155, 0, 0, 145, 0, 43, 19, 18, 0,
	41, 0, 0, 700, 0, 0, 27, 0, 0, 32,
	30, 31, 29, 0, 0, 0, 0, 0, 154, 153,
	155, 33, 34, 145, 0, 42, 37, 38, 39, 40,
	0, 0, 648, 0, 0, 0, 26, 36, 45, 46,
	51, 47, 48, 49, 50, 0, 143, 142, 0, 0,
	0, 0, 150, 144, 149, 148, 154, 153, 155, 151,
	152, 145, 0, 0, 0, 0, 154, 153, 155, 255,
	0, 145, 0, 0, 0, 143, 142, 0, 0, 0,
	537, 150, 144, 149, 148, 154, 153, 155, 151, 152,
	145, 0, 0, 0, 0, 154, 153, 155, 0, 528,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 0, 143, 142, 0, 0, 0, 0, 150,
	144, 149, 148, 143, 142, 0, 151, 152, 0, 150,
	144, 149, 148, 154, 153, 155, 151, 152, 145, 0,
	0, 0, 143, 142, 0, 0, 0, 371, 150, 144,
	149, 148, 143, 142, 0, 151, 152, 0, 150, 144,
	149, 148, 154, 153, 155, 151, 152, 145, 0, 0,
	0, 0, 154, 153, 155, 0, 141, 145, 0, 0,
	0, 0, 451, 153, 155, 0, 0, 145, 0, 0,
	143, 142, 0, 0, 0, 0, 150, 144, 149, 148,
	0, 0, 0, 151, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	142, 0, 0, 0, 0, 150, 144, 149, 148, 143,
	142, 0, 151, 152, 0, 150, 144, 149, 148, 143,
	142, 0, 151, 152, 0, 150, 144, 149, 148, 0,
	0, 0, 151, 152,
}
var yyPact = [...]int{

	2243, -1000, 220, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1802, 1776,
	-1000, -1000, 310, 191, 712, 709, 777, 2183, -1000, 421,
	1605, 1605, 587, -1000, -1000, 770, 769, 1776, 1776, 1776,
	217, 1776, 785, 718, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 229, -1000, 2243, 2417, 1704, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 229, -1000, -1000,
	-65, -58, -1000, -1000, -1000, -1000, -1000, -1000, 1776, 1776,
	188, 187, 184, -1000, 1776, 265, 176, 1776, 1776, 1605,
	175, -1000, -1000, 477, 2427, 1704, 687, 750, 1738, 1282,
	761, 624, 559, -1000, 554, 1776, 1605, 1738, -1000, -7,
	224, -1000, 501, -1000, 1605, 1605, -1000, -1000, 1605, -1000,
	-1000, -1000, -1000, 1776, 1776, 199, -1000, 2427, 1249, 2427,
	1946, 2033, 42, 583, -1000, -1000, -8, 1605, -1000, 1776,
	-1000, 2243, 1776, 1776, 1776, 566, 574, 611, 1776, 1776,
	1776, 1776, 1776, 1776, 1776, -1000, 47, 99, 108, 100,
	218, 2028, 1497, 1810, -1000, -1000, 1776, 559, 559, 480,
	135, 135, 571, 589, -1000, 1093, -1000, 299, 559, 472,
	1776, 99, 663, 678, 1738, 758, -16, -1000, -1000, 954,
	763, 755, 954, 591, 591, 591, 1628, -1000, 96, -1000,
	998, 219, 704, 777, 1776, 314, 210, 171, 169, -1000,
	-1000, 745, 2427, 2427, 762, 1776, 2427, 1776, 2125, 1605,
	777, 1605, 718, 207, 2427, 500, 20, 81, 81, 625,
	1776, 135, 1776, 135, 135, -40, -40, -1000, -1000, -1000,
	170, 1093, -1000, 1776, -1000, -1000, -1000, -1000, -1000, 1776,
	-1000, -1000, 1776, 1472, 463, 1776, -1000, 1704, -1000, -1000,
	135, 163, 162, 158, 566, -1000, 1776, 419, 2243, 2388,
	656, 1776, 1874, 116, 1712, 898, 1738, 755, 71, -1000,
	1563, -1000, -1000, 1525, -1000, 954, 684, 1776, -1000, 218,
	-1000, 218, 218, -1000, -26, 740, -1000, 2427, -1000, -1000,
	-66, 156, 152, 149, 145, -1000, 1605, 554, -1000, 1164,
	922, 898, -1000, 2427, 554, 1605, 554, 120, 1605, 777,
	-1000, -1000, 2427, 418, 215, -1000, -1000, 1802, 1776, -1000,
	-1000, -1000, -1000, -1000, 435, -1000, -32, 423, -1000, 139,
	1605, 415, 462, 2243, 1776, -1000, -1000, 2437, -1000, 81,
	-1000, -1000, -1000, 92, 91, 90, 89, 412, 1776, 2350,
	581, 132, -1000, 132, -1000, 132, -1000, 337, 87, 551,
	-1000, 2243, -1000, 1776, 961, -1000, -33, 667, 2427, -1000,
	135, 898, -1000, -1000, 1605, 761, -34, 174, -61, -1000,
	-1000, 651, 650, 618, 618, 642, 954, -1000, -1000, -1000,
	-1000, 1605, 610, 755, 680, 677, 2427, 606, -1000, -1000,
	606, 1628, 1605, 1497, 559, 559, 559, 1776, 84, -39,
	-1000, 813, 1605, 699, -1000, 898, 691, -1000, 80, -1000,
	737, 79, -44, -1000, -1000, -45, 698, -59, -1000, 511,
	2125, 2340, 475, 2125, 2125, 554, 76, 541, 406, -1000,
	2321, 1776, -1000, -1000, -1000, -1000, -1000, 2427, 1776, 135,
	72, -53, 68, 65, -1000, 304, 258, -1000, 477, 2427,
	-1000, 556, 247, 1874, 244, -1000, -1000, -1000, 64, -55,
	-1000, 755, 898, 1776, 954, 954, 649, -1000, 644, 639,
	618, -1000, -1000, -1000, -1000, -1000, 1776, 1776, -1000, -1000,
	62, 1776, 1776, 1472, 1776, 61, 735, 1605, -1000, -1000,
	-1000, 898, 898, 60, -56, 1776, 58, 1605, 734, 271,
	733, 777, 777, 1776, 731, 777, -1000, -1000, 2125, 461,
	1776, 405, 402, 57, 730, -1000, 540, 2243, 1093, 2311,
	-1000, -1000, 135, -1000, -1000, -1000, 682, -1000, -1000, -1000,
	-1000, 705, 602, 898, -1000, -1000, 2427, 642, 1098, 954,
	954, 954, 638, 2427, -1000, 292, 53, 52, 46, 40,
	39, 270, 554, -1000, -1000, -1000, 813, 1605, 2427, -1000,
	-1000, 554, 2175, 268, -1000, -1000, -1000, 698, 2427, 267,
	38, 491, 391, 2125, 2273, 510, 509, -1000, 138, -1000,
	519, -1000, -1000, 137, -1000, -1000, -1000, 135, -1000, -1000,
	-1000, 1776, 129, 1098, 775, 642, 954, 127, 291, 289,
	287, 278, 266, 126, 243, -1000, -1000, -1000, -1000, 390,
	212, -1000, -1000, 1802, 1776, -1000, -1000, 1776, 1776, 2175,
	2175, 728, 386, 456, 2125, 1776, 548, -1000, 2125, -1000,
	-1000, 554, -1000, 687, -1000, 2427, 1605, -1000, 1776, 642,
	300, 123, 118, 115, 114, 113, 300, 277, -1000, 2175,
	2244, 437, 1917, 21, 572, 2427, 385, 383, 264, 538,
	381, -1000, 1845, -1000, 475, 37, 33, 29, 2427, 27,
	687, 671, 300, 300, 300, 300, 300, 23, 82, -1000,
	2175, 455, 1776, 2007, 1605, 1605, -1000, -1000, 2175, -1000,
	537, 2125, -1000, -1000, -1000, -1000, -1000, -1000, 1776, 15,
	13, 12, 10, 2, -1000, 300, 450, 379, 2175, 1541,
	364, 203, -1000, -1000, 1802, 1776, -1000, -1000, -1000, 422,
	338, 358, -1000, 515, -1000, -1000, -1000, -1000, -1000, -1000,
	-37, 354, 454, 2175, 1776, 503, -1000, 2175, 502, 2007,
	1388, 424, 2007, 2007, -1000, -1000, -1000, 535, 351, -1000,
	1363, -1000, 437, -1000, -1000, 2007, 453, 1776, 346, 334,
	-1000, 531, 2175, -1000, 434, 322, 2007, 1284, 493, 492,
	-1000, 514, 321, 448, 2007, 1776, 494, -1000, 2007, -1000,
	-1000, -1000, 528, 318, -1000, 4, -1000, 424, -1000, 525,
	2007, -1000, -1000, 513, -1000,
}
var yyPgo = [...]int{

	0, 110, 11, 253, 109, 565, 102, 941, 86, 46,
	940, 934, 932, 925, 44, 26, 924, 921, 918, 917,
	914, 911, 51, 23, 30, 907, 905, 24, 903, 900,
	41, 19, 899, 898, 895, 892, 888, 927, 66, 64,
	887, 43, 35, 886, 884, 12, 883, 34, 882, 874,
	880, 56, 59, 58, 53, 38, 326, 33, 29, 61,
	37, 879, 877, 876, 875, 1176, 871, 870, 868, 867,
	890, 547, 863, 860, 45, 21, 859, 60, 65, 54,
	858, 13, 854, 18, 849, 841, 840, 9, 16, 838,
	27, 22, 50, 17, 48, 836, 835, 819, 39, 818,
	20, 49, 5, 14, 6, 8, 3, 2, 40, 815,
	10, 814, 7, 809, 4, 805, 0, 407, 15, 152,
	803, 63, 76, 57, 52, 36, 42, 62, 794, 25,
	409,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	9, 9, 11, 11, 10, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 12, 13, 13, 14, 14, 14,
	15, 15, 16, 16, 17, 17, 17, 17, 17, 18,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 20,
	20, 21, 21, 21, 21, 21, 21, 21, 21, 22,
	22, 23, 23, 24, 24, 24, 24, 24, 25, 25,
	25, 25, 25, 26, 26, 26, 26, 27, 28, 28,
	29, 30, 30, 31, 31, 31, 32, 32, 32, 32,
	33, 33, 33, 33, 33, 33, 33, 34, 34, 34,
	35, 35, 35, 35, 35, 35, 36, 36, 36, 37,
	38, 38, 38, 38, 39, 39, 40, 41, 41, 42,
	42, 43, 43, 44, 44, 45, 45, 46, 46, 46,
	47, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 52, 52, 52, 52, 53, 54, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 57, 58, 58,
	59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
	63, 64, 64, 65, 66, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 68, 68, 68, 68, 68, 68,
	68, 69, 69, 69, 69, 70, 70, 71, 71, 72,
	72, 72, 72, 72, 73, 73, 74, 74, 74, 74,
	74, 74, 74, 74, 75, 76, 76, 77, 77, 78,
	78, 78, 80, 81, 81, 81, 81, 81, 81, 81,
	82, 82, 82, 82, 82, 82, 83, 83, 84, 84,
	85, 85, 85, 86, 87, 87, 88, 88, 89, 89,
	90, 90, 91, 91, 92, 92, 79, 79, 93, 93,
	94, 94, 95, 95, 95, 95, 96, 97, 98, 98,
	99, 99, 100, 100, 101, 101, 102, 102, 103, 103,
	104, 104, 105, 105, 106, 106, 107, 107, 108, 108,
	109, 109, 110, 110, 111, 111, 112, 112, 113, 113,
	114, 114, 115, 115, 116, 116, 116, 116, 116, 116,
	116, 116, 117, 118, 118, 119, 120, 120, 121, 121,
	122, 122, 123, 123, 124, 124, 125, 125, 126, 126,
	127, 127, 128, 128, 129, 129, 130, 130,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	1, 2, 1, 1, 7, 8, 6, 1, 1, 7,
	8, 6, 1, 1, 1, 1, 1, 6, 8, 8,
	1, 2, 1, 1, 7, 8, 6, 1, 1, 7,
	8, 6, 1, 1, 1, 2, 2, 1, 2, 1,
	1, 6, 8, 5, 6, 8, 5, 7, 7, 1,
	3, 1, 3, 0, 1, 1, 2, 2, 5, 2,
	2, 3, 5, 6, 8, 5, 3, 1, 1, 3,
	3, 1, 3, 1, 1, 3, 9, 10, 10, 12,
	0, 1, 1, 1, 1, 2, 2, 5, 6, 3,
	4, 2, 2, 2, 4, 2, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 3, 1, 3, 2, 4, 1, 1, 0, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 4,
	4, 6, 6, 4, 6, 4, 4, 4, 6, 4,
	4, 6, 4, 2, 3, 3, 3, 3, 3, 2,
	2, 3, 3, 2, 2, 0, 1, 4, 4, 5,
	5, 5, 5, 1, 5, 10, 8, 9, 9, 9,
	9, 9, 8, 10, 2, 0, 3, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 3, 1, 1, 3,
	4, 5, 6, 7, 5, 6, 2, 4, 1, 1,
	1, 3, 1, 5, 0, 1, 4, 5, 0, 2,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	5, 6, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 1, 3,
	0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -10, -37, -95, -96, -99, -71,
	-21, -19, -25, -26, -32, -20, -35, -36, 75, 74,
	-8, -9, -49, -116, 26, 29, 113, 83, -119, 89,
	87, 88, 86, 98, 99, 16, 114, 103, 104, 105,
	106, 77, 102, 73, 4, 115, 116, 118, 119, 120,
	121, 117, -117, 11, 127, -56, 133, -55, -52, -68,
	-66, -65, -71, -72, -86, -67, -69, -117, -119, -34,
	-116, 24, 5, 6, 7, -53, 10, -54, 130, 131,
	75, 120, 118, -73, 74, -58, 63, 67, 132, 84,
	119, 9, 71, -87, -56, 133, -38, 19, 15, 17,
	-40, -39, 13, -65, 133, 133, 30, 30, -121, -120,
	-117, -121, -116, -117, 84, 38, -116, -116, -33, 90,
	91, 31, 32, 92, 93, 12, 12, -56, -56, -56,
	117, -56, -117, -118, 6, -51, -50, -128, 25, 124,
	-1, 79, 123, 122, 129, 70, -123, -130, 131, 130,
	128, 135, 136, 66, 65, 67, -56, -91, -37, -70,
	-49, 138, 133, 138, -56, -56, 133, 133, 133, -87,
	122, 129, -123, -130, -65, -56, -56, -116, 133, -108,
	78, -91, -45, 39, 20, -79, -77, -116, 24, 14,
	-79, -41, 14, 58, 59, 60, -122, 72, -70, -91,
	-56, -116, -77, 137, 124, 84, 38, 107, 108, -116,
	-116, -116, -56, -56, 129, 137, -56, 6, 81, 64,
	137, 64, 137, -116, -56, -1, -56, -56, -56, -123,
	68, 64, 69, 62, 61, -56, -56, -56, -56, -56,
	-56, -56, 134, 137, 134, 134, 134, -116, 6, -122,
	-116, 6, -122, -122, -88, 78, -58, 133, -65, -58,
	68, 64, 62, 61, 70, 118, -122, -109, 80, -56,
	-46, 45, 42, -78, -77, 16, 137, -92, -81, -78,
	-80, -82, 23, 133, -65, 14, -42, 18, -92, -127,
	61, -127, -127, -94, -85, -84, -57, -56, -74, 128,
	-116, 120, 118, 119, 121, 134, 133, -129, 22, 27,
	28, 36, -121, -56, 85, 133, 22, 133, 133, 20,
	-52, -91, -56, -2, -11, -5, -12, 75, 74, -8,
	-9, -6, 100, 101, -116, -118, -117, -116, -51, 22,
	133, -101, -100, 80, 76, -53, -54, -56, -58, -56,
	-58, -58, -91, -70, -70, -70, -57, -89, 80, -56,
	-58, 133, -65, 133, -65, 133, -65, -123, -70, 82,
	-1, 79, -48, 46, -56, -60, -61, -62, -56, -74,
	21, 133, -37, -116, 22, -98, -97, -55, -116, -79,
	-42, 54, -124, -126, 53, 57, 137, 49, 51, 52,
	-116, 22, -81, -92, -43, 40, -56, -39, -38, -39,
	-39, 137, 22, 133, 133, 133, 133, 133, -93, -116,
	-37, -22, 133, -116, -55, 133, -55, -37, -93, -37,
	134, -31, -28, -30, -27, -29, -117, -116, -118, 82,
	127, -56, -87, 81, 81, 133, -93, 82, -101, -1,
	-56, 65, 134, 134, 134, 134, 82, -56, 79, 65,
	-59, -58, -59, -59, 87, 64, 134, 74, -1, -56,
	-47, 47, 73, 137, -63, 43, 44, -59, -90, -55,
	-116, -41, 137, 129, 48, 48, -125, 50, -125, -124,
	-126, -92, -116, 134, -42, -44, 41, 42, -94, -116,
	-70, -122, -122, -122, -122, -70, 134, 137, -24, 31,
	32, 33, 34, -23, -22, 35, -90, 37, 134, 22,
	134, 137, 137, 35, 134, 137, 77, -2, 79, -110,
	78, -2, -2, -37, 134, 75, 82, 79, -56, -56,
	-58, 134, 137, 134, 134, 94, 112, -108, -47, 115,
	-60, 116, 134, 137, -42, -98, -56, -81, -81, 48,
	48, 48, -125, -56, -91, 134, -70, -70, -70, -57,
	-70, 134, -129, -93, -55, -55, 134, 137, -56, 134,
	-116, 22, 109, 22, -27, -30, -30, -117, -56, 22,
	-31, -2, -111, 80, -56, 82, 82, 134, 22, 75,
	-1, -88, -59, 40, -64, 31, 32, 21, -37, -90,
	-83, 55, 56, -81, -81, -81, 48, 97, 134, 134,
	134, 134, 134, 97, 111, -37, -24, -23, -37, -3,
	-13, -5, -17, 75, 74, -14, -15, 77, 110, 109,
	109, 134, -103, -102, 80, 76, 82, -2, 79, 77,
	77, 133, -100, 133, -59, -56, 133, -83, 55, -81,
	133, 97, 97, 97, 97, 97, 133, 116, 82, 127,
	-56, -87, -56, -117, -118, -56, -3, -3, 22, 82,
	-103, -2, -56, 74, -2, -37, -45, -93, -56, -75,
	-76, 96, 133, 133, 133, 133, 133, -75, 97, -3,
	79, -112, 78, 81, 64, 64, 82, 82, 109, 75,
	82, 79, -110, 134, 134, 134, 134, -45, 42, -75,
	-75, -75, -75, -75, 134, 133, -3, -113, 80, -56,
	-4, -16, -5, -18, 75, 74, -14, -15, -6, -116,
	-116, -3, 75, -2, -91, 134, 134, 134, 134, 134,
	-75, -105, -104, 80, 76, 82, -3, 79, 82, 127,
	-56, -87, 81, 81, 82, -102, 134, 82, -105, -3,
	-56, 74, -3, 77, -4, 79, -114, 78, -4, -4,
	75, 82, 79, -112, -4, -115, 80, -56, 82, 82,
	75, -3, -107, -106, 80, 76, 82, -4, 79, 77,
	77, -104, 82, -107, -4, -56, 74, -4, 75, 82,
	79, -114, 75, -4, -106,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 284,
	37, 38, 0, 0, 0, 0, 0, 0, 67, 0,
	0, 0, 110, 69, 70, 0, 0, 0, 0, 0,
	0, 0, 30, 372, 344, 345, 346, 347, 348, 349,
	350, 351, 0, 352, -2, 362, -2, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	168, 0, 160, 161, 162, 163, 164, 165, 0, 0,
	0, 349, 347, 243, 284, 362, 0, 0, 0, 0,
	348, 166, 167, 0, -2, 154, -2, 0, 0, 0,
	137, 0, 360, 135, 154, 235, 0, 0, 65, 358,
	356, 66, 0, 68, 0, 0, 89, 90, 0, 111,
	112, 113, 114, 0, 0, 0, 121, -2, -2, -2,
	126, 362, 183, 0, 31, 155, 158, 0, 373, 0,
	3, -2, 0, 376, 377, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 362, 0, 0, 0,
	0, 0, 235, 0, 229, 230, 235, 360, 360, 0,
	376, 377, 0, 0, 223, 233, 234, 0, 360, 330,
	0, 0, 147, 0, 0, 0, 296, 257, 258, 0,
	0, 139, 0, 370, 370, 370, 0, 361, 0, 236,
	-2, 374, 0, 0, 0, 0, 0, 0, 0, 91,
	96, 0, -2, -2, 0, 0, -2, 161, -2, 0,
	0, 0, 372, 0, 355, 314, 204, -2, -2, 0,
	0, 0, 0, 0, 0, 224, 225, 226, 227, 228,
	231, 232, 186, 0, 188, 203, 238, 169, 171, 235,
	170, 172, 235, 235, 288, 0, 206, 154, 189, 208,
	0, 0, 0, 0, 362, 119, 235, 0, -2, 362,
	152, 0, 0, 154, 259, 0, 0, 139, -2, 263,
	264, 267, 268, 154, 262, 0, 141, 0, 138, 0,
	371, 0, 0, 136, 300, 280, 282, -2, 279, 187,
	168, 349, 347, 348, 350, 237, 0, 154, 375, 0,
	0, 0, 359, -2, 154, 0, 154, 0, 0, 0,
	120, 124, -2, 0, 0, 32, 33, 0, 284, 42,
	43, 44, 23, 24, 0, 354, 353, 0, 159, 0,
	0, 0, 314, -2, 0, 209, 210, 362, 213, -2,
	217, 220, 293, 0, 0, 0, 0, 0, 0, 362,
	0, 154, 215, 154, 219, 154, 222, 0, 0, 0,
	331, -2, 129, 0, -2, 146, 192, 198, -2, 197,
	0, 0, 304, 260, 0, 137, 308, 0, 168, 297,
	310, 0, 0, 366, 366, 364, 0, 365, 368, 369,
	265, 0, 364, 139, 143, 0, -2, 131, 134, 132,
	133, 0, 0, 235, 360, 360, 360, 235, 0, 298,
	73, 83, 0, 79, 76, 0, 0, 88, 0, 95,
	0, 0, 103, 104, 98, 101, 97, 0, 92, 0,
	-2, 362, 0, -2, -2, 154, 0, 0, 0, 315,
	362, 0, 239, 240, 241, 242, 283, -2, 0, 0,
	0, 190, 0, 0, 117, 0, 244, 36, 328, -2,
	148, 150, 0, 0, 194, 199, 200, 302, 0, 290,
	261, 139, 0, 0, 0, 0, 0, 367, 0, 0,
	366, 295, 266, 269, 311, 130, 0, 0, 301, 281,
	0, 235, 235, 235, 235, 0, -2, 0, 74, 84,
	85, 0, 0, 0, 81, 0, 0, 0, 93, 0,
	0, 0, 0, 0, 0, 0, 27, 5, -2, 334,
	0, 0, 0, 0, 0, 34, 0, -2, 211, -2,
	212, 214, 0, 218, 221, 118, 0, 329, 149, 151,
	193, 0, 154, 0, 306, 309, -2, 270, 364, 0,
	0, 0, 0, -2, 142, 237, 0, 0, 0, 0,
	0, 0, 154, 299, 86, 87, 83, 0, -2, 77,
	78, 154, -2, 0, 99, 105, 102, 0, -2, 0,
	0, 318, 0, -2, 362, 0, 0, 156, 0, 35,
	312, 287, 191, 0, 195, 201, 202, 0, 305, 291,
	271, 0, 0, 364, 364, 274, 0, 0, 239, 240,
	241, 242, 244, 0, 0, 72, 75, 82, 94, 0,
	0, 45, 46, 0, 284, 57, 58, 0, 50, -2,
	-2, 0, 0, 318, -2, 0, 0, 335, -2, 28,
	29, 154, 313, 145, 303, -2, 0, 272, 0, 275,
	255, 0, 0, 0, 0, 0, 255, 0, 106, -2,
	362, 0, 362, 183, 0, -2, 0, 0, 0, 0,
	0, 319, 362, 41, 332, 0, 0, 0, -2, 0,
	145, 0, 255, 255, 255, 255, 255, 0, 0, 7,
	-2, 338, 0, -2, 0, 0, 107, 108, -2, 39,
	0, -2, 333, 157, 245, 277, 246, 254, 0, 0,
	0, 0, 0, 0, 252, 255, 322, 0, -2, 362,
	0, 0, 52, 53, 0, 284, 62, 63, 64, 0,
	0, 0, 40, 316, 256, 247, 248, 249, 250, 251,
	0, 0, 322, -2, 0, 0, 339, -2, 0, -2,
	362, 0, -2, -2, 109, 317, 253, 0, 0, 323,
	362, 56, 336, 47, 9, -2, 342, 0, 0, 0,
	54, 0, -2, 337, 326, 0, -2, 362, 0, 0,
	55, 320, 0, 326, -2, 0, 0, 343, -2, 48,
	49, 321, 0, 0, 327, 362, 61, 340, 59, 0,
	-2, 341, 60, 324, 325,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 132, 3, 3, 3, 136, 3, 3,
	133, 134, 128, 131, 137, 130, 138, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 127,
	3, 129,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:208
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:218
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:225
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:229
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:235
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:245
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:255
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:259
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:263
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:267
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = Exit{}
		}
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 34:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 35:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 36:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:393
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:439
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:463
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 74:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:565
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:569
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:575
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:579
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:585
		{
			yyVAL.expression = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:589
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:593
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:597
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:601
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:619
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:623
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:637
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:641
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:647
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:653
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:657
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:663
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:669
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:673
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:679
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:683
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:687
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 107:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 108:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:701
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 109:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:705
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:711
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:715
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:719
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:723
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:727
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:731
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:735
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:741
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:745
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:749
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:755
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:759
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:763
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:767
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:771
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:775
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:781
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:785
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:789
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:795
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:807
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:817
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:826
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:835
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:846
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:850
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:856
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:862
		{
			yyVAL.queryexpr = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:866
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:872
		{
			yyVAL.queryexpr = nil
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:876
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:882
		{
			yyVAL.queryexpr = nil
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:886
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:892
		{
			yyVAL.queryexpr = nil
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:896
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:902
		{
			yyVAL.queryexpr = nil
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:906
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:912
		{
			yyVAL.queryexpr = nil
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:916
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:920
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:926
		{
			yyVAL.queryexpr = nil
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:930
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:936
		{
			yyVAL.queryexpr = nil
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:940
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:946
		{
			yyVAL.queryexpr = nil
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 156:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:956
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:966
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:970
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:984
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:988
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:992
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1018
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1060
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.token = Token{}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.token = yyDollar[1].token
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.token = yyDollar[1].token
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.token = yyDollar[1].token
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.token = yyDollar[1].token
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1180
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1203
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1211
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1215
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1219
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1223
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1231
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1235
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 214:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1239
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1243
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1247
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1251
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1259
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1271
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1311
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1315
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1319
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexprs = nil
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1339
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1343
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 239:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1350
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1354
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1358
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 245:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1376
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 247:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 248:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1390
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 249:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1394
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 250:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1398
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 251:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1402
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 252:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 253:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1410
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.queryexpr = AnalyticClause{Partition: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1422
		{
			yyVAL.queryexpr = nil
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1426
		{
			yyVAL.queryexpr = Partition{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1442
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1446
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1450
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1456
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1462
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1466
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1470
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1474
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1478
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1482
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1486
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 272:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1508
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1512
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1518
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1522
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1546
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = nil
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1568
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1572
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1588
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1618
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 302:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 303:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 305:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1688
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1693
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.elseexpr = Else{}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.elseexpr = Else{}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.elseexpr = Else{}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.elseexpr = Else{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1872
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1876
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1910
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.token = Token{}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1946
		{
			yyVAL.token = Token{}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.token = Token{}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.token = Token{}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.token = yyDollar[1].token
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.token = yyDollar[1].token
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.token = yyDollar[1].token
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.token = Token{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.token = yyDollar[1].token
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.token = Token{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.token = yyDollar[1].token
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.token = Token{}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.token = yyDollar[1].token
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.token = yyDollar[1].token
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2020
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
