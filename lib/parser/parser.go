//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import "github.com/mithrandie/csvq/lib/value"

//line parser.y:7
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const CASE = 57416
const IF = 57417
const ELSEIF = 57418
const WHILE = 57419
const WHEN = 57420
const THEN = 57421
const ELSE = 57422
const DO = 57423
const END = 57424
const DECLARE = 57425
const CURSOR = 57426
const FOR = 57427
const FETCH = 57428
const OPEN = 57429
const CLOSE = 57430
const DISPOSE = 57431
const NEXT = 57432
const PRIOR = 57433
const ABSOLUTE = 57434
const RELATIVE = 57435
const RANGE = 57436
const SEPARATOR = 57437
const PARTITION = 57438
const OVER = 57439
const COMMIT = 57440
const ROLLBACK = 57441
const CONTINUE = 57442
const BREAK = 57443
const EXIT = 57444
const PRINT = 57445
const PRINTF = 57446
const SOURCE = 57447
const TRIGGER = 57448
const FUNCTION = 57449
const AGGREGATE = 57450
const BEGIN = 57451
const RETURN = 57452
const IGNORE = 57453
const WITHIN = 57454
const VAR = 57455
const SHOW = 57456
const TIES = 57457
const NULLS = 57458
const TABLES = 57459
const VIEWS = 57460
const FIELDS = 57461
const CURSORS = 57462
const FUNCTIONS = 57463
const ERROR = 57464
const COUNT = 57465
const LISTAGG = 57466
const AGGREGATE_FUNCTION = 57467
const FUNCTION_WITH_INS = 57468
const COMPARISON_OP = 57469
const STRING_OP = 57470
const SUBSTITUTION_OP = 57471
const UMINUS = 57472
const UPLUS = 57473

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"RANGE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"TABLES",
	"VIEWS",
	"FIELDS",
	"CURSORS",
	"FUNCTIONS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2065

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 159,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	13, 159,
	15, 159,
	17, 159,
	19, 159,
	138, 159,
	-2, 1,
	-1, 61,
	139, 240,
	-2, 159,
	-1, 99,
	78, 290,
	-2, 372,
	-1, 101,
	58, 139,
	59, 139,
	60, 139,
	-2, 150,
	-1, 137,
	64, 372,
	68, 372,
	69, 372,
	-2, 122,
	-1, 138,
	64, 372,
	68, 372,
	69, 372,
	-2, 123,
	-1, 139,
	64, 372,
	68, 372,
	69, 372,
	-2, 125,
	-1, 151,
	76, 1,
	80, 1,
	82, 1,
	-2, 159,
	-1, 210,
	64, 372,
	68, 372,
	69, 372,
	-2, 297,
	-1, 222,
	64, 372,
	68, 372,
	69, 372,
	-2, 115,
	-1, 223,
	64, 372,
	68, 372,
	69, 372,
	-2, 116,
	-1, 227,
	64, 372,
	68, 372,
	69, 372,
	-2, 132,
	-1, 229,
	82, 4,
	-2, 159,
	-1, 238,
	70, 0,
	127, 0,
	134, 0,
	-2, 210,
	-1, 239,
	70, 0,
	127, 0,
	134, 0,
	-2, 212,
	-1, 279,
	82, 1,
	-2, 159,
	-1, 289,
	48, 374,
	-2, 299,
	-1, 308,
	64, 372,
	68, 372,
	69, 372,
	-2, 283,
	-1, 324,
	64, 372,
	68, 372,
	69, 372,
	-2, 367,
	-1, 334,
	64, 372,
	68, 372,
	69, 372,
	-2, 133,
	-1, 355,
	82, 1,
	-2, 159,
	-1, 361,
	70, 0,
	127, 0,
	134, 0,
	-2, 221,
	-1, 383,
	78, 1,
	80, 1,
	82, 1,
	-2, 159,
	-1, 386,
	64, 372,
	68, 372,
	69, 372,
	-2, 155,
	-1, 390,
	64, 372,
	68, 372,
	69, 372,
	-2, 201,
	-1, 418,
	64, 372,
	68, 372,
	69, 372,
	-2, 145,
	-1, 452,
	76, 4,
	78, 4,
	80, 4,
	82, 4,
	-2, 159,
	-1, 455,
	82, 4,
	-2, 159,
	-1, 456,
	82, 4,
	-2, 159,
	-1, 469,
	82, 294,
	-2, 372,
	-1, 481,
	64, 372,
	68, 372,
	69, 372,
	-2, 158,
	-1, 518,
	13, 384,
	73, 384,
	138, 384,
	-2, 71,
	-1, 540,
	76, 4,
	80, 4,
	82, 4,
	-2, 159,
	-1, 549,
	76, 1,
	80, 1,
	82, 1,
	-2, 159,
	-1, 551,
	80, 291,
	82, 291,
	-2, 372,
	-1, 568,
	64, 372,
	68, 372,
	69, 372,
	-2, 312,
	-1, 575,
	64, 372,
	68, 372,
	69, 372,
	-2, 149,
	-1, 590,
	64, 372,
	68, 372,
	69, 372,
	-2, 80,
	-1, 594,
	82, 6,
	-2, 159,
	-1, 600,
	139, 100,
	142, 100,
	-2, 372,
	-1, 605,
	82, 4,
	-2, 159,
	-1, 651,
	82, 6,
	-2, 159,
	-1, 652,
	82, 6,
	-2, 159,
	-1, 656,
	82, 4,
	-2, 159,
	-1, 660,
	78, 4,
	80, 4,
	82, 4,
	-2, 159,
	-1, 667,
	64, 372,
	68, 372,
	69, 372,
	-2, 281,
	-1, 681,
	76, 6,
	78, 6,
	80, 6,
	82, 6,
	-2, 159,
	-1, 687,
	132, 51,
	-2, 372,
	-1, 700,
	64, 372,
	68, 372,
	69, 372,
	-2, 278,
	-1, 712,
	76, 6,
	80, 6,
	82, 6,
	-2, 159,
	-1, 715,
	82, 8,
	-2, 159,
	-1, 720,
	82, 6,
	-2, 159,
	-1, 723,
	76, 4,
	80, 4,
	82, 4,
	-2, 159,
	-1, 740,
	82, 6,
	-2, 159,
	-1, 765,
	82, 6,
	-2, 159,
	-1, 769,
	78, 6,
	80, 6,
	82, 6,
	-2, 159,
	-1, 771,
	76, 8,
	78, 8,
	80, 8,
	82, 8,
	-2, 159,
	-1, 774,
	82, 8,
	-2, 159,
	-1, 775,
	82, 8,
	-2, 159,
	-1, 787,
	76, 8,
	80, 8,
	82, 8,
	-2, 159,
	-1, 794,
	76, 6,
	80, 6,
	82, 6,
	-2, 159,
	-1, 798,
	82, 8,
	-2, 159,
	-1, 806,
	82, 8,
	-2, 159,
	-1, 810,
	78, 8,
	80, 8,
	82, 8,
	-2, 159,
	-1, 822,
	76, 8,
	80, 8,
	82, 8,
	-2, 159,
}

const yyPrivate = 57344

const yyLast = 2843

var yyAct = [...]int{

	75, 23, 788, 804, 805, 655, 764, 98, 209, 763,
	654, 713, 192, 541, 335, 143, 622, 430, 648, 525,
	701, 354, 520, 490, 90, 265, 342, 21, 117, 289,
	472, 121, 122, 443, 341, 20, 1, 387, 62, 318,
	498, 446, 297, 647, 307, 482, 288, 397, 309, 353,
	304, 405, 404, 445, 189, 526, 201, 285, 156, 195,
	23, 106, 82, 80, 343, 145, 63, 300, 420, 290,
	167, 113, 171, 425, 173, 164, 163, 165, 171, 409,
	155, 410, 411, 406, 403, 172, 21, 407, 589, 822,
	171, 101, 565, 554, 20, 187, 150, 179, 534, 116,
	533, 716, 519, 230, 197, 197, 494, 742, 536, 191,
	160, 537, 211, 197, 164, 163, 165, 161, 162, 155,
	219, 220, 485, 231, 221, 409, 423, 410, 411, 406,
	403, 287, 160, 407, 159, 158, 233, 153, 152, 161,
	162, 778, 213, 160, 154, 159, 158, 58, 234, 182,
	161, 162, 23, 164, 163, 165, 761, 760, 155, 392,
	759, 196, 196, 758, 200, 757, 149, 810, 149, 505,
	212, 736, 258, 728, 261, 727, 153, 152, 21, 231,
	726, 231, 160, 154, 159, 158, 20, 725, 236, 161,
	162, 254, 107, 653, 103, 197, 104, 634, 102, 633,
	197, 632, 631, 197, 630, 267, 270, 311, 609, 591,
	588, 43, 583, 577, 240, 153, 152, 564, 408, 556,
	555, 160, 154, 159, 158, 553, 332, 107, 161, 162,
	23, 346, 546, 349, 532, 333, 530, 518, 641, 101,
	478, 467, 43, 466, 465, 464, 316, 347, 152, 299,
	351, 72, 57, 160, 255, 159, 158, 257, 327, 319,
	161, 162, 256, 364, 284, 737, 708, 360, 707, 362,
	363, 706, 302, 303, 495, 442, 393, 191, 115, 115,
	23, 118, 705, 704, 311, 323, 395, 400, 197, 678,
	672, 331, 412, 142, 668, 197, 372, 197, 268, 350,
	665, 663, 457, 358, 357, 429, 21, 268, 428, 368,
	164, 57, 165, 427, 20, 155, 382, 109, 431, 426,
	377, 435, 400, 400, 414, 399, 375, 431, 373, 329,
	449, 402, 391, 328, 379, 188, 109, 178, 177, 176,
	110, 224, 771, 415, 440, 196, 450, 401, 454, 210,
	681, 452, 109, 431, 59, 165, 23, 140, 214, 149,
	436, 438, 419, 275, 421, 422, 352, 679, 60, 99,
	458, 563, 153, 152, 326, 317, 433, 561, 160, 154,
	159, 158, 21, 558, 23, 161, 162, 137, 138, 139,
	20, 141, 461, 635, 400, 720, 652, 492, 473, 216,
	473, 651, 473, 57, 460, 710, 474, 636, 475, 197,
	21, 166, 677, 594, 504, 180, 276, 473, 20, 676,
	480, 675, 181, 489, 311, 511, 674, 558, 673, 629,
	703, 557, 491, 174, 175, 435, 325, 157, 400, 99,
	131, 477, 185, 186, 821, 215, 814, 500, 58, 808,
	166, 801, 800, 23, 493, 503, 23, 23, 506, 502,
	501, 528, 793, 779, 476, 115, 776, 539, 217, 218,
	543, 544, 73, 28, 510, 120, 491, 770, 222, 223,
	767, 57, 722, 348, 719, 718, 311, 691, 680, 658,
	227, 608, 607, 548, 468, 400, 552, 197, 197, 235,
	459, 451, 237, 238, 239, 381, 775, 774, 246, 247,
	248, 249, 250, 251, 252, 807, 456, 455, 576, 806,
	431, 119, 806, 562, 400, 400, 569, 570, 183, 560,
	592, 57, 28, 399, 391, 559, 566, 585, 798, 765,
	280, 23, 567, 574, 740, 132, 133, 136, 134, 135,
	23, 656, 605, 67, 9, 603, 308, 766, 584, 355,
	581, 765, 586, 587, 324, 657, 400, 370, 279, 656,
	789, 602, 197, 197, 197, 596, 21, 613, 334, 473,
	448, 714, 348, 542, 20, 614, 612, 597, 598, 621,
	435, 359, 190, 361, 356, 23, 643, 3, 355, 266,
	812, 625, 626, 627, 491, 811, 23, 57, 785, 639,
	662, 638, 661, 9, 538, 807, 371, 766, 657, 356,
	659, 824, 820, 802, 28, 164, 163, 165, 792, 197,
	155, 754, 386, 390, 664, 57, 721, 611, 547, 794,
	818, 783, 669, 695, 473, 619, 479, 43, 418, 484,
	666, 207, 23, 23, 683, 165, 3, 23, 671, 206,
	96, 23, 471, 242, 717, 686, 692, 241, 243, 431,
	272, 693, 232, 301, 271, 696, 165, 204, 698, 155,
	274, 273, 23, 245, 244, 499, 699, 153, 152, 453,
	99, 628, 573, 160, 154, 159, 158, 43, 572, 709,
	161, 162, 28, 571, 57, 9, 462, 57, 57, 409,
	724, 410, 411, 23, 497, 729, 23, 751, 752, 496,
	469, 23, 97, 385, 23, 731, 732, 733, 734, 735,
	203, 204, 205, 282, 749, 481, 153, 152, 755, 756,
	730, 23, 160, 154, 159, 158, 487, 488, 3, 161,
	162, 509, 28, 283, 508, 773, 615, 417, 762, 748,
	193, 777, 320, 321, 529, 535, 23, 527, 617, 618,
	23, 322, 23, 308, 780, 23, 23, 112, 111, 148,
	750, 690, 610, 9, 601, 448, 599, 595, 23, 448,
	749, 593, 57, 749, 749, 23, 795, 319, 531, 23,
	424, 57, 521, 522, 523, 524, 749, 23, 330, 815,
	813, 23, 194, 550, 298, 748, 286, 749, 748, 748,
	551, 202, 823, 23, 296, 749, 337, 225, 28, 749,
	826, 748, 260, 9, 130, 390, 750, 263, 264, 750,
	750, 749, 748, 22, 58, 568, 57, 144, 277, 147,
	748, 114, 750, 797, 748, 739, 28, 57, 575, 604,
	77, 78, 79, 750, 96, 81, 748, 278, 8, 398,
	7, 750, 6, 369, 69, 750, 3, 590, 305, 786,
	126, 127, 790, 791, 306, 600, 292, 750, 291, 702,
	688, 689, 606, 88, 68, 796, 71, 64, 70, 65,
	169, 685, 616, 57, 57, 170, 809, 486, 57, 9,
	389, 388, 57, 146, 816, 384, 281, 507, 819, 416,
	711, 105, 17, 16, 74, 28, 97, 123, 28, 28,
	825, 14, 447, 57, 444, 5, 13, 9, 12, 124,
	125, 128, 129, 10, 170, 15, 11, 745, 644, 743,
	642, 738, 3, 170, 338, 336, 4, 2, 0, 753,
	0, 0, 0, 0, 57, 0, 0, 57, 0, 0,
	0, 0, 57, 667, 0, 57, 0, 0, 0, 768,
	3, 409, 0, 410, 411, 406, 403, 623, 624, 407,
	0, 0, 57, 0, 0, 682, 99, 168, 0, 684,
	687, 0, 0, 0, 781, 0, 9, 694, 784, 9,
	9, 208, 0, 28, 0, 0, 0, 57, 0, 0,
	700, 57, 28, 57, 0, 0, 57, 57, 0, 0,
	164, 163, 165, 803, 0, 155, 168, 0, 0, 57,
	0, 0, 0, 0, 0, 168, 57, 0, 0, 337,
	57, 0, 337, 337, 0, 0, 0, 0, 57, 0,
	0, 0, 57, 0, 741, 0, 0, 28, 0, 0,
	0, 0, 0, 208, 57, 0, 0, 0, 28, 0,
	0, 0, 0, 0, 0, 513, 514, 515, 516, 0,
	0, 0, 153, 152, 9, 0, 772, 99, 160, 154,
	159, 158, 0, 9, 253, 161, 162, 254, 0, 0,
	0, 0, 170, 0, 0, 409, 782, 410, 411, 406,
	403, 670, 0, 407, 28, 28, 0, 0, 170, 28,
	0, 0, 0, 28, 0, 0, 0, 337, 170, 799,
	0, 0, 0, 0, 0, 0, 3, 0, 9, 0,
	0, 0, 0, 0, 28, 0, 0, 817, 0, 9,
	0, 365, 170, 0, 366, 367, 0, 0, 0, 170,
	0, 170, 0, 0, 0, 0, 0, 0, 380, 0,
	66, 0, 0, 0, 0, 28, 0, 0, 28, 0,
	0, 0, 0, 28, 0, 0, 28, 0, 0, 0,
	0, 0, 337, 108, 168, 9, 9, 0, 0, 0,
	9, 0, 0, 28, 9, 0, 0, 170, 0, 170,
	394, 170, 164, 163, 165, 0, 0, 155, 0, 0,
	168, 0, 0, 0, 0, 9, 0, 0, 28, 0,
	0, 0, 28, 0, 28, 0, 0, 28, 28, 0,
	0, 0, 0, 337, 432, 0, 0, 337, 0, 0,
	28, 439, 0, 441, 0, 0, 9, 28, 0, 9,
	0, 28, 184, 0, 9, 0, 0, 9, 0, 28,
	0, 0, 0, 28, 153, 152, 0, 0, 0, 0,
	160, 154, 159, 158, 9, 28, 0, 161, 162, 226,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 168, 744, 168, 0, 0, 0, 0, 0, 9,
	337, 0, 0, 9, 0, 9, 512, 0, 9, 9,
	517, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 9, 0, 0, 0, 0, 0, 0, 9, 0,
	0, 108, 9, 0, 0, 483, 0, 0, 0, 0,
	9, 269, 269, 0, 9, 0, 0, 0, 744, 0,
	0, 744, 744, 164, 163, 165, 9, 0, 155, 0,
	295, 484, 0, 295, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 744, 164, 163, 165, 0,
	0, 155, 0, 744, 0, 0, 0, 744, 170, 0,
	787, 0, 0, 0, 578, 579, 580, 582, 0, 744,
	0, 0, 0, 269, 0, 269, 269, 0, 170, 0,
	0, 0, 0, 0, 0, 153, 152, 170, 0, 0,
	0, 160, 154, 159, 158, 0, 0, 0, 161, 162,
	0, 0, 269, 374, 376, 378, 0, 0, 153, 152,
	0, 0, 0, 0, 160, 154, 159, 158, 0, 0,
	0, 161, 162, 0, 0, 295, 0, 295, 0, 0,
	0, 108, 0, 108, 108, 0, 0, 0, 0, 0,
	44, 77, 78, 79, 0, 96, 81, 58, 0, 0,
	620, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	76, 0, 0, 0, 0, 0, 44, 77, 78, 79,
	637, 96, 81, 58, 0, 0, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 76, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	44, 0, 0, 92, 269, 0, 269, 97, 269, 0,
	89, 85, 0, 0, 0, 0, 0, 0, 413, 0,
	94, 44, 0, 269, 0, 91, 0, 0, 0, 92,
	0, 0, 0, 97, 207, 0, 89, 85, 0, 295,
	293, 198, 0, 0, 0, 0, 94, 0, 0, 697,
	0, 45, 46, 47, 48, 51, 49, 50, 56, 87,
	95, 86, 55, 0, 0, 0, 0, 0, 0, 310,
	0, 83, 84, 93, 100, 0, 0, 45, 46, 47,
	48, 51, 49, 50, 56, 87, 95, 86, 55, 0,
	43, 0, 0, 0, 0, 0, 0, 83, 84, 93,
	100, 0, 269, 44, 77, 78, 79, 0, 96, 81,
	58, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55, 76, 0, 0, 0, 295, 295, 0,
	0, 0, 45, 46, 47, 48, 51, 49, 50, 56,
	52, 53, 54, 55, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 44,
	0, 0, 91, 0, 0, 0, 92, 0, 0, 0,
	97, 0, 0, 89, 85, 0, 0, 0, 293, 198,
	0, 0, 0, 94, 0, 269, 44, 77, 78, 79,
	0, 96, 81, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 295, 295, 295, 0, 76, 0, 0, 0,
	0, 0, 0, 0, 45, 46, 47, 48, 51, 49,
	50, 56, 313, 314, 312, 315, 0, 0, 0, 0,
	0, 0, 310, 0, 83, 84, 93, 100, 0, 0,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 92,
	269, 0, 0, 97, 0, 43, 89, 85, 0, 295,
	0, 0, 44, 77, 78, 79, 94, 96, 81, 58,
	45, 46, 47, 48, 51, 49, 50, 56, 52, 53,
	54, 55, 76, 0, 0, 0, 0, 0, 0, 44,
	77, 78, 79, 294, 96, 81, 58, 45, 46, 47,
	48, 51, 49, 50, 56, 87, 95, 86, 55, 76,
	0, 0, 0, 0, 0, 0, 0, 83, 84, 93,
	100, 91, 0, 0, 0, 92, 0, 0, 0, 97,
	0, 0, 89, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 91, 0,
	0, 0, 92, 0, 0, 0, 97, 0, 0, 89,
	85, 0, 0, 0, 0, 44, 77, 78, 79, 94,
	96, 81, 58, 45, 46, 47, 48, 51, 49, 50,
	56, 87, 95, 86, 55, 76, 0, 0, 0, 0,
	0, 0, 0, 83, 84, 93, 100, 0, 0, 0,
	45, 46, 47, 48, 51, 49, 50, 56, 87, 95,
	86, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	83, 84, 93, 61, 91, 0, 0, 0, 92, 0,
	0, 0, 97, 0, 0, 89, 85, 0, 0, 0,
	0, 44, 77, 228, 79, 94, 96, 81, 58, 0,
	0, 0, 0, 0, 0, 164, 163, 165, 0, 0,
	155, 76, 0, 0, 0, 164, 163, 165, 0, 769,
	155, 0, 0, 0, 0, 0, 45, 46, 47, 48,
	51, 49, 50, 56, 313, 314, 312, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 84, 93, 100,
	91, 0, 0, 0, 92, 0, 0, 44, 97, 0,
	0, 89, 85, 0, 58, 0, 0, 153, 152, 35,
	0, 94, 0, 160, 154, 159, 158, 153, 152, 24,
	161, 162, 25, 160, 154, 159, 158, 0, 0, 0,
	161, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 45, 46, 47, 48, 51, 49, 50, 56,
	87, 95, 86, 55, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 84, 93, 100, 43, 747, 746, 0,
	649, 0, 0, 0, 0, 0, 27, 0, 0, 32,
	30, 31, 29, 0, 164, 163, 165, 0, 0, 155,
	0, 33, 34, 344, 345, 0, 37, 38, 39, 40,
	715, 0, 0, 650, 0, 0, 26, 36, 45, 46,
	47, 48, 51, 49, 50, 56, 52, 53, 54, 55,
	44, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 24, 0, 0, 25, 153, 152, 0, 0,
	0, 0, 160, 154, 159, 158, 0, 0, 0, 161,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 35, 0, 43,
	340, 339, 0, 41, 0, 0, 0, 24, 0, 27,
	25, 0, 32, 30, 31, 29, 0, 0, 0, 0,
	0, 0, 0, 0, 33, 34, 344, 345, 42, 37,
	38, 39, 40, 0, 0, 0, 0, 0, 0, 26,
	36, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55, 44, 43, 646, 645, 0, 649, 0,
	58, 0, 0, 0, 27, 35, 0, 32, 30, 31,
	29, 0, 0, 0, 0, 24, 0, 0, 25, 33,
	34, 0, 0, 0, 37, 38, 39, 40, 0, 0,
	0, 650, 0, 0, 26, 36, 45, 46, 47, 48,
	51, 49, 50, 56, 52, 53, 54, 55, 0, 0,
	0, 0, 0, 0, 0, 164, 163, 165, 0, 0,
	155, 0, 43, 19, 18, 0, 41, 0, 0, 723,
	0, 0, 27, 0, 0, 32, 30, 31, 29, 0,
	0, 0, 0, 0, 164, 163, 165, 33, 34, 155,
	0, 42, 37, 38, 39, 40, 0, 0, 712, 0,
	0, 0, 26, 36, 45, 46, 47, 48, 51, 49,
	50, 56, 52, 53, 54, 55, 0, 153, 152, 0,
	0, 0, 0, 160, 154, 159, 158, 164, 163, 165,
	161, 162, 155, 0, 0, 0, 0, 164, 163, 165,
	0, 660, 155, 0, 0, 0, 153, 152, 0, 0,
	266, 0, 160, 154, 159, 158, 164, 163, 165, 161,
	162, 155, 0, 0, 0, 0, 164, 163, 165, 0,
	549, 155, 0, 0, 0, 0, 0, 164, 163, 165,
	540, 44, 155, 0, 0, 0, 0, 0, 0, 153,
	152, 470, 0, 0, 0, 160, 154, 159, 158, 153,
	152, 76, 161, 162, 0, 160, 154, 159, 158, 164,
	163, 165, 161, 162, 155, 0, 0, 0, 153, 152,
	0, 0, 0, 383, 160, 154, 159, 158, 153, 152,
	0, 161, 162, 0, 160, 154, 159, 158, 0, 153,
	152, 161, 162, 0, 0, 160, 154, 159, 158, 164,
	163, 165, 161, 162, 155, 44, 0, 0, 0, 164,
	163, 165, 0, 0, 155, 229, 0, 0, 0, 0,
	0, 153, 152, 151, 0, 0, 0, 160, 154, 159,
	158, 463, 163, 165, 161, 162, 155, 44, 0, 0,
	0, 0, 45, 46, 47, 48, 51, 49, 50, 56,
	52, 53, 54, 55, 0, 0, 44, 76, 0, 0,
	0, 153, 152, 0, 0, 437, 199, 160, 154, 159,
	158, 153, 152, 0, 161, 162, 198, 160, 154, 159,
	158, 0, 0, 44, 161, 162, 0, 0, 0, 0,
	0, 0, 0, 153, 152, 44, 0, 0, 0, 160,
	154, 159, 158, 198, 0, 0, 161, 162, 44, 0,
	262, 0, 0, 396, 0, 0, 45, 46, 47, 48,
	51, 49, 50, 56, 52, 53, 54, 55, 44, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 434,
	44, 0, 0, 0, 0, 0, 0, 58, 45, 46,
	47, 48, 51, 49, 50, 56, 52, 53, 54, 55,
	44, 0, 0, 0, 0, 0, 0, 45, 46, 47,
	48, 51, 49, 50, 56, 52, 53, 54, 55, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 45, 46, 47, 48, 51, 49,
	50, 56, 52, 53, 54, 55, 45, 46, 47, 48,
	51, 49, 50, 56, 52, 53, 54, 55, 0, 45,
	46, 47, 48, 51, 49, 50, 56, 52, 53, 54,
	55, 0, 0, 0, 0, 0, 0, 0, 0, 45,
	46, 47, 48, 51, 49, 50, 56, 52, 53, 54,
	55, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55, 0, 0, 0, 0, 0, 0, 0,
	0, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55,
}
var yyPact = [...]int{

	2299, -1000, 222, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1835, 1808,
	-1000, -1000, 179, 202, 748, 747, 833, 2696, -1000, 437,
	2716, 2716, 849, -1000, -1000, 822, 428, 1808, 1808, 1808,
	235, 1808, 841, 754, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 230, -1000, 2299,
	2504, 1732, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 230, -1000, -1000, -53, -69, -1000, -1000, -1000,
	-1000, -1000, -1000, 1808, 1808, 201, 200, 199, -1000, 1808,
	288, 198, 1808, 1808, 2716, 197, -1000, -1000, 514, 1950,
	1732, 721, 792, 2639, 2612, 807, 672, 579, -1000, 574,
	1808, 2716, 2639, -1000, 0, 229, -1000, 361, -1000, 2716,
	2716, -1000, -1000, 2716, -1000, -1000, -1000, -1000, 1808, 1808,
	207, -1000, -1000, -1000, -1000, -1000, 813, 1950, 1157, 1950,
	1987, 2494, 39, 608, -1000, -1000, -6, 2716, -1000, 1808,
	-1000, 2299, 1808, 1808, 1808, 588, 599, 622, 1808, 1808,
	1808, 1808, 1808, 1808, 1808, -1000, 965, 115, 123, 118,
	214, 2684, 1512, 2664, -1000, -1000, 1808, 579, 579, 521,
	160, 160, 606, 619, -1000, 609, -1000, 293, 579, 488,
	1808, 115, 688, 711, 2639, 800, -11, -1000, -1000, 1705,
	810, 796, 1705, 612, 612, 612, 1649, -1000, 107, -1000,
	49, 237, 735, 833, 1808, 351, 236, 195, 191, -1000,
	-1000, 788, 1950, 1950, 855, 2716, 1808, 1950, 1808, 2176,
	2716, 833, 2716, 754, 228, 1950, 518, -1, 120, 120,
	651, 1808, 160, 1808, 160, 160, -23, -23, -1000, -1000,
	-1000, 245, 609, -1000, 1808, -1000, -1000, -1000, -1000, -1000,
	1808, -1000, -1000, 1808, 1486, 487, 1808, -1000, 1732, -1000,
	-1000, 160, 190, 188, 182, 588, -1000, 1808, 423, 2299,
	2454, 677, 1808, 1911, 138, 2651, 2593, 2639, 796, 76,
	-1000, 1546, -1000, -1000, 1567, -1000, 1705, 717, 1808, -1000,
	214, -1000, 214, 214, -1000, -16, 778, -1000, 1950, -1000,
	-1000, -65, 181, 175, 170, 167, -1000, 2716, 574, -1000,
	2561, 2487, 2593, -1000, 1950, 574, 2716, 574, 136, 2716,
	833, -1000, -1000, -1000, 1950, 419, 219, -1000, -1000, 1835,
	1808, -1000, -1000, -1000, -1000, -1000, 436, -1000, -19, 435,
	-1000, 164, 2716, 418, 479, 2299, 1808, -1000, -1000, 2526,
	-1000, 120, -1000, -1000, -1000, 106, 105, 104, 102, 412,
	1808, 2422, 597, 169, -1000, 169, -1000, 169, -1000, 377,
	101, 572, -1000, 2299, -1000, 1808, 1308, -1000, -20, 703,
	1950, -1000, 160, 2593, -1000, -1000, 2716, 807, -36, 140,
	-71, -1000, -1000, 671, 666, 635, 635, 660, 1705, -1000,
	-1000, -1000, -1000, 2716, 30, 796, 713, 709, 1950, 618,
	-1000, -1000, 618, 1649, 2716, 1512, 579, 579, 579, 1808,
	98, -40, -1000, 771, 2716, 732, -1000, 2593, 727, -1000,
	97, -1000, 776, 95, -42, -1000, -1000, -44, 730, -31,
	-1000, 537, 2176, 2411, 505, 2176, 2176, 574, 93, 563,
	411, -1000, 2401, 1808, -1000, -1000, -1000, -1000, -1000, 1950,
	1808, 160, 86, -49, 81, 80, -1000, 337, 271, -1000,
	514, 1950, -1000, 576, 262, 1911, 255, -1000, -1000, -1000,
	78, -50, -1000, 796, 2593, 1808, 1705, 1705, 655, -1000,
	650, 644, 635, -1000, -1000, -1000, -1000, -1000, 1808, 1808,
	-1000, -1000, 74, 1808, 1808, 1486, 1808, 73, 775, 2716,
	-1000, -1000, -1000, 2593, 2593, 71, -54, 1808, 70, 2716,
	769, 304, 765, 833, 833, 1808, 762, 833, -1000, -1000,
	2176, 472, 1808, 410, 409, 69, 760, -1000, 562, 2299,
	609, 2382, -1000, -1000, 160, -1000, -1000, -1000, 716, -1000,
	-1000, -1000, -1000, 737, 624, 2593, -1000, -1000, 1950, 660,
	932, 1705, 1705, 1705, 643, 1950, -1000, 332, 65, 63,
	62, 60, 58, 296, 574, -1000, -1000, -1000, 771, 2716,
	1950, -1000, -1000, 574, 2231, 292, -1000, -1000, -1000, 730,
	1950, 287, 54, 489, 407, 2176, 2372, 535, 533, -1000,
	163, -1000, 543, -1000, -1000, 162, -1000, -1000, -1000, 160,
	-1000, -1000, -1000, 1808, 156, 932, 1066, 660, 1705, 152,
	331, 329, 324, 322, 315, 151, 251, -1000, -1000, -1000,
	-1000, 406, 218, -1000, -1000, 1835, 1808, -1000, -1000, 1808,
	1808, 2231, 2231, 759, 405, 471, 2176, 1808, 569, -1000,
	2176, -1000, -1000, 574, -1000, 721, -1000, 1950, 2716, -1000,
	1808, 660, 334, 145, 144, 133, 130, 128, 334, 308,
	-1000, 2231, 2329, 503, 2079, 37, 600, 1950, 403, 402,
	286, 561, 400, -1000, 2300, -1000, 505, 48, 41, 36,
	1950, 34, 721, 698, 334, 334, 334, 334, 334, 32,
	127, -1000, 2231, 464, 1808, 2053, 2716, 2716, -1000, -1000,
	2231, -1000, 556, 2176, -1000, -1000, -1000, -1000, -1000, -1000,
	1808, 26, 24, 21, 18, 17, -1000, 334, 481, 398,
	2231, 1940, 395, 210, -1000, -1000, 1835, 1808, -1000, -1000,
	-1000, 426, 425, 384, -1000, 542, -1000, -1000, -1000, -1000,
	-1000, -1000, 2, 381, 459, 2231, 1808, 567, -1000, 2231,
	531, 2053, 1331, 492, 2053, 2053, -1000, -1000, -1000, 553,
	380, -1000, 560, -1000, 503, -1000, -1000, 2053, 458, 1808,
	370, 369, -1000, 548, 2231, -1000, 439, 367, 2053, 88,
	528, 523, -1000, 541, 364, 442, 2053, 1808, 566, -1000,
	2053, -1000, -1000, -1000, 547, 362, -1000, 10, -1000, 492,
	-1000, 546, 2053, -1000, -1000, 539, -1000,
}
var yyPgo = [...]int{

	0, 36, 14, 238, 107, 596, 64, 957, 34, 26,
	956, 955, 954, 950, 43, 18, 949, 948, 947, 946,
	945, 943, 55, 19, 22, 938, 936, 41, 934, 932,
	53, 33, 931, 927, 924, 923, 922, 935, 68, 61,
	921, 56, 42, 919, 917, 12, 916, 45, 915, 843,
	913, 65, 66, 63, 62, 38, 349, 44, 24, 30,
	37, 911, 910, 907, 902, 1180, 899, 898, 897, 896,
	900, 553, 894, 893, 48, 20, 889, 57, 69, 59,
	888, 29, 886, 16, 884, 878, 874, 7, 25, 873,
	23, 8, 46, 17, 50, 872, 870, 869, 47, 868,
	21, 49, 5, 10, 6, 9, 4, 3, 54, 867,
	13, 859, 11, 855, 2, 853, 0, 251, 15, 472,
	851, 71, 659, 58, 52, 40, 51, 67, 849, 39,
	437,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	9, 9, 11, 11, 10, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 12, 13, 13, 14, 14, 14,
	15, 15, 16, 16, 17, 17, 17, 17, 17, 18,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 20,
	20, 21, 21, 21, 21, 21, 21, 21, 21, 22,
	22, 23, 23, 24, 24, 24, 24, 24, 25, 25,
	25, 25, 25, 26, 26, 26, 26, 27, 28, 28,
	29, 30, 30, 31, 31, 31, 32, 32, 32, 32,
	33, 33, 33, 33, 33, 33, 33, 34, 34, 34,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 36, 36, 36, 37, 38, 38, 38, 38, 39,
	39, 40, 41, 41, 42, 42, 43, 43, 44, 44,
	45, 45, 46, 46, 46, 47, 47, 48, 48, 49,
	49, 50, 50, 51, 51, 52, 52, 52, 52, 52,
	52, 53, 54, 55, 55, 55, 55, 55, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 57, 58, 58, 59, 59, 60, 60, 61,
	61, 62, 62, 63, 63, 63, 64, 64, 65, 66,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 68,
	68, 68, 68, 68, 68, 68, 69, 69, 69, 69,
	70, 70, 71, 71, 72, 72, 72, 72, 72, 73,
	73, 74, 74, 74, 74, 74, 74, 74, 74, 75,
	76, 76, 77, 77, 78, 78, 78, 80, 81, 81,
	81, 81, 81, 81, 81, 82, 82, 82, 82, 82,
	82, 83, 83, 84, 84, 85, 85, 85, 86, 87,
	87, 88, 88, 89, 89, 90, 90, 91, 91, 92,
	92, 79, 79, 93, 93, 94, 94, 95, 95, 95,
	95, 96, 97, 98, 98, 99, 99, 100, 100, 101,
	101, 102, 102, 103, 103, 104, 104, 105, 105, 106,
	106, 107, 107, 108, 108, 109, 109, 110, 110, 111,
	111, 112, 112, 113, 113, 114, 114, 115, 115, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 117, 118, 118, 119, 120, 120, 121, 121,
	122, 122, 123, 123, 124, 124, 125, 125, 126, 126,
	127, 127, 128, 128, 129, 129, 130, 130,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	1, 2, 1, 1, 7, 8, 6, 1, 1, 7,
	8, 6, 1, 1, 1, 1, 1, 6, 8, 8,
	1, 2, 1, 1, 7, 8, 6, 1, 1, 7,
	8, 6, 1, 1, 1, 2, 2, 1, 2, 1,
	1, 6, 8, 5, 6, 8, 5, 7, 7, 1,
	3, 1, 3, 0, 1, 1, 2, 2, 5, 2,
	2, 3, 5, 6, 8, 5, 3, 1, 1, 3,
	3, 1, 3, 1, 1, 3, 9, 10, 10, 12,
	0, 1, 1, 1, 1, 2, 2, 5, 6, 3,
	4, 2, 2, 2, 4, 2, 2, 2, 2, 2,
	4, 2, 3, 4, 5, 5, 4, 4, 4, 1,
	1, 3, 0, 2, 0, 2, 0, 3, 0, 2,
	0, 3, 0, 3, 4, 0, 2, 0, 2, 0,
	2, 6, 9, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 3, 1, 3, 2,
	4, 1, 1, 0, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 4, 4, 6, 6, 4, 6,
	4, 4, 4, 6, 4, 4, 6, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 4, 5, 5, 5, 5, 1, 5,
	10, 8, 9, 9, 9, 9, 9, 8, 10, 2,
	0, 3, 1, 1, 1, 2, 3, 1, 1, 1,
	2, 3, 1, 1, 3, 4, 5, 6, 7, 5,
	6, 2, 4, 1, 1, 1, 3, 1, 5, 0,
	1, 4, 5, 0, 2, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 6, 9, 5,
	8, 7, 3, 1, 3, 5, 6, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 1, 3,
	0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -10, -37, -95, -96, -99, -71,
	-21, -19, -25, -26, -32, -20, -35, -36, 75, 74,
	-8, -9, -49, -116, 26, 29, 113, 83, -119, 89,
	87, 88, 86, 98, 99, 16, 114, 103, 104, 105,
	106, 77, 102, 73, 4, 115, 116, 117, 118, 120,
	121, 119, 123, 124, 125, 126, 122, -117, 11, 132,
	-56, 138, -55, -52, -68, -66, -65, -71, -72, -86,
	-67, -69, -117, -119, -34, -116, 24, 5, 6, 7,
	-53, 10, -54, 135, 136, 75, 125, 123, -73, 74,
	-58, 63, 67, 137, 84, 124, 9, 71, -87, -56,
	138, -38, 19, 15, 17, -40, -39, 13, -65, 138,
	138, 30, 30, -121, -120, -117, -121, -116, -117, 84,
	38, -116, -116, -33, 90, 91, 31, 32, 92, 93,
	12, 12, 117, 118, 120, 121, 119, -56, -56, -56,
	122, -56, -117, -118, 6, -51, -50, -128, 25, 129,
	-1, 79, 128, 127, 134, 70, -123, -130, 136, 135,
	133, 140, 141, 66, 65, 67, -56, -91, -37, -70,
	-49, 143, 138, 143, -56, -56, 138, 138, 138, -87,
	127, 134, -123, -130, -65, -56, -56, -116, 138, -108,
	78, -91, -45, 39, 20, -79, -77, -116, 24, 14,
	-79, -41, 14, 58, 59, 60, -122, 72, -70, -91,
	-56, -116, -77, 142, 129, 84, 38, 107, 108, -116,
	-116, -116, -56, -56, 134, 14, 142, -56, 6, 81,
	64, 142, 64, 142, -116, -56, -1, -56, -56, -56,
	-123, 68, 64, 69, 62, 61, -56, -56, -56, -56,
	-56, -56, -56, 139, 142, 139, 139, 139, -116, 6,
	-122, -116, 6, -122, -122, -88, 78, -58, 138, -65,
	-58, 68, 64, 62, 61, 70, 123, -122, -109, 80,
	-56, -46, 45, 42, -78, -77, 16, 142, -92, -81,
	-78, -80, -82, 23, 138, -65, 14, -42, 18, -92,
	-127, 61, -127, -127, -94, -85, -84, -57, -56, -74,
	133, -116, 125, 123, 124, 126, 139, 138, -129, 22,
	27, 28, 36, -121, -56, 85, 138, 22, 138, 138,
	20, -52, -116, -91, -56, -2, -11, -5, -12, 75,
	74, -8, -9, -6, 100, 101, -116, -118, -117, -116,
	-51, 22, 138, -101, -100, 80, 76, -53, -54, -56,
	-58, -56, -58, -58, -91, -70, -70, -70, -57, -89,
	80, -56, -58, 138, -65, 138, -65, 138, -65, -123,
	-70, 82, -1, 79, -48, 46, -56, -60, -61, -62,
	-56, -74, 21, 138, -37, -116, 22, -98, -97, -55,
	-116, -79, -42, 54, -124, -126, 53, 57, 142, 49,
	51, 52, -116, 22, -81, -92, -43, 40, -56, -39,
	-38, -39, -39, 142, 22, 138, 138, 138, 138, 138,
	-93, -116, -37, -22, 138, -116, -55, 138, -55, -37,
	-93, -37, 139, -31, -28, -30, -27, -29, -117, -116,
	-118, 82, 132, -56, -87, 81, 81, 138, -93, 82,
	-101, -1, -56, 65, 139, 139, 139, 139, 82, -56,
	79, 65, -59, -58, -59, -59, 87, 64, 139, 74,
	-1, -56, -47, 47, 73, 142, -63, 43, 44, -59,
	-90, -55, -116, -41, 142, 134, 48, 48, -125, 50,
	-125, -124, -126, -92, -116, 139, -42, -44, 41, 42,
	-94, -116, -70, -122, -122, -122, -122, -70, 139, 142,
	-24, 31, 32, 33, 34, -23, -22, 35, -90, 37,
	139, 22, 139, 142, 142, 35, 139, 142, 77, -2,
	79, -110, 78, -2, -2, -37, 139, 75, 82, 79,
	-56, -56, -58, 139, 142, 139, 139, 94, 112, -108,
	-47, 115, -60, 116, 139, 142, -42, -98, -56, -81,
	-81, 48, 48, 48, -125, -56, -91, 139, -70, -70,
	-70, -57, -70, 139, -129, -93, -55, -55, 139, 142,
	-56, 139, -116, 22, 109, 22, -27, -30, -30, -117,
	-56, 22, -31, -2, -111, 80, -56, 82, 82, 139,
	22, 75, -1, -88, -59, 40, -64, 31, 32, 21,
	-37, -90, -83, 55, 56, -81, -81, -81, 48, 97,
	139, 139, 139, 139, 139, 97, 111, -37, -24, -23,
	-37, -3, -13, -5, -17, 75, 74, -14, -15, 77,
	110, 109, 109, 139, -103, -102, 80, 76, 82, -2,
	79, 77, 77, 138, -100, 138, -59, -56, 138, -83,
	55, -81, 138, 97, 97, 97, 97, 97, 138, 116,
	82, 132, -56, -87, -56, -117, -118, -56, -3, -3,
	22, 82, -103, -2, -56, 74, -2, -37, -45, -93,
	-56, -75, -76, 96, 138, 138, 138, 138, 138, -75,
	97, -3, 79, -112, 78, 81, 64, 64, 82, 82,
	109, 75, 82, 79, -110, 139, 139, 139, 139, -45,
	42, -75, -75, -75, -75, -75, 139, 138, -3, -113,
	80, -56, -4, -16, -5, -18, 75, 74, -14, -15,
	-6, -116, -116, -3, 75, -2, -91, 139, 139, 139,
	139, 139, -75, -105, -104, 80, 76, 82, -3, 79,
	82, 132, -56, -87, 81, 81, 82, -102, 139, 82,
	-105, -3, -56, 74, -3, 77, -4, 79, -114, 78,
	-4, -4, 75, 82, 79, -112, -4, -115, 80, -56,
	82, 82, 75, -3, -107, -106, 80, 76, 82, -4,
	79, 77, 77, -104, 82, -107, -4, -56, 74, -4,
	75, 82, 79, -114, 75, -4, -106,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 289,
	37, 38, 0, 0, 0, 0, 0, 0, 67, 0,
	0, 0, 110, 69, 70, 0, 0, 0, 0, 0,
	0, 0, 30, 382, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 0, 362, -2,
	372, -2, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 173, 0, 165, 166, 167,
	168, 169, 170, 0, 0, 0, 359, 357, 248, 289,
	372, 0, 0, 0, 0, 358, 171, 172, 0, -2,
	159, -2, 0, 0, 0, 142, 0, 370, 140, 159,
	240, 0, 0, 65, 368, 366, 66, 0, 68, 0,
	0, 89, 90, 0, 111, 112, 113, 114, 0, 0,
	0, 121, 126, 127, 128, 129, 0, -2, -2, -2,
	131, 372, 188, 0, 31, 160, 163, 0, 383, 0,
	3, -2, 0, 386, 387, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 372, 0, 0, 0,
	0, 0, 240, 0, 234, 235, 240, 370, 370, 0,
	386, 387, 0, 0, 228, 238, 239, 0, 370, 335,
	0, 0, 152, 0, 0, 0, 301, 262, 263, 0,
	0, 144, 0, 380, 380, 380, 0, 371, 0, 241,
	-2, 384, 0, 0, 0, 0, 0, 0, 0, 91,
	96, 0, -2, -2, 0, 0, 0, -2, 166, -2,
	0, 0, 0, 382, 0, 365, 319, 209, -2, -2,
	0, 0, 0, 0, 0, 0, 229, 230, 231, 232,
	233, 236, 237, 191, 0, 193, 208, 243, 174, 176,
	240, 175, 177, 240, 240, 293, 0, 211, 159, 194,
	213, 0, 0, 0, 0, 372, 119, 240, 0, -2,
	372, 157, 0, 0, 159, 264, 0, 0, 144, -2,
	268, 269, 272, 273, 159, 267, 0, 146, 0, 143,
	0, 381, 0, 0, 141, 305, 285, 287, -2, 284,
	192, 173, 359, 357, 358, 360, 242, 0, 159, 385,
	0, 0, 0, 369, -2, 159, 0, 159, 0, 0,
	0, 120, 130, 124, -2, 0, 0, 32, 33, 0,
	289, 42, 43, 44, 23, 24, 0, 364, 363, 0,
	164, 0, 0, 0, 319, -2, 0, 214, 215, 372,
	218, -2, 222, 225, 298, 0, 0, 0, 0, 0,
	0, 372, 0, 159, 220, 159, 224, 159, 227, 0,
	0, 0, 336, -2, 134, 0, -2, 151, 197, 203,
	-2, 202, 0, 0, 309, 265, 0, 142, 313, 0,
	173, 302, 315, 0, 0, 376, 376, 374, 0, 375,
	378, 379, 270, 0, 374, 144, 148, 0, -2, 136,
	139, 137, 138, 0, 0, 240, 370, 370, 370, 240,
	0, 303, 73, 83, 0, 79, 76, 0, 0, 88,
	0, 95, 0, 0, 103, 104, 98, 101, 97, 0,
	92, 0, -2, 372, 0, -2, -2, 159, 0, 0,
	0, 320, 372, 0, 244, 245, 246, 247, 288, -2,
	0, 0, 0, 195, 0, 0, 117, 0, 249, 36,
	333, -2, 153, 155, 0, 0, 199, 204, 205, 307,
	0, 295, 266, 144, 0, 0, 0, 0, 0, 377,
	0, 0, 376, 300, 271, 274, 316, 135, 0, 0,
	306, 286, 0, 240, 240, 240, 240, 0, -2, 0,
	74, 84, 85, 0, 0, 0, 81, 0, 0, 0,
	93, 0, 0, 0, 0, 0, 0, 0, 27, 5,
	-2, 339, 0, 0, 0, 0, 0, 34, 0, -2,
	216, -2, 217, 219, 0, 223, 226, 118, 0, 334,
	154, 156, 198, 0, 159, 0, 311, 314, -2, 275,
	374, 0, 0, 0, 0, -2, 147, 242, 0, 0,
	0, 0, 0, 0, 159, 304, 86, 87, 83, 0,
	-2, 77, 78, 159, -2, 0, 99, 105, 102, 0,
	-2, 0, 0, 323, 0, -2, 372, 0, 0, 161,
	0, 35, 317, 292, 196, 0, 200, 206, 207, 0,
	310, 296, 276, 0, 0, 374, 374, 279, 0, 0,
	244, 245, 246, 247, 249, 0, 0, 72, 75, 82,
	94, 0, 0, 45, 46, 0, 289, 57, 58, 0,
	50, -2, -2, 0, 0, 323, -2, 0, 0, 340,
	-2, 28, 29, 159, 318, 150, 308, -2, 0, 277,
	0, 280, 260, 0, 0, 0, 0, 0, 260, 0,
	106, -2, 372, 0, 372, 188, 0, -2, 0, 0,
	0, 0, 0, 324, 372, 41, 337, 0, 0, 0,
	-2, 0, 150, 0, 260, 260, 260, 260, 260, 0,
	0, 7, -2, 343, 0, -2, 0, 0, 107, 108,
	-2, 39, 0, -2, 338, 162, 250, 282, 251, 259,
	0, 0, 0, 0, 0, 0, 257, 260, 327, 0,
	-2, 372, 0, 0, 52, 53, 0, 289, 62, 63,
	64, 0, 0, 0, 40, 321, 261, 252, 253, 254,
	255, 256, 0, 0, 327, -2, 0, 0, 344, -2,
	0, -2, 372, 0, -2, -2, 109, 322, 258, 0,
	0, 328, 372, 56, 341, 47, 9, -2, 347, 0,
	0, 0, 54, 0, -2, 342, 331, 0, -2, 372,
	0, 0, 55, 325, 0, 331, -2, 0, 0, 348,
	-2, 48, 49, 326, 0, 0, 332, 372, 61, 345,
	59, 0, -2, 346, 60, 329, 330,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 141, 3, 3,
	138, 139, 133, 136, 142, 135, 143, 140, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 132,
	3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:208
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:213
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:218
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:225
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:229
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:235
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:245
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:255
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:259
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:263
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:267
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = Exit{}
		}
	case 31:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 34:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 35:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 36:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:393
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:439
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:463
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 74:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:565
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:569
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:575
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:579
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:585
		{
			yyVAL.expression = nil
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:589
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:593
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:597
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:601
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:619
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:623
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 93:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:637
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:641
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:647
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:653
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:657
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:663
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:669
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:673
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:679
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:683
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:687
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 107:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 108:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:701
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 109:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:705
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:711
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:715
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:719
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:723
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:727
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:731
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:735
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:741
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:745
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:749
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:755
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:759
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:763
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:767
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:771
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:775
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:779
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:783
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:787
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:791
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:795
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[4].identifier}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:801
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:805
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:809
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:815
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:827
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:837
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:846
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:855
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:866
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:870
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:876
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:882
		{
			yyVAL.queryexpr = nil
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:886
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:892
		{
			yyVAL.queryexpr = nil
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:896
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:902
		{
			yyVAL.queryexpr = nil
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:906
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:912
		{
			yyVAL.queryexpr = nil
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:916
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:922
		{
			yyVAL.queryexpr = nil
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:926
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:932
		{
			yyVAL.queryexpr = nil
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:936
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:940
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:946
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:956
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:966
		{
			yyVAL.queryexpr = nil
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:970
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 162:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:990
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1034
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1046
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1060
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.token = Token{}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1200
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1223
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1231
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1235
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1239
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1243
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 216:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1247
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 217:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1251
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1259
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1271
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1279
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1283
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1287
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1291
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1295
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1331
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1335
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1339
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1343
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexprs = nil
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 244:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1370
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 245:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1374
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1378
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1392
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 250:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1402
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 252:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 253:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1410
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 254:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1414
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 255:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1418
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 256:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1422
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 257:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1426
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 258:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1430
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = AnalyticClause{Partition: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1442
		{
			yyVAL.queryexpr = nil
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1446
		{
			yyVAL.queryexpr = Partition{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1452
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1456
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1462
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1466
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1470
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1482
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1486
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1490
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1494
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1498
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1506
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1512
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1516
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 280:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1572
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = nil
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1588
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexpr = nil
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1618
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 308:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1676
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1680
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1708
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1713
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.elseexpr = Else{}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.elseexpr = Else{}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.elseexpr = Else{}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.elseexpr = Else{}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1892
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.token = Token{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.token = yyDollar[1].token
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.token = Token{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.token = yyDollar[1].token
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.token = Token{}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.token = yyDollar[1].token
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.token = Token{}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.token = yyDollar[1].token
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.token = yyDollar[1].token
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2020
		{
			yyVAL.token = yyDollar[1].token
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.token = Token{}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.token = yyDollar[1].token
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.token = Token{}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2040
		{
			yyVAL.token = yyDollar[1].token
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.token = Token{}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.token = yyDollar[1].token
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.token = yyDollar[1].token
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2060
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
