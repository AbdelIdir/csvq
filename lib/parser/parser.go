// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const EXECUTE = 57453
const TRIGGER = 57454
const FUNCTION = 57455
const AGGREGATE = 57456
const BEGIN = 57457
const RETURN = 57458
const IGNORE = 57459
const WITHIN = 57460
const VAR = 57461
const SHOW = 57462
const TIES = 57463
const NULLS = 57464
const ROWS = 57465
const JSON_ROW = 57466
const JSON_TABLE = 57467
const COUNT = 57468
const JSON_OBJECT = 57469
const AGGREGATE_FUNCTION = 57470
const LIST_FUNCTION = 57471
const ANALYTIC_FUNCTION = 57472
const FUNCTION_NTH = 57473
const FUNCTION_WITH_INS = 57474
const COMPARISON_OP = 57475
const STRING_OP = 57476
const SUBSTITUTION_OP = 57477
const UMINUS = 57478
const UPLUS = 57479

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2202

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 167,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 52,
	13, 167,
	15, 167,
	17, 167,
	19, 167,
	144, 167,
	-2, 1,
	-1, 54,
	145, 252,
	-2, 167,
	-1, 95,
	58, 147,
	59, 147,
	60, 147,
	-2, 158,
	-1, 131,
	1, 133,
	82, 133,
	84, 133,
	86, 133,
	88, 133,
	138, 133,
	-2, 181,
	-1, 148,
	82, 1,
	86, 1,
	88, 1,
	-2, 167,
	-1, 247,
	88, 4,
	-2, 167,
	-1, 258,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 222,
	-1, 259,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 224,
	-1, 268,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 234,
	-1, 303,
	88, 1,
	-2, 167,
	-1, 313,
	48, 400,
	-2, 334,
	-1, 357,
	1, 127,
	82, 127,
	84, 127,
	86, 127,
	88, 127,
	138, 127,
	-2, 181,
	-1, 385,
	88, 1,
	-2, 167,
	-1, 392,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 235,
	-1, 415,
	84, 1,
	86, 1,
	88, 1,
	-2, 167,
	-1, 490,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 167,
	-1, 493,
	88, 4,
	-2, 167,
	-1, 494,
	88, 4,
	-2, 167,
	-1, 562,
	13, 410,
	73, 410,
	144, 410,
	-2, 75,
	-1, 585,
	82, 4,
	86, 4,
	88, 4,
	-2, 167,
	-1, 590,
	88, 4,
	-2, 167,
	-1, 591,
	88, 4,
	-2, 167,
	-1, 596,
	82, 1,
	86, 1,
	88, 1,
	-2, 167,
	-1, 646,
	1, 83,
	82, 83,
	84, 83,
	86, 83,
	88, 83,
	138, 83,
	-2, 181,
	-1, 649,
	88, 6,
	-2, 167,
	-1, 660,
	88, 4,
	-2, 167,
	-1, 715,
	88, 6,
	-2, 167,
	-1, 716,
	88, 6,
	-2, 167,
	-1, 720,
	88, 4,
	-2, 167,
	-1, 724,
	84, 4,
	86, 4,
	88, 4,
	-2, 167,
	-1, 759,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 167,
	-1, 798,
	82, 6,
	86, 6,
	88, 6,
	-2, 167,
	-1, 801,
	88, 8,
	-2, 167,
	-1, 806,
	88, 6,
	-2, 167,
	-1, 809,
	82, 4,
	86, 4,
	88, 4,
	-2, 167,
	-1, 826,
	88, 6,
	-2, 167,
	-1, 847,
	88, 6,
	-2, 167,
	-1, 851,
	84, 6,
	86, 6,
	88, 6,
	-2, 167,
	-1, 853,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 167,
	-1, 856,
	88, 8,
	-2, 167,
	-1, 857,
	88, 8,
	-2, 167,
	-1, 870,
	82, 8,
	86, 8,
	88, 8,
	-2, 167,
	-1, 882,
	82, 6,
	86, 6,
	88, 6,
	-2, 167,
	-1, 886,
	88, 8,
	-2, 167,
	-1, 902,
	88, 8,
	-2, 167,
	-1, 906,
	84, 8,
	86, 8,
	88, 8,
	-2, 167,
	-1, 926,
	82, 8,
	86, 8,
	88, 8,
	-2, 167,
}

const yyPrivate = 57344

const yyLast = 3388

var yyAct = [...]int{

	68, 23, 892, 871, 900, 719, 712, 799, 92, 901,
	846, 828, 845, 586, 210, 745, 218, 419, 467, 680,
	718, 137, 743, 784, 384, 564, 513, 569, 531, 112,
	290, 481, 117, 118, 711, 429, 83, 343, 128, 484,
	363, 131, 323, 134, 744, 539, 216, 437, 523, 312,
	202, 570, 196, 23, 483, 383, 190, 436, 370, 21,
	213, 369, 20, 404, 75, 73, 142, 181, 108, 166,
	326, 313, 1, 100, 314, 170, 55, 309, 371, 172,
	454, 802, 441, 207, 442, 443, 438, 435, 187, 171,
	439, 178, 642, 378, 170, 168, 248, 111, 198, 198,
	171, 739, 612, 95, 844, 170, 220, 227, 198, 192,
	601, 21, 46, 335, 20, 235, 236, 237, 170, 193,
	238, 149, 579, 160, 741, 147, 160, 742, 159, 158,
	161, 162, 69, 161, 162, 51, 155, 164, 163, 154,
	153, 156, 152, 581, 578, 254, 582, 563, 535, 23,
	526, 201, 146, 249, 333, 311, 365, 3, 155, 801,
	252, 154, 153, 156, 152, 249, 253, 146, 705, 46,
	229, 283, 843, 286, 46, 197, 197, 249, 853, 821,
	249, 440, 820, 819, 818, 228, 45, 817, 317, 199,
	814, 813, 265, 317, 199, 160, 198, 159, 158, 812,
	209, 321, 161, 162, 321, 150, 149, 21, 220, 3,
	20, 160, 151, 159, 158, 811, 292, 293, 161, 162,
	260, 256, 795, 793, 792, 783, 91, 150, 149, 47,
	48, 49, 717, 160, 151, 159, 158, 91, 45, 101,
	161, 162, 357, 359, 424, 666, 266, 381, 23, 374,
	95, 377, 474, 325, 644, 285, 641, 266, 360, 361,
	288, 289, 631, 630, 629, 628, 627, 209, 330, 480,
	308, 375, 300, 611, 46, 600, 328, 329, 101, 593,
	97, 192, 98, 577, 96, 575, 47, 48, 49, 562,
	320, 47, 48, 49, 395, 320, 45, 561, 349, 560,
	391, 559, 553, 518, 23, 3, 393, 394, 220, 318,
	427, 432, 198, 508, 318, 796, 444, 507, 506, 321,
	380, 505, 332, 321, 423, 388, 387, 353, 344, 331,
	407, 403, 280, 282, 220, 458, 399, 441, 281, 442,
	443, 438, 435, 468, 794, 439, 472, 432, 432, 476,
	405, 751, 750, 468, 749, 434, 487, 748, 747, 735,
	408, 409, 21, 732, 433, 20, 410, 425, 729, 382,
	103, 478, 449, 699, 697, 696, 414, 492, 488, 495,
	496, 396, 690, 468, 397, 398, 23, 431, 515, 197,
	446, 47, 48, 49, 457, 497, 411, 470, 448, 447,
	453, 498, 455, 456, 355, 354, 66, 29, 341, 103,
	340, 339, 338, 337, 471, 336, 23, 189, 188, 460,
	461, 462, 463, 473, 475, 103, 432, 177, 176, 533,
	175, 459, 183, 546, 105, 464, 465, 466, 104, 536,
	500, 321, 514, 241, 21, 759, 545, 20, 490, 352,
	342, 530, 52, 230, 146, 298, 861, 700, 501, 29,
	3, 514, 46, 698, 610, 608, 46, 604, 635, 695,
	806, 716, 472, 715, 21, 432, 200, 20, 633, 649,
	534, 757, 69, 636, 541, 604, 199, 543, 521, 755,
	544, 23, 549, 634, 23, 23, 694, 542, 179, 693,
	692, 691, 532, 572, 632, 180, 626, 746, 517, 557,
	351, 299, 925, 915, 904, 889, 888, 881, 46, 862,
	287, 211, 858, 51, 852, 849, 808, 220, 122, 123,
	805, 584, 902, 804, 588, 589, 432, 516, 321, 321,
	53, 93, 3, 423, 609, 769, 46, 758, 728, 599,
	115, 532, 727, 722, 663, 29, 554, 555, 556, 558,
	129, 130, 132, 133, 468, 135, 199, 625, 432, 432,
	662, 614, 3, 607, 645, 646, 165, 613, 606, 47,
	48, 49, 638, 47, 48, 49, 23, 595, 46, 621,
	509, 23, 23, 120, 121, 124, 125, 23, 173, 174,
	637, 499, 114, 489, 93, 413, 445, 185, 186, 616,
	617, 903, 431, 432, 657, 902, 165, 857, 651, 321,
	321, 321, 856, 687, 689, 116, 658, 217, 671, 670,
	591, 664, 665, 652, 653, 47, 48, 49, 514, 590,
	494, 679, 493, 472, 639, 640, 239, 240, 848, 721,
	23, 886, 847, 720, 29, 21, 245, 847, 20, 46,
	826, 23, 46, 47, 48, 49, 720, 702, 255, 669,
	703, 257, 258, 259, 660, 261, 385, 428, 268, 401,
	271, 272, 273, 274, 275, 276, 277, 321, 303, 532,
	683, 684, 685, 386, 730, 65, 50, 385, 872, 232,
	800, 723, 46, 736, 733, 47, 48, 49, 587, 51,
	29, 301, 753, 304, 514, 753, 23, 23, 191, 761,
	754, 23, 291, 110, 110, 23, 113, 157, 908, 217,
	907, 868, 60, 9, 776, 764, 468, 775, 903, 136,
	770, 752, 726, 725, 756, 583, 848, 721, 50, 386,
	929, 231, 350, 3, 780, 924, 779, 898, 738, 880,
	23, 771, 840, 358, 807, 774, 668, 753, 362, 594,
	787, 788, 789, 790, 233, 234, 47, 48, 49, 47,
	48, 49, 919, 866, 390, 9, 392, 773, 810, 520,
	913, 897, 29, 911, 912, 928, 791, 910, 896, 23,
	895, 816, 23, 837, 838, 603, 707, 23, 835, 677,
	23, 182, 753, 402, 45, 525, 220, 822, 208, 47,
	48, 49, 29, 183, 88, 909, 263, 23, 418, 422,
	262, 264, 423, 842, 251, 46, 834, 284, 782, 295,
	803, 823, 855, 294, 50, 512, 452, 859, 23, 379,
	841, 250, 23, 327, 23, 217, 205, 23, 23, 863,
	835, 45, 540, 835, 835, 869, 297, 296, 873, 874,
	46, 23, 707, 707, 686, 883, 620, 835, 127, 893,
	836, 9, 884, 23, 766, 767, 89, 23, 834, 491,
	93, 834, 834, 835, 270, 269, 619, 29, 905, 618,
	29, 29, 878, 23, 893, 834, 916, 23, 502, 835,
	914, 503, 923, 835, 917, 538, 707, 441, 920, 442,
	443, 834, 537, 510, 927, 110, 417, 23, 797, 204,
	205, 206, 836, 835, 519, 836, 836, 834, 930, 522,
	931, 834, 306, 50, 815, 376, 528, 529, 922, 836,
	786, 894, 47, 48, 49, 707, 552, 307, 830, 551,
	673, 834, 451, 707, 876, 836, 194, 824, 785, 547,
	548, 877, 574, 891, 879, 839, 894, 573, 580, 571,
	9, 836, 348, 707, 107, 836, 106, 47, 48, 49,
	675, 676, 29, 345, 346, 850, 145, 29, 29, 50,
	768, 667, 347, 29, 707, 836, 656, 650, 707, 648,
	830, 344, 356, 830, 830, 576, 864, 22, 334, 195,
	867, 565, 566, 567, 568, 324, 597, 830, 310, 5,
	203, 322, 242, 598, 141, 126, 9, 602, 51, 707,
	144, 109, 885, 830, 825, 659, 302, 8, 422, 430,
	486, 899, 376, 7, 6, 400, 29, 62, 615, 830,
	214, 215, 316, 830, 315, 921, 890, 29, 875, 860,
	81, 61, 169, 624, 441, 64, 442, 443, 438, 435,
	737, 50, 439, 830, 167, 57, 155, 164, 163, 154,
	153, 156, 152, 643, 63, 58, 647, 674, 527, 421,
	420, 56, 655, 143, 416, 305, 550, 450, 99, 661,
	17, 50, 169, 16, 67, 119, 14, 485, 9, 482,
	13, 169, 29, 29, 167, 12, 10, 29, 15, 11,
	831, 29, 441, 167, 442, 443, 438, 435, 681, 682,
	439, 708, 829, 706, 688, 366, 364, 4, 9, 138,
	2, 0, 0, 0, 0, 150, 149, 0, 0, 0,
	0, 160, 151, 159, 158, 0, 29, 278, 161, 162,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 50,
	50, 0, 0, 0, 731, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 29, 0, 0, 29, 0,
	0, 0, 0, 29, 0, 0, 29, 0, 0, 0,
	0, 0, 0, 9, 0, 0, 9, 9, 0, 0,
	0, 760, 93, 29, 0, 762, 765, 0, 0, 0,
	0, 0, 0, 772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 29, 0, 0, 0, 29, 781,
	29, 0, 0, 29, 29, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 654, 0, 29, 486, 0,
	0, 50, 0, 0, 169, 0, 50, 50, 0, 29,
	0, 0, 50, 29, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 29,
	0, 0, 0, 29, 0, 0, 0, 0, 9, 0,
	0, 0, 827, 9, 9, 0, 169, 0, 0, 9,
	0, 0, 0, 29, 0, 0, 169, 422, 426, 0,
	0, 0, 0, 0, 0, 50, 0, 0, 167, 0,
	0, 0, 0, 0, 854, 93, 50, 0, 0, 0,
	0, 169, 155, 164, 163, 154, 153, 156, 152, 169,
	865, 169, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 477, 9, 479, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 9, 887, 155, 164, 163, 154, 153,
	156, 152, 0, 0, 0, 0, 0, 0, 0, 763,
	0, 50, 50, 102, 0, 0, 50, 0, 0, 0,
	50, 0, 0, 169, 0, 918, 0, 0, 0, 0,
	0, 150, 149, 0, 0, 167, 0, 160, 151, 159,
	158, 0, 0, 0, 161, 162, 672, 0, 9, 9,
	0, 0, 0, 9, 0, 50, 0, 9, 0, 0,
	0, 0, 0, 0, 150, 149, 0, 0, 0, 0,
	160, 151, 159, 158, 0, 184, 0, 161, 162, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 9, 0, 50, 0, 0, 50, 0, 0,
	0, 0, 50, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 592, 0, 0,
	0, 9, 0, 0, 9, 0, 0, 0, 0, 9,
	0, 0, 9, 50, 0, 0, 267, 50, 0, 50,
	0, 0, 50, 50, 0, 0, 0, 0, 0, 9,
	102, 0, 0, 0, 0, 0, 50, 0, 0, 0,
	267, 267, 0, 0, 0, 0, 0, 0, 50, 0,
	9, 0, 50, 0, 9, 0, 9, 0, 0, 9,
	9, 319, 0, 0, 319, 0, 0, 0, 50, 0,
	0, 0, 50, 9, 0, 46, 70, 71, 72, 0,
	88, 74, 51, 0, 0, 9, 0, 0, 0, 9,
	0, 0, 50, 0, 0, 69, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 9, 0, 0, 0, 9,
	0, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 169, 0, 0, 0, 9,
	267, 267, 0, 0, 84, 0, 169, 701, 85, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 704, 0,
	0, 82, 78, 0, 0, 267, 406, 406, 406, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 46, 70, 71, 72, 0, 88, 74, 51, 319,
	0, 0, 0, 319, 0, 0, 0, 102, 0, 102,
	102, 69, 47, 48, 49, 91, 0, 222, 24, 221,
	223, 224, 225, 226, 0, 0, 0, 0, 0, 0,
	219, 0, 76, 77, 86, 94, 212, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 777,
	84, 0, 0, 0, 85, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 46, 70, 71,
	72, 0, 88, 74, 51, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 69, 47, 48,
	49, 91, 0, 222, 24, 221, 223, 224, 225, 226,
	0, 319, 0, 0, 0, 0, 219, 0, 76, 77,
	86, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	85, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 78, 0, 0, 0, 0, 46,
	70, 71, 72, 87, 88, 74, 51, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 267, 0, 155, 164, 163, 154, 153,
	156, 152, 0, 0, 47, 48, 49, 91, 0, 222,
	24, 221, 223, 224, 225, 226, 0, 0, 319, 319,
	0, 0, 0, 0, 76, 77, 86, 94, 84, 0,
	0, 0, 85, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 78, 0, 0, 0,
	0, 0, 0, 0, 140, 87, 46, 70, 71, 72,
	0, 88, 74, 51, 150, 149, 0, 0, 0, 0,
	160, 151, 159, 158, 0, 0, 69, 161, 162, 622,
	0, 0, 267, 0, 139, 0, 47, 48, 49, 91,
	0, 80, 24, 79, 90, 0, 0, 0, 0, 319,
	319, 319, 0, 0, 0, 0, 76, 77, 86, 94,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 78, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 46, 70, 71, 72, 0, 88, 74,
	51, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 69, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 47, 48, 49, 91, 0, 80, 24,
	79, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 76, 77, 86, 94, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 85, 0, 0, 0,
	89, 208, 0, 0, 0, 0, 0, 0, 0, 82,
	78, 0, 0, 0, 0, 46, 70, 71, 72, 87,
	88, 74, 51, 0, 0, 0, 46, 70, 71, 72,
	0, 88, 74, 51, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	47, 48, 49, 91, 0, 80, 24, 79, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 77, 86, 94, 84, 0, 0, 0, 85, 0,
	0, 0, 89, 0, 45, 84, 0, 0, 0, 85,
	0, 82, 78, 89, 0, 0, 0, 0, 0, 0,
	0, 87, 82, 78, 0, 0, 0, 0, 46, 70,
	71, 72, 87, 88, 74, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 47, 48, 49, 91, 0, 80, 24, 79,
	90, 0, 0, 47, 48, 49, 91, 0, 80, 24,
	79, 90, 76, 77, 86, 94, 0, 0, 0, 0,
	0, 0, 0, 76, 77, 86, 94, 84, 0, 0,
	0, 85, 0, 0, 0, 89, 46, 70, 246, 72,
	524, 88, 74, 51, 82, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 69, 155, 164, 163,
	154, 153, 156, 152, 0, 0, 525, 155, 164, 163,
	154, 153, 156, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 48, 49, 91, 0,
	80, 24, 79, 90, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 89, 0, 76, 77, 86, 54, 0,
	0, 0, 82, 78, 155, 164, 163, 154, 153, 156,
	152, 0, 87, 0, 0, 0, 150, 149, 0, 0,
	0, 0, 160, 151, 159, 158, 150, 149, 0, 161,
	162, 0, 160, 151, 159, 158, 0, 0, 0, 161,
	162, 412, 0, 47, 48, 49, 91, 0, 80, 24,
	79, 90, 155, 164, 163, 154, 153, 156, 152, 0,
	0, 0, 0, 76, 77, 86, 94, 0, 0, 0,
	0, 0, 0, 150, 149, 0, 0, 0, 0, 160,
	151, 159, 158, 0, 0, 0, 161, 162, 279, 155,
	164, 163, 154, 153, 156, 152, 0, 0, 0, 155,
	164, 163, 154, 153, 156, 152, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	906, 150, 149, 0, 0, 0, 0, 160, 151, 159,
	158, 0, 0, 0, 161, 162, 243, 0, 0, 155,
	164, 163, 154, 153, 156, 152, 0, 0, 0, 155,
	164, 163, 154, 153, 156, 152, 0, 0, 150, 149,
	882, 0, 0, 0, 160, 151, 159, 158, 150, 149,
	870, 161, 162, 0, 160, 151, 159, 158, 0, 0,
	0, 161, 162, 155, 164, 163, 154, 153, 156, 152,
	0, 0, 0, 155, 164, 163, 154, 153, 156, 152,
	0, 0, 0, 0, 851, 0, 0, 0, 150, 149,
	0, 0, 0, 0, 160, 151, 159, 158, 150, 149,
	0, 161, 162, 0, 160, 151, 159, 158, 0, 0,
	0, 161, 162, 155, 164, 163, 154, 153, 156, 152,
	0, 0, 0, 155, 164, 163, 154, 153, 156, 152,
	0, 0, 150, 149, 809, 0, 0, 0, 160, 151,
	159, 158, 150, 149, 798, 161, 162, 0, 160, 151,
	159, 158, 0, 0, 778, 161, 162, 155, 164, 163,
	154, 153, 156, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 164, 163, 154, 153, 156, 152,
	0, 0, 150, 149, 0, 0, 0, 0, 160, 151,
	159, 158, 150, 149, 724, 161, 162, 0, 160, 151,
	159, 158, 0, 0, 0, 161, 162, 0, 155, 164,
	163, 154, 153, 156, 152, 0, 0, 0, 155, 164,
	163, 154, 153, 156, 152, 0, 150, 149, 291, 0,
	0, 0, 160, 151, 159, 158, 0, 0, 740, 161,
	162, 0, 150, 149, 0, 0, 0, 0, 160, 151,
	159, 158, 0, 0, 0, 161, 162, 0, 155, 164,
	163, 154, 153, 156, 152, 0, 0, 0, 155, 164,
	163, 154, 153, 156, 152, 0, 0, 150, 149, 596,
	0, 0, 0, 160, 151, 159, 158, 150, 149, 585,
	161, 162, 0, 160, 151, 159, 158, 0, 0, 605,
	161, 162, 155, 164, 163, 154, 153, 156, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 0, 0, 0, 150, 149, 0,
	0, 0, 0, 160, 151, 159, 158, 150, 149, 0,
	161, 162, 0, 160, 151, 159, 158, 0, 0, 0,
	161, 162, 155, 164, 163, 154, 153, 156, 152, 0,
	0, 0, 0, 155, 164, 163, 154, 153, 156, 152,
	0, 150, 149, 415, 0, 0, 0, 160, 151, 159,
	158, 244, 0, 0, 161, 162, 247, 0, 0, 155,
	164, 163, 154, 153, 156, 152, 0, 0, 0, 155,
	164, 163, 154, 153, 156, 152, 0, 0, 0, 155,
	164, 163, 154, 153, 156, 152, 0, 0, 0, 0,
	148, 150, 149, 0, 0, 0, 0, 160, 151, 159,
	158, 0, 150, 149, 161, 162, 0, 0, 160, 151,
	159, 158, 0, 0, 0, 161, 162, 155, 504, 163,
	154, 153, 156, 152, 0, 0, 0, 0, 150, 149,
	0, 0, 0, 0, 160, 151, 159, 158, 150, 149,
	0, 161, 162, 0, 160, 151, 159, 158, 150, 149,
	0, 161, 162, 0, 160, 151, 159, 158, 0, 0,
	0, 161, 162, 155, 389, 163, 154, 153, 156, 152,
	0, 0, 0, 155, 164, 0, 154, 153, 156, 152,
	0, 0, 0, 0, 46, 0, 150, 149, 0, 0,
	0, 51, 160, 151, 159, 158, 36, 0, 0, 161,
	162, 0, 0, 0, 0, 0, 25, 0, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 149, 0, 0, 0, 0, 160, 151,
	159, 158, 150, 149, 0, 161, 162, 0, 160, 151,
	159, 158, 0, 45, 0, 161, 162, 0, 0, 0,
	833, 832, 0, 713, 0, 0, 0, 0, 0, 28,
	0, 0, 33, 31, 32, 30, 0, 0, 0, 0,
	0, 0, 0, 34, 35, 372, 373, 0, 38, 39,
	40, 41, 42, 0, 0, 0, 714, 46, 0, 27,
	37, 47, 48, 49, 51, 0, 0, 24, 0, 36,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 25,
	0, 0, 26, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 0, 51,
	0, 0, 0, 0, 36, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 25, 0, 45, 26, 0, 0,
	0, 0, 0, 368, 367, 0, 43, 0, 0, 0,
	0, 0, 28, 0, 0, 33, 31, 32, 30, 0,
	0, 0, 0, 0, 0, 0, 34, 35, 372, 373,
	44, 38, 39, 40, 41, 42, 0, 0, 0, 0,
	0, 45, 27, 37, 47, 48, 49, 0, 710, 709,
	24, 713, 0, 0, 0, 0, 0, 28, 0, 0,
	33, 31, 32, 30, 0, 0, 0, 0, 0, 0,
	0, 34, 35, 0, 46, 0, 38, 39, 40, 41,
	42, 51, 0, 0, 714, 0, 36, 27, 37, 47,
	48, 49, 0, 0, 0, 24, 25, 0, 0, 26,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	19, 18, 0, 43, 0, 0, 0, 0, 0, 28,
	0, 0, 33, 31, 32, 30, 0, 0, 0, 0,
	0, 0, 0, 34, 35, 0, 0, 44, 38, 39,
	40, 41, 42, 0, 0, 0, 0, 0, 0, 27,
	37, 47, 48, 49, 0, 0, 0, 24,
}
var yyPact = [...]int{

	3260, -1000, 314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2224, 2142,
	-1000, -1000, 265, 294, 290, 956, 954, 1027, 698, -1000,
	512, 658, 658, 497, -1000, -1000, 1023, 866, 2142, 2142,
	2142, 2142, 658, 1875, 1028, 971, -1000, -1000, -1000, -1000,
	319, -1000, 3260, 2825, 2131, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 319, -1000, -1000, -55, -70,
	-1000, -1000, -1000, -1000, -1000, -1000, 2142, 2142, 286, 284,
	283, -1000, 2142, 365, 281, 2142, 2142, 658, -1000, -1000,
	274, 273, 634, 2835, 2131, 927, 999, 542, 462, 1016,
	871, 746, -1000, 741, 2142, 1601, 658, 542, -1000, 22,
	318, -1000, 661, -1000, 658, 658, 658, -1000, -1000, 658,
	-1000, -1000, -1000, -1000, 2142, 2142, 303, -1000, 1018, 2835,
	2358, -55, 2835, 2815, 2292, 2789, 32, 787, 1027, -1000,
	-1000, -1000, -1000, 18, 658, -1000, 2142, -1000, 3260, 2142,
	2142, 2142, 756, 2142, 762, 102, 2142, 833, 2142, 2142,
	2142, 2142, 2142, 2142, 2142, 1022, 187, 193, 188, 226,
	831, 2049, 514, -1000, -1000, 2142, 746, 746, 638, 102,
	102, 775, 805, -1000, -1000, 94, -1000, 385, 746, 2142,
	602, 2142, 187, 897, 915, 542, 1012, 7, -1000, -1000,
	170, 1017, 1007, 170, 792, 792, 792, 1697, -1000, 184,
	-1000, 2310, -1000, 177, 6, 996, -1000, 2835, -1000, -1000,
	-31, 271, 269, 268, 267, 266, 264, 306, 966, 1027,
	2142, 419, 305, 261, 260, -1000, -1000, -1000, 992, 2835,
	2835, 2142, 658, 2142, 2142, 2835, 2142, 3113, 658, 1027,
	658, 29, 785, 971, 225, 2835, 611, 56, -13, -13,
	815, 2919, 2142, 102, 2142, -1000, 2131, -1000, -13, 102,
	102, -16, -16, -1000, -1000, -1000, 2929, 94, -1000, 2142,
	-1000, -1000, -1000, -1000, -1000, 2142, -1000, -1000, 2142, 1962,
	593, 2142, -1000, -1000, 102, 206, 206, 206, 756, -1000,
	2142, 2263, 517, 3260, 2778, 880, 2142, 1793, 223, 655,
	458, 542, 1007, 33, -1000, 584, -1000, -1000, 165, -1000,
	255, 254, 170, 922, 2142, -1000, 226, -1000, 226, 226,
	-1000, -1000, -1000, 1697, 658, 2049, 746, 746, 746, 2142,
	2142, 2142, 658, 741, -1000, 270, 108, 458, 658, -1000,
	2835, 741, 658, 741, 124, 658, 1027, -55, 2835, -1000,
	-1000, -1000, 2835, 515, 310, -1000, -1000, 2224, 2142, -1000,
	-1000, -1000, -1000, -1000, 555, -1000, 5, 553, 658, 658,
	-1000, 251, 658, 513, 590, 3260, 2142, -1000, -1000, 2142,
	2873, -1000, -13, -1000, -1000, -1000, 176, 173, 172, 168,
	502, 2142, 2728, 780, -1000, 113, -1000, 244, -1000, -1000,
	444, 158, 2142, 709, -1000, 3260, -1000, 2142, 2253, -1000,
	2, 903, 2835, -1000, 102, 458, -1000, -1000, 658, 1016,
	0, 299, -74, -1000, -1000, 874, 867, 812, 812, 868,
	170, -1000, -1000, -1000, -1000, 658, 288, 2142, 2142, 1007,
	918, 914, 2835, 797, -1000, -1000, 797, -1000, -1000, 157,
	2142, 2142, 1962, 2142, 156, 154, 152, 144, -1, -1000,
	990, 658, 944, -1000, 458, 940, 935, -1000, 140, -1000,
	993, 138, -4, -1000, -1000, -26, 943, -2, -1000, 662,
	3113, 2694, 624, 3113, 3113, 552, 543, 741, 134, 688,
	499, -1000, 2684, 94, 2142, -1000, -1000, -1000, -1000, -1000,
	2835, 2142, 102, 130, -38, 2142, -1000, 731, 349, 2644,
	-1000, 634, 2835, -1000, 742, 344, 1793, 342, -1000, -1000,
	-1000, 128, -46, -1000, 1007, 458, 2142, 170, 170, 851,
	-1000, 848, 828, 812, -1000, -1000, -1000, 1841, 1331, -1000,
	-1000, 2142, 2142, 404, 121, 120, 119, 118, 117, 402,
	376, 366, 989, 658, -1000, -1000, -1000, 458, 458, 111,
	-56, 2142, 109, 658, 2142, 987, 364, 985, 1027, 1027,
	2142, 984, 1027, -1000, -1000, 3113, 588, 2142, 482, 466,
	3113, 3113, 100, 979, -1000, 685, 3260, 94, 2634, -1000,
	-1000, 102, 1298, -1000, 920, -1000, -1000, -1000, -1000, -1000,
	959, 788, 458, -1000, -1000, 2835, 868, 1083, 170, 170,
	170, 826, 2142, 658, 2835, -1000, 238, 399, 398, 397,
	394, 367, 231, 230, 341, 229, 335, 741, -1000, -1000,
	-1000, 990, 658, 2835, -1000, -1000, -55, 2835, 741, 3158,
	358, -1000, -1000, -1000, 943, 2835, 356, 87, 567, 465,
	3113, 2599, 660, 659, 464, 460, -1000, 224, -1000, 667,
	-1000, -1000, 2142, 219, -1000, -1000, -1000, 102, -1000, -1000,
	-1000, 2142, 215, 1083, 1025, 868, 170, -44, 2583, -21,
	406, 214, 213, 210, 208, 207, 406, 406, 387, 406,
	379, -1000, -1000, -1000, -1000, 459, 307, -1000, -1000, 2224,
	2142, -1000, -1000, 2142, 2142, 3158, 3158, 978, 457, 580,
	3113, 2142, 707, -1000, 3113, -1000, -1000, 654, 651, 741,
	-1000, 2499, 927, -1000, 2835, 658, -1000, 2142, 868, -1000,
	-1000, -1000, 2142, 80, -1000, 929, 908, 406, 406, 406,
	406, 406, 79, 927, 78, 200, 77, 171, -1000, 3158,
	2549, 616, 72, 17, 776, 2835, 445, 442, 355, 683,
	438, -1000, 2539, -1000, 624, -1000, -1000, 70, -1000, 54,
	46, 2835, 45, -1000, -1000, 902, 2142, 42, 39, 38,
	37, 34, -1000, -1000, 406, -1000, 406, -1000, 3158, 574,
	2142, 3000, 658, 658, -1000, -1000, 3158, -1000, 681, 3113,
	-1000, -1000, -1000, -1000, -1000, 1793, -1000, -1000, -1000, -1000,
	-1000, -1000, 27, -41, 566, 437, 3158, 2489, 436, 40,
	-1000, -1000, 2224, 2142, -1000, -1000, -1000, 535, 530, 434,
	-1000, 665, 333, -1000, -1000, 431, 571, 3158, 2142, 703,
	-1000, 3158, 648, 3000, 2455, 614, 3000, 3000, -1000, -1000,
	-1000, 896, 678, 429, -1000, 2445, -1000, 616, -1000, -1000,
	3000, 565, 2142, 428, 427, -1000, 898, 724, 722, 712,
	-1000, 676, 3158, -1000, 529, 426, 3000, 2405, 647, 645,
	760, 721, -1000, 717, 711, -1000, -1000, -1000, -1000, 664,
	425, 446, 3000, 2142, 702, -1000, 3000, -1000, -1000, 873,
	-1000, -1000, -1000, -1000, -1000, 674, 424, -1000, 2395, -1000,
	614, -1000, 718, -1000, -1000, 669, 3000, -1000, -1000, -1000,
	656, -1000,
}
var yyPgo = [...]int{

	0, 72, 40, 168, 11, 156, 78, 1150, 61, 1149,
	58, 1147, 1146, 1145, 1143, 34, 6, 1142, 1141, 1130,
	1129, 1128, 1126, 51, 27, 25, 1125, 1120, 39, 1119,
	1117, 54, 31, 1116, 1115, 1114, 1113, 1110, 1029, 80,
	73, 1108, 50, 42, 1107, 1106, 23, 1105, 48, 1104,
	1017, 1103, 66, 1101, 65, 64, 76, 521, 46, 36,
	26, 17, 1100, 1099, 1098, 1097, 1390, 1095, 63, 1094,
	1085, 1075, 95, 732, 1071, 1070, 16, 44, 22, 15,
	1069, 1068, 2, 1066, 1065, 77, 74, 52, 1064, 71,
	1062, 19, 1061, 1060, 1057, 8, 30, 1055, 28, 14,
	49, 18, 60, 1054, 1053, 1049, 35, 1047, 24, 55,
	5, 20, 10, 12, 9, 4, 56, 1046, 13, 1045,
	7, 1044, 3, 1042, 0, 695, 21, 406, 1041, 68,
	83, 67, 57, 45, 47, 70, 1040, 37, 727,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 23, 23, 24, 24, 25,
	25, 25, 25, 25, 26, 26, 26, 26, 26, 27,
	27, 27, 27, 28, 29, 29, 30, 31, 31, 32,
	32, 32, 33, 33, 33, 33, 33, 34, 34, 34,
	34, 34, 34, 34, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 37,
	37, 37, 38, 39, 39, 39, 39, 40, 40, 41,
	42, 42, 43, 43, 44, 44, 45, 45, 46, 46,
	47, 47, 47, 48, 48, 49, 49, 50, 50, 51,
	51, 52, 52, 53, 53, 53, 53, 53, 53, 54,
	55, 56, 56, 56, 56, 56, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	58, 59, 59, 59, 60, 60, 61, 61, 62, 62,
	63, 63, 64, 64, 64, 65, 65, 66, 67, 68,
	68, 68, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 70, 70, 70, 70, 70, 70, 70, 71, 71,
	71, 71, 72, 72, 73, 73, 73, 73, 74, 74,
	74, 74, 74, 75, 75, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 77, 78, 78, 79,
	79, 80, 80, 81, 81, 81, 82, 82, 82, 83,
	83, 84, 84, 85, 85, 86, 86, 86, 88, 88,
	88, 88, 88, 89, 89, 89, 89, 89, 89, 89,
	90, 90, 90, 90, 90, 90, 91, 91, 92, 92,
	93, 93, 93, 94, 95, 95, 96, 96, 97, 97,
	98, 98, 99, 99, 100, 100, 87, 87, 101, 101,
	102, 102, 103, 103, 103, 103, 104, 105, 106, 106,
	107, 107, 108, 108, 109, 109, 110, 110, 111, 111,
	112, 112, 113, 113, 114, 114, 115, 115, 116, 116,
	117, 117, 118, 118, 119, 119, 120, 120, 121, 121,
	122, 122, 123, 123, 124, 124, 124, 124, 125, 126,
	126, 127, 128, 128, 129, 129, 130, 130, 131, 131,
	132, 132, 133, 133, 134, 134, 135, 135, 136, 136,
	137, 137, 138, 138,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 7, 7, 1, 3, 1, 3, 0,
	1, 1, 2, 2, 5, 2, 2, 3, 5, 6,
	8, 5, 3, 1, 1, 3, 3, 1, 3, 1,
	1, 3, 9, 10, 10, 12, 3, 0, 1, 1,
	1, 1, 2, 2, 5, 6, 3, 4, 4, 2,
	2, 2, 4, 2, 2, 2, 4, 2, 4, 2,
	3, 4, 5, 5, 4, 4, 4, 1, 1, 3,
	0, 2, 0, 2, 0, 3, 0, 2, 0, 3,
	0, 3, 4, 0, 2, 0, 2, 0, 2, 6,
	9, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 6, 1, 3, 1, 3, 2, 4,
	1, 1, 0, 1, 1, 1, 1, 3, 3, 3,
	1, 6, 3, 3, 3, 3, 4, 4, 5, 6,
	6, 3, 4, 4, 3, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 3, 3, 2, 2, 3, 3,
	2, 2, 0, 1, 4, 3, 4, 4, 5, 5,
	5, 5, 1, 5, 10, 8, 9, 9, 9, 9,
	9, 8, 8, 10, 8, 10, 2, 1, 5, 0,
	3, 2, 5, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 1, 1, 1, 1, 2, 3, 1, 6,
	6, 6, 8, 1, 1, 2, 3, 1, 1, 3,
	4, 5, 6, 7, 5, 6, 2, 4, 1, 1,
	1, 3, 1, 5, 0, 1, 4, 5, 0, 2,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	5, 6, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 1, 1, 1, 1, 1, 1,
	3, 3, 1, 3, 1, 3, 0, 1, 0, 1,
	0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
	0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -103, -104, -107, -73,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -124, 127, 26, 29, 119, 89, -127,
	95, 93, 94, 92, 103, 104, 16, 120, 108, 109,
	110, 111, 112, 83, 107, 73, 4, 121, 122, 123,
	-125, 11, 138, -57, 144, -56, -53, -70, -67, -66,
	-73, -74, -94, -69, -71, -125, -127, -35, -124, 24,
	5, 6, 7, -54, 10, -55, 141, 142, 81, 128,
	126, -75, 80, -59, 63, 67, 143, 90, 9, 71,
	129, 124, -95, -57, 144, -39, 19, 15, 17, -41,
	-40, 13, -66, 144, 144, 144, 30, 30, -129, -128,
	-125, -129, -124, -125, 90, 38, 113, -124, -124, -34,
	96, 97, 31, 32, 98, 99, 12, 12, -124, -57,
	-57, -124, -57, -57, -124, -57, -125, -126, -9, 119,
	89, 6, -52, -51, -136, 25, 135, -1, 85, 134,
	133, 140, 70, 68, 67, 64, 69, -138, 142, 141,
	139, 146, 147, 66, 65, -57, -99, -38, -72, -50,
	149, 144, 149, -57, -57, 144, 144, 144, -95, 133,
	140, -131, -138, 67, -66, -57, -57, -124, 144, 144,
	-116, 84, -99, -46, 39, 20, -87, -85, -124, 24,
	14, -87, -42, 14, 58, 59, 60, -130, 72, -72,
	-99, -57, 145, -102, -93, -92, -58, -57, -76, 139,
	-124, 128, 126, 129, 130, 131, 132, -124, -85, 148,
	135, 90, 38, 113, 114, -124, -124, -124, -124, -57,
	-57, 140, 14, 148, 56, -57, 6, 87, 64, 148,
	64, -125, -126, 148, -124, -57, -1, -57, -57, -57,
	-131, -57, 68, 64, 69, -59, 144, -66, -57, 62,
	61, -57, -57, -57, -57, -57, -57, -57, 145, 148,
	145, 145, 145, -124, 6, -130, -124, 6, -130, -130,
	-96, 84, -59, -59, 68, 64, 62, 61, 70, 126,
	-130, -57, -117, 86, -57, -47, 45, 42, -86, -85,
	16, 148, -100, -89, -86, -88, -90, 23, 144, -66,
	125, -124, 14, -43, 18, -100, -135, 61, -135, -135,
	-102, 145, 145, 148, 22, 144, 144, 144, 144, 144,
	144, 144, 144, -137, 22, 27, 28, 36, 16, -129,
	-57, 91, 144, 22, 144, 144, 20, -124, -57, -124,
	-99, -99, -57, -2, -12, -5, -13, 81, 80, -8,
	-10, -6, 105, 106, -124, -126, -125, -124, 64, 64,
	-52, 22, 144, -109, -108, 86, 82, -54, -55, 65,
	-57, -59, -57, -59, -59, -99, -72, -72, -72, -58,
	-97, 86, -57, -59, -68, 144, -66, 124, -68, -68,
	-131, -72, 148, 88, -1, 85, -49, 46, -57, -61,
	-62, -63, -57, -76, 21, 144, -38, -124, 22, -106,
	-105, -56, -124, -87, -43, 54, -132, -134, 53, 57,
	148, 49, 51, 52, -124, 22, -89, 144, 144, -100,
	-44, 40, -57, -40, -39, -40, -40, -102, -124, -72,
	-130, -130, -130, -130, -72, -72, -72, -101, -124, -38,
	-23, 144, -124, -56, 144, -56, -124, -38, -101, -38,
	145, -32, -29, -31, -28, -30, -125, -124, -126, 88,
	138, -57, -95, 87, 87, -124, -124, 144, -101, 88,
	-109, -1, -57, -57, 65, 145, 145, 145, 145, 88,
	-57, 85, 65, -60, -59, 144, 93, 64, 145, -57,
	80, -1, -57, -48, 47, 73, 148, -64, 43, 44,
	-60, -98, -56, -124, -42, 148, 140, 48, 48, -133,
	50, -133, -132, -134, -100, -124, 145, -57, -57, -43,
	-45, 41, 42, 145, -72, -72, -72, -58, -72, 145,
	145, 145, 145, 148, -25, 31, 32, 33, 34, -24,
	-23, 35, -98, 37, 37, 145, 22, 145, 148, 148,
	35, 145, 148, 83, -2, 85, -118, 84, -2, -2,
	87, 87, -38, 145, 81, 88, 85, -57, -57, -59,
	145, 148, -57, 74, 118, 145, -116, -48, 121, -61,
	122, 145, 148, -43, -106, -57, -89, -89, 48, 48,
	48, -133, 148, 148, -57, -99, 102, 145, 145, 145,
	145, 145, 102, 102, 117, 102, 117, -137, -101, -56,
	-56, 145, 148, -57, 145, -124, -124, -57, 22, 115,
	22, -28, -31, -31, -125, -57, 22, -32, -2, -119,
	86, -57, 88, 88, -2, -2, 145, 22, 81, -1,
	-96, -60, 148, 40, -65, 31, 32, 21, -38, -98,
	-91, 55, 56, -89, -89, -89, 48, -124, -57, -124,
	144, 102, 102, 102, 102, 102, 144, 144, 122, 144,
	122, -38, -25, -24, -38, -3, -14, -5, -18, 81,
	80, -15, -16, 83, 116, 115, 115, 145, -111, -110,
	86, 82, 88, -2, 85, 83, 83, 88, 88, 144,
	-108, -57, 144, -60, -57, 144, -91, 55, -89, 145,
	145, 145, 148, -78, -77, -79, 101, 144, 144, 144,
	144, 144, -77, -79, -78, 102, -77, 102, 88, 138,
	-57, -95, -57, -125, -126, -57, -3, -3, 22, 88,
	-111, -2, -57, 80, -2, 83, 83, -38, 145, -46,
	-101, -57, -72, 145, -46, 39, 42, -78, -78, -78,
	-78, -77, 145, 145, 144, 145, 144, -3, 85, -120,
	84, 87, 64, 64, 88, 88, 115, 81, 88, 85,
	-118, 145, 145, 145, 145, 42, -99, 145, 145, 145,
	145, 145, -78, -77, -3, -121, 86, -57, -4, -17,
	-5, -19, 81, 80, -15, -16, -6, -124, -124, -3,
	81, -2, -61, 145, 145, -113, -112, 86, 82, 88,
	-3, 85, 88, 138, -57, -95, 87, 87, 88, -110,
	-80, 123, 88, -113, -3, -57, 80, -3, 83, -4,
	85, -122, 84, -4, -4, -81, 68, 75, 6, 78,
	81, 88, 85, -120, -4, -123, 86, -57, 88, 88,
	-83, 75, -82, 6, 78, 76, 76, 79, 81, -3,
	-115, -114, 86, 82, 88, -4, 85, 83, 83, 65,
	76, 76, 77, 79, -112, 88, -115, -4, -57, 80,
	-4, -84, 75, -82, 81, 88, 85, -122, 77, 81,
	-4, -114,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 324,
	41, 42, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 117, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 34, 408, 384, 385, 386, 387,
	0, 388, -2, 0, -2, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 181, 0,
	173, 174, 175, 176, 177, 178, 0, 0, 0, 0,
	0, 262, 324, 398, 0, 0, 0, 0, 179, 180,
	0, 0, 0, 325, 167, -2, 0, 0, 0, 150,
	0, 396, 148, 167, 252, 0, 0, 0, 69, 394,
	392, 70, 0, 72, 0, 0, 0, 95, 96, 0,
	118, 119, 120, 121, 0, 0, 0, 129, 137, 130,
	131, -2, 134, 135, 139, 0, 196, 0, 0, 32,
	33, 35, 168, 171, 0, 409, 0, 3, -2, 0,
	412, 413, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 246, 247, 252, 396, 396, 0, 412,
	413, 0, 0, 399, 240, 250, 251, 0, 396, 0,
	370, 0, 0, 160, 0, 0, 0, 336, 293, 294,
	0, 0, 152, 0, 406, 406, 406, 0, 397, 0,
	253, 332, 255, 0, 340, 320, 322, 318, 319, 200,
	181, 0, 0, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 0, 97, 102, 116, 0, 122,
	123, 0, 0, 0, 0, 140, 174, -2, 0, 0,
	0, 0, 0, 408, 0, 391, 354, 218, -2, -2,
	0, 0, 0, 0, 0, 231, 167, 202, -2, 0,
	0, 241, 242, 243, 244, 245, 248, 249, 199, 0,
	201, 217, 257, 182, 184, 252, 183, 185, 252, 252,
	328, 0, 223, 225, 0, 0, 0, 0, 398, 126,
	252, 0, 0, -2, 0, 165, 0, 0, 167, 295,
	0, 0, 152, -2, 303, 304, 307, 308, 167, 298,
	0, 293, 0, 154, 0, 151, 0, 407, 0, 0,
	149, 254, 256, 0, 0, 252, 396, 396, 396, 252,
	252, 252, 0, 167, 411, 0, 0, 0, 0, 395,
	393, 167, 0, 167, 0, 0, 0, -2, 128, 138,
	132, 136, 141, 0, 0, 36, 37, 0, 324, 46,
	47, 48, 23, 24, 0, 390, 389, 0, 0, 0,
	172, 0, 0, 0, 354, -2, 0, 226, 227, 0,
	0, 232, -2, 236, 238, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 167, 220, 0, 237, 239,
	0, 0, 0, 0, 371, -2, 142, 0, 163, 159,
	206, 212, 210, 211, 0, 0, 344, 296, 0, 150,
	348, 0, 181, 337, 350, 0, 0, 402, 402, 400,
	0, 401, 404, 405, 305, 0, 400, 0, 0, 152,
	156, 0, 153, 144, 147, 145, 146, 341, 321, 0,
	252, 252, 252, 252, 0, 0, 0, 0, 338, 77,
	89, 0, 85, 80, 0, 0, 0, 94, 0, 101,
	0, 0, 109, 110, 104, 107, 103, 0, 98, 0,
	-2, 0, 0, -2, -2, 0, 0, 167, 0, 0,
	0, 355, 0, 228, 0, 258, 259, 260, 261, 323,
	329, 0, 0, 0, 204, 0, 124, 0, 263, 0,
	40, 368, 166, 161, 163, 0, 0, 208, 213, 214,
	342, 0, 330, 297, 152, 0, 0, 0, 0, 0,
	403, 0, 0, 402, 335, 306, 309, 0, 0, 351,
	143, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 78, 90, 91, 0, 0, 0,
	87, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 27, 5, -2, 374, 0, 0, 0,
	-2, -2, 0, 0, 38, 0, -2, 229, 326, 230,
	219, 0, 0, 125, 0, 203, 369, 162, 164, 207,
	0, 167, 0, 346, 349, 347, 310, 400, 0, 0,
	0, 0, 0, 0, 157, 155, 0, 258, 259, 260,
	261, 263, 0, 0, 0, 0, 0, 167, 339, 92,
	93, 89, 0, 86, 81, 82, -2, 84, 167, -2,
	0, 105, 111, 108, 0, 106, 0, 0, 358, 0,
	-2, 0, 0, 0, 0, 0, 169, 0, 39, 352,
	327, 205, 0, 0, 209, 215, 216, 0, 345, 331,
	311, 0, 0, 400, 400, 314, 0, 181, 0, 0,
	279, 0, 0, 0, 0, 0, 279, 279, 0, 279,
	0, 76, 79, 88, 100, 0, 0, 49, 50, 0,
	324, 61, 62, 0, 54, -2, -2, 0, 0, 358,
	-2, 0, 0, 375, -2, 28, 29, 0, 0, 167,
	353, 0, 158, 343, 316, 0, 312, 0, 315, 299,
	300, 301, 252, 0, 277, 158, 0, 279, 279, 279,
	279, 279, 0, 158, 0, 0, 0, 0, 112, -2,
	0, 0, 0, 196, 0, 55, 0, 0, 0, 0,
	0, 359, 0, 45, 372, 30, 31, 0, 221, 0,
	0, 313, 0, 265, 276, 0, 0, 0, 0, 0,
	0, 0, 271, 272, 279, 274, 279, 7, -2, 378,
	0, -2, 0, 0, 113, 114, -2, 43, 0, -2,
	373, 170, 264, 317, 302, 0, 280, 266, 267, 268,
	269, 270, 0, 0, 362, 0, -2, 0, 0, 0,
	56, 57, 0, 324, 66, 67, 68, 0, 0, 0,
	44, 356, 159, 273, 275, 0, 362, -2, 0, 0,
	379, -2, 0, -2, 0, 0, -2, -2, 115, 357,
	278, 0, 0, 0, 363, 0, 60, 376, 51, 9,
	-2, 382, 0, 0, 0, 281, 0, 0, 0, 0,
	58, 0, -2, 377, 366, 0, -2, 0, 0, 0,
	0, 0, 290, 0, 0, 283, 284, 285, 59, 360,
	0, 366, -2, 0, 0, 383, -2, 52, 53, 0,
	289, 286, 287, 288, 361, 0, 0, 367, 0, 65,
	380, 282, 0, 292, 63, 0, -2, 381, 291, 64,
	364, 365,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 143, 3, 3, 3, 147, 3, 3,
	144, 145, 139, 142, 148, 141, 149, 146, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 138,
	3, 140,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:221
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:231
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:238
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:242
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:248
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:252
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:258
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:262
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:268
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:272
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:276
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:280
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:284
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:288
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:322
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:326
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:336
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:346
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:350
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:354
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:358
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:364
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:368
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:374
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:378
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:384
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:388
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:398
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:402
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:406
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:410
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:416
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:420
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:432
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:436
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:442
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:446
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:452
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:456
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:460
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:466
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:470
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:476
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:480
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:490
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:494
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:498
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:502
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:512
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:516
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:520
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:524
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:538
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:542
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:546
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:552
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:556
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:562
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:566
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:570
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:574
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:578
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:582
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:586
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:590
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:594
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:598
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:604
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:608
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:614
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:618
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:624
		{
			yyVAL.expression = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:628
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:632
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:636
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:640
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:646
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:650
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:654
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:658
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:662
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 99:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:668
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:672
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:676
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:680
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:686
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:692
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:696
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:702
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:708
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:712
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:718
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:722
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:726
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 112:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:732
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 113:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:736
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 114:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:740
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 115:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:744
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:748
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:754
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:758
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:762
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:766
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:770
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:774
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:778
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:784
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 125:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:788
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:792
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:798
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:802
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:806
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:810
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:814
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:818
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:822
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:826
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:830
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:834
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:838
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:842
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:848
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:852
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:856
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:862
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:874
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:884
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:893
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:902
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:913
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:917
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:923
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:929
		{
			yyVAL.queryexpr = nil
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:933
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:939
		{
			yyVAL.queryexpr = nil
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:943
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:949
		{
			yyVAL.queryexpr = nil
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:953
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:959
		{
			yyVAL.queryexpr = nil
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:963
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:969
		{
			yyVAL.queryexpr = nil
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:973
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:979
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:983
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:987
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:993
		{
			yyVAL.queryexpr = nil
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:997
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1003
		{
			yyVAL.queryexpr = nil
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1007
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1013
		{
			yyVAL.queryexpr = nil
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1017
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1023
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 170:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1027
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1033
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1037
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1043
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1047
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1051
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1055
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1059
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1063
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1069
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1075
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1081
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1085
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1089
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1093
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1097
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1103
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1107
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1111
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1115
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1119
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1123
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1127
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1135
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1139
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1147
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1151
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1155
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1161
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1171
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1175
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1181
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1185
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1191
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1195
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1201
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1205
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1211
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1215
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1221
		{
			yyVAL.token = Token{}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1225
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1229
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1235
		{
			yyVAL.token = yyDollar[1].token
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1239
		{
			yyVAL.token = yyDollar[1].token
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1245
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1251
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1278
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1282
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1288
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1292
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1296
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1300
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1304
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1308
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1312
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 229:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1316
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1320
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1324
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1328
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1332
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1336
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1340
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1344
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1348
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1352
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1356
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1360
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1370
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1374
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1378
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1390
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1400
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1404
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1408
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1414
		{
			yyVAL.queryexprs = nil
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1418
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1424
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1428
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1447
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1459
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 264:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 268:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 269:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 270:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 271:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 272:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1503
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 273:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1507
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 274:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1511
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 275:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1515
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1521
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1531
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = nil
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1552
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1562
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1567
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1573
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1578
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1583
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1589
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1593
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1599
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1603
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1609
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1613
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1619
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1623
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1627
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1633
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1637
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1641
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1645
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1649
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1655
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1659
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1663
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1667
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1671
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1675
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1679
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1685
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1689
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1693
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1697
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1701
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 315:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1705
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1711
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1715
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1721
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1725
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1731
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1735
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1739
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1745
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1751
		{
			yyVAL.queryexpr = nil
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1755
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1761
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1765
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1771
		{
			yyVAL.queryexpr = nil
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1775
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1781
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1785
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1791
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1795
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1801
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1805
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1811
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1815
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1821
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1825
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1831
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1835
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1841
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 343:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1845
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1849
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 345:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1853
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 346:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1859
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1865
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1871
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1875
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1881
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 351:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1886
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1897
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1903
		{
			yyVAL.elseexpr = Else{}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1907
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1913
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1917
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1923
		{
			yyVAL.elseexpr = Else{}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1927
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1933
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1937
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1943
		{
			yyVAL.elseexpr = Else{}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1947
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1953
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1957
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.elseexpr = Else{}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1967
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1973
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1977
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1983
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1987
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1993
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1997
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2003
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2007
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2013
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2017
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2023
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2027
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2033
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2037
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2043
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2047
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2053
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2057
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2061
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2065
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2071
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2077
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2081
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2087
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2093
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2097
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2103
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2107
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2113
		{
			yyVAL.token = Token{}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2117
		{
			yyVAL.token = yyDollar[1].token
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2123
		{
			yyVAL.token = Token{}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2127
		{
			yyVAL.token = yyDollar[1].token
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2133
		{
			yyVAL.token = Token{}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2137
		{
			yyVAL.token = yyDollar[1].token
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2143
		{
			yyVAL.token = Token{}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2147
		{
			yyVAL.token = yyDollar[1].token
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2153
		{
			yyVAL.token = yyDollar[1].token
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2157
		{
			yyVAL.token = yyDollar[1].token
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2163
		{
			yyVAL.token = Token{}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2167
		{
			yyVAL.token = yyDollar[1].token
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2173
		{
			yyVAL.token = Token{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2177
		{
			yyVAL.token = yyDollar[1].token
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2183
		{
			yyVAL.token = Token{}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2187
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2193
		{
			yyVAL.token = yyDollar[1].token
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2197
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
