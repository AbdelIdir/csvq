// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const TRIGGER = 57453
const FUNCTION = 57454
const AGGREGATE = 57455
const BEGIN = 57456
const RETURN = 57457
const IGNORE = 57458
const WITHIN = 57459
const VAR = 57460
const SHOW = 57461
const TIES = 57462
const NULLS = 57463
const ROWS = 57464
const ERROR = 57465
const JSON_ROW = 57466
const JSON_TABLE = 57467
const COUNT = 57468
const JSON_OBJECT = 57469
const AGGREGATE_FUNCTION = 57470
const LIST_FUNCTION = 57471
const ANALYTIC_FUNCTION = 57472
const FUNCTION_NTH = 57473
const FUNCTION_WITH_INS = 57474
const COMPARISON_OP = 57475
const STRING_OP = 57476
const SUBSTITUTION_OP = 57477
const UMINUS = 57478
const UPLUS = 57479

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ERROR",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2215

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 165,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 55,
	13, 165,
	15, 165,
	17, 165,
	19, 165,
	144, 165,
	-2, 1,
	-1, 57,
	145, 250,
	-2, 165,
	-1, 98,
	58, 145,
	59, 145,
	60, 145,
	-2, 156,
	-1, 135,
	1, 133,
	82, 133,
	84, 133,
	86, 133,
	88, 133,
	138, 133,
	-2, 179,
	-1, 151,
	82, 1,
	86, 1,
	88, 1,
	-2, 165,
	-1, 249,
	88, 4,
	-2, 165,
	-1, 260,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 220,
	-1, 261,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 222,
	-1, 271,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 232,
	-1, 306,
	88, 1,
	-2, 165,
	-1, 316,
	48, 403,
	-2, 332,
	-1, 360,
	1, 127,
	82, 127,
	84, 127,
	86, 127,
	88, 127,
	138, 127,
	-2, 179,
	-1, 387,
	88, 1,
	-2, 165,
	-1, 394,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 233,
	-1, 417,
	84, 1,
	86, 1,
	88, 1,
	-2, 165,
	-1, 492,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 495,
	88, 4,
	-2, 165,
	-1, 496,
	88, 4,
	-2, 165,
	-1, 564,
	13, 413,
	73, 413,
	144, 413,
	-2, 75,
	-1, 587,
	82, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 592,
	88, 4,
	-2, 165,
	-1, 593,
	88, 4,
	-2, 165,
	-1, 598,
	82, 1,
	86, 1,
	88, 1,
	-2, 165,
	-1, 648,
	1, 83,
	82, 83,
	84, 83,
	86, 83,
	88, 83,
	138, 83,
	-2, 179,
	-1, 651,
	88, 6,
	-2, 165,
	-1, 662,
	88, 4,
	-2, 165,
	-1, 717,
	88, 6,
	-2, 165,
	-1, 718,
	88, 6,
	-2, 165,
	-1, 722,
	88, 4,
	-2, 165,
	-1, 726,
	84, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 761,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 800,
	82, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 803,
	88, 8,
	-2, 165,
	-1, 808,
	88, 6,
	-2, 165,
	-1, 811,
	82, 4,
	86, 4,
	88, 4,
	-2, 165,
	-1, 828,
	88, 6,
	-2, 165,
	-1, 849,
	88, 6,
	-2, 165,
	-1, 853,
	84, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 855,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 165,
	-1, 858,
	88, 8,
	-2, 165,
	-1, 859,
	88, 8,
	-2, 165,
	-1, 872,
	82, 8,
	86, 8,
	88, 8,
	-2, 165,
	-1, 884,
	82, 6,
	86, 6,
	88, 6,
	-2, 165,
	-1, 888,
	88, 8,
	-2, 165,
	-1, 904,
	88, 8,
	-2, 165,
	-1, 908,
	84, 8,
	86, 8,
	88, 8,
	-2, 165,
	-1, 928,
	82, 8,
	86, 8,
	88, 8,
	-2, 165,
}

const yyPrivate = 57344

const yyLast = 3253

var yyAct = [...]int{

	71, 23, 894, 873, 902, 848, 714, 903, 847, 721,
	801, 588, 365, 95, 221, 469, 786, 140, 421, 682,
	745, 720, 747, 386, 571, 213, 533, 830, 293, 115,
	486, 86, 121, 122, 566, 483, 346, 541, 132, 439,
	431, 135, 746, 193, 438, 525, 219, 326, 315, 515,
	485, 316, 171, 205, 385, 216, 23, 372, 21, 572,
	312, 199, 145, 210, 78, 184, 111, 76, 406, 329,
	174, 317, 371, 20, 456, 173, 338, 103, 173, 58,
	1, 173, 443, 169, 444, 445, 440, 437, 175, 707,
	441, 190, 644, 174, 741, 114, 614, 98, 173, 181,
	743, 201, 201, 744, 583, 603, 581, 584, 380, 223,
	230, 201, 580, 21, 804, 196, 69, 29, 250, 238,
	239, 240, 152, 195, 241, 163, 565, 163, 20, 162,
	161, 537, 164, 165, 164, 165, 150, 163, 528, 162,
	161, 45, 251, 336, 164, 165, 54, 314, 256, 255,
	232, 426, 23, 713, 44, 846, 845, 823, 822, 254,
	212, 200, 200, 204, 373, 821, 820, 819, 816, 815,
	814, 231, 29, 813, 286, 443, 289, 444, 445, 440,
	437, 442, 797, 441, 795, 149, 794, 785, 270, 149,
	267, 719, 251, 668, 646, 383, 643, 633, 251, 201,
	632, 631, 251, 44, 324, 270, 630, 324, 268, 21,
	629, 223, 613, 158, 295, 296, 157, 156, 159, 155,
	602, 262, 595, 579, 20, 268, 356, 212, 577, 104,
	564, 100, 258, 101, 563, 99, 562, 561, 288, 555,
	521, 510, 509, 291, 292, 360, 362, 98, 508, 507,
	23, 376, 104, 379, 335, 328, 304, 46, 47, 48,
	52, 49, 50, 51, 116, 409, 333, 347, 29, 377,
	311, 548, 363, 334, 427, 233, 283, 285, 331, 332,
	482, 473, 153, 152, 284, 407, 798, 796, 163, 154,
	162, 161, 753, 538, 195, 164, 165, 393, 752, 352,
	751, 750, 749, 737, 395, 396, 734, 23, 397, 731,
	701, 223, 699, 429, 434, 201, 698, 384, 382, 446,
	692, 517, 324, 499, 450, 425, 324, 390, 449, 405,
	389, 191, 358, 357, 344, 343, 342, 223, 460, 401,
	341, 398, 340, 339, 399, 400, 470, 192, 355, 474,
	434, 434, 478, 106, 180, 179, 470, 414, 178, 489,
	106, 108, 107, 436, 21, 244, 29, 412, 410, 411,
	855, 480, 761, 448, 451, 200, 435, 490, 186, 20,
	492, 497, 498, 106, 494, 470, 55, 416, 23, 345,
	149, 461, 459, 433, 301, 466, 467, 468, 137, 863,
	500, 702, 462, 463, 464, 465, 700, 455, 472, 457,
	458, 612, 610, 607, 235, 808, 718, 717, 23, 697,
	651, 637, 635, 29, 759, 757, 748, 54, 434, 475,
	477, 535, 45, 696, 607, 638, 636, 695, 694, 516,
	693, 502, 203, 324, 182, 21, 634, 628, 547, 354,
	302, 183, 202, 519, 119, 927, 63, 9, 516, 917,
	20, 906, 891, 890, 904, 883, 234, 864, 503, 860,
	854, 851, 810, 807, 474, 21, 532, 434, 543, 806,
	771, 545, 518, 760, 730, 536, 544, 729, 236, 237,
	20, 546, 724, 23, 665, 664, 23, 23, 523, 551,
	597, 511, 501, 574, 29, 586, 118, 534, 590, 591,
	491, 559, 9, 415, 859, 556, 557, 558, 560, 858,
	158, 167, 166, 157, 156, 159, 155, 905, 120, 223,
	593, 904, 850, 723, 29, 592, 849, 722, 434, 496,
	324, 324, 495, 425, 888, 849, 601, 611, 46, 47,
	48, 52, 49, 50, 51, 116, 534, 388, 828, 722,
	662, 387, 367, 3, 160, 387, 470, 608, 403, 306,
	434, 434, 609, 874, 802, 589, 647, 648, 616, 194,
	627, 640, 294, 623, 615, 910, 909, 870, 23, 153,
	152, 618, 619, 23, 23, 163, 154, 162, 161, 23,
	660, 639, 164, 165, 674, 666, 667, 778, 9, 29,
	777, 653, 29, 29, 728, 434, 727, 433, 3, 585,
	659, 324, 324, 324, 905, 689, 691, 214, 850, 672,
	723, 654, 655, 126, 127, 516, 388, 931, 926, 900,
	882, 681, 842, 809, 670, 474, 56, 96, 596, 641,
	642, 185, 23, 673, 921, 868, 21, 775, 522, 895,
	915, 899, 930, 23, 912, 895, 133, 134, 136, 705,
	138, 20, 685, 686, 687, 725, 913, 914, 704, 671,
	880, 898, 897, 605, 44, 168, 527, 211, 92, 324,
	186, 911, 265, 679, 534, 732, 264, 266, 124, 125,
	128, 129, 514, 805, 29, 738, 9, 176, 177, 29,
	29, 516, 381, 96, 3, 29, 188, 189, 23, 23,
	756, 755, 252, 23, 755, 168, 763, 23, 924, 735,
	330, 896, 208, 766, 893, 773, 220, 896, 470, 776,
	740, 754, 878, 772, 758, 44, 300, 299, 688, 879,
	93, 781, 881, 782, 298, 542, 242, 243, 297, 273,
	272, 622, 23, 9, 443, 247, 444, 445, 29, 621,
	789, 790, 791, 792, 620, 540, 755, 257, 539, 29,
	259, 260, 261, 419, 263, 530, 531, 271, 812, 274,
	275, 276, 277, 278, 279, 280, 793, 784, 207, 208,
	209, 23, 68, 53, 23, 839, 840, 768, 769, 23,
	837, 309, 23, 817, 818, 788, 554, 824, 223, 303,
	310, 755, 307, 553, 843, 675, 453, 197, 787, 23,
	113, 113, 425, 117, 29, 29, 844, 576, 220, 29,
	575, 825, 582, 29, 9, 139, 573, 677, 678, 857,
	23, 799, 110, 861, 23, 109, 23, 865, 53, 23,
	23, 353, 837, 148, 770, 837, 837, 669, 658, 3,
	652, 650, 361, 23, 9, 22, 364, 347, 29, 837,
	885, 578, 337, 871, 359, 23, 875, 876, 198, 23,
	826, 327, 392, 313, 394, 837, 206, 325, 841, 130,
	886, 351, 245, 54, 144, 23, 147, 916, 918, 23,
	112, 837, 348, 349, 925, 837, 907, 29, 852, 887,
	29, 350, 404, 827, 661, 29, 929, 305, 29, 23,
	8, 432, 919, 172, 7, 837, 922, 420, 424, 866,
	933, 6, 402, 869, 253, 29, 65, 217, 218, 9,
	3, 319, 9, 9, 53, 454, 932, 836, 567, 568,
	569, 570, 318, 923, 220, 892, 29, 877, 838, 862,
	29, 84, 29, 172, 901, 29, 29, 64, 67, 60,
	3, 5, 172, 66, 61, 676, 529, 423, 422, 29,
	59, 146, 418, 308, 45, 552, 452, 493, 96, 102,
	17, 29, 16, 70, 123, 29, 14, 487, 484, 836,
	13, 12, 836, 836, 72, 10, 504, 15, 11, 505,
	838, 29, 833, 838, 838, 29, 836, 710, 831, 708,
	368, 512, 366, 4, 141, 113, 2, 838, 0, 170,
	0, 520, 836, 0, 9, 29, 0, 524, 0, 9,
	9, 0, 53, 838, 378, 9, 0, 0, 836, 0,
	158, 167, 836, 157, 156, 159, 155, 0, 0, 838,
	0, 0, 0, 838, 0, 0, 0, 549, 550, 170,
	0, 443, 836, 444, 445, 440, 437, 739, 170, 441,
	0, 0, 0, 838, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 0, 0, 0, 0, 9, 53,
	46, 47, 48, 52, 49, 50, 51, 116, 0, 9,
	0, 0, 0, 0, 0, 0, 45, 0, 0, 153,
	152, 0, 0, 0, 599, 163, 154, 162, 161, 0,
	0, 600, 164, 165, 172, 604, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 424, 0, 0, 0,
	488, 3, 378, 153, 152, 0, 617, 0, 0, 163,
	154, 162, 161, 447, 9, 9, 164, 165, 625, 9,
	0, 626, 0, 9, 0, 0, 0, 172, 0, 0,
	53, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 645, 0, 0, 649, 0, 0, 0, 0, 0,
	657, 0, 0, 0, 709, 0, 0, 663, 9, 0,
	53, 443, 172, 444, 445, 440, 437, 683, 684, 441,
	172, 0, 172, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 46, 47, 48, 52, 49, 50, 51, 116,
	170, 0, 690, 0, 0, 320, 202, 9, 0, 0,
	9, 0, 0, 0, 0, 9, 476, 0, 9, 0,
	0, 46, 47, 48, 52, 49, 50, 51, 116, 0,
	709, 709, 0, 172, 0, 9, 0, 0, 45, 0,
	0, 0, 0, 428, 0, 53, 0, 0, 53, 53,
	0, 0, 733, 170, 0, 44, 9, 320, 202, 0,
	9, 736, 9, 0, 0, 9, 9, 0, 0, 0,
	0, 0, 0, 0, 709, 0, 0, 62, 471, 9,
	0, 0, 0, 0, 0, 0, 479, 0, 481, 762,
	96, 9, 0, 764, 767, 9, 0, 0, 0, 0,
	105, 774, 46, 47, 48, 52, 49, 323, 51, 116,
	0, 9, 0, 709, 0, 9, 832, 783, 0, 0,
	0, 709, 0, 0, 0, 172, 321, 0, 0, 0,
	0, 0, 0, 488, 656, 9, 0, 488, 0, 170,
	53, 709, 0, 0, 0, 53, 53, 0, 0, 0,
	0, 53, 0, 0, 46, 47, 48, 52, 49, 323,
	51, 116, 709, 0, 0, 187, 709, 0, 832, 0,
	0, 832, 832, 0, 0, 0, 0, 0, 321, 0,
	829, 0, 0, 0, 0, 832, 45, 73, 74, 75,
	0, 92, 77, 54, 0, 424, 0, 709, 0, 0,
	0, 832, 0, 0, 53, 0, 72, 0, 0, 0,
	0, 0, 856, 96, 45, 53, 0, 832, 0, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 867, 0,
	0, 594, 0, 0, 202, 0, 269, 0, 0, 172,
	0, 832, 0, 0, 0, 87, 0, 0, 0, 88,
	105, 0, 889, 93, 0, 0, 0, 0, 0, 0,
	269, 269, 85, 81, 0, 172, 0, 45, 765, 0,
	53, 53, 90, 0, 0, 53, 172, 0, 0, 53,
	0, 322, 0, 920, 322, 430, 0, 0, 0, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	0, 0, 46, 47, 48, 52, 91, 50, 83, 24,
	82, 94, 0, 0, 53, 0, 0, 0, 0, 0,
	0, 222, 0, 79, 80, 89, 97, 0, 0, 0,
	46, 47, 48, 52, 49, 50, 51, 116, 0, 0,
	0, 0, 0, 269, 0, 680, 0, 0, 45, 0,
	269, 269, 0, 53, 0, 54, 53, 172, 0, 153,
	152, 53, 0, 0, 53, 163, 154, 162, 161, 0,
	0, 703, 164, 165, 624, 269, 408, 408, 408, 0,
	0, 53, 706, 46, 47, 48, 52, 49, 50, 51,
	116, 0, 0, 0, 45, 0, 290, 0, 0, 322,
	0, 0, 53, 322, 0, 0, 53, 105, 53, 105,
	105, 53, 53, 45, 73, 74, 75, 0, 92, 77,
	54, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 53, 0, 0,
	0, 53, 45, 73, 74, 75, 0, 92, 77, 54,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 53, 72, 779, 46, 47, 48, 52, 49, 50,
	51, 116, 87, 0, 0, 0, 88, 0, 0, 0,
	93, 53, 45, 0, 287, 269, 0, 0, 0, 85,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 87, 0, 45, 269, 88, 0, 0, 0, 93,
	46, 47, 48, 52, 49, 50, 51, 116, 85, 81,
	322, 0, 0, 0, 0, 0, 0, 0, 90, 46,
	47, 48, 52, 91, 50, 225, 24, 224, 226, 227,
	228, 229, 0, 0, 0, 0, 0, 0, 222, 0,
	79, 80, 89, 97, 215, 0, 0, 0, 46, 47,
	48, 52, 91, 50, 225, 24, 224, 226, 227, 228,
	229, 0, 0, 0, 0, 0, 0, 222, 0, 79,
	80, 89, 97, 0, 0, 0, 0, 0, 45, 73,
	74, 75, 269, 92, 77, 54, 0, 0, 46, 47,
	48, 52, 49, 50, 51, 116, 0, 0, 72, 0,
	158, 167, 166, 157, 156, 159, 155, 322, 322, 46,
	47, 48, 52, 49, 50, 51, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 88, 45, 0, 0, 93, 0, 0, 0, 0,
	131, 0, 0, 0, 85, 81, 0, 0, 0, 0,
	45, 73, 74, 75, 90, 92, 77, 54, 0, 153,
	152, 269, 0, 0, 0, 163, 154, 162, 161, 0,
	72, 281, 164, 165, 282, 0, 0, 0, 322, 322,
	322, 0, 0, 0, 46, 47, 48, 52, 91, 50,
	225, 24, 224, 226, 227, 228, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 89, 97, 87,
	0, 0, 0, 88, 0, 0, 0, 93, 45, 73,
	74, 75, 0, 92, 77, 54, 85, 81, 0, 0,
	0, 0, 0, 0, 0, 143, 90, 269, 72, 0,
	0, 0, 0, 0, 0, 0, 322, 0, 46, 47,
	48, 52, 49, 50, 51, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 46, 47, 48, 52,
	91, 50, 83, 24, 82, 94, 0, 87, 0, 0,
	0, 88, 0, 0, 0, 93, 211, 79, 80, 89,
	97, 0, 0, 0, 85, 81, 0, 0, 0, 0,
	45, 73, 74, 75, 90, 92, 77, 54, 0, 0,
	0, 45, 73, 74, 75, 0, 92, 77, 54, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 0, 46, 47, 48, 52, 91, 50,
	83, 24, 82, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 89, 97, 87,
	0, 0, 0, 88, 0, 0, 0, 93, 0, 44,
	87, 0, 0, 0, 88, 0, 85, 81, 93, 0,
	0, 0, 0, 0, 0, 0, 90, 85, 81, 0,
	0, 0, 0, 45, 73, 74, 75, 90, 92, 77,
	54, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 46, 47, 48, 52,
	91, 50, 83, 24, 82, 94, 0, 46, 47, 48,
	52, 91, 50, 83, 24, 82, 94, 79, 80, 89,
	97, 0, 0, 0, 0, 0, 0, 0, 79, 80,
	89, 97, 87, 0, 0, 0, 88, 0, 0, 0,
	93, 45, 73, 248, 75, 526, 92, 77, 54, 85,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 72, 158, 167, 166, 157, 156, 159, 155, 0,
	0, 527, 158, 167, 166, 157, 156, 159, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 46,
	47, 48, 52, 91, 50, 83, 24, 82, 94, 0,
	87, 0, 0, 0, 88, 0, 0, 0, 93, 0,
	79, 80, 89, 57, 0, 0, 0, 85, 81, 158,
	167, 166, 157, 156, 159, 155, 0, 90, 0, 0,
	0, 153, 152, 0, 0, 0, 0, 163, 154, 162,
	161, 153, 152, 0, 164, 165, 0, 163, 154, 162,
	161, 0, 0, 0, 164, 165, 413, 46, 47, 48,
	52, 91, 50, 83, 24, 82, 94, 158, 167, 166,
	157, 156, 159, 155, 0, 0, 0, 0, 79, 80,
	89, 97, 0, 0, 0, 0, 0, 0, 153, 152,
	0, 0, 0, 0, 163, 154, 162, 161, 0, 0,
	0, 164, 165, 282, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 908, 153, 152, 0, 0,
	0, 0, 163, 154, 162, 161, 0, 0, 0, 164,
	165, 246, 0, 0, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 153, 152, 884, 0, 0, 0, 163,
	154, 162, 161, 153, 152, 872, 164, 165, 0, 163,
	154, 162, 161, 0, 0, 0, 164, 165, 158, 167,
	166, 157, 156, 159, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 853,
	0, 0, 0, 153, 152, 0, 0, 0, 0, 163,
	154, 162, 161, 153, 152, 0, 164, 165, 0, 163,
	154, 162, 161, 0, 0, 0, 164, 165, 158, 167,
	166, 157, 156, 159, 155, 0, 0, 0, 0, 158,
	167, 166, 157, 156, 159, 155, 0, 153, 152, 811,
	0, 0, 0, 163, 154, 162, 161, 0, 0, 0,
	164, 165, 803, 158, 167, 166, 157, 156, 159, 155,
	0, 0, 0, 158, 167, 166, 157, 156, 159, 155,
	0, 0, 0, 0, 800, 0, 0, 0, 158, 167,
	166, 157, 156, 159, 155, 0, 0, 153, 152, 0,
	0, 0, 0, 163, 154, 162, 161, 0, 153, 152,
	164, 165, 0, 0, 163, 154, 162, 161, 0, 0,
	0, 164, 165, 158, 167, 166, 157, 156, 159, 155,
	0, 0, 153, 152, 0, 0, 0, 0, 163, 154,
	162, 161, 153, 152, 726, 164, 165, 0, 163, 154,
	162, 161, 0, 0, 780, 164, 165, 153, 152, 0,
	0, 0, 0, 163, 154, 162, 161, 0, 0, 742,
	164, 165, 0, 0, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 158, 167, 166, 157, 156, 159,
	155, 0, 153, 152, 294, 0, 0, 0, 163, 154,
	162, 161, 0, 0, 0, 164, 165, 158, 167, 166,
	157, 156, 159, 155, 0, 0, 0, 158, 167, 166,
	157, 156, 159, 155, 0, 0, 0, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 587, 0,
	0, 0, 0, 153, 152, 0, 0, 0, 0, 163,
	154, 162, 161, 153, 152, 0, 164, 165, 0, 163,
	154, 162, 161, 0, 0, 606, 164, 165, 158, 167,
	166, 157, 156, 159, 155, 0, 153, 152, 0, 0,
	0, 0, 163, 154, 162, 161, 153, 152, 0, 164,
	165, 249, 163, 154, 162, 161, 0, 0, 0, 164,
	165, 158, 167, 166, 157, 156, 159, 155, 0, 0,
	0, 158, 167, 166, 157, 156, 159, 155, 0, 0,
	0, 0, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 0, 0, 0, 0, 153, 152, 0,
	0, 0, 0, 163, 154, 162, 161, 0, 0, 0,
	164, 165, 158, 167, 166, 157, 156, 159, 155, 0,
	0, 0, 158, 167, 166, 157, 156, 159, 155, 0,
	153, 152, 0, 151, 0, 0, 163, 154, 162, 161,
	153, 152, 0, 164, 165, 0, 163, 154, 162, 161,
	0, 0, 0, 164, 165, 158, 506, 166, 157, 156,
	159, 155, 0, 0, 0, 158, 391, 166, 157, 156,
	159, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 152, 0, 0, 0, 0, 163, 154, 162,
	161, 153, 152, 0, 164, 165, 45, 163, 154, 162,
	161, 0, 0, 54, 164, 165, 0, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 25, 0,
	0, 26, 0, 0, 153, 152, 0, 0, 0, 0,
	163, 154, 162, 161, 153, 152, 0, 164, 165, 0,
	163, 154, 162, 161, 0, 0, 0, 164, 165, 0,
	0, 0, 45, 0, 0, 0, 0, 0, 0, 54,
	0, 0, 0, 0, 36, 44, 0, 0, 0, 0,
	0, 0, 835, 834, 25, 715, 0, 26, 0, 0,
	0, 28, 0, 0, 33, 31, 32, 30, 0, 0,
	0, 0, 0, 0, 0, 34, 35, 374, 375, 0,
	38, 39, 40, 41, 0, 0, 0, 716, 0, 0,
	27, 37, 46, 47, 48, 52, 49, 50, 51, 24,
	0, 44, 0, 45, 0, 0, 0, 0, 370, 369,
	54, 42, 0, 0, 0, 36, 0, 28, 0, 0,
	33, 31, 32, 30, 0, 25, 0, 0, 26, 0,
	0, 34, 35, 374, 375, 43, 38, 39, 40, 41,
	0, 0, 0, 0, 0, 0, 27, 37, 46, 47,
	48, 52, 49, 50, 51, 24, 0, 0, 0, 45,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 0,
	0, 36, 44, 0, 0, 0, 0, 0, 0, 712,
	711, 25, 715, 0, 26, 0, 0, 0, 28, 0,
	0, 33, 31, 32, 30, 0, 0, 0, 0, 0,
	0, 0, 34, 35, 0, 0, 0, 38, 39, 40,
	41, 0, 0, 0, 716, 0, 0, 27, 37, 46,
	47, 48, 52, 49, 50, 51, 24, 0, 44, 0,
	0, 0, 0, 0, 0, 19, 18, 0, 42, 0,
	0, 0, 0, 0, 28, 0, 0, 33, 31, 32,
	30, 0, 0, 0, 0, 0, 0, 0, 34, 35,
	0, 0, 43, 38, 39, 40, 41, 0, 0, 0,
	0, 0, 0, 27, 37, 46, 47, 48, 52, 49,
	50, 51, 24,
}
var yyPact = [...]int{

	3125, -1000, 248, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2159, 2077,
	-1000, -1000, 216, 218, 217, 825, 822, 892, 1594, -1000,
	416, 1749, 1749, 602, -1000, -1000, 887, 1898, 2077, 2077,
	2077, 275, 1916, 898, 838, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 255, -1000, 3125, 2798, 2066, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 255, -1000,
	-1000, -74, -61, -1000, -1000, -1000, -1000, -1000, -1000, 2077,
	2077, 214, 211, 210, -1000, 2077, 311, 209, 2077, 2077,
	1749, 187, -1000, -1000, 203, 495, 2808, 2066, 788, 868,
	1460, 428, 882, 740, 615, -1000, 611, 2077, 1659, 1749,
	1460, -1000, 2, 140, -1000, 376, -1000, -1000, 1749, 1749,
	1749, -1000, -1000, 1749, -1000, -1000, -1000, -1000, 2077, 2077,
	225, -1000, 888, 2808, 2293, -74, 2808, 2227, 2714, 54,
	658, 892, -1000, -1000, -1000, -1000, 1, 1749, -1000, 2077,
	-1000, 3125, 2077, 2077, 2077, 623, 2077, 628, 64, 2077,
	698, 2077, 2077, 2077, 2077, 2077, 2077, 2077, 1796, 131,
	139, 132, 239, 1728, 1984, 1640, -1000, -1000, 2077, 615,
	615, 498, 64, 64, 690, 685, -1000, -1000, 149, -1000,
	324, 2077, 615, 483, 2077, 131, 766, 778, 1460, 877,
	-1, -1000, -1000, 1284, 883, 873, 1284, 669, 669, 669,
	1688, -1000, 128, -1000, 2245, -1000, 109, -5, 860, -1000,
	2808, -1000, -1000, -68, 199, 198, 196, 192, 191, 190,
	245, 885, 892, 2077, 358, 204, 189, 188, -1000, -1000,
	-1000, 864, 2808, 2808, 2077, 1749, 2077, 2808, 2077, 2998,
	1749, 892, 1749, 44, 648, 838, 173, 2808, 475, -2,
	-12, -12, 679, 2851, 2077, 64, 2077, -1000, 2066, -1000,
	187, -12, 64, 64, -14, -14, -1000, -1000, -1000, 996,
	149, -1000, 2077, -1000, -1000, -1000, -1000, -1000, 2077, -1000,
	-1000, 2077, 1432, 482, 2077, -1000, -1000, 64, 141, 141,
	141, 623, -1000, 2198, 2077, 425, 3125, 2757, 737, 2077,
	1834, 130, 1513, 990, 1460, 873, 33, -1000, 1151, -1000,
	-1000, 1232, -1000, 184, 180, 1284, 786, 2077, -1000, 239,
	-1000, 239, 239, -1000, -1000, -1000, 1688, 1749, 1984, 615,
	615, 615, 2077, 2077, 2077, 1749, 611, -1000, 137, 1122,
	990, 1749, -1000, 2808, 611, 1749, 611, 135, 1749, 892,
	-74, 2808, -1000, -1000, 2808, 422, 242, -1000, -1000, 2159,
	2077, -1000, -1000, -1000, -1000, -1000, 455, -1000, -6, 452,
	1749, 1749, -1000, 179, 1749, 414, 479, 3125, 2077, -1000,
	-1000, 2077, 2841, -1000, -12, -1000, -1000, -1000, 104, 103,
	97, 96, 413, 2077, 2747, 637, -1000, 81, -1000, 177,
	-1000, -1000, 389, 2077, 95, 578, -1000, 3125, -1000, 2077,
	2188, -1000, -10, 742, 2808, -1000, 64, 990, -1000, -1000,
	1749, 882, -17, 153, -71, -1000, -1000, 730, 727, 705,
	705, 715, 1284, -1000, -1000, -1000, -1000, 1749, 126, 2077,
	2077, 873, 782, 774, 2808, 673, -1000, -1000, 673, -1000,
	-1000, 94, 2077, 2077, 1432, 2077, 92, 91, 89, 85,
	-22, -1000, 927, 1749, 811, -1000, 990, 803, 800, -1000,
	83, -1000, 859, 78, -36, -1000, -1000, -42, 807, -41,
	-1000, 536, 2998, 2663, 491, 2998, 2998, 448, 443, 611,
	77, 567, 412, -1000, 2653, 149, 2077, -1000, -1000, -1000,
	-1000, -1000, 2808, 2077, 64, 75, -43, 2077, -1000, 609,
	2630, 296, -1000, 495, 2808, -1000, 613, 292, 1834, 290,
	-1000, -1000, -1000, 67, -52, -1000, 873, 990, 2077, 1284,
	1284, 726, -1000, 721, 713, 705, -1000, -1000, -1000, 1476,
	1030, -1000, -1000, 2077, 2077, 345, 65, 61, 56, 55,
	52, 344, 320, 319, 855, 1749, -1000, -1000, -1000, 990,
	990, 51, -56, 2077, 49, 1749, 2077, 849, 306, 848,
	892, 892, 2077, 846, 892, -1000, -1000, 2998, 474, 2077,
	407, 406, 2998, 2998, 48, 845, -1000, 563, 3125, 149,
	2620, -1000, -1000, 64, 456, -1000, -1000, 785, -1000, -1000,
	-1000, -1000, 816, 672, 990, -1000, -1000, 2808, 715, 1172,
	1284, 1284, 1284, 700, 2077, 1749, 2808, -1000, 176, 338,
	336, 335, 331, 317, 172, 168, 285, 166, 280, 611,
	-1000, -1000, -1000, 927, 1749, 2808, -1000, -1000, -74, 2808,
	611, 3069, 303, -1000, -1000, -1000, 807, 2808, 302, 46,
	451, 404, 2998, 2569, 533, 531, 399, 396, -1000, 165,
	-1000, 554, -1000, -1000, 2077, 162, -1000, -1000, -1000, 64,
	-1000, -1000, -1000, 2077, 159, 1172, 1032, 715, 1284, -51,
	2534, -45, 325, 158, 157, 156, 154, 148, 325, 325,
	323, 325, 322, -1000, -1000, -1000, -1000, 395, 234, -1000,
	-1000, 2159, 2077, -1000, -1000, 2077, 2077, 3069, 3069, 842,
	392, 473, 2998, 2077, 577, -1000, 2998, -1000, -1000, 527,
	524, 611, -1000, 2519, 788, -1000, 2808, 1749, -1000, 2077,
	715, -1000, -1000, -1000, 2077, 42, -1000, 789, 773, 325,
	325, 325, 325, 325, 41, 788, 39, 143, 37, 142,
	-1000, 3069, 2509, 490, 2485, 50, 639, 2808, 391, 385,
	301, 562, 384, -1000, 2474, -1000, 491, -1000, -1000, 28,
	-1000, 25, 24, 2808, 23, -1000, -1000, 771, 2077, 22,
	21, 20, 13, 12, -1000, -1000, 325, -1000, 325, -1000,
	3069, 472, 2077, 2942, 1749, 1749, -1000, -1000, 3069, -1000,
	561, 2998, -1000, -1000, -1000, -1000, -1000, 1834, -1000, -1000,
	-1000, -1000, -1000, -1000, 11, 10, 450, 383, 3069, 2424,
	382, 232, -1000, -1000, 2159, 2077, -1000, -1000, -1000, 432,
	427, 381, -1000, 548, 277, -1000, -1000, 379, 459, 3069,
	2077, 575, -1000, 3069, 504, 2942, 2390, 489, 2942, 2942,
	-1000, -1000, -1000, 674, 559, 377, -1000, 2380, -1000, 490,
	-1000, -1000, 2942, 458, 2077, 375, 374, -1000, 659, 606,
	605, 582, -1000, 558, 3069, -1000, 445, 373, 2942, 2340,
	503, 502, 626, 588, -1000, 600, 581, -1000, -1000, -1000,
	-1000, 546, 371, 378, 2942, 2077, 574, -1000, 2942, -1000,
	-1000, 653, -1000, -1000, -1000, -1000, -1000, 557, 367, -1000,
	2330, -1000, 489, -1000, 585, -1000, -1000, 556, 2942, -1000,
	-1000, -1000, 542, -1000,
}
var yyPgo = [...]int{

	0, 80, 12, 89, 27, 562, 164, 1036, 72, 1034,
	57, 1033, 1032, 1030, 1029, 153, 6, 1028, 1027, 1022,
	1018, 1017, 1015, 59, 24, 34, 1011, 1010, 30, 1008,
	1007, 50, 35, 1006, 1004, 1003, 1002, 1000, 981, 74,
	77, 999, 53, 47, 996, 995, 16, 993, 45, 992,
	875, 991, 62, 990, 67, 64, 79, 627, 46, 31,
	49, 18, 988, 987, 986, 985, 1327, 984, 68, 983,
	979, 978, 52, 456, 977, 971, 14, 42, 20, 22,
	969, 967, 2, 965, 963, 60, 71, 61, 962, 51,
	951, 19, 948, 947, 946, 13, 28, 942, 26, 25,
	48, 15, 55, 941, 934, 931, 40, 930, 23, 54,
	9, 21, 5, 8, 7, 4, 43, 927, 11, 924,
	10, 923, 3, 919, 0, 802, 17, 116, 910, 66,
	63, 65, 44, 37, 39, 69, 906, 36, 564,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 23, 23, 24, 24, 25,
	25, 25, 25, 25, 26, 26, 26, 26, 26, 27,
	27, 27, 27, 28, 29, 29, 30, 31, 31, 32,
	32, 32, 33, 33, 33, 33, 33, 34, 34, 34,
	34, 34, 34, 34, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 37, 37, 37,
	38, 39, 39, 39, 39, 40, 40, 41, 42, 42,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	47, 48, 48, 49, 49, 50, 50, 51, 51, 52,
	52, 53, 53, 53, 53, 53, 53, 54, 55, 56,
	56, 56, 56, 56, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 58, 59,
	59, 59, 60, 60, 61, 61, 62, 62, 63, 63,
	64, 64, 64, 65, 65, 66, 67, 68, 68, 68,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 70,
	70, 70, 70, 70, 70, 70, 71, 71, 71, 71,
	72, 72, 73, 73, 73, 73, 74, 74, 74, 74,
	74, 75, 75, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 77, 78, 78, 79, 79, 80,
	80, 81, 81, 81, 82, 82, 82, 83, 83, 84,
	84, 85, 85, 86, 86, 86, 88, 88, 88, 88,
	88, 89, 89, 89, 89, 89, 89, 89, 90, 90,
	90, 90, 90, 90, 91, 91, 92, 92, 93, 93,
	93, 94, 95, 95, 96, 96, 97, 97, 98, 98,
	99, 99, 100, 100, 87, 87, 101, 101, 102, 102,
	103, 103, 103, 103, 104, 105, 106, 106, 107, 107,
	108, 108, 109, 109, 110, 110, 111, 111, 112, 112,
	113, 113, 114, 114, 115, 115, 116, 116, 117, 117,
	118, 118, 119, 119, 120, 120, 121, 121, 122, 122,
	123, 123, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 125, 126, 126, 127, 128, 128, 129, 129, 130,
	130, 131, 131, 132, 132, 133, 133, 134, 134, 135,
	135, 136, 136, 137, 137, 138, 138,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 7, 7, 1, 3, 1, 3, 0,
	1, 1, 2, 2, 5, 2, 2, 3, 5, 6,
	8, 5, 3, 1, 1, 3, 3, 1, 3, 1,
	1, 3, 9, 10, 10, 12, 3, 0, 1, 1,
	1, 1, 2, 2, 5, 6, 3, 4, 4, 2,
	2, 2, 4, 2, 2, 2, 4, 2, 3, 4,
	5, 5, 4, 4, 4, 1, 1, 3, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 0, 3,
	4, 0, 2, 0, 2, 0, 2, 6, 9, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 6, 1, 3, 1, 3, 2, 4, 1, 1,
	0, 1, 1, 1, 1, 3, 3, 3, 1, 6,
	3, 3, 3, 3, 4, 4, 5, 6, 6, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 3, 4, 4, 5, 5, 5, 5,
	1, 5, 10, 8, 9, 9, 9, 9, 9, 8,
	8, 10, 8, 10, 2, 1, 5, 0, 3, 2,
	5, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	1, 1, 1, 1, 2, 3, 1, 6, 6, 6,
	8, 1, 1, 2, 3, 1, 1, 3, 4, 5,
	6, 7, 5, 6, 2, 4, 1, 1, 1, 3,
	1, 5, 0, 1, 4, 5, 0, 2, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	6, 9, 5, 8, 7, 3, 1, 3, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 1, 3, 0,
	1, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -103, -104, -107, -73,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -124, 127, 26, 29, 118, 89, -127,
	95, 93, 94, 92, 103, 104, 16, 119, 108, 109,
	110, 111, 83, 107, 73, 4, 120, 121, 122, 124,
	125, 126, 123, -125, 11, 138, -57, 144, -56, -53,
	-70, -67, -66, -73, -74, -94, -69, -71, -125, -127,
	-35, -124, 24, 5, 6, 7, -54, 10, -55, 141,
	142, 81, 128, 126, -75, 80, -59, 63, 67, 143,
	90, 124, 9, 71, 129, -95, -57, 144, -39, 19,
	15, 17, -41, -40, 13, -66, 144, 144, 144, 30,
	30, -129, -128, -125, -129, -124, 127, -125, 90, 38,
	112, -124, -124, -34, 96, 97, 31, 32, 98, 99,
	12, 12, -124, -57, -57, -124, -57, 123, -57, -125,
	-126, -9, 118, 89, 6, -52, -51, -136, 25, 135,
	-1, 85, 134, 133, 140, 70, 68, 67, 64, 69,
	-138, 142, 141, 139, 146, 147, 66, 65, -57, -99,
	-38, -72, -50, 149, 144, 149, -57, -57, 144, 144,
	144, -95, 133, 140, -131, -138, 67, -66, -57, -57,
	-124, 144, 144, -116, 84, -99, -46, 39, 20, -87,
	-85, -124, 24, 14, -87, -42, 14, 58, 59, 60,
	-130, 72, -72, -99, -57, 145, -102, -93, -92, -58,
	-57, -76, 139, -124, 128, 126, 129, 130, 131, 132,
	-124, -85, 148, 135, 90, 38, 112, 113, -124, -124,
	-124, -124, -57, -57, 140, 14, 148, -57, 6, 87,
	64, 148, 64, -125, -126, 148, -124, -57, -1, -57,
	-57, -57, -131, -57, 68, 64, 69, -59, 144, -66,
	124, -57, 62, 61, -57, -57, -57, -57, -57, -57,
	-57, 145, 148, 145, 145, 145, -124, 6, -130, -124,
	6, -130, -130, -96, 84, -59, -59, 68, 64, 62,
	61, 70, 126, -57, -130, -117, 86, -57, -47, 45,
	42, -86, -85, 16, 148, -100, -89, -86, -88, -90,
	23, 144, -66, 125, -124, 14, -43, 18, -100, -135,
	61, -135, -135, -102, 145, 145, 148, 22, 144, 144,
	144, 144, 144, 144, 144, 144, -137, 22, 27, 28,
	36, 16, -129, -57, 91, 144, 22, 144, 144, 20,
	-124, -57, -124, -99, -57, -2, -12, -5, -13, 81,
	80, -8, -10, -6, 105, 106, -124, -126, -125, -124,
	64, 64, -52, 22, 144, -109, -108, 86, 82, -54,
	-55, 65, -57, -59, -57, -59, -59, -99, -72, -72,
	-72, -58, -97, 86, -57, -59, -68, 144, -66, 124,
	-68, -68, -131, 148, -72, 88, -1, 85, -49, 46,
	-57, -61, -62, -63, -57, -76, 21, 144, -38, -124,
	22, -106, -105, -56, -124, -87, -43, 54, -132, -134,
	53, 57, 148, 49, 51, 52, -124, 22, -89, 144,
	144, -100, -44, 40, -57, -40, -39, -40, -40, -102,
	-124, -72, -130, -130, -130, -130, -72, -72, -72, -101,
	-124, -38, -23, 144, -124, -56, 144, -56, -124, -38,
	-101, -38, 145, -32, -29, -31, -28, -30, -125, -124,
	-126, 88, 138, -57, -95, 87, 87, -124, -124, 144,
	-101, 88, -109, -1, -57, -57, 65, 145, 145, 145,
	145, 88, -57, 85, 65, -60, -59, 144, 93, 64,
	-57, 145, 80, -1, -57, -48, 47, 73, 148, -64,
	43, 44, -60, -98, -56, -124, -42, 148, 140, 48,
	48, -133, 50, -133, -132, -134, -100, -124, 145, -57,
	-57, -43, -45, 41, 42, 145, -72, -72, -72, -58,
	-72, 145, 145, 145, 145, 148, -25, 31, 32, 33,
	34, -24, -23, 35, -98, 37, 37, 145, 22, 145,
	148, 148, 35, 145, 148, 83, -2, 85, -118, 84,
	-2, -2, 87, 87, -38, 145, 81, 88, 85, -57,
	-57, -59, 145, 148, -57, 74, 145, 117, -116, -48,
	120, -61, 121, 145, 148, -43, -106, -57, -89, -89,
	48, 48, 48, -133, 148, 148, -57, -99, 102, 145,
	145, 145, 145, 145, 102, 102, 116, 102, 116, -137,
	-101, -56, -56, 145, 148, -57, 145, -124, -124, -57,
	22, 114, 22, -28, -31, -31, -125, -57, 22, -32,
	-2, -119, 86, -57, 88, 88, -2, -2, 145, 22,
	81, -1, -96, -60, 148, 40, -65, 31, 32, 21,
	-38, -98, -91, 55, 56, -89, -89, -89, 48, -124,
	-57, -124, 144, 102, 102, 102, 102, 102, 144, 144,
	121, 144, 121, -38, -25, -24, -38, -3, -14, -5,
	-18, 81, 80, -15, -16, 83, 115, 114, 114, 145,
	-111, -110, 86, 82, 88, -2, 85, 83, 83, 88,
	88, 144, -108, -57, 144, -60, -57, 144, -91, 55,
	-89, 145, 145, 145, 148, -78, -77, -79, 101, 144,
	144, 144, 144, 144, -77, -79, -78, 102, -77, 102,
	88, 138, -57, -95, -57, -125, -126, -57, -3, -3,
	22, 88, -111, -2, -57, 80, -2, 83, 83, -38,
	145, -46, -101, -57, -72, 145, -46, 39, 42, -78,
	-78, -78, -78, -77, 145, 145, 144, 145, 144, -3,
	85, -120, 84, 87, 64, 64, 88, 88, 114, 81,
	88, 85, -118, 145, 145, 145, 145, 42, -99, 145,
	145, 145, 145, 145, -78, -77, -3, -121, 86, -57,
	-4, -17, -5, -19, 81, 80, -15, -16, -6, -124,
	-124, -3, 81, -2, -61, 145, 145, -113, -112, 86,
	82, 88, -3, 85, 88, 138, -57, -95, 87, 87,
	88, -110, -80, 122, 88, -113, -3, -57, 80, -3,
	83, -4, 85, -122, 84, -4, -4, -81, 68, 75,
	6, 78, 81, 88, 85, -120, -4, -123, 86, -57,
	88, 88, -83, 75, -82, 6, 78, 76, 76, 79,
	81, -3, -115, -114, 86, 82, 88, -4, 85, 83,
	83, 65, 76, 76, 77, 79, -112, 88, -115, -4,
	-57, 80, -4, -84, 75, -82, 81, 88, 85, -122,
	77, 81, -4, -114,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 322,
	41, 42, 0, 0, 389, 0, 0, 0, 0, 71,
	0, 0, 0, 117, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 34, 411, 382, 383, 384, 385, 386,
	387, 388, 390, 0, 391, -2, 0, -2, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 179, 0, 171, 172, 173, 174, 175, 176, 0,
	0, 0, 0, 388, 260, 322, 401, 0, 0, 0,
	0, 386, 177, 178, 0, 0, 323, 165, -2, 0,
	0, 0, 148, 0, 399, 146, 165, 250, 0, 0,
	0, 69, 397, 395, 70, 0, 389, 72, 0, 0,
	0, 95, 96, 0, 118, 119, 120, 121, 0, 0,
	0, 129, 135, 130, 131, -2, 134, 137, 0, 194,
	0, 0, 32, 33, 35, 166, 169, 0, 412, 0,
	3, -2, 0, 415, 416, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 244, 245, 250, 399,
	399, 0, 415, 416, 0, 0, 402, 238, 248, 249,
	0, 0, 399, 368, 0, 0, 158, 0, 0, 0,
	334, 291, 292, 0, 0, 150, 0, 409, 409, 409,
	0, 400, 0, 251, 330, 253, 0, 338, 318, 320,
	316, 317, 198, 179, 0, 388, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 97, 102,
	116, 0, 122, 123, 0, 0, 0, 138, 172, -2,
	0, 0, 0, 0, 0, 411, 0, 394, 352, 216,
	-2, -2, 0, 0, 0, 0, 0, 229, 165, 200,
	0, -2, 0, 0, 239, 240, 241, 242, 243, 246,
	247, 197, 0, 199, 215, 255, 180, 182, 250, 181,
	183, 250, 250, 326, 0, 221, 223, 0, 0, 0,
	0, 401, 126, 0, 250, 0, -2, 0, 163, 0,
	0, 165, 293, 0, 0, 150, -2, 301, 302, 305,
	306, 165, 296, 387, 291, 0, 152, 0, 149, 0,
	410, 0, 0, 147, 252, 254, 0, 0, 250, 399,
	399, 399, 250, 250, 250, 0, 165, 414, 0, 0,
	0, 0, 398, 396, 165, 0, 165, 0, 0, 0,
	-2, 128, 136, 132, 139, 0, 0, 36, 37, 0,
	322, 46, 47, 48, 23, 24, 0, 393, 392, 0,
	0, 0, 170, 0, 0, 0, 352, -2, 0, 224,
	225, 0, 0, 230, -2, 234, 236, 331, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 165, 218, 0,
	235, 237, 0, 0, 0, 0, 369, -2, 140, 0,
	161, 157, 204, 210, 208, 209, 0, 0, 342, 294,
	0, 148, 346, 0, 179, 335, 348, 0, 0, 405,
	405, 403, 0, 404, 407, 408, 303, 0, 403, 0,
	0, 150, 154, 0, 151, 142, 145, 143, 144, 339,
	319, 0, 250, 250, 250, 250, 0, 0, 0, 0,
	336, 77, 89, 0, 85, 80, 0, 0, 0, 94,
	0, 101, 0, 0, 109, 110, 104, 107, 103, 0,
	98, 0, -2, 0, 0, -2, -2, 0, 0, 165,
	0, 0, 0, 353, 0, 226, 0, 256, 257, 258,
	259, 321, 327, 0, 0, 0, 202, 0, 124, 0,
	0, 261, 40, 366, 164, 159, 161, 0, 0, 206,
	211, 212, 340, 0, 328, 295, 150, 0, 0, 0,
	0, 0, 406, 0, 0, 405, 333, 304, 307, 0,
	0, 349, 141, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 78, 90, 91, 0,
	0, 0, 87, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 27, 5, -2, 372, 0,
	0, 0, -2, -2, 0, 0, 38, 0, -2, 227,
	324, 228, 217, 0, 0, 125, 201, 0, 367, 160,
	162, 205, 0, 165, 0, 344, 347, 345, 308, 403,
	0, 0, 0, 0, 0, 0, 155, 153, 0, 256,
	257, 258, 259, 261, 0, 0, 0, 0, 0, 165,
	337, 92, 93, 89, 0, 86, 81, 82, -2, 84,
	165, -2, 0, 105, 111, 108, 0, 106, 0, 0,
	356, 0, -2, 0, 0, 0, 0, 0, 167, 0,
	39, 350, 325, 203, 0, 0, 207, 213, 214, 0,
	343, 329, 309, 0, 0, 403, 403, 312, 0, 179,
	0, 0, 277, 0, 0, 0, 0, 0, 277, 277,
	0, 277, 0, 76, 79, 88, 100, 0, 0, 49,
	50, 0, 322, 61, 62, 0, 54, -2, -2, 0,
	0, 356, -2, 0, 0, 373, -2, 28, 29, 0,
	0, 165, 351, 0, 156, 341, 314, 0, 310, 0,
	313, 297, 298, 299, 250, 0, 275, 156, 0, 277,
	277, 277, 277, 277, 0, 156, 0, 0, 0, 0,
	112, -2, 0, 0, 0, 194, 0, 55, 0, 0,
	0, 0, 0, 357, 0, 45, 370, 30, 31, 0,
	219, 0, 0, 311, 0, 263, 274, 0, 0, 0,
	0, 0, 0, 0, 269, 270, 277, 272, 277, 7,
	-2, 376, 0, -2, 0, 0, 113, 114, -2, 43,
	0, -2, 371, 168, 262, 315, 300, 0, 278, 264,
	265, 266, 267, 268, 0, 0, 360, 0, -2, 0,
	0, 0, 56, 57, 0, 322, 66, 67, 68, 0,
	0, 0, 44, 354, 157, 271, 273, 0, 360, -2,
	0, 0, 377, -2, 0, -2, 0, 0, -2, -2,
	115, 355, 276, 0, 0, 0, 361, 0, 60, 374,
	51, 9, -2, 380, 0, 0, 0, 279, 0, 0,
	0, 0, 58, 0, -2, 375, 364, 0, -2, 0,
	0, 0, 0, 0, 288, 0, 0, 281, 282, 283,
	59, 358, 0, 364, -2, 0, 0, 381, -2, 52,
	53, 0, 287, 284, 285, 286, 359, 0, 0, 365,
	0, 65, 378, 280, 0, 290, 63, 0, -2, 379,
	289, 64, 362, 363,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 143, 3, 3, 3, 147, 3, 3,
	144, 145, 139, 142, 148, 141, 149, 146, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 138,
	3, 140,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:222
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:227
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:232
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:259
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:269
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:365
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:369
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:517
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:575
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:595
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:599
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:605
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:609
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:615
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:619
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:625
		{
			yyVAL.expression = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:629
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:633
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:637
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:641
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:647
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:651
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:655
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:659
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:663
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 99:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:669
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 100:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:673
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:677
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:681
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:687
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:693
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:697
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:703
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:709
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:713
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:719
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:723
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:727
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 112:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:733
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 113:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:737
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 114:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:741
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 115:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:745
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:749
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:755
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:759
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:763
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:767
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:771
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:775
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:779
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 124:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:785
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 125:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:789
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:793
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:799
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:803
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:807
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:811
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:815
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:819
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:823
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:827
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:831
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:835
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:849
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:855
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:867
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:877
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:886
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:895
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:906
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:910
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:916
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:922
		{
			yyVAL.queryexpr = nil
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:926
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:932
		{
			yyVAL.queryexpr = nil
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:936
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:942
		{
			yyVAL.queryexpr = nil
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:946
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:952
		{
			yyVAL.queryexpr = nil
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:956
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:962
		{
			yyVAL.queryexpr = nil
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:966
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:972
		{
			yyVAL.queryexpr = nil
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexpr = nil
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:990
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = nil
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.queryexpr = nil
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 168:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1082
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1086
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1112
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1208
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1222
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1232
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1238
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1244
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1271
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 228:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1383
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1401
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexprs = nil
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1417
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1444
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1448
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1452
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1458
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 262:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1462
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 265:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 268:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 269:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 270:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 271:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 272:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 273:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1508
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1514
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1524
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = nil
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1535
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1541
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1545
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1555
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1560
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1566
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1571
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1576
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1596
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1606
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 298:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1634
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = nil
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1758
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = nil
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1768
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1778
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1808
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1818
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1828
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 341:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1838
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1842
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 343:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 344:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1858
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1874
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1879
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.elseexpr = Else{}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1906
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1910
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.elseexpr = Else{}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.elseexpr = Else{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1946
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.elseexpr = Else{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2020
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2040
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2084
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2100
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2110
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2120
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2126
		{
			yyVAL.token = Token{}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2130
		{
			yyVAL.token = yyDollar[1].token
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.token = Token{}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2140
		{
			yyVAL.token = yyDollar[1].token
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2146
		{
			yyVAL.token = Token{}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2150
		{
			yyVAL.token = yyDollar[1].token
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.token = Token{}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2160
		{
			yyVAL.token = yyDollar[1].token
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2166
		{
			yyVAL.token = yyDollar[1].token
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2170
		{
			yyVAL.token = yyDollar[1].token
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2176
		{
			yyVAL.token = Token{}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2180
		{
			yyVAL.token = yyDollar[1].token
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2186
		{
			yyVAL.token = Token{}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2190
		{
			yyVAL.token = yyDollar[1].token
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2196
		{
			yyVAL.token = Token{}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2200
		{
			yyVAL.token = yyDollar[1].token
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2206
		{
			yyVAL.token = yyDollar[1].token
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2210
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
