// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const AS = 57369
const DUAL = 57370
const STDIN = 57371
const RECURSIVE = 57372
const CREATE = 57373
const ADD = 57374
const DROP = 57375
const ALTER = 57376
const TABLE = 57377
const FIRST = 57378
const LAST = 57379
const AFTER = 57380
const BEFORE = 57381
const DEFAULT = 57382
const RENAME = 57383
const TO = 57384
const VIEW = 57385
const ORDER = 57386
const GROUP = 57387
const HAVING = 57388
const BY = 57389
const ASC = 57390
const DESC = 57391
const LIMIT = 57392
const OFFSET = 57393
const PERCENT = 57394
const JOIN = 57395
const INNER = 57396
const OUTER = 57397
const LEFT = 57398
const RIGHT = 57399
const FULL = 57400
const CROSS = 57401
const ON = 57402
const USING = 57403
const NATURAL = 57404
const UNION = 57405
const INTERSECT = 57406
const EXCEPT = 57407
const ALL = 57408
const ANY = 57409
const EXISTS = 57410
const IN = 57411
const AND = 57412
const OR = 57413
const NOT = 57414
const BETWEEN = 57415
const LIKE = 57416
const IS = 57417
const NULL = 57418
const DISTINCT = 57419
const WITH = 57420
const RANGE = 57421
const UNBOUNDED = 57422
const PRECEDING = 57423
const FOLLOWING = 57424
const CURRENT = 57425
const ROW = 57426
const CASE = 57427
const IF = 57428
const ELSEIF = 57429
const WHILE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const DO = 57434
const END = 57435
const DECLARE = 57436
const CURSOR = 57437
const FOR = 57438
const FETCH = 57439
const OPEN = 57440
const CLOSE = 57441
const DISPOSE = 57442
const PREPARE = 57443
const NEXT = 57444
const PRIOR = 57445
const ABSOLUTE = 57446
const RELATIVE = 57447
const SEPARATOR = 57448
const PARTITION = 57449
const OVER = 57450
const COMMIT = 57451
const ROLLBACK = 57452
const CONTINUE = 57453
const BREAK = 57454
const EXIT = 57455
const ECHO = 57456
const PRINT = 57457
const PRINTF = 57458
const SOURCE = 57459
const EXECUTE = 57460
const CHDIR = 57461
const PWD = 57462
const RELOAD = 57463
const REMOVE = 57464
const SYNTAX = 57465
const TRIGGER = 57466
const FUNCTION = 57467
const AGGREGATE = 57468
const BEGIN = 57469
const RETURN = 57470
const IGNORE = 57471
const WITHIN = 57472
const VAR = 57473
const SHOW = 57474
const TIES = 57475
const NULLS = 57476
const ROWS = 57477
const CSV = 57478
const JSON = 57479
const FIXED = 57480
const LTSV = 57481
const JSON_ROW = 57482
const JSON_TABLE = 57483
const COUNT = 57484
const JSON_OBJECT = 57485
const AGGREGATE_FUNCTION = 57486
const LIST_FUNCTION = 57487
const ANALYTIC_FUNCTION = 57488
const FUNCTION_NTH = 57489
const FUNCTION_WITH_INS = 57490
const COMPARISON_OP = 57491
const STRING_OP = 57492
const SUBSTITUTION_OP = 57493
const UMINUS = 57494
const UPLUS = 57495

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2455

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 198,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 19,
	1, 24,
	87, 24,
	89, 24,
	91, 24,
	93, 24,
	154, 24,
	-2, 218,
	-1, 30,
	1, 74,
	87, 74,
	89, 74,
	91, 74,
	93, 74,
	154, 74,
	-2, 230,
	-1, 107,
	17, 198,
	19, 198,
	22, 198,
	24, 198,
	-2, 1,
	-1, 109,
	161, 288,
	-2, 198,
	-1, 116,
	63, 178,
	64, 178,
	65, 178,
	-2, 189,
	-1, 150,
	1, 118,
	87, 118,
	89, 118,
	91, 118,
	93, 118,
	154, 118,
	-2, 212,
	-1, 151,
	1, 159,
	87, 159,
	89, 159,
	91, 159,
	93, 159,
	154, 159,
	-2, 218,
	-1, 156,
	1, 152,
	87, 152,
	89, 152,
	91, 152,
	93, 152,
	154, 152,
	-2, 218,
	-1, 157,
	1, 153,
	87, 153,
	89, 153,
	91, 153,
	93, 153,
	154, 153,
	-2, 218,
	-1, 158,
	1, 154,
	87, 154,
	89, 154,
	91, 154,
	93, 154,
	154, 154,
	-2, 218,
	-1, 159,
	1, 157,
	87, 157,
	89, 157,
	91, 157,
	93, 157,
	154, 157,
	-2, 212,
	-1, 160,
	1, 158,
	87, 158,
	89, 158,
	91, 158,
	93, 158,
	154, 158,
	-2, 218,
	-1, 163,
	1, 165,
	87, 165,
	89, 165,
	91, 165,
	93, 165,
	154, 165,
	-2, 212,
	-1, 164,
	1, 166,
	87, 166,
	89, 166,
	91, 166,
	93, 166,
	154, 166,
	-2, 218,
	-1, 220,
	87, 1,
	91, 1,
	93, 1,
	-2, 198,
	-1, 238,
	160, 331,
	-2, 433,
	-1, 239,
	160, 332,
	-2, 434,
	-1, 240,
	160, 333,
	-2, 435,
	-1, 241,
	160, 334,
	-2, 436,
	-1, 270,
	4, 140,
	133, 140,
	134, 140,
	135, 140,
	136, 140,
	137, 140,
	138, 140,
	139, 140,
	-2, 218,
	-1, 271,
	4, 141,
	133, 141,
	134, 141,
	135, 141,
	136, 141,
	137, 141,
	138, 141,
	139, 141,
	-2, 218,
	-1, 281,
	1, 170,
	87, 170,
	89, 170,
	91, 170,
	93, 170,
	154, 170,
	-2, 218,
	-1, 288,
	93, 4,
	-2, 198,
	-1, 297,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 258,
	-1, 298,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 260,
	-1, 307,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 270,
	-1, 355,
	93, 1,
	-2, 198,
	-1, 368,
	53, 451,
	-2, 377,
	-1, 400,
	1, 76,
	87, 76,
	89, 76,
	91, 76,
	93, 76,
	154, 76,
	-2, 218,
	-1, 401,
	1, 77,
	87, 77,
	89, 77,
	91, 77,
	93, 77,
	154, 77,
	-2, 212,
	-1, 402,
	1, 78,
	87, 78,
	89, 78,
	91, 78,
	93, 78,
	154, 78,
	-2, 218,
	-1, 403,
	1, 79,
	87, 79,
	89, 79,
	91, 79,
	93, 79,
	154, 79,
	-2, 212,
	-1, 404,
	1, 145,
	87, 145,
	89, 145,
	91, 145,
	93, 145,
	154, 145,
	-2, 212,
	-1, 405,
	1, 146,
	87, 146,
	89, 146,
	91, 146,
	93, 146,
	154, 146,
	-2, 218,
	-1, 406,
	1, 147,
	87, 147,
	89, 147,
	91, 147,
	93, 147,
	154, 147,
	-2, 212,
	-1, 407,
	1, 148,
	87, 148,
	89, 148,
	91, 148,
	93, 148,
	154, 148,
	-2, 218,
	-1, 410,
	1, 113,
	87, 113,
	89, 113,
	91, 113,
	93, 113,
	154, 113,
	164, 113,
	-2, 218,
	-1, 415,
	1, 375,
	87, 375,
	89, 375,
	91, 375,
	93, 375,
	154, 375,
	-2, 218,
	-1, 422,
	1, 171,
	87, 171,
	89, 171,
	91, 171,
	93, 171,
	154, 171,
	-2, 218,
	-1, 448,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 271,
	-1, 478,
	93, 1,
	-2, 198,
	-1, 485,
	89, 1,
	91, 1,
	93, 1,
	-2, 198,
	-1, 488,
	1, 194,
	51, 194,
	87, 194,
	89, 194,
	91, 194,
	93, 194,
	96, 194,
	154, 194,
	161, 194,
	-2, 218,
	-1, 504,
	161, 329,
	164, 329,
	-2, 212,
	-1, 556,
	87, 4,
	89, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 559,
	93, 4,
	-2, 198,
	-1, 560,
	93, 4,
	-2, 198,
	-1, 597,
	1, 197,
	87, 197,
	89, 197,
	91, 197,
	93, 197,
	96, 197,
	154, 197,
	161, 197,
	-2, 218,
	-1, 629,
	17, 461,
	78, 461,
	160, 461,
	-2, 83,
	-1, 655,
	87, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 660,
	93, 4,
	-2, 198,
	-1, 661,
	93, 4,
	-2, 198,
	-1, 683,
	87, 1,
	91, 1,
	93, 1,
	-2, 198,
	-1, 717,
	1, 91,
	87, 91,
	89, 91,
	91, 91,
	93, 91,
	154, 91,
	-2, 212,
	-1, 718,
	1, 92,
	87, 92,
	89, 92,
	91, 92,
	93, 92,
	154, 92,
	-2, 218,
	-1, 720,
	93, 6,
	-2, 198,
	-1, 726,
	161, 124,
	164, 124,
	-2, 218,
	-1, 731,
	93, 4,
	-2, 198,
	-1, 787,
	93, 6,
	-2, 198,
	-1, 788,
	93, 6,
	-2, 198,
	-1, 792,
	93, 4,
	-2, 198,
	-1, 796,
	89, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 826,
	87, 6,
	89, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 832,
	154, 58,
	-2, 218,
	-1, 866,
	87, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 869,
	93, 8,
	-2, 198,
	-1, 874,
	93, 6,
	-2, 198,
	-1, 877,
	87, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 899,
	93, 6,
	-2, 198,
	-1, 926,
	93, 6,
	-2, 198,
	-1, 930,
	89, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 932,
	87, 8,
	89, 8,
	91, 8,
	93, 8,
	-2, 198,
	-1, 935,
	93, 8,
	-2, 198,
	-1, 936,
	93, 8,
	-2, 198,
	-1, 950,
	87, 8,
	91, 8,
	93, 8,
	-2, 198,
	-1, 959,
	87, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 964,
	93, 8,
	-2, 198,
	-1, 977,
	93, 8,
	-2, 198,
	-1, 981,
	89, 8,
	91, 8,
	93, 8,
	-2, 198,
	-1, 1006,
	87, 8,
	91, 8,
	93, 8,
	-2, 198,
}

const yyPrivate = 57344

const yyLast = 3382

var yyAct = [...]int{

	115, 19, 976, 975, 867, 489, 924, 328, 986, 791,
	925, 845, 110, 30, 951, 656, 321, 882, 529, 113,
	423, 25, 108, 790, 175, 368, 5, 764, 477, 636,
	606, 582, 631, 1, 847, 846, 544, 547, 616, 151,
	222, 387, 152, 153, 546, 156, 157, 158, 160, 85,
	164, 233, 430, 24, 497, 62, 429, 23, 378, 225,
	598, 326, 226, 414, 408, 161, 509, 169, 95, 173,
	367, 121, 508, 245, 323, 476, 637, 373, 231, 243,
	76, 74, 180, 170, 129, 129, 467, 132, 172, 127,
	381, 526, 218, 171, 209, 901, 190, 199, 198, 189,
	188, 191, 187, 202, 203, 823, 203, 456, 19, 202,
	169, 202, 202, 273, 425, 3, 784, 116, 870, 130,
	30, 713, 279, 438, 174, 513, 221, 514, 515, 510,
	507, 172, 224, 511, 228, 513, 171, 514, 515, 510,
	507, 219, 289, 511, 762, 705, 172, 763, 270, 271,
	184, 171, 783, 648, 693, 195, 649, 194, 193, 676,
	24, 646, 196, 197, 23, 250, 611, 281, 431, 612,
	645, 244, 195, 630, 194, 193, 185, 184, 613, 196,
	197, 89, 195, 186, 194, 193, 261, 195, 284, 196,
	197, 280, 609, 601, 196, 197, 232, 290, 554, 551,
	167, 293, 454, 377, 253, 190, 199, 198, 189, 188,
	191, 187, 203, 290, 365, 294, 441, 202, 290, 254,
	494, 19, 3, 941, 167, 278, 940, 921, 359, 920,
	919, 918, 292, 30, 70, 512, 917, 290, 896, 895,
	304, 122, 623, 118, 319, 893, 119, 891, 117, 890,
	881, 777, 880, 862, 351, 824, 105, 339, 340, 789,
	761, 744, 743, 742, 116, 400, 402, 405, 407, 410,
	741, 740, 70, 24, 410, 415, 305, 23, 737, 415,
	415, 715, 299, 422, 712, 185, 184, 692, 675, 19,
	673, 195, 186, 194, 193, 672, 105, 421, 196, 197,
	751, 30, 671, 665, 663, 644, 642, 629, 363, 587,
	129, 580, 579, 578, 567, 435, 305, 380, 453, 122,
	451, 470, 170, 352, 286, 385, 287, 172, 285, 894,
	397, 543, 171, 892, 853, 3, 388, 852, 413, 383,
	384, 468, 419, 420, 393, 851, 436, 850, 849, 442,
	819, 814, 447, 811, 495, 418, 19, 809, 449, 450,
	808, 452, 488, 802, 801, 584, 563, 503, 30, 320,
	493, 337, 338, 519, 462, 461, 96, 440, 463, 464,
	444, 443, 347, 460, 124, 172, 459, 458, 474, 481,
	496, 466, 457, 399, 172, 398, 366, 223, 518, 171,
	465, 106, 217, 216, 124, 206, 205, 204, 24, 172,
	211, 267, 23, 265, 531, 541, 610, 172, 502, 172,
	932, 826, 539, 556, 542, 107, 506, 255, 557, 244,
	471, 472, 167, 499, 956, 812, 553, 345, 810, 691,
	473, 689, 807, 232, 501, 679, 874, 520, 558, 89,
	748, 746, 788, 525, 549, 527, 528, 521, 787, 535,
	537, 564, 124, 396, 679, 257, 532, 436, 720, 386,
	3, 749, 747, 859, 857, 806, 805, 596, 804, 19,
	592, 134, 803, 745, 739, 848, 19, 207, 597, 395,
	172, 30, 586, 1005, 208, 171, 993, 570, 30, 979,
	967, 575, 576, 577, 346, 97, 98, 99, 100, 101,
	102, 103, 591, 966, 958, 1006, 936, 256, 583, 595,
	624, 585, 942, 937, 931, 266, 605, 264, 928, 568,
	876, 24, 536, 133, 873, 23, 872, 836, 24, 135,
	825, 800, 23, 799, 583, 794, 734, 258, 259, 618,
	733, 682, 410, 590, 589, 415, 555, 19, 482, 480,
	19, 19, 978, 136, 607, 935, 977, 639, 869, 30,
	927, 608, 30, 30, 926, 981, 661, 654, 620, 625,
	658, 659, 793, 621, 619, 172, 792, 1008, 660, 560,
	662, 559, 479, 3, 288, 977, 478, 964, 926, 899,
	3, 792, 731, 478, 357, 607, 355, 690, 959, 493,
	950, 930, 666, 667, 668, 670, 650, 877, 652, 866,
	796, 683, 571, 572, 573, 574, 96, 655, 485, 220,
	961, 674, 952, 879, 868, 669, 96, 686, 657, 353,
	699, 700, 718, 227, 96, 707, 983, 982, 726, 709,
	948, 106, 843, 697, 842, 685, 19, 684, 732, 704,
	688, 19, 19, 798, 695, 698, 797, 694, 30, 236,
	653, 708, 978, 30, 30, 927, 729, 793, 499, 479,
	1012, 735, 736, 722, 19, 1004, 728, 359, 973, 957,
	723, 724, 913, 875, 753, 681, 30, 997, 946, 840,
	593, 549, 725, 710, 711, 549, 772, 1003, 750, 991,
	1001, 1002, 1014, 192, 172, 1000, 990, 754, 989, 759,
	758, 19, 678, 599, 760, 70, 583, 767, 768, 769,
	172, 600, 19, 30, 251, 773, 24, 987, 211, 999,
	23, 172, 987, 775, 30, 774, 776, 581, 871, 600,
	342, 93, 795, 439, 341, 97, 98, 99, 100, 101,
	102, 103, 607, 971, 291, 97, 98, 99, 100, 101,
	102, 103, 70, 97, 98, 99, 100, 101, 102, 103,
	344, 343, 827, 815, 145, 146, 829, 832, 19, 19,
	816, 382, 533, 19, 839, 820, 822, 19, 3, 210,
	30, 30, 828, 248, 817, 30, 77, 274, 583, 30,
	831, 1010, 770, 838, 988, 837, 985, 841, 94, 988,
	302, 856, 268, 172, 301, 303, 617, 19, 844, 114,
	969, 703, 861, 309, 308, 779, 702, 970, 863, 30,
	972, 830, 701, 855, 854, 615, 855, 858, 487, 614,
	143, 144, 147, 148, 361, 162, 915, 878, 247, 248,
	249, 885, 886, 887, 888, 603, 604, 19, 884, 900,
	19, 628, 362, 168, 513, 19, 514, 515, 19, 30,
	732, 627, 30, 752, 523, 200, 201, 30, 855, 889,
	30, 229, 883, 647, 213, 214, 641, 640, 914, 275,
	19, 916, 779, 779, 922, 513, 933, 514, 515, 510,
	507, 821, 30, 511, 638, 126, 168, 756, 757, 114,
	125, 939, 183, 493, 938, 835, 934, 19, 945, 855,
	923, 19, 943, 19, 392, 63, 19, 19, 738, 30,
	727, 779, 721, 30, 719, 30, 389, 390, 30, 30,
	388, 19, 960, 965, 643, 391, 632, 633, 634, 635,
	19, 552, 900, 30, 455, 19, 411, 230, 137, 139,
	379, 364, 30, 687, 283, 246, 376, 30, 19, 996,
	994, 779, 19, 277, 903, 992, 908, 276, 272, 779,
	30, 296, 297, 298, 30, 300, 138, 90, 307, 90,
	310, 311, 312, 313, 314, 315, 316, 19, 1011, 965,
	162, 327, 417, 1007, 779, 416, 1015, 89, 179, 30,
	412, 182, 907, 64, 348, 128, 963, 898, 949, 730,
	162, 953, 954, 354, 358, 8, 498, 7, 909, 833,
	834, 779, 6, 356, 59, 779, 962, 903, 324, 908,
	903, 903, 908, 908, 325, 370, 369, 327, 234, 237,
	980, 1009, 394, 984, 968, 903, 955, 908, 84, 58,
	57, 61, 54, 995, 779, 60, 55, 998, 865, 903,
	755, 908, 602, 491, 490, 907, 53, 162, 907, 907,
	181, 486, 903, 360, 908, 626, 903, 522, 908, 120,
	18, 909, 1013, 907, 909, 909, 17, 65, 446, 142,
	448, 15, 162, 548, 545, 14, 409, 907, 897, 909,
	13, 903, 12, 908, 9, 16, 912, 162, 11, 10,
	907, 904, 780, 909, 907, 513, 902, 514, 515, 510,
	507, 765, 766, 511, 162, 162, 909, 778, 426, 424,
	909, 929, 4, 176, 162, 2, 0, 0, 0, 907,
	358, 0, 0, 0, 483, 0, 0, 0, 56, 492,
	96, 0, 0, 0, 0, 909, 0, 0, 944, 96,
	0, 0, 947, 0, 190, 199, 524, 189, 188, 191,
	187, 0, 0, 242, 123, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 96, 71, 72, 73,
	0, 93, 75, 89, 0, 90, 91, 0, 67, 0,
	0, 131, 0, 0, 0, 114, 140, 141, 0, 149,
	150, 106, 0, 0, 70, 155, 0, 0, 0, 159,
	0, 163, 565, 165, 166, 212, 0, 0, 0, 0,
	0, 327, 0, 162, 185, 184, 0, 162, 162, 162,
	195, 186, 194, 193, 0, 0, 0, 196, 197, 0,
	86, 0, 588, 0, 87, 0, 0, 0, 94, 0,
	0, 594, 0, 96, 215, 0, 0, 112, 111, 97,
	98, 99, 100, 101, 102, 103, 178, 92, 97, 98,
	99, 100, 101, 102, 103, 0, 0, 371, 236, 0,
	235, 235, 0, 0, 0, 0, 0, 252, 235, 0,
	0, 0, 0, 0, 0, 260, 235, 262, 263, 0,
	0, 123, 0, 177, 269, 97, 98, 99, 100, 101,
	102, 103, 105, 0, 83, 81, 82, 104, 0, 306,
	0, 0, 0, 0, 0, 96, 0, 70, 0, 78,
	79, 88, 66, 664, 96, 0, 306, 306, 162, 162,
	162, 162, 0, 0, 295, 96, 0, 0, 0, 371,
	236, 677, 0, 96, 71, 72, 73, 517, 93, 75,
	89, 0, 90, 91, 317, 67, 330, 0, 492, 0,
	236, 375, 0, 0, 0, 375, 0, 696, 106, 162,
	349, 0, 97, 98, 99, 238, 239, 240, 241, 0,
	374, 0, 235, 0, 706, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 714, 0, 0, 235, 372,
	0, 0, 330, 0, 0, 0, 0, 86, 0, 0,
	0, 87, 0, 0, 358, 94, 401, 403, 404, 406,
	0, 306, 0, 0, 112, 111, 0, 306, 306, 235,
	0, 0, 0, 0, 92, 96, 0, 350, 0, 0,
	0, 434, 96, 437, 97, 98, 99, 238, 239, 240,
	241, 0, 374, 97, 98, 99, 100, 101, 102, 103,
	306, 469, 469, 469, 97, 98, 99, 238, 239, 240,
	241, 372, 97, 98, 99, 100, 101, 102, 103, 105,
	0, 332, 81, 331, 333, 334, 335, 336, 0, 0,
	0, 375, 0, 0, 329, 375, 78, 79, 88, 66,
	123, 0, 123, 123, 0, 0, 0, 0, 813, 0,
	0, 0, 0, 0, 330, 0, 500, 235, 504, 0,
	162, 516, 818, 0, 235, 0, 0, 0, 235, 235,
	190, 199, 198, 189, 188, 191, 187, 0, 530, 114,
	0, 534, 500, 500, 538, 0, 0, 540, 530, 0,
	0, 550, 0, 0, 0, 0, 190, 199, 198, 189,
	188, 191, 187, 0, 97, 98, 99, 100, 101, 102,
	103, 97, 98, 99, 100, 101, 102, 103, 864, 0,
	0, 0, 96, 0, 318, 0, 0, 306, 0, 0,
	561, 562, 96, 190, 530, 0, 189, 188, 191, 187,
	154, 0, 0, 0, 0, 0, 330, 569, 0, 0,
	185, 184, 0, 306, 0, 0, 195, 186, 194, 193,
	0, 0, 860, 196, 197, 358, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 185, 184, 0, 0,
	0, 162, 195, 186, 194, 193, 0, 500, 0, 196,
	197, 475, 0, 0, 0, 190, 199, 198, 189, 188,
	191, 187, 0, 114, 235, 0, 0, 0, 0, 622,
	0, 0, 492, 185, 184, 0, 0, 0, 0, 195,
	186, 194, 193, 0, 0, 534, 196, 197, 500, 0,
	190, 199, 198, 189, 188, 191, 187, 0, 0, 0,
	306, 0, 0, 0, 651, 0, 0, 0, 0, 358,
	353, 97, 98, 99, 100, 101, 102, 103, 0, 0,
	0, 97, 98, 99, 100, 101, 102, 103, 0, 0,
	0, 0, 0, 375, 375, 185, 184, 0, 0, 0,
	0, 195, 186, 194, 193, 0, 0, 0, 196, 197,
	280, 0, 0, 330, 190, 199, 198, 189, 188, 191,
	187, 500, 0, 0, 0, 235, 235, 235, 0, 0,
	185, 184, 0, 0, 0, 0, 195, 186, 194, 193,
	0, 0, 530, 196, 197, 0, 500, 500, 0, 0,
	0, 0, 716, 717, 0, 306, 0, 0, 0, 0,
	96, 71, 72, 73, 0, 93, 75, 89, 0, 90,
	91, 20, 67, 0, 0, 0, 32, 33, 0, 0,
	375, 375, 375, 0, 0, 106, 0, 26, 41, 0,
	27, 0, 0, 0, 185, 184, 0, 0, 0, 0,
	195, 186, 194, 193, 0, 500, 680, 196, 197, 0,
	0, 0, 96, 235, 235, 235, 0, 771, 0, 89,
	0, 0, 0, 0, 86, 534, 0, 0, 87, 0,
	0, 0, 94, 0, 70, 0, 0, 306, 0, 0,
	0, 906, 905, 0, 785, 0, 0, 0, 0, 375,
	29, 92, 0, 36, 34, 35, 31, 37, 0, 0,
	0, 0, 0, 0, 0, 39, 40, 432, 433, 0,
	44, 45, 46, 47, 38, 49, 50, 51, 42, 48,
	52, 0, 235, 0, 786, 0, 0, 28, 43, 97,
	98, 99, 100, 101, 102, 103, 105, 0, 83, 81,
	82, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 79, 88, 66, 0, 0, 0,
	0, 0, 0, 96, 71, 72, 73, 0, 93, 75,
	89, 530, 90, 91, 20, 67, 0, 0, 0, 32,
	33, 97, 98, 99, 100, 101, 102, 103, 106, 0,
	26, 41, 0, 27, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 910, 911, 0, 0, 0, 86, 0, 0,
	0, 87, 0, 0, 0, 94, 0, 70, 0, 0,
	0, 0, 0, 0, 428, 427, 0, 68, 0, 0,
	0, 0, 0, 29, 92, 0, 36, 34, 35, 31,
	37, 0, 0, 0, 0, 0, 0, 330, 39, 40,
	432, 433, 69, 44, 45, 46, 47, 38, 49, 50,
	51, 42, 48, 52, 0, 0, 0, 0, 0, 0,
	28, 43, 97, 98, 99, 100, 101, 102, 103, 105,
	0, 83, 81, 82, 104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 79, 88, 66,
	96, 71, 72, 73, 0, 93, 75, 89, 0, 90,
	91, 20, 67, 0, 0, 0, 32, 33, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 26, 41, 0,
	27, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 0, 0, 0, 87, 0,
	0, 0, 94, 0, 70, 0, 0, 0, 0, 0,
	0, 782, 781, 0, 785, 0, 0, 0, 0, 0,
	29, 92, 0, 36, 34, 35, 31, 37, 0, 0,
	0, 0, 0, 0, 0, 39, 40, 0, 0, 0,
	44, 45, 46, 47, 38, 49, 50, 51, 42, 48,
	52, 0, 0, 0, 786, 0, 0, 28, 43, 97,
	98, 99, 100, 101, 102, 103, 105, 0, 83, 81,
	82, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 79, 88, 66, 96, 71, 72,
	73, 0, 93, 75, 89, 0, 90, 91, 20, 67,
	0, 0, 0, 32, 33, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 26, 41, 0, 27, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 87, 0, 0, 0, 94,
	0, 70, 0, 0, 0, 0, 0, 0, 22, 21,
	0, 68, 0, 0, 0, 0, 0, 29, 92, 0,
	36, 34, 35, 31, 37, 0, 0, 0, 0, 0,
	0, 0, 39, 40, 0, 0, 69, 44, 45, 46,
	47, 38, 49, 50, 51, 42, 48, 52, 0, 0,
	0, 0, 0, 0, 28, 43, 97, 98, 99, 100,
	101, 102, 103, 105, 0, 83, 81, 82, 104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 79, 88, 66, 96, 71, 72, 73, 0, 93,
	75, 89, 0, 90, 91, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 96, 71, 72, 73, 0, 93, 75,
	89, 0, 90, 91, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 87, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 0, 86, 0, 0,
	0, 87, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 98, 99, 100, 101, 102, 103,
	105, 0, 332, 81, 331, 333, 334, 335, 336, 0,
	0, 0, 0, 0, 0, 329, 0, 78, 79, 88,
	66, 322, 97, 98, 99, 100, 101, 102, 103, 105,
	0, 332, 81, 331, 333, 334, 335, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 79, 88, 66,
	96, 71, 72, 73, 0, 93, 75, 89, 0, 90,
	91, 0, 67, 0, 0, 0, 0, 0, 190, 199,
	198, 189, 188, 191, 187, 106, 0, 0, 96, 71,
	72, 73, 0, 93, 75, 89, 0, 90, 91, 484,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 0, 0, 0, 87, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 86, 0, 0, 0, 87, 0, 185, 184,
	94, 251, 0, 0, 195, 186, 194, 193, 0, 112,
	111, 196, 197, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	98, 99, 100, 101, 102, 103, 105, 0, 83, 81,
	82, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 78, 79, 88, 66, 97, 98, 99,
	100, 101, 102, 103, 105, 0, 83, 81, 82, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 79, 88, 66, 96, 71, 72, 73, 0,
	93, 75, 89, 0, 90, 91, 0, 67, 0, 0,
	0, 0, 0, 190, 199, 198, 189, 188, 191, 187,
	106, 0, 0, 96, 71, 72, 73, 0, 93, 75,
	89, 0, 90, 91, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 87, 0, 0, 0, 94, 0, 70,
	0, 0, 0, 0, 0, 0, 112, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 86, 0, 0,
	0, 87, 0, 185, 184, 94, 0, 0, 0, 195,
	186, 194, 193, 0, 112, 111, 196, 197, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 98, 99, 100, 101, 102,
	103, 105, 0, 83, 81, 82, 104, 0, 0, 0,
	0, 190, 566, 198, 189, 188, 191, 187, 78, 79,
	88, 66, 97, 98, 99, 100, 101, 102, 103, 105,
	0, 83, 81, 82, 104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 79, 88, 66,
	96, 71, 72, 73, 0, 93, 75, 89, 0, 90,
	91, 0, 67, 0, 0, 0, 0, 0, 190, 445,
	198, 189, 188, 191, 187, 106, 0, 0, 96, 71,
	72, 73, 0, 93, 75, 89, 0, 90, 91, 0,
	67, 185, 184, 0, 0, 0, 0, 195, 186, 194,
	193, 0, 0, 505, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 0, 0, 0, 87, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 86, 0, 0, 0, 87, 0, 185, 184,
	94, 0, 0, 0, 195, 186, 194, 193, 0, 112,
	111, 196, 197, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	98, 99, 100, 101, 102, 103, 105, 0, 83, 81,
	82, 104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 79, 88, 109, 97, 98, 99,
	100, 101, 102, 103, 105, 0, 83, 81, 82, 104,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 79, 88, 66, 96, 71, 282, 73, 0,
	93, 75, 89, 0, 90, 91, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 87, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 98, 99, 100, 101, 102,
	103, 105, 0, 83, 81, 82, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 79,
	88, 66,
}
var yyPact = [...]int{

	2323, -1000, 271, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3036, 2879, -1000, -1000, 224, 885, 880, 1006, 1898,
	-1000, 438, 984, 986, 1488, 1488, 748, 1488, 2879, -1000,
	-1000, 2879, 2879, 1638, 2879, 2879, 2879, 2879, 2879, 2879,
	-1000, 1488, 1488, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 281, -1000, -1000, -1000, 2851, -1000, 1212, 1012,
	892, -1000, -1000, -1000, -1000, -1000, -1000, 2804, 2879, 2879,
	-54, 247, 246, 245, -1000, 338, 244, 2879, 2879, -1000,
	-1000, -1000, 1488, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 243, 242, -73, 2323, 539, 2851,
	-1000, 237, 2879, 554, 2804, -1000, 847, 942, 1381, 1175,
	957, 795, 657, -1000, 647, 1488, 1381, -1000, 55, 276,
	-1000, 422, -1000, 1488, 640, 1488, 1488, 371, 369, -1000,
	761, -1000, 1488, -1000, -1000, -1000, -1000, 2879, 2879, 970,
	52, 746, 857, 969, -1000, 965, -1000, -1000, 61, -54,
	-1000, -1000, 1636, -54, -1000, -1000, 3221, 2879, 27, 167,
	163, 165, 302, 502, 73, 695, 1006, -1000, -1000, -1000,
	-1000, 51, 1488, -1000, 2879, 2879, 2879, 666, 2879, 751,
	116, 2879, 767, 2879, 2879, 2879, 2879, 2879, 2879, 2879,
	-1000, -1000, 1628, 2694, 2480, 657, 657, 116, 116, 681,
	714, -1000, -1000, 1574, -1000, 362, 657, 2879, 1481, -1000,
	2323, 163, 162, 2879, 550, 515, 513, 2879, 804, 825,
	1381, 951, 50, -1000, -1000, -1000, -1000, 236, -1000, -1000,
	-1000, -1000, 1361, 958, 39, 947, 1361, 725, 725, 725,
	1389, -1000, 309, 914, 1006, 2879, 393, 303, 235, 233,
	-1000, -1000, -1000, -1000, 2879, 2879, 2879, 2879, 2879, 941,
	-1000, -1000, 1015, 2879, 2879, 1003, 1000, 1381, 2879, 2879,
	2879, -1000, 2879, 2804, -1000, -1000, -1000, -1000, 2009, 1488,
	1006, 1488, 54, 684, 892, 189, 17, 0, 0, 742,
	2989, 2879, 116, 2879, -1000, 2851, -1000, 0, 116, 116,
	32, 32, -1000, -1000, -1000, 1115, 1574, -1000, -1000, 159,
	2879, -1000, -1000, 157, 38, 937, -1000, 2804, -1000, -1000,
	-53, 232, 227, 226, 223, 215, 214, 2879, 2666, -1000,
	-1000, 116, 181, 181, 181, 666, -1000, 2879, 1537, -1000,
	-1000, 505, -1000, 2879, 466, 2323, 465, 2879, 2619, 538,
	797, 2879, 2509, 194, 622, 1381, 3064, 947, 71, 1370,
	-1000, -1000, 1289, -1000, 213, -1000, 1361, 640, 839, 2879,
	-1000, 302, -1000, 302, 302, -1000, 1488, 647, -1000, 632,
	372, 622, 1488, -1000, 2804, 1166, 1488, 647, 170, 1488,
	-1000, -54, -1000, -54, -54, -1000, -54, -1000, -1000, 35,
	934, 1006, -1000, -1000, -1000, 34, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 463, 269, -1000, -1000, 3036, 2879, -1000,
	-1000, -1000, -1000, -1000, 499, -1000, 33, 497, 1488, 1488,
	-1000, 206, 1488, -1000, -1000, 2879, 2932, -1000, 0, -1000,
	-1000, -1000, 153, -1000, 1389, 1488, 2694, 657, 657, 657,
	2879, 2879, 2879, 152, 151, 150, 677, -1000, 156, -1000,
	205, -1000, -1000, 423, 148, 2879, 461, 512, 2323, 2879,
	615, -1000, -1000, 2804, 2879, 2323, 381, 2879, 671, -1000,
	29, 817, 2804, -1000, 116, 622, -1000, 957, 28, 260,
	-62, -1000, 5, 14, -54, -73, -1000, 796, 792, 771,
	771, 820, 1361, -1000, -1000, -1000, -1000, 1488, 81, 2879,
	947, -1000, 835, 824, 2804, 739, -1000, -1000, 739, 146,
	9, -1000, 920, 1488, 874, -1000, 622, 855, 854, -1000,
	-1000, 145, -1000, 927, 144, 6, -1000, -1000, -3, 853,
	-8, 2879, 1488, -1000, 2879, 582, 2009, 537, 549, 2009,
	2009, 496, 484, 647, 143, 1574, 2879, -1000, -1000, -1000,
	142, 2879, 2879, 2666, 2879, 141, 134, 129, -1000, -1000,
	-1000, 116, 127, -5, 2879, -1000, 643, 315, 1735, 609,
	458, -1000, 531, -1000, 1671, 548, 954, -1000, -1000, 653,
	308, 2509, 305, -1000, -1000, -1000, 126, -10, 947, 622,
	2879, -1000, 2879, 640, 1361, 1361, 789, -1000, 783, 778,
	771, -1000, -1000, -1000, -19, -1000, -1000, 2879, 2879, 923,
	1488, -1000, -1000, -1000, 622, 622, 123, -43, 2879, 120,
	1488, 2879, 917, 341, 915, 1006, 1006, 2879, 913, 1006,
	-1000, -1000, -1000, -1000, -1000, 2009, 511, 2879, 457, 453,
	2009, 2009, 117, 911, 1574, 376, 110, 109, 102, 101,
	100, 375, 343, 342, -1000, -1000, 116, 136, -1000, 838,
	-1000, -1000, 608, 2323, -1000, -1000, 2879, -1000, -1000, -1000,
	-1000, 881, 694, 622, -1000, -1000, 2804, 99, -17, 820,
	1081, 1361, 1361, 1361, 759, 2879, 2804, -1000, 647, -1000,
	-1000, -1000, 920, 1488, 2804, -1000, -1000, -54, -1000, 647,
	2166, 331, -1000, -1000, -1000, 853, -1000, 325, 98, 495,
	452, 2009, 530, 578, 575, 450, 448, -1000, 204, 203,
	374, 370, 368, 367, 334, 200, 197, 304, 193, 301,
	-1000, 2879, 191, -1000, 592, -1000, -1000, -1000, 116, -1000,
	-1000, -1000, -1000, 2879, -1000, 2879, 190, 1081, 851, 820,
	1361, -56, 94, -1000, -1000, -1000, -1000, 447, 267, -1000,
	-1000, 3036, 2879, -1000, -1000, 2879, 2879, 2166, 2166, 898,
	444, 510, 2009, 2879, 614, -1000, 2009, -1000, -1000, 566,
	564, 647, 378, 188, 187, 185, 177, 174, 378, 378,
	366, 378, 365, 1511, 847, -1000, -1000, 92, 2804, 1488,
	-1000, 2879, 820, -1000, -1000, -1000, 2166, 529, 545, 476,
	49, 679, -1000, 443, 441, 319, 607, 437, -1000, 527,
	-1000, 544, -1000, -1000, 91, 89, -1000, 848, 821, 378,
	378, 378, 378, 378, 88, 847, 86, 173, 84, 169,
	-1000, 78, -1000, 77, 2804, -1000, 2166, 508, 2879, 1846,
	1488, 1488, -1000, -1000, 2166, -1000, 606, 2009, -1000, 2879,
	-1000, -1000, -1000, 809, 2879, 75, 70, 69, 68, 66,
	-1000, -1000, 378, -1000, 378, -1000, -1000, 483, 435, 2166,
	521, 431, 266, -1000, -1000, 3036, 2879, -1000, -1000, -1000,
	473, 424, 430, -1000, 590, 2509, -1000, -1000, -1000, -1000,
	-1000, -1000, 65, 62, 429, 507, 2166, 2879, 613, -1000,
	2166, 562, 1846, 520, 543, 1846, 1846, -1000, -1000, 299,
	-1000, -1000, 603, 421, -1000, 518, -1000, 541, -1000, -1000,
	1846, 506, 2879, 420, 407, -1000, 757, -1000, 602, 2166,
	-1000, 2879, 475, 406, 1846, 485, 559, 558, -1000, 736,
	637, 635, 625, -1000, 588, 403, 504, 1846, 2879, 612,
	-1000, 1846, -1000, -1000, 669, 634, -1000, 629, 623, -1000,
	-1000, -1000, -1000, 599, 400, -1000, 425, -1000, 498, 731,
	-1000, -1000, -1000, -1000, -1000, 594, 1846, -1000, 2879, -1000,
	630, -1000, -1000, 585, -1000, -1000,
}
var yyPgo = [...]int{

	0, 33, 20, 251, 95, 114, 168, 1155, 56, 1153,
	52, 1152, 1149, 1148, 1147, 152, 116, 1136, 1132, 1131,
	1129, 1128, 1125, 1124, 76, 29, 32, 1122, 1120, 1116,
	64, 1115, 37, 1114, 1113, 44, 36, 1111, 1109, 1107,
	1106, 1100, 26, 91, 71, 1099, 73, 58, 1097, 1095,
	17, 1093, 60, 1091, 21, 1090, 82, 1086, 81, 80,
	68, 806, 0, 61, 49, 31, 5, 1084, 1083, 1082,
	1080, 1168, 1076, 86, 1075, 1072, 1071, 40, 1070, 1069,
	1068, 7, 35, 11, 34, 1066, 1064, 8, 1063, 1061,
	51, 1059, 1058, 77, 79, 78, 1056, 25, 1055, 27,
	1054, 1048, 1044, 19, 62, 1043, 30, 16, 63, 70,
	18, 74, 1042, 1037, 1036, 54, 1035, 28, 75, 9,
	23, 10, 6, 2, 3, 59, 1033, 15, 1029, 4,
	1027, 14, 1026, 1201, 55, 24, 12, 1025, 89, 935,
	1023, 165, 94, 72, 38, 66, 90, 1021, 41, 713,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 6, 6, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 10, 10, 12,
	12, 11, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 13, 14, 14, 15, 15, 15, 16, 16, 17,
	17, 18, 18, 18, 18, 18, 19, 19, 19, 19,
	19, 19, 20, 20, 20, 20, 21, 21, 21, 21,
	21, 22, 22, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 24, 24, 25, 25, 26, 26, 26,
	26, 26, 27, 27, 27, 27, 27, 27, 27, 28,
	28, 28, 28, 29, 29, 30, 30, 31, 31, 31,
	31, 32, 33, 33, 34, 35, 35, 36, 36, 36,
	37, 37, 37, 37, 37, 38, 38, 38, 38, 38,
	38, 38, 39, 39, 39, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 41,
	41, 41, 42, 42, 43, 43, 43, 43, 44, 44,
	45, 46, 46, 47, 47, 48, 48, 49, 49, 50,
	50, 51, 51, 51, 52, 52, 53, 53, 54, 54,
	55, 55, 56, 56, 57, 57, 57, 57, 57, 57,
	58, 59, 60, 60, 60, 60, 60, 61, 61, 61,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 63, 64, 64, 64,
	65, 65, 66, 66, 67, 67, 68, 68, 69, 69,
	69, 70, 70, 71, 72, 73, 73, 73, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 75, 75, 75,
	75, 75, 75, 75, 76, 76, 76, 76, 77, 77,
	78, 78, 78, 78, 79, 79, 79, 79, 79, 80,
	80, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 82, 83, 83, 84, 84, 85, 85, 86,
	86, 86, 87, 87, 87, 88, 88, 89, 89, 90,
	90, 91, 91, 91, 91, 92, 92, 92, 92, 93,
	93, 96, 96, 96, 96, 97, 97, 97, 97, 97,
	97, 98, 98, 98, 98, 98, 98, 99, 99, 100,
	100, 101, 101, 101, 102, 103, 103, 104, 104, 105,
	105, 106, 106, 107, 107, 108, 108, 109, 109, 94,
	94, 95, 95, 110, 110, 111, 111, 112, 112, 112,
	112, 113, 114, 115, 115, 116, 116, 117, 117, 118,
	118, 119, 119, 120, 120, 121, 121, 122, 122, 123,
	123, 124, 124, 125, 125, 126, 126, 127, 127, 128,
	128, 129, 129, 130, 130, 131, 131, 132, 132, 133,
	133, 133, 133, 133, 133, 133, 133, 134, 135, 135,
	136, 137, 137, 138, 138, 139, 140, 141, 141, 142,
	142, 143, 143, 144, 144, 145, 145, 146, 146, 147,
	147, 148, 148, 149, 149,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 8, 8, 9, 9, 1, 1, 1, 2, 1,
	1, 7, 8, 6, 1, 1, 7, 8, 6, 1,
	1, 1, 1, 1, 6, 8, 8, 1, 2, 1,
	1, 7, 8, 6, 1, 1, 7, 8, 6, 1,
	1, 1, 2, 2, 1, 2, 4, 4, 4, 4,
	2, 1, 1, 6, 8, 5, 6, 8, 5, 7,
	7, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 5, 2, 4, 2, 3, 5, 6,
	8, 5, 3, 1, 3, 1, 3, 4, 2, 4,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 4, 4, 4, 4,
	4, 2, 2, 2, 2, 4, 4, 2, 2, 2,
	4, 1, 2, 2, 4, 2, 2, 1, 2, 2,
	3, 4, 5, 7, 5, 4, 4, 4, 1, 1,
	3, 0, 2, 0, 2, 0, 3, 0, 2, 0,
	3, 0, 3, 4, 0, 2, 0, 2, 0, 2,
	6, 9, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 3, 1, 6,
	1, 3, 1, 3, 2, 4, 1, 1, 0, 1,
	1, 1, 1, 3, 3, 3, 1, 6, 3, 3,
	3, 3, 4, 4, 5, 6, 6, 3, 4, 4,
	3, 4, 4, 4, 4, 4, 2, 3, 3, 3,
	3, 3, 2, 2, 3, 3, 2, 2, 0, 1,
	4, 3, 4, 4, 5, 5, 5, 5, 1, 5,
	10, 8, 9, 9, 9, 9, 9, 8, 8, 10,
	8, 10, 2, 1, 5, 0, 3, 2, 5, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 6, 6, 8, 1,
	1, 1, 6, 6, 1, 1, 2, 3, 1, 1,
	3, 4, 5, 6, 7, 5, 6, 2, 4, 1,
	1, 1, 3, 1, 5, 0, 1, 4, 5, 0,
	2, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 6, 9, 5,
	8, 7, 3, 1, 3, 5, 6, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 1, 3, 1, 3, 1, 1, 0, 1, 0,
	1, 0, 1, 0, 1, 1, 1, 0, 1, 0,
	1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -112, -113, -116, -23,
	-20, -21, -27, -28, -31, -37, -22, -40, -41, -62,
	15, 86, 85, -8, -10, -54, 31, 34, 131, 94,
	-136, 100, 20, 21, 98, 99, 97, 101, 118, 109,
	110, 32, 122, 132, 114, 115, 116, 117, 123, 119,
	120, 121, 124, -57, -75, -72, -71, -78, -79, -102,
	-74, -76, -134, -139, -140, -39, 160, 16, 88, 113,
	78, 5, 6, 7, -58, 10, -59, -61, 157, 158,
	-133, 143, 144, 142, -80, -64, 68, 72, 159, 11,
	13, 14, 95, 9, 76, -60, 4, 133, 134, 135,
	136, 137, 138, 139, 145, 140, 29, 154, -62, 160,
	-136, 86, 85, -103, -61, -62, -43, 24, 19, 22,
	-45, -44, 17, -71, 160, 35, 35, -138, -137, -134,
	-138, -133, -134, 95, 43, 101, 125, -139, 12, -139,
	-133, -133, -38, 102, 103, 36, 37, 104, 105, -133,
	-133, -62, -62, -62, 12, -133, -62, -62, -62, -133,
	-62, -107, -61, -133, -62, -133, -133, 151, -61, -62,
	-107, -42, -54, -62, -134, -135, -9, 131, 94, 6,
	-56, -55, -147, 30, 150, 149, 156, 75, 73, 72,
	69, 74, -149, 158, 157, 155, 162, 163, 71, 70,
	-61, -61, 165, 160, 160, 160, 160, 149, 156, -142,
	-149, 72, -71, -61, -61, -133, 160, 160, 165, -1,
	90, -107, -77, 160, -103, -125, -104, 89, -50, 44,
	25, -95, -93, -90, -92, -133, 29, -91, 136, 137,
	138, 139, 18, -94, -90, -46, 18, 63, 64, 65,
	-141, 77, -133, -93, 164, 151, 95, 43, 125, 126,
	-133, -90, -133, -133, 156, 42, 156, 42, 61, -133,
	-62, -62, 18, 61, 61, 42, 18, 18, 164, 61,
	164, -62, 6, -61, 161, 161, 161, 161, 92, 69,
	164, 69, -134, -135, 164, -133, -61, -61, -61, -142,
	-61, 73, 69, 74, -64, 160, -71, -61, 67, 66,
	-61, -61, -61, -61, -61, -61, -61, -133, 6, -77,
	-141, -107, 161, -111, -101, -100, -63, -61, -81, 155,
	-133, 144, 142, 145, 146, 147, 148, -141, -141, -64,
	-64, 73, 69, 67, 66, 75, 142, -141, -61, -133,
	6, -1, 161, 89, -126, 91, -105, 91, -61, -62,
	-51, 50, 47, -93, 20, 164, 160, -109, -97, -96,
	-98, 28, 160, -93, 141, -71, 18, 164, -47, 23,
	-109, -146, 66, -146, -146, -111, 160, -148, 27, 32,
	33, 41, 20, -138, -61, 96, 160, 27, 160, 160,
	-62, -133, -62, -133, -133, -62, -133, -62, -30, -29,
	-62, 25, 5, -30, -108, -62, 12, 12, -93, -108,
	-108, -107, -62, -2, -12, -5, -13, 86, 85, -8,
	-10, -6, 111, 112, -133, -135, -134, -133, 69, 69,
	-56, 27, 160, -58, -59, 70, -61, -64, -61, -64,
	-64, 161, -77, 161, 164, 27, 160, 160, 160, 160,
	160, 160, 160, -77, -77, -63, -64, -73, 160, -71,
	140, -73, -73, -142, -77, 164, -118, -117, 91, 87,
	93, -1, 93, -61, 90, 90, -53, 51, -62, -66,
	-67, -68, -61, -81, 26, 160, -42, -115, -114, -60,
	-133, -95, -90, -62, -133, 29, -47, 59, -143, -145,
	58, 62, 164, 54, 56, 57, -133, 27, -97, 160,
	-109, -94, -48, 45, -61, -44, -43, -44, -44, -110,
	-133, -42, -24, 160, -133, -60, 160, -60, -133, -42,
	-133, -110, -42, 161, -36, -33, -35, -32, -34, -134,
	-133, 164, 27, -135, 164, 93, 154, -62, -103, 92,
	92, -133, -133, 160, -110, -61, 70, 161, -111, -133,
	-77, -141, -141, -141, -141, -77, -77, -77, 161, 161,
	161, 70, -65, -64, 160, 98, 69, 161, -61, 93,
	-118, -1, -62, 85, -61, -1, 96, -62, -52, 52,
	78, 164, -69, 48, 49, -65, -106, -60, -46, 164,
	156, 161, 164, 164, 53, 53, -144, 55, -144, -143,
	-145, -109, -133, 161, -62, -47, -49, 46, 47, 161,
	164, -26, 36, 37, 38, 39, -25, -24, 40, -106,
	42, 42, 161, 27, 161, 164, 164, 40, 161, 164,
	-30, -133, -108, 88, -2, 90, -127, 89, -2, -2,
	92, 92, -42, 161, -61, 161, -77, -77, -77, -63,
	-77, 161, 161, 161, -64, 161, 164, -61, 79, 130,
	161, 86, 93, 90, -104, -125, 89, 19, -52, 133,
	-66, 134, 161, 164, -47, -115, -61, -77, -90, -97,
	-97, 53, 53, 53, -144, 164, -61, -107, -148, -110,
	-60, -60, 161, 164, -61, 161, -133, -133, -62, 27,
	127, 27, -32, -35, -35, -134, -62, 27, -36, -2,
	-128, 91, -62, 93, 93, -2, -2, 161, 27, 108,
	161, 161, 161, 161, 161, 108, 108, 129, 108, 129,
	-65, 164, 45, 86, -1, -70, 36, 37, 26, -42,
	-106, 161, 161, 164, -99, 60, 61, -97, -97, -97,
	53, -133, -62, -42, -26, -25, -42, -3, -14, -5,
	-18, 86, 85, -15, -16, 88, 128, 127, 127, 161,
	-120, -119, 91, 87, 93, -2, 90, 88, 88, 93,
	93, 160, 160, 108, 108, 108, 108, 108, 160, 160,
	134, 160, 134, -61, 160, -117, -65, -77, -61, 160,
	-99, 60, -97, 161, 161, 93, 154, -62, -103, -62,
	-134, -135, -62, -3, -3, 27, 93, -120, -2, -62,
	85, -2, 88, 88, -42, -83, -82, -84, 107, 160,
	160, 160, 160, 160, -82, -84, -83, 108, -82, 108,
	161, -50, 161, -110, -61, -3, 90, -129, 89, 92,
	69, 69, 93, 93, 127, 86, 93, 90, -127, 89,
	161, 161, -50, 44, 47, -83, -83, -83, -83, -82,
	161, 161, 160, 161, 160, 161, 161, -3, -130, 91,
	-62, -4, -17, -5, -19, 86, 85, -15, -16, -6,
	-133, -133, -3, 86, -2, 47, -107, 161, 161, 161,
	161, 161, -83, -82, -122, -121, 91, 87, 93, -3,
	90, 93, 154, -62, -103, 92, 92, 93, -119, -66,
	161, 161, 93, -122, -3, -62, 85, -3, 88, -4,
	90, -131, 89, -4, -4, -85, 135, 86, 93, 90,
	-129, 89, -4, -132, 91, -62, 93, 93, -86, 73,
	80, 6, 83, 86, -3, -124, -123, 91, 87, 93,
	-4, 90, 88, 88, -88, 80, -87, 6, 83, 81,
	81, 84, -121, 93, -124, -4, -62, 85, -4, 70,
	81, 81, 82, 84, 86, 93, 90, -131, 89, -89,
	80, -87, 86, -4, 82, -123,
}
var yyDef = [...]int{

	-2, -2, 2, 28, 29, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, -2,
	25, 0, 365, 44, 45, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 135, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	167, 0, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 231, 232, 233, 198, 235, 0, 37,
	459, 204, 205, 206, 207, 208, 209, 0, 0, 0,
	212, 0, 0, 0, 298, 449, 0, 0, 0, 437,
	445, 446, 0, 210, 211, 217, 429, 430, 431, 432,
	433, 434, 435, 436, 0, 0, 0, -2, 218, -2,
	230, 0, 365, 0, 366, 218, -2, 0, 0, 0,
	181, 0, 447, 179, 198, 0, 0, 72, 443, 441,
	73, 0, 75, 0, 0, 0, 0, 0, 0, 80,
	104, 106, 0, 136, 137, 138, 139, 0, 0, 0,
	-2, -2, 218, 218, 151, 163, -2, -2, -2, -2,
	-2, 162, 373, -2, -2, 168, 169, 0, 0, 218,
	0, 0, 0, 218, 229, 0, 0, 35, 36, 38,
	199, 202, 0, 460, 0, 463, 464, 449, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 283, 0, 288, 0, 447, 447, 463, 464, 0,
	0, 450, 276, 286, 287, 0, 447, 0, 0, 3,
	-2, 0, 0, 288, 0, 415, 369, 0, 191, 0,
	0, 0, 381, 339, 340, 329, 330, 0, -2, -2,
	-2, -2, 0, 0, 379, 183, 0, 457, 457, 457,
	0, 448, 461, 0, 0, 0, 0, 0, 0, 0,
	107, 112, 120, 134, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 205, 440, 219, 234, 237, 253, -2, 0,
	0, 0, 0, 0, 459, 0, 254, -2, -2, 0,
	0, 0, 0, 0, 267, 198, 238, -2, 0, 0,
	277, 278, 279, 280, 281, 284, 285, 213, 215, 0,
	288, 289, 291, 0, 385, 361, 363, 359, 360, 236,
	212, 0, 0, 0, 0, 0, 0, 288, 288, 259,
	261, 0, 0, 0, 0, 449, 144, 288, 0, 214,
	216, 399, 293, 0, 0, -2, 0, 0, 0, 218,
	196, 0, 0, 198, 0, 0, 0, 183, -2, 345,
	348, 349, 198, 341, 0, 344, 0, 0, 185, 0,
	182, 0, 458, 0, 0, 180, 0, 198, 462, 0,
	0, 0, 0, 444, 442, 198, 0, 198, 0, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, 105, 115,
	-2, 0, 117, 119, 160, -2, 149, 150, 164, 155,
	156, 374, -2, 0, 0, 39, 40, 0, 365, 49,
	50, 51, 26, 27, 0, 439, 438, 0, 0, 0,
	203, 0, 0, 262, 263, 0, 0, 268, -2, 272,
	274, 290, 0, 292, 0, 0, 288, 447, 447, 447,
	288, 288, 288, 0, 0, 0, 0, 269, 198, 256,
	0, 273, 275, 0, 0, 0, 0, 399, -2, 0,
	0, 416, 364, 370, 0, -2, 172, 0, -2, 190,
	242, 248, 246, 247, 0, 0, 389, 181, 393, 0,
	212, 382, 0, 218, -2, 330, 395, 0, 0, 453,
	453, 451, 0, 452, 455, 456, 346, 0, 451, 0,
	183, 380, 187, 0, 184, 175, 178, 176, 177, 0,
	383, 85, 97, 0, 93, 88, 0, 0, 0, 102,
	103, 0, 111, 0, 0, 127, 128, 122, 125, 121,
	0, 0, 0, 108, 0, 0, -2, 218, 0, -2,
	-2, 0, 0, 198, 0, 264, 0, 294, 386, 362,
	0, 288, 288, 288, 288, 0, 0, 0, 295, 296,
	297, 0, 0, 240, 0, 142, 0, 299, 0, 0,
	0, 400, 218, 43, 367, 413, 0, -2, 192, 194,
	0, 0, 244, 249, 250, 387, 0, 371, 183, 0,
	0, 335, 288, 0, 0, 0, 0, 454, 0, 0,
	453, 378, 347, 350, 218, 396, 174, 0, 0, -2,
	0, 86, 98, 99, 0, 0, 0, 95, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	116, 114, 376, 30, 5, -2, 419, 0, 0, 0,
	-2, -2, 0, 0, 265, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 255, 0, 0, 143, 0,
	239, 41, 0, -2, 368, 414, 0, 173, 193, 195,
	243, 0, 198, 0, 391, 394, 392, 0, 0, 351,
	451, 0, 0, 0, 0, 0, 188, 186, 198, 384,
	100, 101, 97, 0, 94, 89, 90, -2, -2, 198,
	-2, 0, 123, 129, 126, 0, -2, 0, 0, 403,
	0, -2, 218, 0, 0, 0, 0, 200, 0, 0,
	294, 295, 296, 297, 299, 0, 0, 0, 0, 0,
	241, 0, 0, 42, 397, 245, 251, 252, 0, 390,
	372, 336, 337, 288, 352, 0, 0, 451, 451, 355,
	0, 212, 218, 84, 87, 96, 110, 0, 0, 52,
	53, 0, 365, 64, 65, 0, 57, -2, -2, 0,
	0, 403, -2, 0, 0, 420, -2, 31, 32, 0,
	0, 198, 315, 0, 0, 0, 0, 0, 315, 315,
	0, 315, 0, 0, 189, 398, 388, 0, 357, 0,
	353, 0, 356, 342, 343, 130, -2, 218, 0, 218,
	229, 0, -2, 0, 0, 0, 0, 0, 404, 218,
	48, 417, 33, 34, 0, 0, 313, 189, 0, 315,
	315, 315, 315, 315, 0, 189, 0, 0, 0, 0,
	257, 0, 338, 0, 354, 7, -2, 423, 0, -2,
	0, 0, 131, 132, -2, 46, 0, -2, 418, 0,
	201, 301, 312, 0, 0, 0, 0, 0, 0, 0,
	307, 308, 315, 310, 315, 300, 358, 407, 0, -2,
	218, 0, 0, 59, 60, 0, 365, 69, 70, 71,
	0, 0, 0, 47, 401, 0, 316, 302, 303, 304,
	305, 306, 0, 0, 0, 407, -2, 0, 0, 424,
	-2, 0, -2, 218, 0, -2, -2, 133, 402, 190,
	309, 311, 0, 0, 408, 218, 63, 421, 54, 9,
	-2, 427, 0, 0, 0, 314, 0, 61, 0, -2,
	422, 0, 411, 0, -2, 218, 0, 0, 317, 0,
	0, 0, 0, 62, 405, 0, 411, -2, 0, 0,
	428, -2, 55, 56, 0, 0, 326, 0, 0, 319,
	320, 321, 406, 0, 0, 412, 218, 68, 425, 0,
	325, 322, 323, 324, 66, 0, -2, 426, 0, 318,
	0, 328, 67, 409, 327, 410,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 3, 3, 3, 163, 3, 3,
	160, 161, 155, 158, 164, 157, 165, 162, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 154,
	3, 156,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:236
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:246
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:257
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:267
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:273
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:277
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:331
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 30:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:369
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:373
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:377
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:381
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:391
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:395
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = Exit{}
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:451
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:463
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:517
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 68:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:561
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:569
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:595
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:601
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:605
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 83:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:619
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:623
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:627
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:631
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:635
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:639
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:643
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:647
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:653
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:657
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:663
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:667
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:673
		{
			yyVAL.expression = nil
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:677
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:681
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:685
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:689
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:695
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:699
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:703
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:707
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:711
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:715
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:719
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 109:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:725
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 110:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:729
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:733
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:737
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:743
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:747
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:753
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:757
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:763
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:767
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:771
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:775
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:781
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:787
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:791
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:797
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:803
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:807
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:813
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:817
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:821
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:827
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 131:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:831
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 132:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:835
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 133:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:839
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:843
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:849
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:853
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:857
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:861
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:865
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:869
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:873
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:879
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:883
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:887
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:893
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:897
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:901
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:905
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:909
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:913
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:917
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:921
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:925
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:929
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:933
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:937
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:941
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:945
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:949
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:953
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:957
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:961
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:965
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:969
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:973
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:977
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:981
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:985
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:991
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:995
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:999
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 173:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1015
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				OffsetClause:     yyDollar[5].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal,
			}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1029
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1057
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = nil
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = nil
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = nil
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = nil
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1162
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1182
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1192
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1202
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1206
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1224
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1236
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1240
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1244
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1248
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1252
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1262
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1272
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1276
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1280
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1284
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1288
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1292
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1296
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1300
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1304
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1308
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1312
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1316
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1320
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1324
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1328
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1332
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1342
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1348
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1352
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1356
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1376
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1392
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1402
		{
			yyVAL.token = Token{}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.token = yyDollar[1].token
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1410
		{
			yyVAL.token = yyDollar[1].token
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.token = yyDollar[1].token
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1420
		{
			yyVAL.token = yyDollar[1].token
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1426
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1432
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1459
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 257:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1463
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1477
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1481
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1489
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1493
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1497
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1501
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1505
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1509
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1517
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1521
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1525
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1529
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1533
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1537
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1541
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1555
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1559
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1563
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1567
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1571
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1577
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1581
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1589
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1595
		{
			yyVAL.queryexprs = nil
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1599
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1605
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1609
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1613
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1617
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 300:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 302:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 303:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 305:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 306:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1676
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 307:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1680
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 308:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1684
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 309:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1688
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 311:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1712
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1719
		{
			yyVAL.queryexpr = nil
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1723
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1729
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1733
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1739
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1743
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1754
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1759
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1808
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1818
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 338:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1836
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1858
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1872
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1876
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1898
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1906
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 356:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1910
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.queryexpr = nil
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.queryexpr = nil
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2020
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2040
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2060
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 387:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 388:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 390:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2084
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2096
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2100
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2106
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2111
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2118
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2122
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2128
		{
			yyVAL.elseexpr = Else{}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2132
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2138
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.elseexpr = Else{}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.elseexpr = Else{}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2182
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.elseexpr = Else{}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2232
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2238
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2242
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2248
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2252
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2258
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2262
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2268
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2272
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2278
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2282
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2286
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2290
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2294
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2298
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2302
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2306
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2312
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2318
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2322
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2328
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2334
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2338
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2344
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2348
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2354
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2360
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2366
		{
			yyVAL.token = Token{}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2370
		{
			yyVAL.token = yyDollar[1].token
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2376
		{
			yyVAL.token = Token{}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2380
		{
			yyVAL.token = yyDollar[1].token
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2386
		{
			yyVAL.token = Token{}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2390
		{
			yyVAL.token = yyDollar[1].token
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2396
		{
			yyVAL.token = Token{}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2400
		{
			yyVAL.token = yyDollar[1].token
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2406
		{
			yyVAL.token = yyDollar[1].token
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2410
		{
			yyVAL.token = yyDollar[1].token
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2416
		{
			yyVAL.token = Token{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2420
		{
			yyVAL.token = yyDollar[1].token
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2426
		{
			yyVAL.token = Token{}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2430
		{
			yyVAL.token = yyDollar[1].token
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2436
		{
			yyVAL.token = Token{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2440
		{
			yyVAL.token = yyDollar[1].token
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2446
		{
			yyVAL.token = yyDollar[1].token
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2450
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
