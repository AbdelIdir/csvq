// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const UNION = 57406
const INTERSECT = 57407
const EXCEPT = 57408
const ALL = 57409
const ANY = 57410
const EXISTS = 57411
const IN = 57412
const AND = 57413
const OR = 57414
const NOT = 57415
const BETWEEN = 57416
const LIKE = 57417
const IS = 57418
const NULL = 57419
const DISTINCT = 57420
const WITH = 57421
const RANGE = 57422
const UNBOUNDED = 57423
const PRECEDING = 57424
const FOLLOWING = 57425
const CURRENT = 57426
const ROW = 57427
const CASE = 57428
const IF = 57429
const ELSEIF = 57430
const WHILE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const DO = 57435
const END = 57436
const DECLARE = 57437
const CURSOR = 57438
const FOR = 57439
const FETCH = 57440
const OPEN = 57441
const CLOSE = 57442
const DISPOSE = 57443
const PREPARE = 57444
const NEXT = 57445
const PRIOR = 57446
const ABSOLUTE = 57447
const RELATIVE = 57448
const SEPARATOR = 57449
const PARTITION = 57450
const OVER = 57451
const COMMIT = 57452
const ROLLBACK = 57453
const CONTINUE = 57454
const BREAK = 57455
const EXIT = 57456
const ECHO = 57457
const PRINT = 57458
const PRINTF = 57459
const SOURCE = 57460
const EXECUTE = 57461
const CHDIR = 57462
const PWD = 57463
const RELOAD = 57464
const REMOVE = 57465
const SYNTAX = 57466
const TRIGGER = 57467
const FUNCTION = 57468
const AGGREGATE = 57469
const BEGIN = 57470
const RETURN = 57471
const IGNORE = 57472
const WITHIN = 57473
const VAR = 57474
const SHOW = 57475
const TIES = 57476
const NULLS = 57477
const ROWS = 57478
const CSV = 57479
const JSON = 57480
const FIXED = 57481
const LTSV = 57482
const JSON_ROW = 57483
const JSON_TABLE = 57484
const COUNT = 57485
const JSON_OBJECT = 57486
const AGGREGATE_FUNCTION = 57487
const LIST_FUNCTION = 57488
const ANALYTIC_FUNCTION = 57489
const FUNCTION_NTH = 57490
const FUNCTION_WITH_INS = 57491
const COMPARISON_OP = 57492
const STRING_OP = 57493
const SUBSTITUTION_OP = 57494
const UMINUS = 57495
const UPLUS = 57496

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2568

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 205,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	88, 26,
	90, 26,
	92, 26,
	94, 26,
	155, 26,
	-2, 225,
	-1, 33,
	1, 78,
	88, 78,
	90, 78,
	92, 78,
	94, 78,
	155, 78,
	-2, 237,
	-1, 112,
	17, 205,
	19, 205,
	22, 205,
	24, 205,
	-2, 1,
	-1, 114,
	162, 296,
	-2, 205,
	-1, 122,
	64, 184,
	65, 184,
	66, 184,
	-2, 196,
	-1, 159,
	1, 122,
	88, 122,
	90, 122,
	92, 122,
	94, 122,
	155, 122,
	-2, 219,
	-1, 160,
	1, 163,
	88, 163,
	90, 163,
	92, 163,
	94, 163,
	155, 163,
	-2, 225,
	-1, 165,
	1, 156,
	88, 156,
	90, 156,
	92, 156,
	94, 156,
	155, 156,
	-2, 225,
	-1, 166,
	1, 157,
	88, 157,
	90, 157,
	92, 157,
	94, 157,
	155, 157,
	-2, 225,
	-1, 167,
	1, 158,
	88, 158,
	90, 158,
	92, 158,
	94, 158,
	155, 158,
	-2, 225,
	-1, 168,
	1, 161,
	88, 161,
	90, 161,
	92, 161,
	94, 161,
	155, 161,
	-2, 219,
	-1, 169,
	1, 162,
	88, 162,
	90, 162,
	92, 162,
	94, 162,
	155, 162,
	-2, 225,
	-1, 172,
	1, 169,
	88, 169,
	90, 169,
	92, 169,
	94, 169,
	155, 169,
	-2, 219,
	-1, 173,
	1, 170,
	88, 170,
	90, 170,
	92, 170,
	94, 170,
	155, 170,
	-2, 225,
	-1, 229,
	88, 1,
	92, 1,
	94, 1,
	-2, 205,
	-1, 251,
	161, 340,
	-2, 450,
	-1, 252,
	161, 341,
	-2, 451,
	-1, 253,
	161, 342,
	-2, 452,
	-1, 254,
	161, 343,
	-2, 453,
	-1, 285,
	4, 144,
	134, 144,
	135, 144,
	136, 144,
	137, 144,
	138, 144,
	139, 144,
	140, 144,
	-2, 225,
	-1, 286,
	4, 145,
	134, 145,
	135, 145,
	136, 145,
	137, 145,
	138, 145,
	139, 145,
	140, 145,
	-2, 225,
	-1, 296,
	1, 174,
	88, 174,
	90, 174,
	92, 174,
	94, 174,
	155, 174,
	-2, 225,
	-1, 304,
	94, 4,
	-2, 205,
	-1, 313,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 266,
	-1, 314,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 268,
	-1, 323,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 278,
	-1, 370,
	94, 1,
	-2, 205,
	-1, 384,
	54, 469,
	-2, 386,
	-1, 422,
	1, 80,
	88, 80,
	90, 80,
	92, 80,
	94, 80,
	155, 80,
	-2, 225,
	-1, 423,
	1, 81,
	88, 81,
	90, 81,
	92, 81,
	94, 81,
	155, 81,
	-2, 219,
	-1, 424,
	1, 82,
	88, 82,
	90, 82,
	92, 82,
	94, 82,
	155, 82,
	-2, 225,
	-1, 425,
	1, 83,
	88, 83,
	90, 83,
	92, 83,
	94, 83,
	155, 83,
	-2, 219,
	-1, 426,
	1, 149,
	88, 149,
	90, 149,
	92, 149,
	94, 149,
	155, 149,
	-2, 219,
	-1, 427,
	1, 150,
	88, 150,
	90, 150,
	92, 150,
	94, 150,
	155, 150,
	-2, 225,
	-1, 428,
	1, 151,
	88, 151,
	90, 151,
	92, 151,
	94, 151,
	155, 151,
	-2, 219,
	-1, 429,
	1, 152,
	88, 152,
	90, 152,
	92, 152,
	94, 152,
	155, 152,
	-2, 225,
	-1, 432,
	1, 117,
	88, 117,
	90, 117,
	92, 117,
	94, 117,
	155, 117,
	165, 117,
	-2, 225,
	-1, 437,
	1, 384,
	88, 384,
	90, 384,
	92, 384,
	94, 384,
	155, 384,
	-2, 225,
	-1, 444,
	1, 175,
	88, 175,
	90, 175,
	92, 175,
	94, 175,
	155, 175,
	-2, 225,
	-1, 469,
	70, 0,
	74, 0,
	75, 0,
	76, 0,
	150, 0,
	157, 0,
	-2, 279,
	-1, 499,
	94, 1,
	-2, 205,
	-1, 506,
	90, 1,
	92, 1,
	94, 1,
	-2, 205,
	-1, 509,
	1, 201,
	52, 201,
	88, 201,
	90, 201,
	92, 201,
	94, 201,
	97, 201,
	155, 201,
	162, 201,
	-2, 225,
	-1, 542,
	162, 338,
	165, 338,
	-2, 219,
	-1, 583,
	88, 4,
	90, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 586,
	94, 4,
	-2, 205,
	-1, 587,
	94, 4,
	-2, 205,
	-1, 624,
	1, 204,
	88, 204,
	90, 204,
	92, 204,
	94, 204,
	97, 204,
	155, 204,
	162, 204,
	-2, 225,
	-1, 661,
	17, 479,
	79, 479,
	161, 479,
	-2, 87,
	-1, 687,
	88, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 692,
	94, 4,
	-2, 205,
	-1, 693,
	94, 4,
	-2, 205,
	-1, 715,
	88, 1,
	92, 1,
	94, 1,
	-2, 205,
	-1, 754,
	1, 95,
	88, 95,
	90, 95,
	92, 95,
	94, 95,
	155, 95,
	-2, 219,
	-1, 755,
	1, 96,
	88, 96,
	90, 96,
	92, 96,
	94, 96,
	155, 96,
	-2, 225,
	-1, 757,
	94, 6,
	-2, 205,
	-1, 763,
	162, 128,
	165, 128,
	-2, 225,
	-1, 768,
	94, 4,
	-2, 205,
	-1, 829,
	94, 6,
	-2, 205,
	-1, 830,
	94, 6,
	-2, 205,
	-1, 834,
	94, 4,
	-2, 205,
	-1, 838,
	90, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 874,
	88, 6,
	90, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 881,
	155, 62,
	-2, 225,
	-1, 919,
	88, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 922,
	94, 8,
	-2, 205,
	-1, 929,
	94, 6,
	-2, 205,
	-1, 932,
	88, 4,
	92, 4,
	94, 4,
	-2, 205,
	-1, 958,
	94, 6,
	-2, 205,
	-1, 991,
	94, 6,
	-2, 205,
	-1, 995,
	90, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 997,
	88, 8,
	90, 8,
	92, 8,
	94, 8,
	-2, 205,
	-1, 1000,
	94, 8,
	-2, 205,
	-1, 1001,
	94, 8,
	-2, 205,
	-1, 1018,
	88, 8,
	92, 8,
	94, 8,
	-2, 205,
	-1, 1023,
	94, 8,
	-2, 205,
	-1, 1024,
	94, 8,
	-2, 205,
	-1, 1029,
	88, 6,
	92, 6,
	94, 6,
	-2, 205,
	-1, 1034,
	94, 8,
	-2, 205,
	-1, 1049,
	94, 8,
	-2, 205,
	-1, 1053,
	90, 8,
	92, 8,
	94, 8,
	-2, 205,
	-1, 1082,
	88, 8,
	92, 8,
	94, 8,
	-2, 205,
}

const yyPrivate = 57344

const yyLast = 3691

var yyAct = [...]int{

	121, 21, 1060, 1047, 1019, 343, 1048, 920, 510, 989,
	990, 819, 609, 119, 115, 33, 265, 688, 833, 507,
	937, 27, 554, 832, 113, 375, 184, 796, 185, 445,
	967, 384, 571, 896, 556, 668, 5, 895, 409, 663,
	574, 498, 160, 638, 246, 161, 162, 535, 165, 166,
	167, 169, 633, 173, 573, 625, 89, 453, 234, 430,
	436, 341, 235, 379, 516, 497, 383, 240, 170, 521,
	520, 178, 338, 182, 1, 100, 128, 244, 452, 26,
	669, 389, 257, 80, 78, 400, 189, 179, 966, 550,
	218, 136, 181, 101, 288, 923, 227, 447, 3, 488,
	451, 25, 68, 211, 960, 971, 525, 180, 526, 527,
	522, 519, 750, 21, 523, 178, 459, 122, 387, 249,
	212, 864, 733, 305, 139, 211, 808, 33, 101, 809,
	212, 230, 233, 294, 193, 211, 181, 708, 147, 204,
	477, 203, 202, 237, 262, 211, 205, 206, 93, 163,
	678, 180, 680, 181, 111, 681, 677, 285, 286, 525,
	662, 526, 527, 522, 519, 660, 652, 523, 180, 653,
	654, 204, 258, 203, 202, 204, 296, 176, 205, 206,
	532, 650, 205, 206, 1008, 628, 581, 228, 276, 578,
	306, 26, 129, 212, 125, 306, 475, 127, 211, 124,
	306, 399, 126, 394, 310, 176, 269, 245, 129, 1007,
	3, 306, 309, 25, 74, 266, 524, 268, 306, 110,
	65, 982, 981, 102, 103, 104, 251, 252, 253, 254,
	21, 390, 101, 74, 980, 979, 293, 374, 978, 321,
	544, 953, 952, 950, 33, 948, 946, 945, 936, 935,
	388, 462, 138, 138, 917, 141, 320, 914, 102, 103,
	104, 105, 106, 107, 108, 894, 645, 865, 381, 831,
	810, 122, 807, 354, 355, 781, 110, 780, 779, 778,
	422, 424, 427, 429, 432, 563, 419, 315, 777, 432,
	437, 774, 752, 183, 437, 437, 321, 410, 444, 570,
	749, 742, 741, 734, 366, 21, 707, 378, 26, 705,
	704, 703, 443, 697, 695, 533, 133, 676, 674, 33,
	661, 659, 614, 397, 607, 392, 606, 3, 605, 594,
	25, 491, 474, 457, 472, 404, 131, 396, 179, 545,
	997, 405, 367, 181, 406, 301, 402, 403, 435, 302,
	300, 489, 131, 949, 441, 442, 947, 336, 180, 352,
	353, 415, 102, 103, 104, 105, 106, 107, 108, 902,
	362, 21, 901, 900, 440, 468, 899, 509, 898, 870,
	860, 470, 471, 514, 463, 33, 856, 853, 851, 560,
	850, 844, 843, 438, 439, 814, 541, 461, 655, 465,
	464, 611, 590, 553, 531, 483, 308, 482, 481, 480,
	181, 479, 478, 487, 181, 486, 421, 420, 395, 418,
	530, 132, 232, 226, 225, 180, 131, 215, 214, 534,
	408, 181, 213, 220, 651, 282, 280, 270, 874, 181,
	540, 181, 515, 407, 258, 502, 558, 583, 112, 26,
	584, 494, 132, 568, 566, 176, 569, 360, 492, 493,
	580, 546, 382, 1026, 585, 547, 854, 852, 3, 537,
	723, 25, 539, 721, 849, 711, 245, 549, 785, 551,
	552, 783, 548, 555, 929, 830, 829, 757, 562, 564,
	138, 908, 559, 154, 155, 906, 711, 848, 591, 786,
	21, 619, 784, 847, 846, 845, 782, 21, 776, 624,
	216, 181, 897, 272, 33, 101, 951, 217, 613, 623,
	417, 33, 1081, 1067, 361, 101, 180, 382, 1057, 1056,
	1051, 1037, 646, 1036, 1028, 1010, 1004, 996, 993, 256,
	387, 249, 1082, 931, 928, 647, 610, 612, 595, 281,
	279, 249, 927, 885, 873, 842, 648, 841, 836, 152,
	153, 156, 157, 1024, 617, 271, 640, 771, 656, 770,
	714, 616, 582, 503, 618, 501, 658, 1023, 26, 432,
	632, 622, 437, 1001, 21, 26, 671, 21, 21, 610,
	74, 643, 1000, 642, 641, 273, 274, 3, 33, 922,
	25, 33, 33, 649, 3, 693, 692, 25, 587, 555,
	93, 657, 181, 686, 1049, 1050, 690, 691, 101, 1049,
	1034, 555, 598, 599, 600, 601, 992, 694, 835, 555,
	991, 991, 834, 958, 514, 586, 500, 722, 682, 555,
	499, 576, 684, 143, 111, 102, 103, 104, 251, 252,
	253, 254, 726, 390, 382, 102, 103, 104, 105, 106,
	107, 108, 701, 304, 834, 706, 768, 499, 727, 728,
	101, 372, 388, 370, 755, 1053, 1029, 1018, 740, 995,
	763, 717, 720, 744, 716, 724, 732, 932, 21, 919,
	769, 838, 715, 21, 21, 142, 249, 746, 736, 739,
	745, 144, 33, 687, 506, 201, 229, 33, 33, 1084,
	1031, 1020, 934, 735, 765, 921, 21, 766, 759, 374,
	718, 787, 772, 773, 689, 145, 537, 368, 236, 1074,
	33, 555, 760, 761, 804, 1073, 555, 1055, 1054, 1016,
	892, 891, 747, 748, 840, 795, 839, 685, 102, 103,
	104, 105, 106, 107, 108, 1050, 181, 992, 21, 835,
	500, 799, 800, 801, 181, 610, 1088, 181, 1080, 21,
	1045, 806, 33, 1027, 974, 930, 790, 713, 181, 813,
	1071, 101, 815, 33, 1014, 889, 817, 620, 826, 816,
	791, 1079, 1061, 818, 26, 219, 1061, 1065, 837, 1090,
	102, 103, 104, 105, 106, 107, 108, 249, 1077, 1078,
	1076, 1064, 1063, 3, 710, 74, 25, 627, 866, 986,
	954, 858, 626, 868, 875, 871, 1043, 861, 877, 881,
	21, 21, 181, 857, 863, 21, 888, 872, 876, 21,
	263, 882, 883, 812, 33, 33, 825, 869, 627, 33,
	805, 220, 1075, 33, 879, 821, 880, 886, 98, 357,
	826, 826, 610, 356, 887, 181, 608, 1086, 890, 610,
	1062, 1059, 74, 74, 1062, 21, 74, 910, 911, 972,
	893, 915, 924, 460, 904, 307, 918, 904, 903, 33,
	555, 907, 401, 916, 1041, 912, 74, 260, 576, 762,
	811, 1042, 576, 74, 1044, 826, 743, 926, 933, 359,
	358, 102, 103, 104, 251, 252, 253, 254, 825, 825,
	21, 289, 959, 21, 283, 610, 99, 821, 821, 639,
	21, 956, 802, 21, 33, 769, 904, 33, 318, 181,
	944, 973, 317, 319, 33, 731, 555, 33, 325, 324,
	826, 259, 260, 261, 955, 525, 977, 526, 527, 21,
	826, 730, 975, 825, 729, 998, 637, 988, 636, 508,
	994, 376, 821, 33, 976, 181, 630, 631, 939, 999,
	968, 635, 514, 904, 377, 1006, 634, 984, 789, 826,
	987, 517, 21, 1013, 1005, 238, 21, 938, 21, 1009,
	1011, 21, 21, 1012, 231, 673, 33, 1015, 825, 672,
	33, 610, 33, 290, 679, 33, 33, 821, 825, 21,
	962, 1035, 826, 1030, 21, 21, 826, 821, 670, 66,
	21, 135, 959, 33, 134, 21, 793, 794, 33, 33,
	192, 1046, 81, 610, 33, 884, 775, 825, 878, 33,
	21, 1070, 1068, 764, 21, 968, 821, 1066, 968, 968,
	826, 758, 756, 410, 33, 146, 148, 120, 33, 664,
	665, 666, 667, 675, 579, 476, 968, 1083, 1087, 433,
	825, 968, 968, 21, 825, 1035, 303, 255, 243, 821,
	414, 380, 968, 821, 171, 962, 1091, 33, 962, 962,
	393, 925, 1017, 411, 412, 1021, 1022, 968, 242, 94,
	985, 968, 413, 177, 123, 241, 962, 905, 825, 719,
	242, 962, 962, 1032, 398, 209, 210, 821, 1038, 1039,
	292, 96, 962, 291, 222, 223, 287, 264, 93, 1052,
	968, 96, 94, 188, 434, 191, 67, 962, 137, 1033,
	957, 962, 767, 369, 1069, 10, 84, 177, 1072, 9,
	536, 120, 8, 7, 940, 941, 942, 943, 525, 371,
	526, 527, 522, 519, 862, 171, 523, 62, 199, 208,
	962, 198, 197, 200, 196, 339, 340, 1089, 386, 140,
	385, 247, 250, 101, 149, 150, 1085, 158, 159, 1058,
	101, 1040, 365, 164, 1025, 88, 61, 168, 60, 172,
	64, 174, 175, 983, 57, 63, 58, 335, 792, 298,
	101, 629, 512, 199, 208, 207, 198, 197, 200, 196,
	511, 56, 190, 239, 6, 20, 312, 313, 314, 19,
	316, 69, 151, 323, 529, 326, 327, 328, 329, 330,
	331, 332, 17, 575, 224, 171, 342, 101, 194, 193,
	572, 16, 431, 15, 204, 195, 203, 202, 74, 363,
	14, 205, 206, 11, 18, 171, 13, 12, 963, 373,
	822, 961, 248, 820, 248, 448, 446, 4, 2, 0,
	248, 267, 248, 0, 101, 0, 334, 0, 0, 275,
	248, 277, 278, 194, 193, 342, 0, 0, 284, 204,
	195, 203, 202, 416, 0, 299, 205, 206, 295, 0,
	0, 0, 0, 102, 103, 104, 105, 106, 107, 108,
	102, 103, 104, 105, 106, 107, 108, 0, 171, 0,
	0, 473, 0, 0, 0, 0, 0, 0, 311, 0,
	102, 103, 104, 105, 106, 107, 108, 484, 485, 0,
	467, 0, 469, 0, 171, 0, 0, 495, 333, 0,
	345, 0, 199, 208, 207, 198, 197, 200, 196, 171,
	0, 0, 0, 0, 364, 0, 0, 102, 103, 104,
	105, 106, 107, 108, 0, 171, 171, 0, 0, 248,
	248, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 373, 248, 248, 0, 504, 0, 0, 0, 345,
	513, 0, 0, 518, 102, 103, 104, 105, 106, 107,
	108, 0, 0, 0, 0, 0, 423, 425, 426, 428,
	0, 0, 199, 208, 207, 198, 197, 200, 196, 248,
	0, 0, 194, 193, 0, 0, 0, 0, 204, 195,
	203, 202, 456, 0, 458, 205, 206, 788, 0, 0,
	0, 0, 0, 199, 208, 207, 198, 197, 200, 196,
	0, 0, 597, 0, 0, 0, 602, 603, 604, 0,
	0, 0, 0, 120, 505, 101, 199, 208, 207, 198,
	197, 200, 196, 96, 0, 0, 0, 199, 0, 592,
	198, 197, 200, 196, 0, 0, 0, 0, 342, 0,
	171, 0, 194, 193, 171, 171, 171, 0, 204, 195,
	203, 202, 0, 0, 345, 205, 206, 496, 0, 615,
	0, 0, 528, 0, 59, 248, 0, 0, 621, 0,
	538, 248, 542, 194, 193, 248, 248, 0, 0, 204,
	195, 203, 202, 0, 538, 557, 205, 206, 561, 538,
	538, 565, 130, 0, 567, 557, 194, 193, 577, 0,
	0, 0, 204, 195, 203, 202, 0, 194, 193, 205,
	206, 295, 0, 204, 195, 203, 202, 0, 0, 0,
	205, 206, 0, 698, 699, 700, 702, 525, 0, 526,
	527, 522, 519, 797, 798, 523, 588, 589, 0, 0,
	557, 0, 0, 0, 0, 102, 103, 104, 105, 106,
	107, 108, 345, 596, 0, 221, 696, 0, 0, 0,
	0, 171, 171, 171, 171, 101, 0, 0, 0, 0,
	0, 0, 93, 0, 709, 0, 0, 0, 738, 199,
	208, 207, 198, 197, 200, 196, 0, 0, 0, 0,
	0, 513, 0, 0, 0, 0, 0, 725, 171, 0,
	0, 248, 0, 0, 0, 0, 644, 0, 0, 0,
	538, 0, 0, 0, 737, 0, 171, 0, 0, 0,
	0, 0, 538, 199, 208, 207, 198, 197, 200, 196,
	538, 0, 0, 751, 0, 0, 0, 561, 0, 0,
	538, 0, 0, 368, 0, 0, 130, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 683, 0, 0, 194,
	193, 0, 0, 0, 322, 204, 195, 203, 202, 0,
	0, 909, 205, 206, 0, 0, 0, 0, 0, 0,
	0, 322, 322, 0, 0, 0, 0, 199, 208, 207,
	198, 197, 200, 196, 0, 102, 103, 104, 105, 106,
	107, 108, 0, 194, 193, 345, 0, 391, 0, 204,
	195, 203, 202, 248, 248, 0, 205, 206, 0, 0,
	0, 391, 0, 0, 0, 0, 0, 538, 0, 0,
	0, 248, 538, 0, 867, 0, 0, 538, 0, 557,
	0, 0, 0, 538, 538, 0, 0, 0, 0, 753,
	754, 855, 0, 0, 0, 0, 0, 0, 0, 0,
	859, 0, 0, 0, 0, 0, 0, 194, 193, 0,
	0, 0, 171, 204, 195, 203, 202, 0, 0, 712,
	205, 206, 0, 322, 0, 0, 0, 120, 0, 322,
	322, 0, 0, 0, 199, 208, 207, 198, 197, 200,
	196, 0, 0, 0, 0, 0, 248, 248, 248, 0,
	803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 490, 490, 490, 913, 0, 561, 0, 0,
	0, 101, 75, 76, 77, 0, 98, 79, 93, 96,
	94, 95, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 391, 117, 0, 0, 111, 0, 0,
	0, 0, 0, 391, 0, 130, 0, 130, 130, 0,
	0, 0, 0, 0, 194, 193, 0, 0, 0, 248,
	204, 195, 203, 202, 373, 0, 0, 205, 206, 0,
	0, 538, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 0, 171, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 120, 0,
	0, 0, 0, 0, 0, 0, 0, 557, 0, 513,
	0, 0, 0, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 322, 0, 0, 0, 0, 0,
	0, 102, 103, 104, 105, 106, 107, 108, 110, 0,
	347, 85, 346, 348, 349, 350, 351, 0, 0, 0,
	0, 0, 0, 373, 0, 82, 83, 92, 70, 391,
	0, 0, 0, 0, 0, 0, 0, 322, 0, 0,
	969, 970, 101, 75, 76, 77, 0, 98, 79, 93,
	96, 94, 95, 22, 71, 0, 0, 0, 35, 36,
	0, 0, 0, 0, 0, 28, 0, 0, 111, 0,
	29, 44, 0, 30, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1002, 1003,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 322, 0, 99, 0, 74, 0, 0,
	0, 0, 0, 0, 965, 964, 0, 827, 0, 0,
	0, 0, 0, 32, 97, 0, 39, 37, 38, 34,
	40, 391, 391, 0, 0, 0, 0, 0, 42, 43,
	454, 455, 0, 47, 48, 49, 50, 41, 52, 53,
	54, 45, 51, 55, 0, 0, 0, 828, 0, 0,
	31, 46, 102, 103, 104, 105, 106, 107, 108, 110,
	0, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 83, 92, 70,
	199, 593, 207, 198, 197, 200, 196, 0, 0, 0,
	0, 0, 0, 322, 0, 199, 466, 207, 198, 197,
	200, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 391, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 75, 76, 77,
	0, 98, 79, 93, 96, 94, 95, 22, 71, 0,
	0, 0, 35, 36, 0, 0, 0, 0, 0, 28,
	0, 0, 111, 0, 29, 44, 0, 30, 0, 0,
	194, 193, 0, 0, 0, 0, 204, 195, 203, 202,
	0, 0, 0, 205, 206, 194, 193, 0, 0, 0,
	0, 204, 195, 203, 202, 0, 0, 391, 205, 206,
	322, 90, 0, 0, 0, 91, 0, 322, 0, 99,
	0, 74, 0, 0, 0, 0, 0, 0, 450, 449,
	0, 72, 0, 0, 0, 0, 0, 32, 97, 0,
	39, 37, 38, 34, 40, 0, 0, 0, 0, 0,
	0, 0, 42, 43, 454, 455, 73, 47, 48, 49,
	50, 41, 52, 53, 54, 45, 51, 55, 0, 0,
	0, 0, 0, 322, 31, 46, 102, 103, 104, 105,
	106, 107, 108, 110, 0, 87, 85, 86, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 83, 92, 70, 101, 75, 76, 77, 0, 98,
	79, 93, 96, 94, 95, 22, 71, 0, 0, 0,
	35, 36, 0, 0, 0, 0, 0, 28, 0, 0,
	111, 0, 29, 44, 0, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 74,
	0, 0, 0, 0, 0, 0, 824, 823, 0, 827,
	0, 322, 0, 0, 0, 32, 97, 0, 39, 37,
	38, 34, 40, 0, 0, 0, 0, 0, 0, 0,
	42, 43, 0, 0, 0, 47, 48, 49, 50, 41,
	52, 53, 54, 45, 51, 55, 0, 0, 0, 828,
	0, 0, 31, 46, 102, 103, 104, 105, 106, 107,
	108, 110, 0, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 83,
	92, 70, 101, 75, 76, 77, 0, 98, 79, 93,
	96, 94, 95, 22, 71, 0, 0, 0, 35, 36,
	0, 0, 0, 0, 0, 28, 0, 0, 111, 0,
	29, 44, 0, 30, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 0, 99, 0, 74, 0, 0,
	0, 0, 0, 0, 24, 23, 0, 72, 0, 0,
	0, 0, 0, 32, 97, 0, 39, 37, 38, 34,
	40, 0, 0, 0, 0, 0, 0, 0, 42, 43,
	0, 0, 73, 47, 48, 49, 50, 41, 52, 53,
	54, 45, 51, 55, 0, 0, 0, 0, 0, 0,
	31, 46, 102, 103, 104, 105, 106, 107, 108, 110,
	0, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 83, 92, 70,
	101, 75, 76, 77, 0, 98, 79, 93, 96, 94,
	95, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 111, 0, 0, 101,
	75, 76, 77, 0, 98, 79, 93, 96, 94, 95,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 91,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 90, 0, 0, 0, 91, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 103, 104, 105, 106, 107, 108, 110, 0, 347,
	85, 346, 348, 349, 350, 351, 0, 0, 0, 0,
	0, 0, 344, 0, 82, 83, 92, 70, 337, 102,
	103, 104, 105, 106, 107, 108, 110, 0, 347, 85,
	346, 348, 349, 350, 351, 0, 0, 0, 0, 0,
	0, 344, 0, 82, 83, 92, 70, 101, 75, 76,
	77, 0, 98, 79, 93, 96, 94, 95, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 111, 0, 101, 75, 76, 77, 0,
	98, 79, 93, 96, 94, 95, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 91, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	116, 0, 0, 0, 0, 0, 0, 0, 187, 97,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 102, 103, 104,
	105, 106, 107, 108, 110, 0, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 83, 92, 70, 102, 103, 104, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 82,
	83, 92, 70, 101, 75, 76, 77, 0, 98, 79,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 101, 75, 76, 77, 0, 98, 79, 93, 96,
	94, 95, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 263, 0, 0,
	0, 0, 0, 0, 0, 118, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 90, 0, 0, 0,
	91, 0, 0, 0, 99, 0, 74, 0, 0, 0,
	0, 0, 0, 118, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 103, 104, 105, 106, 107, 108,
	110, 0, 87, 85, 86, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 83, 92,
	70, 102, 103, 104, 105, 106, 107, 108, 110, 0,
	87, 85, 86, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 83, 92, 70, 101,
	75, 76, 77, 0, 98, 79, 93, 96, 94, 95,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 111, 0, 101, 75, 76,
	77, 0, 98, 79, 93, 96, 94, 95, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 91, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 90, 0, 0, 0, 91, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 118,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	103, 104, 105, 106, 107, 108, 110, 0, 87, 85,
	86, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 83, 92, 70, 102, 103, 104,
	105, 106, 107, 108, 110, 0, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 83, 92, 114, 101, 75, 76, 77, 0,
	98, 79, 93, 96, 94, 95, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 543, 0, 101, 75, 297, 77, 0, 98, 79,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 103, 104, 105, 106,
	107, 108, 110, 0, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	83, 92, 70, 102, 103, 104, 105, 106, 107, 108,
	110, 0, 87, 85, 86, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 83, 92,
	70,
}
var yyPact = [...]int{

	2598, -1000, 293, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3343, 3315, -1000, -1000, 175, 291, 998,
	995, 1127, 1641, -1000, 599, 1129, 1096, 1253, 1253, 456,
	1253, 3315, -1000, -1000, 3315, 3315, 1491, 3315, 3315, 3315,
	3315, 3315, 3315, -1000, 1253, 1253, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 303, -1000, -1000, -1000, -1000,
	3157, -1000, 2943, 1137, 1009, -1000, -1000, -1000, -1000, -1000,
	-1000, 1804, 3315, 3315, -31, 271, 267, 266, -1000, 360,
	265, 3315, 3315, -1000, -1000, -1000, -1000, 1253, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 263,
	262, -70, 2598, 615, 3157, -1000, 261, 260, 3315, 638,
	1804, -1000, 950, 1090, 1063, 777, 1062, 521, 887, 762,
	-1000, 736, 3315, 777, 1253, 777, -1000, 41, 285, -1000,
	469, -1000, 1253, 666, 1253, 1253, 393, 392, -1000, 862,
	-1000, 1253, -1000, -1000, -1000, -1000, 3315, 3315, 1118, 32,
	859, 970, 1115, -1000, 1112, -1000, -1000, 71, -31, -1000,
	-1000, 1426, -31, -1000, -1000, 3529, 3315, 1153, 188, 183,
	187, 191, 570, 53, 815, 1127, -1000, -1000, -1000, -1000,
	39, 1253, -1000, 3315, 3315, 3315, 778, 3315, 868, 78,
	3315, 881, 3315, 3315, 3315, 3315, 3315, 3315, 3315, -1000,
	-1000, 1290, 3129, 2756, 762, 762, 78, 78, 789, 842,
	-1000, -1000, 1437, -1000, 381, 762, 3315, 1196, -1000, 2598,
	183, 180, 3315, 637, 581, 579, 3315, 920, 936, 1102,
	1068, 1127, 89, 777, 1080, 38, -1000, -1000, -1000, -1000,
	257, -1000, -1000, -1000, -1000, 777, 89, 1106, 36, 825,
	825, 825, 2785, -1000, 179, -1000, 282, 269, 1070, 1127,
	3315, 423, 258, 256, 255, -1000, -1000, -1000, -1000, 3315,
	3315, 3315, 3315, 3315, 1054, -1000, -1000, 1139, 3315, 3315,
	1119, 1119, 777, 3315, 3315, 3315, -1000, 3315, 1804, -1000,
	-1000, -1000, -1000, 1102, 2282, 1253, 1127, 1253, 46, 813,
	1009, 223, 15, -17, -17, 849, 2185, 3315, 78, 3315,
	-1000, 3157, -1000, -17, 78, 78, 19, 19, -1000, -1000,
	-1000, 1108, 1437, -1000, -1000, 172, 3315, -1000, 170, 31,
	1047, -1000, 1804, -1000, -1000, -21, 251, 250, 248, 247,
	246, 244, 3315, 2971, -1000, -1000, 78, 190, 190, 190,
	778, -1000, 3315, 1372, -1000, -1000, 548, -1000, 3315, 481,
	2598, 479, 3315, 1403, 613, 917, 3315, 1907, 1068, 945,
	3315, -1000, 30, -1000, 51, 1216, -1000, -1000, 511, -1000,
	243, -1000, 154, 614, 777, 3501, 178, 1068, 89, 666,
	191, -1000, 191, 191, -1000, -1000, 242, 614, 1253, 736,
	-1000, 228, 124, 614, 1253, -1000, 1804, 1189, 1253, 736,
	137, 1253, -1000, -31, -1000, -31, -31, -1000, -31, -1000,
	-1000, 24, 1046, 1127, -1000, -1000, -1000, 21, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 478, 292, -1000, -1000, 3343,
	3315, -1000, -1000, -1000, -1000, -1000, 542, -1000, 515, 1253,
	1253, -1000, 241, 1253, -1000, -1000, 3315, 2170, -1000, -17,
	-1000, -1000, -1000, 167, -1000, 2785, 1253, 3129, 762, 762,
	762, 3315, 3315, 3315, 166, 164, 162, 795, -1000, 135,
	-1000, 240, -1000, -1000, 448, 160, 3315, 477, 575, 2598,
	3315, 701, -1000, -1000, 1804, 3315, 2598, 422, 3315, 769,
	-1000, 20, 927, 1804, -1000, 945, 939, 933, 1804, 914,
	912, 873, 873, 900, 89, -1000, -1000, -1000, -1000, 1253,
	104, 3315, 78, 614, -1000, 1102, 16, 277, -63, -1000,
	4, 5, -31, -70, 237, 614, -1000, 1068, -1000, 832,
	-1000, -1000, 832, 614, 159, 0, 158, -5, -1000, 1032,
	1253, 987, -1000, 614, 966, 962, -1000, -1000, 156, -1000,
	1045, 155, -9, -1000, -1000, -15, 973, -10, 3315, 1253,
	-1000, 3315, 658, 2282, 612, 634, 2282, 2282, 513, 512,
	736, 152, 1437, 3315, -1000, -1000, -1000, 151, 3315, 3315,
	2971, 3315, 149, 148, 147, -1000, -1000, -1000, 78, 144,
	-28, 3315, -1000, 734, 344, 1697, 690, 476, -1000, 601,
	-1000, 1633, 630, 1100, -1000, -1000, 738, 339, 1907, 335,
	-1000, -1000, 939, -1000, 3315, 3315, 89, 89, 910, -1000,
	907, 891, 873, -1000, -1000, -1000, -43, -1000, 141, 1068,
	614, 3315, -1000, 3315, 666, 614, 140, -1000, 139, 844,
	614, 1035, 1253, -1000, -1000, -1000, 614, 614, 138, -53,
	3315, 130, 1253, 3315, 1034, 359, 1033, 1127, 1127, 3315,
	1025, 1127, -1000, -1000, -1000, -1000, -1000, 2282, 574, 3315,
	475, 473, 2282, 2282, 129, 1018, 1437, 399, 126, 117,
	116, 115, 113, 397, 372, 369, -1000, -1000, 78, 1302,
	-1000, 942, -1000, -1000, 689, 2598, -1000, -1000, 3315, -1000,
	-1000, -1000, -1000, 999, 950, 1804, -1000, 900, 1552, 89,
	89, 89, 878, 3315, 824, -1000, -1000, 1804, 110, -36,
	108, 838, 817, 234, -1000, 736, -1000, -1000, -1000, 1032,
	1253, 1804, -1000, -1000, -31, -1000, 736, 2440, 358, -1000,
	-1000, -1000, 973, -1000, 357, 107, 540, 464, 2282, 600,
	657, 655, 463, 461, -1000, 231, 230, 396, 395, 394,
	388, 365, 229, 227, 332, 226, 331, -1000, 3315, 225,
	-1000, 672, -1000, -1000, -1000, 920, -1000, 3315, 219, 1552,
	1113, 900, 89, -41, 105, 78, -1000, -1000, -1000, 3315,
	797, 218, 78, -1000, 614, -1000, -1000, -1000, -1000, 460,
	283, -1000, -1000, 3343, 3315, -1000, -1000, 2943, 3315, 2440,
	2440, 1017, 459, 572, 2282, 3315, 699, -1000, 2282, -1000,
	-1000, 652, 651, 736, 404, 217, 215, 212, 211, 208,
	404, 404, 386, 404, 382, 1589, 950, -1000, 917, 1804,
	1253, -1000, 3315, 900, -1000, -1000, -1000, 95, 78, -1000,
	614, -1000, 92, -1000, 2440, 598, 625, 506, 25, 812,
	1127, -1000, 458, 450, 356, 688, 449, -1000, 596, -1000,
	622, -1000, -1000, 87, 86, -1000, 952, 930, 404, 404,
	404, 404, 404, 85, 950, 84, 195, 83, 192, -1000,
	81, 419, 80, 1804, -1000, -1000, 79, 794, -1000, 2440,
	541, 3315, 2078, 1253, 1253, 35, 809, -1000, -1000, 2440,
	-1000, 687, 2282, -1000, 3315, -1000, -1000, -1000, 926, 3315,
	76, 73, 72, 60, 59, -1000, -1000, 404, -1000, 404,
	-1000, 1091, -1000, 793, 78, -1000, 538, 444, 2440, 588,
	443, 185, -1000, -1000, 3343, 3315, -1000, -1000, -1000, 499,
	490, 1253, 1253, 442, -1000, 671, 1907, -1000, -1000, -1000,
	-1000, -1000, -1000, 47, 22, -1000, 78, -1000, -1000, 441,
	539, 2440, 3315, 698, -1000, 2440, 650, 2078, 586, 621,
	2078, 2078, 484, 470, -1000, -1000, 327, -1000, -1000, -1000,
	686, 440, -1000, 585, -1000, 620, -1000, -1000, 2078, 528,
	3315, 439, 437, 2078, 2078, -1000, 820, -1000, 683, 2440,
	-1000, 3315, 527, 436, 2078, 584, 649, 648, 435, 434,
	-1000, 790, 730, 729, 712, -1000, 669, 429, 522, 2078,
	3315, 694, -1000, 2078, -1000, -1000, 646, 640, 781, 728,
	-1000, 726, 706, -1000, -1000, -1000, -1000, 681, 428, -1000,
	451, -1000, 619, -1000, -1000, 786, -1000, -1000, -1000, -1000,
	-1000, 679, 2078, -1000, 3315, -1000, 716, -1000, -1000, 667,
	-1000, -1000,
}
var yyPgo = [...]int{

	0, 74, 29, 11, 104, 97, 57, 1288, 100, 28,
	78, 1287, 1286, 1285, 1283, 88, 30, 1281, 1280, 1278,
	1277, 1276, 1274, 1273, 80, 35, 39, 1270, 1263, 1262,
	59, 1261, 40, 1260, 1253, 54, 32, 1252, 1242, 1241,
	1239, 1235, 36, 1234, 89, 76, 1086, 1233, 67, 63,
	64, 52, 20, 25, 55, 19, 21, 1232, 86, 1231,
	84, 83, 75, 1042, 0, 61, 56, 12, 8, 1230,
	1222, 1221, 1218, 1544, 1216, 99, 1215, 1214, 1210, 1004,
	1208, 1206, 1205, 5, 37, 265, 33, 1204, 1201, 2,
	1199, 1196, 44, 1192, 1191, 81, 82, 77, 1190, 31,
	1188, 27, 1186, 1185, 1177, 13, 62, 1169, 22, 16,
	60, 66, 34, 72, 1163, 1162, 1160, 47, 1159, 1155,
	41, 65, 18, 23, 10, 9, 6, 3, 58, 1153,
	17, 1152, 7, 1150, 4, 1149, 1156, 220, 26, 14,
	1148, 91, 1029, 1146, 102, 144, 90, 70, 43, 69,
	85, 1145, 38, 705,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 43, 43,
	44, 44, 44, 44, 45, 45, 46, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	53, 54, 54, 55, 55, 56, 56, 57, 57, 58,
	58, 59, 59, 59, 59, 59, 59, 60, 61, 62,
	62, 62, 62, 62, 63, 63, 63, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 65, 66, 66, 66, 67, 67,
	68, 68, 69, 69, 70, 70, 71, 71, 71, 72,
	72, 73, 74, 75, 75, 75, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 77, 77, 77, 77, 77,
	77, 77, 78, 78, 78, 78, 79, 79, 80, 80,
	80, 80, 80, 81, 81, 81, 81, 81, 82, 82,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 84, 85, 85, 86, 86, 87, 87, 88, 88,
	88, 89, 89, 89, 90, 90, 91, 91, 92, 92,
	93, 93, 93, 93, 94, 94, 94, 94, 95, 95,
	98, 98, 98, 98, 99, 99, 99, 99, 99, 99,
	100, 100, 100, 100, 100, 100, 101, 101, 102, 102,
	103, 103, 103, 104, 105, 105, 106, 106, 107, 107,
	108, 108, 109, 109, 110, 110, 111, 111, 96, 96,
	97, 97, 112, 112, 113, 113, 114, 114, 114, 114,
	115, 116, 117, 117, 118, 118, 118, 118, 118, 118,
	118, 118, 119, 119, 120, 120, 121, 121, 122, 122,
	123, 123, 124, 124, 125, 125, 126, 126, 127, 127,
	128, 128, 129, 129, 130, 130, 131, 131, 132, 132,
	133, 133, 134, 134, 135, 135, 136, 136, 136, 136,
	136, 136, 136, 136, 137, 138, 138, 139, 140, 140,
	141, 141, 142, 143, 144, 145, 145, 146, 146, 147,
	147, 148, 148, 149, 149, 150, 150, 151, 151, 152,
	152, 153, 153,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 5, 7, 10, 12,
	5, 4, 4, 4, 1, 1, 3, 2, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 0, 3,
	4, 0, 2, 0, 2, 0, 2, 6, 9, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 3, 1, 6, 1, 3,
	1, 3, 2, 4, 1, 1, 0, 1, 1, 1,
	1, 3, 3, 3, 1, 6, 3, 3, 3, 3,
	4, 4, 5, 6, 6, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 3,
	2, 2, 3, 3, 2, 2, 0, 1, 4, 3,
	4, 4, 4, 5, 5, 5, 5, 1, 5, 10,
	8, 9, 9, 9, 9, 9, 8, 8, 10, 8,
	10, 2, 1, 5, 0, 3, 2, 5, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 4, 6, 6, 8, 1, 1,
	1, 6, 6, 1, 1, 2, 3, 1, 1, 3,
	4, 5, 6, 7, 5, 6, 2, 4, 1, 1,
	1, 3, 1, 5, 0, 1, 4, 5, 0, 2,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 6, 9, 5, 8,
	7, 3, 1, 3, 10, 13, 9, 12, 9, 12,
	8, 11, 5, 6, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 1, 3,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	1, 0, 1, 1, 1, 0, 1, 0, 1, 0,
	1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -43, -114, -115, -118,
	-119, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -64, 15, 87, 86, -8, -10, -56, 27, 32,
	35, 132, 95, -139, 101, 20, 21, 99, 100, 98,
	102, 119, 110, 111, 33, 123, 133, 115, 116, 117,
	118, 124, 120, 121, 122, 125, -59, -77, -74, -73,
	-80, -81, -104, -76, -78, -137, -142, -143, -144, -39,
	161, 16, 89, 114, 79, 5, 6, 7, -60, 10,
	-61, -63, 158, 159, -136, 144, 145, 143, -82, -66,
	69, 73, 160, 11, 13, 14, 12, 96, 9, 77,
	-62, 4, 134, 135, 136, 137, 138, 139, 140, 146,
	141, 30, 155, -64, 161, -139, 87, 27, 86, -105,
	-63, -64, -44, -46, 24, 19, 27, 22, -45, 17,
	-73, 161, 161, 25, 36, 36, -141, -140, -137, -141,
	-136, -137, 96, 44, 102, 126, -142, -144, -142, -136,
	-136, -38, 103, 104, 37, 38, 105, 106, -136, -136,
	-64, -64, -64, -144, -136, -64, -64, -64, -136, -64,
	-109, -63, -136, -64, -136, -136, 152, -63, -64, -109,
	-42, -56, -64, -137, -138, -9, 132, 95, 6, -58,
	-57, -151, 31, 151, 150, 157, 76, 74, 73, 70,
	75, -153, 159, 158, 156, 163, 164, 72, 71, -63,
	-63, 166, 161, 161, 161, 161, 150, 157, -146, -153,
	73, -73, -63, -63, -136, 161, 161, 166, -1, 91,
	-109, -79, 161, -105, -128, -106, 90, -52, 45, -47,
	-48, 25, 18, 25, -97, -95, -92, -94, -136, 30,
	-93, 137, 138, 139, 140, 25, 18, -96, -92, 64,
	65, 66, -145, 78, -79, -109, -95, -136, -95, 165,
	152, 96, 44, 126, 127, -136, -92, -136, -136, 157,
	43, 157, 43, 62, -136, -64, -64, 18, 62, 62,
	43, 18, 18, 165, 62, 165, -64, 6, -63, 162,
	162, 162, 162, -46, 93, 70, 165, 70, -137, -138,
	165, -136, -63, -63, -63, -146, -63, 74, 70, 75,
	-66, 161, -73, -63, 68, 67, -63, -63, -63, -63,
	-63, -63, -63, -136, 6, -79, -145, 162, -113, -103,
	-102, -65, -63, -83, 156, -136, 145, 143, 146, 147,
	148, 149, -145, -145, -66, -66, 74, 70, 68, 67,
	76, 143, -145, -63, -136, 6, -1, 162, 90, -129,
	92, -107, 92, -63, -64, -53, 51, 48, -48, -49,
	23, -138, -137, -111, -99, -98, -100, 29, 161, -95,
	142, -73, -95, 20, 165, 161, -95, -111, 18, 165,
	-150, 67, -150, -150, -113, 162, 62, 161, 161, -152,
	28, 33, 34, 42, 20, -141, -63, 97, 161, 28,
	161, 161, -64, -136, -64, -136, -136, -64, -136, -64,
	-30, -29, -64, 25, 5, -30, -110, -64, -144, -144,
	-95, -110, -110, -109, -64, -2, -12, -5, -13, 87,
	86, -8, -10, -6, 112, 113, -136, -138, -136, 70,
	70, -58, 28, 161, -60, -61, 71, -63, -66, -63,
	-66, -66, 162, -79, 162, 165, 28, 161, 161, 161,
	161, 161, 161, 161, -79, -79, -65, -66, -75, 161,
	-73, 141, -75, -75, -146, -79, 165, -121, -120, 92,
	88, 94, -1, 94, -63, 91, 91, -55, 52, -64,
	-68, -69, -70, -63, -83, -49, -50, 46, -63, 60,
	-147, -149, 59, 63, 165, 55, 57, 58, -136, 28,
	-99, 161, 26, 161, -42, -117, -116, -62, -136, -97,
	-92, -64, -136, 30, 62, 161, -49, -111, -96, -45,
	-44, -45, -45, 161, -108, -62, -112, -136, -42, -24,
	161, -136, -62, 161, -62, -136, -42, -136, -112, -42,
	162, -36, -33, -35, -32, -34, -137, -136, 165, 28,
	-138, 165, 94, 155, -64, -105, 93, 93, -136, -136,
	161, -112, -63, 71, 162, -113, -136, -79, -145, -145,
	-145, -145, -79, -79, -79, 162, 162, 162, 71, -67,
	-66, 161, 99, 70, 162, -63, 94, -121, -1, -64,
	86, -63, -1, 97, -64, -54, 53, 79, 165, -71,
	49, 50, -50, -51, 47, 48, 54, 54, -148, 56,
	-148, -147, -149, -111, -136, 162, -64, -67, -108, -48,
	165, 157, 162, 165, 165, 161, -108, -49, -108, 162,
	165, 162, 165, -26, 37, 38, 39, 40, -25, -24,
	41, -108, 43, 43, 162, 28, 162, 165, 165, 41,
	162, 165, -30, -136, -110, 89, -2, 91, -130, 90,
	-2, -2, 93, 93, -42, 162, -63, 162, -79, -79,
	-79, -65, -79, 162, 162, 162, -66, 162, 165, -63,
	80, 131, 162, 87, 94, 91, -106, -128, 90, 19,
	-54, 134, -68, 135, -51, -63, -109, -99, -99, 54,
	54, 54, -148, 165, 162, -49, -117, -63, -79, -92,
	-108, 162, 162, 62, -108, -152, -112, -62, -62, 162,
	165, -63, 162, -136, -136, -64, 28, 128, 28, -32,
	-35, -35, -137, -64, 28, -36, -2, -131, 92, -64,
	94, 94, -2, -2, 162, 28, 109, 162, 162, 162,
	162, 162, 109, 109, 130, 109, 130, -67, 165, 46,
	87, -1, -72, 37, 38, -52, -101, 61, 62, -99,
	-99, -99, 54, -136, -64, 26, -42, 162, 162, 165,
	162, 62, 26, -42, 161, -42, -26, -25, -42, -3,
	-14, -5, -18, 87, 86, -15, -16, 89, 129, 128,
	128, 162, -123, -122, 92, 88, 94, -2, 91, 89,
	89, 94, 94, 161, 161, 109, 109, 109, 109, 109,
	161, 161, 135, 161, 135, -63, 161, -120, -53, -63,
	161, -101, 61, -99, 162, 162, -67, -79, 26, -42,
	161, -67, -108, 94, 155, -64, -105, -64, -137, -138,
	-9, -64, -3, -3, 28, 94, -123, -2, -64, 86,
	-2, 89, 89, -42, -85, -84, -86, 108, 161, 161,
	161, 161, 161, -84, -86, -85, 109, -84, 109, 162,
	-52, -55, -112, -63, 162, -67, -108, 162, -3, 91,
	-132, 90, 93, 70, 70, -137, -138, 94, 94, 128,
	87, 94, 91, -130, 90, 162, 162, -52, 45, 48,
	-85, -85, -85, -85, -84, 162, 162, 161, 162, 161,
	162, 97, 162, 162, 26, -42, -3, -133, 92, -64,
	-4, -17, -5, -19, 87, 86, -15, -16, -6, -136,
	-136, 70, 70, -3, 87, -2, 48, -109, 162, 162,
	162, 162, 162, -85, -84, 19, 26, -42, -67, -125,
	-124, 92, 88, 94, -3, 91, 94, 155, -64, -105,
	93, 93, -136, -136, 94, -122, -68, 162, 162, -67,
	94, -125, -3, -64, 86, -3, 89, -4, 91, -134,
	90, -4, -4, 93, 93, -87, 136, 87, 94, 91,
	-132, 90, -4, -135, 92, -64, 94, 94, -4, -4,
	-88, 74, 81, 6, 84, 87, -3, -127, -126, 92,
	88, 94, -4, 91, 89, 89, 94, 94, -90, 81,
	-89, 6, 84, 82, 82, 85, -124, 94, -127, -4,
	-64, 86, -4, 89, 89, 71, 82, 82, 83, 85,
	87, 94, 91, -134, 90, -91, 81, -89, 87, -4,
	83, -126,
}
var yyDef = [...]int{

	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 374, 46, 47, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 139,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 171, 0, 0, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 238, 239, 240, 241,
	205, 243, 0, 39, 477, 211, 212, 213, 214, 215,
	216, 0, 0, 0, 219, 0, 0, 0, 307, 467,
	0, 0, 0, 454, 462, 463, 464, 0, 217, 218,
	224, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	0, 0, -2, 225, -2, 237, 0, 0, 374, 0,
	375, 225, -2, 188, 0, 0, 0, 0, 0, 465,
	185, 205, 296, 0, 0, 0, 76, 460, 458, 77,
	0, 79, 0, 0, 0, 0, 0, 0, 84, 108,
	110, 0, 140, 141, 142, 143, 0, 0, 0, -2,
	-2, 225, 225, 155, 167, -2, -2, -2, -2, -2,
	166, 382, -2, -2, 172, 173, 0, 0, 225, 0,
	0, 0, 225, 236, 0, 0, 37, 38, 40, 206,
	209, 0, 478, 0, 481, 482, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	291, 0, 296, 0, 465, 465, 481, 482, 0, 0,
	468, 284, 294, 295, 0, 465, 0, 0, 3, -2,
	0, 0, 296, 0, 432, 378, 0, 198, 0, 188,
	190, 0, 0, 0, 0, 390, 348, 349, 338, 339,
	0, -2, -2, -2, -2, 0, 0, 0, 388, 475,
	475, 475, 0, 466, 0, 297, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 111, 116, 124, 138, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, 212, 457, 226,
	242, 245, 261, 188, -2, 0, 0, 0, 0, 0,
	477, 0, 262, -2, -2, 0, 0, 0, 0, 0,
	275, 205, 246, -2, 0, 0, 285, 286, 287, 288,
	289, 292, 293, 220, 222, 0, 296, 299, 0, 394,
	370, 372, 368, 369, 244, 219, 0, 0, 0, 0,
	0, 0, 296, 296, 267, 269, 0, 0, 0, 0,
	467, 148, 296, 0, 221, 223, 416, 301, 0, 0,
	-2, 0, 0, 0, 225, 203, 0, 0, 190, 192,
	0, 187, 455, 189, -2, 354, 357, 358, 205, 350,
	0, 353, 205, 0, 0, 0, 0, 190, 0, 0,
	0, 476, 0, 0, 186, 302, 0, 0, 0, 205,
	480, 0, 0, 0, 0, 461, 459, 205, 0, 205,
	0, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	109, 119, -2, 0, 121, 123, 164, -2, 153, 154,
	168, 159, 160, 383, -2, 0, 0, 41, 42, 0,
	374, 51, 52, 53, 28, 29, 0, 456, 0, 0,
	0, 210, 0, 0, 270, 271, 0, 0, 276, -2,
	280, 282, 298, 0, 300, 0, 0, 296, 465, 465,
	465, 296, 296, 296, 0, 0, 0, 0, 277, 205,
	264, 0, 281, 283, 0, 0, 0, 0, 416, -2,
	0, 0, 433, 373, 379, 0, -2, 176, 0, -2,
	197, 250, 256, 254, 255, 192, 194, 0, 191, 0,
	0, 471, 471, 469, 0, 470, 473, 474, 355, 0,
	469, 0, 0, 0, 398, 188, 402, 0, 219, 391,
	0, 225, -2, 339, 0, 0, 412, 190, 389, 181,
	184, 182, 183, 0, 0, 380, 0, 392, 89, 101,
	0, 97, 92, 0, 0, 0, 106, 107, 0, 115,
	0, 0, 131, 132, 126, 129, 125, 0, 0, 0,
	112, 0, 0, -2, 225, 0, -2, -2, 0, 0,
	205, 0, 272, 0, 303, 395, 371, 0, 296, 296,
	296, 296, 0, 0, 0, 304, 305, 306, 0, 0,
	248, 0, 146, 0, 308, 0, 0, 0, 417, 225,
	45, 376, 430, 0, -2, 199, 201, 0, 0, 252,
	257, 258, 194, 180, 0, 0, 0, 0, 0, 472,
	0, 0, 471, 387, 356, 359, 225, 396, 0, 190,
	0, 0, 344, 296, 0, 0, 0, 413, 0, 0,
	0, -2, 0, 90, 102, 103, 0, 0, 0, 99,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 120, 118, 385, 32, 5, -2, 436, 0,
	0, 0, -2, -2, 0, 0, 273, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 263, 0, 0,
	147, 0, 247, 43, 0, -2, 377, 431, 0, 177,
	200, 202, 251, 0, 196, 195, 193, 360, 469, 0,
	0, 0, 0, 0, 205, 400, 403, 401, 0, 0,
	0, 0, 205, 0, 381, 205, 393, 104, 105, 101,
	0, 98, 93, 94, -2, -2, 205, -2, 0, 127,
	133, 130, 0, -2, 0, 0, 420, 0, -2, 225,
	0, 0, 0, 0, 207, 0, 0, 303, 304, 305,
	306, 308, 0, 0, 0, 0, 0, 249, 0, 0,
	44, 414, 253, 259, 260, 198, 361, 0, 0, 469,
	469, 364, 0, 219, 225, 0, 399, 345, 346, 296,
	205, 0, 0, 410, 0, 88, 91, 100, 114, 0,
	0, 54, 55, 0, 374, 68, 69, 0, 61, -2,
	-2, 0, 0, 420, -2, 0, 0, 437, -2, 33,
	34, 0, 0, 205, 324, 0, 0, 0, 0, 0,
	324, 324, 0, 324, 0, 0, 196, 415, 203, 366,
	0, 362, 0, 365, 351, 352, 397, 0, 0, 406,
	0, 408, 0, 134, -2, 225, 0, 225, 236, 0,
	0, -2, 0, 0, 0, 0, 0, 421, 225, 50,
	434, 35, 36, 0, 0, 322, 196, 0, 324, 324,
	324, 324, 324, 0, 196, 0, 0, 0, 0, 265,
	0, 178, 0, 363, 347, 404, 0, 205, 7, -2,
	440, 0, -2, 0, 0, 0, 0, 135, 136, -2,
	48, 0, -2, 435, 0, 208, 310, 321, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 324, 319, 324,
	309, 0, 367, 205, 0, 411, 424, 0, -2, 225,
	0, 0, 63, 64, 0, 374, 73, 74, 75, 0,
	0, 0, 0, 0, 49, 418, 0, 325, 311, 312,
	313, 314, 315, 0, 0, 179, 0, 407, 409, 0,
	424, -2, 0, 0, 441, -2, 0, -2, 225, 0,
	-2, -2, 0, 0, 137, 419, 197, 318, 320, 405,
	0, 0, 425, 225, 67, 438, 56, 9, -2, 444,
	0, 0, 0, -2, -2, 323, 0, 65, 0, -2,
	439, 0, 428, 0, -2, 225, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 66, 422, 0, 428, -2,
	0, 0, 445, -2, 57, 58, 0, 0, 0, 0,
	335, 0, 0, 328, 329, 330, 423, 0, 0, 429,
	225, 72, 442, 59, 60, 0, 334, 331, 332, 333,
	70, 0, -2, 443, 0, 327, 0, 337, 71, 426,
	336, 427,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 160, 3, 3, 3, 164, 3, 3,
	161, 162, 156, 159, 165, 158, 166, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 155,
	3, 157,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:246
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:258
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:262
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:268
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:278
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:288
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:320
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:328
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:336
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:340
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:344
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:348
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:352
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:356
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:362
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:372
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:382
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:386
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:390
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:398
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:404
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:408
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:414
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:418
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:434
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:438
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:442
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:446
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:450
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:456
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:460
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:464
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:468
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:472
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:476
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:492
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:500
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:504
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:514
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:518
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:524
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:538
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:542
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:546
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:550
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:556
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:560
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:564
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:568
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:572
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:576
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:582
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:586
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:590
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:594
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:600
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:604
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:608
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:612
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:616
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:622
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:632
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:636
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:640
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:644
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:648
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:652
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:656
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:660
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:664
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:668
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:674
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:678
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:684
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:688
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:694
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:698
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:702
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:706
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:710
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:716
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:720
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:724
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:728
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:732
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:736
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:740
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:746
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:750
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:754
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:758
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:764
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:768
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:774
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:778
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:784
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:788
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:792
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:796
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:802
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:808
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:812
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:818
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:824
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:828
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:834
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:838
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:842
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:848
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:852
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:856
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:860
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:864
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:870
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:874
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:878
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:882
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:886
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:890
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:894
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:900
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:908
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:914
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:918
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:922
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:926
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:930
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:934
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:938
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:942
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:946
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:954
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:958
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:962
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:966
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:970
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:974
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:978
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:982
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:986
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:990
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:994
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:998
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1002
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				OffsetClause:     yyDollar[5].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal,
			}
		}
	case 178:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				OffsetClause:  yyDollar[10].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:1067
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause:    yyDollar[8].queryexpr,
				LimitClause:      yyDollar[9].queryexpr,
				OffsetClause:     yyDollar[10].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[11].token.Literal + " " + yyDollar[12].token.Literal,
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1107
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1127
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1137
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = IntoClause{Into: yyDollar[1].token.Literal, Variables: yyDollar[2].variables}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1149
		{
			yyVAL.queryexpr = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1159
		{
			yyVAL.queryexpr = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1169
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1179
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1189
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1199
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1203
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1213
		{
			yyVAL.queryexpr = nil
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1223
		{
			yyVAL.queryexpr = nil
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1233
		{
			yyVAL.queryexpr = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1237
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 207:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1243
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 208:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1247
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1253
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1257
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1267
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1271
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1279
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1283
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1295
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1327
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1331
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1361
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1401
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1417
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1431
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1471
		{
			yyVAL.token = Token{}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.token = yyDollar[1].token
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.token = yyDollar[1].token
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.token = yyDollar[1].token
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1489
		{
			yyVAL.token = yyDollar[1].token
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1501
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1546
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1554
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1606
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1610
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1654
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexprs = nil
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1697
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1701
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1705
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1709
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1713
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1719
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 309:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1723
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1729
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 311:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1733
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 312:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1737
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 313:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1741
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 314:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1745
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 315:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1749
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 317:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1757
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 318:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1761
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 319:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1765
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 320:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1769
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1775
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1781
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1785
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.queryexpr = nil
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1796
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1816
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1821
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1827
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1832
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1837
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1843
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1847
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1853
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1857
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1867
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1873
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1877
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1881
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1885
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1891
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 345:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1895
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1899
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 347:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1903
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1909
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1913
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1919
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 351:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1923
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 352:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1927
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1931
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1937
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1941
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1945
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1949
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1953
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1957
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1967
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 362:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1971
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1975
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1979
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1983
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1989
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1993
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1999
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2003
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2009
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2013
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2017
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2023
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2029
		{
			yyVAL.queryexpr = nil
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2033
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2039
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2043
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2049
		{
			yyVAL.queryexpr = nil
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2053
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2059
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2063
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2069
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2073
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2079
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2083
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2089
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2093
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2099
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2103
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2109
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2113
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2119
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2123
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2129
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2133
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2139
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 397:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2143
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2147
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 399:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2151
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2157
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2163
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2169
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2173
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 404:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:2179
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 405:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line parser.y:2183
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 406:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2187
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 407:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2191
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 408:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2195
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 409:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2199
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2203
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 411:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:2207
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2213
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2218
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2225
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2229
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2235
		{
			yyVAL.elseexpr = Else{}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2239
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2245
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2249
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2255
		{
			yyVAL.elseexpr = Else{}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2259
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2265
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2269
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2275
		{
			yyVAL.elseexpr = Else{}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2279
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2285
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2289
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2295
		{
			yyVAL.elseexpr = Else{}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2299
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2305
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2309
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2315
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2319
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2325
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2329
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2335
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2339
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2345
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2349
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2355
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2359
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2365
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2369
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2375
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2379
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2385
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2389
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2393
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2397
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2401
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2405
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2409
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2413
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2419
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2425
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2429
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2435
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2441
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2445
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2451
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2455
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2461
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2467
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2473
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2479
		{
			yyVAL.token = Token{}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2483
		{
			yyVAL.token = yyDollar[1].token
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2489
		{
			yyVAL.token = Token{}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2493
		{
			yyVAL.token = yyDollar[1].token
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2499
		{
			yyVAL.token = Token{}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2503
		{
			yyVAL.token = yyDollar[1].token
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2509
		{
			yyVAL.token = Token{}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2513
		{
			yyVAL.token = yyDollar[1].token
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2519
		{
			yyVAL.token = yyDollar[1].token
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2523
		{
			yyVAL.token = yyDollar[1].token
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2529
		{
			yyVAL.token = Token{}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2533
		{
			yyVAL.token = yyDollar[1].token
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2539
		{
			yyVAL.token = Token{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2543
		{
			yyVAL.token = yyDollar[1].token
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2549
		{
			yyVAL.token = Token{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2553
		{
			yyVAL.token = yyDollar[1].token
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2559
		{
			yyVAL.token = yyDollar[1].token
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2563
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
