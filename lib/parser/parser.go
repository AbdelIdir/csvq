// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const SELECT = 57358
const FROM = 57359
const UPDATE = 57360
const SET = 57361
const UNSET = 57362
const DELETE = 57363
const WHERE = 57364
const INSERT = 57365
const INTO = 57366
const VALUES = 57367
const AS = 57368
const DUAL = 57369
const STDIN = 57370
const RECURSIVE = 57371
const CREATE = 57372
const ADD = 57373
const DROP = 57374
const ALTER = 57375
const TABLE = 57376
const FIRST = 57377
const LAST = 57378
const AFTER = 57379
const BEFORE = 57380
const DEFAULT = 57381
const RENAME = 57382
const TO = 57383
const VIEW = 57384
const ORDER = 57385
const GROUP = 57386
const HAVING = 57387
const BY = 57388
const ASC = 57389
const DESC = 57390
const LIMIT = 57391
const OFFSET = 57392
const PERCENT = 57393
const JOIN = 57394
const INNER = 57395
const OUTER = 57396
const LEFT = 57397
const RIGHT = 57398
const FULL = 57399
const CROSS = 57400
const ON = 57401
const USING = 57402
const NATURAL = 57403
const UNION = 57404
const INTERSECT = 57405
const EXCEPT = 57406
const ALL = 57407
const ANY = 57408
const EXISTS = 57409
const IN = 57410
const AND = 57411
const OR = 57412
const NOT = 57413
const BETWEEN = 57414
const LIKE = 57415
const IS = 57416
const NULL = 57417
const DISTINCT = 57418
const WITH = 57419
const RANGE = 57420
const UNBOUNDED = 57421
const PRECEDING = 57422
const FOLLOWING = 57423
const CURRENT = 57424
const ROW = 57425
const CASE = 57426
const IF = 57427
const ELSEIF = 57428
const WHILE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const DO = 57433
const END = 57434
const DECLARE = 57435
const CURSOR = 57436
const FOR = 57437
const FETCH = 57438
const OPEN = 57439
const CLOSE = 57440
const DISPOSE = 57441
const NEXT = 57442
const PRIOR = 57443
const ABSOLUTE = 57444
const RELATIVE = 57445
const SEPARATOR = 57446
const PARTITION = 57447
const OVER = 57448
const COMMIT = 57449
const ROLLBACK = 57450
const CONTINUE = 57451
const BREAK = 57452
const EXIT = 57453
const ECHO = 57454
const PRINT = 57455
const PRINTF = 57456
const SOURCE = 57457
const EXECUTE = 57458
const CHDIR = 57459
const PWD = 57460
const RELOAD = 57461
const REMOVE = 57462
const SYNTAX = 57463
const TRIGGER = 57464
const FUNCTION = 57465
const AGGREGATE = 57466
const BEGIN = 57467
const RETURN = 57468
const IGNORE = 57469
const WITHIN = 57470
const VAR = 57471
const SHOW = 57472
const TIES = 57473
const NULLS = 57474
const ROWS = 57475
const CSV = 57476
const JSON = 57477
const FIXED = 57478
const LTSV = 57479
const JSON_ROW = 57480
const JSON_TABLE = 57481
const COUNT = 57482
const JSON_OBJECT = 57483
const AGGREGATE_FUNCTION = 57484
const LIST_FUNCTION = 57485
const ANALYTIC_FUNCTION = 57486
const FUNCTION_NTH = 57487
const FUNCTION_WITH_INS = 57488
const COMPARISON_OP = 57489
const STRING_OP = 57490
const SUBSTITUTION_OP = 57491
const UMINUS = 57492
const UPLUS = 57493

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2358

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 186,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 73,
	86, 73,
	88, 73,
	90, 73,
	92, 73,
	152, 73,
	-2, 216,
	-1, 103,
	16, 186,
	18, 186,
	21, 186,
	23, 186,
	-2, 1,
	-1, 121,
	159, 273,
	-2, 186,
	-1, 127,
	62, 166,
	63, 166,
	64, 166,
	-2, 177,
	-1, 166,
	1, 146,
	86, 146,
	88, 146,
	90, 146,
	92, 146,
	152, 146,
	-2, 200,
	-1, 171,
	1, 154,
	86, 154,
	88, 154,
	90, 154,
	92, 154,
	152, 154,
	-2, 200,
	-1, 212,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	147, 0,
	154, 0,
	-2, 243,
	-1, 213,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	147, 0,
	154, 0,
	-2, 245,
	-1, 222,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	147, 0,
	154, 0,
	-2, 255,
	-1, 232,
	86, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 250,
	158, 316,
	-2, 416,
	-1, 251,
	158, 317,
	-2, 417,
	-1, 252,
	158, 318,
	-2, 418,
	-1, 253,
	158, 319,
	-2, 419,
	-1, 295,
	92, 4,
	-2, 186,
	-1, 342,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	147, 0,
	154, 0,
	-2, 256,
	-1, 349,
	92, 1,
	-2, 186,
	-1, 361,
	52, 434,
	-2, 360,
	-1, 394,
	1, 76,
	86, 76,
	88, 76,
	90, 76,
	92, 76,
	152, 76,
	-2, 200,
	-1, 396,
	1, 78,
	86, 78,
	88, 78,
	90, 78,
	92, 78,
	152, 78,
	-2, 200,
	-1, 397,
	1, 134,
	86, 134,
	88, 134,
	90, 134,
	92, 134,
	152, 134,
	-2, 200,
	-1, 399,
	1, 136,
	86, 136,
	88, 136,
	90, 136,
	92, 136,
	152, 136,
	-2, 200,
	-1, 459,
	92, 1,
	-2, 186,
	-1, 466,
	88, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 531,
	86, 4,
	88, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 534,
	92, 4,
	-2, 186,
	-1, 535,
	92, 4,
	-2, 186,
	-1, 603,
	16, 444,
	77, 444,
	158, 444,
	-2, 82,
	-1, 626,
	86, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 631,
	92, 4,
	-2, 186,
	-1, 632,
	92, 4,
	-2, 186,
	-1, 653,
	86, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 687,
	1, 90,
	86, 90,
	88, 90,
	90, 90,
	92, 90,
	152, 90,
	-2, 200,
	-1, 690,
	92, 6,
	-2, 186,
	-1, 701,
	92, 4,
	-2, 186,
	-1, 758,
	92, 6,
	-2, 186,
	-1, 759,
	92, 6,
	-2, 186,
	-1, 763,
	92, 4,
	-2, 186,
	-1, 767,
	88, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 787,
	88, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 798,
	86, 6,
	88, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 838,
	86, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 841,
	92, 8,
	-2, 186,
	-1, 846,
	92, 6,
	-2, 186,
	-1, 849,
	86, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 871,
	92, 6,
	-2, 186,
	-1, 899,
	92, 6,
	-2, 186,
	-1, 903,
	88, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 905,
	86, 8,
	88, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 908,
	92, 8,
	-2, 186,
	-1, 909,
	92, 8,
	-2, 186,
	-1, 912,
	88, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 924,
	86, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 933,
	86, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 938,
	92, 8,
	-2, 186,
	-1, 952,
	92, 8,
	-2, 186,
	-1, 956,
	88, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 968,
	88, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 982,
	86, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 993,
	88, 8,
	90, 8,
	92, 8,
	-2, 186,
}

const yyPrivate = 57344

const yyLast = 3786

var yyAct = [...]int{

	18, 951, 898, 961, 470, 316, 897, 125, 925, 762,
	950, 817, 921, 819, 627, 839, 307, 24, 818, 122,
	29, 120, 126, 508, 854, 755, 761, 813, 361, 417,
	23, 416, 22, 610, 735, 458, 605, 555, 238, 159,
	160, 580, 163, 164, 165, 167, 168, 170, 172, 182,
	974, 522, 570, 1, 525, 478, 572, 524, 380, 51,
	590, 412, 3, 169, 237, 314, 176, 180, 457, 360,
	61, 754, 262, 488, 371, 487, 611, 245, 194, 195,
	311, 257, 177, 179, 418, 255, 205, 206, 243, 446,
	366, 201, 138, 132, 187, 76, 374, 74, 140, 140,
	191, 143, 234, 505, 425, 211, 212, 213, 192, 215,
	842, 296, 222, 191, 225, 226, 227, 228, 229, 230,
	231, 141, 176, 29, 435, 126, 192, 585, 127, 191,
	586, 191, 236, 23, 193, 22, 104, 181, 233, 179,
	683, 115, 663, 114, 113, 192, 795, 646, 116, 117,
	191, 733, 240, 179, 734, 620, 210, 622, 280, 281,
	623, 619, 604, 110, 119, 3, 109, 108, 111, 107,
	115, 583, 114, 113, 575, 289, 291, 116, 117, 133,
	115, 492, 297, 493, 494, 489, 486, 116, 117, 490,
	433, 175, 175, 170, 370, 358, 301, 315, 297, 214,
	266, 475, 866, 87, 297, 297, 915, 133, 256, 129,
	336, 68, 130, 914, 128, 894, 893, 340, 892, 342,
	244, 170, 891, 890, 868, 867, 865, 863, 265, 862,
	853, 852, 834, 300, 760, 732, 170, 177, 179, 102,
	352, 714, 105, 104, 713, 712, 711, 710, 115, 106,
	114, 113, 29, 68, 299, 116, 117, 707, 91, 220,
	584, 685, 23, 315, 22, 306, 682, 662, 387, 645,
	325, 326, 102, 643, 642, 641, 393, 395, 398, 400,
	635, 335, 70, 127, 634, 345, 170, 170, 170, 170,
	491, 409, 220, 449, 3, 305, 618, 616, 603, 560,
	553, 552, 405, 406, 407, 408, 551, 170, 540, 432,
	338, 430, 337, 447, 492, 29, 493, 494, 489, 486,
	428, 135, 490, 410, 346, 293, 170, 170, 373, 294,
	864, 390, 381, 356, 476, 825, 170, 140, 824, 823,
	455, 822, 821, 378, 791, 785, 782, 422, 461, 135,
	203, 521, 465, 780, 779, 469, 473, 376, 377, 386,
	484, 474, 773, 772, 557, 538, 498, 441, 423, 29,
	440, 439, 438, 503, 179, 404, 437, 436, 392, 23,
	391, 22, 359, 179, 235, 92, 93, 94, 95, 96,
	97, 98, 444, 209, 497, 208, 427, 135, 179, 198,
	197, 196, 463, 278, 276, 905, 179, 798, 179, 431,
	531, 3, 515, 519, 103, 532, 126, 480, 267, 175,
	597, 450, 451, 533, 333, 452, 199, 783, 442, 443,
	930, 781, 661, 200, 315, 485, 170, 718, 453, 499,
	170, 170, 170, 514, 516, 659, 649, 482, 256, 244,
	269, 529, 429, 539, 778, 561, 500, 562, 719, 511,
	716, 566, 527, 389, 379, 179, 91, 569, 504, 571,
	506, 507, 423, 831, 846, 829, 649, 759, 758, 29,
	690, 717, 777, 776, 775, 774, 29, 715, 87, 23,
	334, 22, 709, 820, 388, 981, 23, 559, 22, 598,
	952, 969, 268, 954, 941, 940, 932, 916, 544, 545,
	546, 547, 565, 579, 541, 910, 277, 275, 904, 145,
	901, 3, 848, 155, 156, 83, 558, 564, 3, 845,
	844, 270, 271, 808, 797, 771, 581, 770, 543, 765,
	704, 703, 548, 549, 550, 170, 170, 170, 170, 652,
	592, 29, 563, 530, 29, 29, 179, 613, 647, 625,
	582, 595, 629, 630, 594, 464, 593, 462, 654, 953,
	909, 144, 908, 952, 599, 581, 473, 632, 900, 764,
	660, 474, 899, 763, 938, 666, 631, 170, 153, 154,
	157, 158, 535, 92, 93, 94, 95, 96, 97, 98,
	146, 534, 676, 170, 899, 460, 871, 763, 655, 459,
	701, 459, 639, 684, 351, 349, 688, 669, 670, 677,
	512, 984, 696, 935, 926, 851, 840, 657, 679, 702,
	658, 628, 347, 239, 958, 656, 219, 957, 922, 665,
	815, 814, 769, 480, 768, 624, 29, 636, 637, 638,
	640, 29, 29, 953, 699, 674, 900, 664, 725, 705,
	706, 764, 678, 460, 988, 980, 947, 931, 680, 681,
	885, 847, 945, 29, 692, 698, 743, 693, 694, 723,
	179, 651, 973, 23, 720, 22, 962, 920, 812, 667,
	527, 695, 568, 655, 527, 979, 179, 112, 966, 991,
	738, 739, 740, 748, 962, 731, 724, 179, 976, 5,
	29, 977, 978, 965, 964, 3, 648, 746, 68, 745,
	574, 29, 784, 581, 729, 327, 328, 263, 217, 766,
	330, 99, 216, 218, 329, 170, 203, 790, 943, 975,
	554, 843, 426, 341, 298, 944, 332, 331, 946, 343,
	344, 375, 750, 799, 126, 224, 223, 801, 804, 986,
	786, 800, 963, 260, 591, 811, 741, 788, 569, 673,
	794, 805, 806, 792, 468, 178, 68, 960, 29, 29,
	963, 202, 492, 29, 493, 494, 672, 29, 671, 809,
	179, 810, 828, 827, 836, 589, 827, 100, 826, 588,
	354, 830, 259, 260, 261, 888, 803, 29, 577, 578,
	833, 837, 856, 602, 355, 835, 601, 23, 29, 22,
	750, 750, 722, 502, 241, 855, 615, 802, 850, 614,
	621, 178, 612, 857, 858, 859, 860, 789, 137, 827,
	136, 872, 727, 728, 861, 178, 190, 807, 708, 3,
	385, 869, 887, 697, 691, 445, 689, 170, 29, 884,
	750, 29, 382, 383, 381, 62, 29, 880, 617, 29,
	434, 384, 401, 889, 242, 372, 895, 886, 906, 126,
	827, 357, 258, 369, 902, 896, 907, 284, 88, 473,
	403, 29, 873, 913, 474, 402, 911, 147, 149, 87,
	750, 919, 186, 875, 569, 917, 148, 88, 750, 189,
	63, 139, 918, 879, 606, 607, 608, 609, 937, 29,
	870, 700, 348, 29, 8, 29, 881, 939, 29, 29,
	178, 880, 29, 750, 880, 880, 949, 934, 479, 7,
	6, 91, 350, 58, 29, 312, 948, 313, 363, 362,
	880, 967, 246, 29, 972, 249, 923, 569, 29, 927,
	928, 750, 970, 496, 880, 750, 985, 875, 959, 942,
	875, 875, 29, 556, 55, 936, 29, 879, 880, 987,
	879, 879, 880, 983, 929, 990, 875, 82, 29, 955,
	881, 992, 57, 881, 881, 750, 879, 69, 56, 134,
	875, 556, 29, 971, 60, 53, 59, 54, 880, 881,
	879, 726, 576, 29, 875, 472, 471, 52, 875, 880,
	188, 467, 353, 881, 879, 600, 142, 501, 879, 131,
	750, 150, 151, 989, 91, 17, 16, 881, 162, 64,
	152, 881, 166, 14, 875, 171, 526, 173, 174, 523,
	13, 12, 9, 15, 879, 875, 11, 364, 248, 204,
	10, 876, 751, 874, 749, 879, 477, 881, 92, 93,
	94, 95, 96, 97, 98, 178, 413, 411, 881, 4,
	644, 183, 2, 0, 0, 221, 0, 0, 207, 0,
	510, 110, 119, 118, 109, 108, 111, 107, 518, 0,
	520, 0, 0, 0, 0, 0, 0, 68, 286, 0,
	0, 0, 0, 0, 0, 0, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 0, 110, 247, 247, 109,
	108, 111, 107, 0, 264, 247, 91, 0, 0, 0,
	0, 0, 272, 273, 274, 0, 0, 0, 0, 0,
	279, 0, 0, 0, 134, 0, 91, 178, 0, 364,
	248, 92, 93, 94, 250, 251, 252, 253, 0, 367,
	105, 104, 556, 0, 221, 221, 115, 106, 114, 113,
	70, 0, 292, 116, 117, 288, 91, 302, 365, 303,
	0, 308, 221, 87, 318, 105, 104, 0, 221, 221,
	0, 115, 106, 114, 113, 105, 104, 0, 116, 117,
	285, 115, 106, 114, 113, 0, 0, 0, 116, 117,
	492, 0, 493, 494, 489, 486, 736, 737, 490, 368,
	0, 0, 0, 368, 0, 0, 0, 0, 0, 0,
	247, 110, 119, 118, 109, 108, 111, 107, 633, 0,
	0, 0, 247, 0, 0, 556, 247, 0, 0, 0,
	318, 0, 0, 92, 93, 94, 250, 251, 252, 253,
	0, 367, 0, 394, 396, 397, 399, 0, 0, 0,
	0, 0, 247, 92, 93, 94, 95, 96, 97, 98,
	365, 0, 0, 0, 421, 492, 424, 493, 494, 489,
	486, 793, 0, 490, 221, 448, 448, 448, 0, 0,
	0, 0, 0, 92, 93, 94, 95, 96, 97, 98,
	105, 104, 0, 0, 91, 0, 115, 106, 114, 113,
	0, 0, 0, 116, 117, 721, 0, 254, 0, 0,
	368, 0, 0, 0, 368, 0, 0, 0, 248, 134,
	0, 134, 134, 318, 0, 481, 247, 483, 0, 0,
	495, 0, 0, 247, 0, 0, 0, 247, 247, 0,
	0, 0, 730, 0, 0, 0, 0, 509, 0, 0,
	513, 481, 481, 517, 0, 0, 0, 509, 744, 0,
	528, 0, 0, 91, 0, 0, 0, 0, 0, 747,
	0, 0, 0, 0, 0, 91, 71, 72, 73, 0,
	99, 75, 87, 0, 88, 89, 0, 248, 0, 0,
	0, 0, 221, 536, 537, 0, 0, 509, 0, 70,
	0, 318, 542, 0, 0, 0, 0, 0, 91, 71,
	72, 73, 0, 99, 75, 87, 0, 88, 89, 0,
	221, 92, 93, 94, 95, 96, 97, 98, 0, 0,
	0, 0, 70, 0, 0, 0, 368, 91, 84, 0,
	0, 0, 85, 0, 481, 0, 100, 0, 0, 0,
	0, 0, 816, 0, 0, 124, 123, 91, 0, 247,
	0, 248, 0, 0, 596, 90, 91, 0, 309, 0,
	0, 84, 0, 0, 0, 85, 0, 0, 0, 100,
	513, 0, 0, 481, 0, 0, 0, 0, 124, 123,
	92, 93, 94, 95, 96, 97, 98, 0, 90, 221,
	0, 0, 92, 93, 94, 95, 96, 97, 98, 102,
	0, 320, 79, 319, 321, 322, 323, 324, 0, 0,
	0, 0, 0, 0, 317, 0, 77, 78, 86, 65,
	310, 0, 0, 368, 368, 92, 93, 94, 95, 96,
	97, 98, 102, 318, 320, 79, 319, 321, 322, 323,
	324, 481, 0, 0, 0, 668, 247, 247, 0, 77,
	78, 86, 65, 0, 92, 93, 94, 250, 251, 252,
	253, 0, 509, 0, 0, 0, 481, 481, 0, 0,
	0, 0, 686, 687, 92, 93, 94, 95, 96, 97,
	98, 221, 0, 92, 93, 94, 95, 96, 97, 98,
	0, 0, 0, 110, 119, 118, 109, 108, 111, 107,
	0, 0, 0, 0, 0, 0, 368, 368, 368, 110,
	119, 118, 109, 108, 111, 107, 0, 0, 0, 0,
	0, 481, 0, 0, 0, 0, 0, 0, 0, 247,
	247, 247, 0, 742, 0, 0, 0, 0, 0, 0,
	0, 513, 91, 71, 72, 73, 0, 99, 75, 87,
	0, 88, 89, 19, 0, 0, 0, 31, 32, 91,
	0, 304, 0, 0, 221, 0, 70, 0, 25, 38,
	0, 26, 105, 104, 0, 0, 368, 0, 115, 106,
	114, 113, 0, 0, 0, 116, 117, 675, 105, 104,
	0, 0, 91, 0, 115, 106, 114, 113, 0, 247,
	161, 116, 117, 587, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 100, 0, 68, 0, 0, 0, 0,
	0, 0, 878, 877, 0, 756, 0, 0, 0, 0,
	0, 28, 90, 0, 35, 33, 34, 30, 0, 0,
	0, 0, 0, 0, 0, 36, 37, 419, 420, 509,
	41, 42, 43, 44, 45, 47, 48, 49, 39, 46,
	50, 0, 0, 0, 757, 0, 0, 27, 40, 92,
	93, 94, 95, 96, 97, 98, 102, 0, 81, 79,
	80, 101, 0, 0, 0, 0, 92, 93, 94, 95,
	96, 97, 98, 77, 78, 86, 65, 0, 0, 0,
	882, 883, 91, 71, 72, 73, 0, 99, 75, 87,
	0, 88, 89, 19, 0, 0, 0, 31, 32, 92,
	93, 94, 95, 96, 97, 98, 70, 0, 25, 38,
	0, 26, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 100, 0, 68, 0, 0, 0, 0,
	0, 0, 415, 414, 0, 66, 0, 0, 0, 0,
	0, 28, 90, 0, 35, 33, 34, 30, 0, 0,
	0, 0, 0, 0, 0, 36, 37, 419, 420, 67,
	41, 42, 43, 44, 45, 47, 48, 49, 39, 46,
	50, 0, 0, 0, 0, 0, 0, 27, 40, 92,
	93, 94, 95, 96, 97, 98, 102, 0, 81, 79,
	80, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 78, 86, 65, 91, 71, 72,
	73, 0, 99, 75, 87, 0, 88, 89, 19, 0,
	0, 0, 31, 32, 0, 0, 0, 0, 0, 0,
	0, 70, 0, 25, 38, 0, 26, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 85, 0, 0, 0, 100, 0,
	68, 0, 0, 0, 0, 0, 0, 753, 752, 0,
	756, 0, 0, 0, 0, 0, 28, 90, 0, 35,
	33, 34, 30, 0, 0, 0, 0, 0, 0, 0,
	36, 37, 0, 0, 0, 41, 42, 43, 44, 45,
	47, 48, 49, 39, 46, 50, 0, 0, 0, 757,
	0, 0, 27, 40, 92, 93, 94, 95, 96, 97,
	98, 102, 0, 81, 79, 80, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 78,
	86, 65, 91, 71, 72, 73, 0, 99, 75, 87,
	0, 88, 89, 19, 0, 0, 0, 31, 32, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 25, 38,
	0, 26, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 100, 0, 68, 0, 0, 0, 0,
	0, 0, 21, 20, 0, 66, 0, 0, 0, 0,
	0, 28, 90, 0, 35, 33, 34, 30, 0, 0,
	0, 0, 0, 0, 0, 36, 37, 0, 0, 67,
	41, 42, 43, 44, 45, 47, 48, 49, 39, 46,
	50, 0, 0, 0, 0, 0, 0, 27, 40, 92,
	93, 94, 95, 96, 97, 98, 102, 0, 81, 79,
	80, 101, 91, 71, 72, 73, 0, 99, 75, 87,
	0, 88, 89, 77, 78, 86, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 0, 91, 71, 72, 73, 0, 99, 75, 87,
	0, 88, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 123, 0, 0, 0, 0, 0, 0,
	0, 185, 90, 0, 0, 0, 0, 0, 0, 92,
	93, 94, 95, 96, 97, 98, 102, 0, 320, 79,
	319, 321, 322, 323, 324, 0, 0, 0, 0, 0,
	0, 317, 0, 77, 78, 86, 65, 184, 0, 92,
	93, 94, 95, 96, 97, 98, 102, 0, 81, 79,
	80, 101, 91, 71, 72, 73, 0, 99, 75, 87,
	0, 88, 89, 77, 78, 86, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	91, 71, 72, 73, 0, 99, 75, 87, 0, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 100, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 90, 84, 0, 0, 0, 85, 0, 0,
	0, 100, 263, 0, 0, 0, 0, 0, 0, 0,
	124, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	93, 94, 95, 96, 97, 98, 102, 0, 81, 79,
	80, 101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 77, 78, 86, 65, 92, 93, 94,
	95, 96, 97, 98, 102, 0, 81, 79, 80, 101,
	91, 71, 72, 73, 0, 99, 75, 87, 0, 88,
	89, 77, 78, 86, 65, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 70, 0, 0, 0, 91, 71,
	72, 73, 0, 99, 75, 87, 0, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 85, 0, 0,
	0, 100, 0, 68, 0, 0, 0, 0, 0, 0,
	124, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 84, 0, 0, 0, 85, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 93, 94,
	95, 96, 97, 98, 102, 0, 81, 79, 80, 101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 78, 86, 65, 92, 93, 94, 95, 96,
	97, 98, 102, 0, 81, 79, 80, 101, 91, 71,
	72, 73, 0, 99, 75, 87, 0, 88, 89, 77,
	78, 86, 65, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 70, 0, 0, 0, 91, 71, 290, 73,
	0, 99, 75, 87, 0, 88, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 85, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 84,
	0, 573, 0, 85, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 123, 110, 119,
	118, 109, 108, 111, 107, 0, 90, 574, 110, 119,
	118, 109, 108, 111, 107, 92, 93, 94, 95, 96,
	97, 98, 102, 0, 81, 79, 80, 101, 110, 119,
	118, 109, 108, 111, 107, 0, 0, 0, 0, 77,
	78, 86, 121, 92, 93, 94, 95, 96, 97, 98,
	102, 0, 81, 79, 80, 101, 0, 0, 110, 119,
	118, 109, 108, 111, 107, 0, 0, 77, 78, 86,
	65, 0, 0, 0, 0, 0, 0, 105, 104, 993,
	0, 0, 0, 115, 106, 114, 113, 105, 104, 0,
	116, 117, 0, 115, 106, 114, 113, 0, 0, 0,
	116, 117, 454, 0, 0, 0, 0, 105, 104, 0,
	0, 0, 0, 115, 106, 114, 113, 0, 0, 0,
	116, 117, 288, 0, 0, 0, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 0, 0, 105, 104, 0,
	0, 0, 0, 115, 106, 114, 113, 982, 0, 0,
	116, 117, 110, 119, 118, 109, 108, 111, 107, 0,
	0, 0, 110, 119, 118, 109, 108, 111, 107, 0,
	0, 0, 0, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 956, 0, 0, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 0, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 105, 104, 933, 0, 0,
	0, 115, 106, 114, 113, 0, 0, 924, 116, 117,
	0, 0, 110, 119, 118, 109, 108, 111, 107, 0,
	0, 105, 104, 0, 0, 0, 0, 115, 106, 114,
	113, 105, 104, 912, 116, 117, 0, 115, 106, 114,
	113, 0, 0, 0, 116, 117, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 105, 104, 0, 0, 0,
	0, 115, 106, 114, 113, 105, 104, 903, 116, 117,
	0, 115, 106, 114, 113, 0, 0, 0, 116, 117,
	110, 119, 118, 109, 108, 111, 107, 0, 0, 0,
	0, 105, 104, 0, 0, 0, 0, 115, 106, 114,
	113, 849, 0, 0, 116, 117, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 0, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 105, 104, 0, 0, 841,
	0, 115, 106, 114, 113, 0, 0, 838, 116, 117,
	110, 119, 118, 109, 108, 111, 107, 0, 0, 0,
	110, 119, 118, 109, 108, 111, 107, 0, 0, 105,
	104, 0, 0, 0, 0, 115, 106, 114, 113, 0,
	0, 0, 116, 117, 0, 0, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 105, 104, 0, 0, 0,
	0, 115, 106, 114, 113, 105, 104, 787, 116, 117,
	0, 115, 106, 114, 113, 0, 0, 0, 116, 117,
	0, 0, 110, 119, 118, 109, 108, 111, 107, 105,
	104, 0, 0, 0, 0, 115, 106, 114, 113, 105,
	104, 832, 116, 117, 0, 115, 106, 114, 113, 0,
	0, 796, 116, 117, 110, 119, 118, 109, 108, 111,
	107, 0, 0, 0, 0, 105, 104, 0, 0, 0,
	0, 115, 106, 114, 113, 767, 0, 0, 116, 117,
	110, 119, 118, 109, 108, 111, 107, 0, 0, 0,
	110, 119, 118, 109, 108, 111, 107, 0, 0, 0,
	347, 105, 104, 0, 0, 0, 0, 115, 106, 114,
	113, 653, 0, 650, 116, 117, 110, 119, 118, 109,
	108, 111, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 104, 0, 0, 626, 0, 115,
	106, 114, 113, 0, 0, 0, 116, 117, 0, 0,
	110, 119, 118, 109, 108, 111, 107, 0, 0, 105,
	104, 0, 0, 0, 0, 115, 106, 114, 113, 105,
	104, 567, 116, 117, 0, 115, 106, 114, 113, 0,
	0, 0, 116, 117, 110, 119, 118, 109, 108, 111,
	107, 0, 0, 282, 0, 105, 104, 0, 0, 0,
	0, 115, 106, 114, 113, 466, 0, 0, 116, 117,
	110, 119, 118, 109, 108, 111, 107, 0, 0, 0,
	110, 119, 118, 109, 108, 111, 107, 283, 0, 105,
	104, 0, 0, 295, 0, 115, 106, 114, 113, 287,
	0, 0, 116, 117, 0, 0, 0, 110, 119, 118,
	109, 108, 111, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 104, 0, 0, 0, 0, 115,
	106, 114, 113, 0, 0, 0, 116, 117, 110, 119,
	118, 109, 108, 111, 107, 0, 0, 0, 0, 105,
	104, 0, 0, 0, 0, 115, 106, 114, 113, 105,
	104, 0, 116, 117, 0, 115, 106, 114, 113, 0,
	0, 0, 116, 117, 0, 110, 119, 118, 109, 108,
	111, 107, 0, 0, 0, 0, 105, 104, 0, 0,
	0, 0, 115, 106, 114, 113, 232, 0, 0, 116,
	117, 110, 119, 118, 109, 108, 111, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 104, 0,
	0, 0, 0, 115, 106, 114, 113, 0, 0, 0,
	116, 117, 110, 456, 118, 109, 108, 111, 107, 0,
	0, 0, 110, 339, 118, 109, 108, 111, 107, 0,
	0, 0, 0, 0, 105, 104, 0, 0, 0, 0,
	115, 106, 114, 113, 0, 0, 0, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 104, 0, 0, 0, 0, 115, 106, 114, 113,
	0, 0, 0, 116, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 104, 0, 0, 0, 0, 115, 106, 114,
	113, 105, 104, 0, 116, 117, 0, 115, 106, 114,
	113, 0, 0, 0, 116, 117,
}
var yyPact = [...]int{

	2148, -1000, 262, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3583, -1000,
	2794, 2654, -1000, -1000, 191, 806, 804, 888, 1182, -1000,
	477, 894, 875, 1483, 1483, 488, -1000, -1000, 2654, 2654,
	1728, 2654, 2654, 2654, 2654, 2654, 2654, 2654, -1000, 1483,
	1483, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 270, -1000, -1000, -1000, 2626, 2318, 896, 817, -50,
	-29, -1000, -1000, -1000, -1000, -1000, -1000, 2654, 2654, 243,
	242, 241, -1000, 279, 239, 2654, 2654, -1000, -1000, -1000,
	1483, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 237, 235, 2148, 2654, 2654, 2654, 665, 2654, 660,
	101, 2654, 690, 2654, 2654, 2654, 2654, 2654, 2654, 2654,
	3557, 2626, -1000, 226, 2654, 545, 3583, 781, 850, 1463,
	1320, 865, 740, 651, -1000, 641, 1483, 1463, -1000, 38,
	269, -1000, 408, -1000, 1483, 1483, 1483, 363, 362, -1000,
	-1000, -1000, 1483, -1000, -1000, -1000, -1000, 2654, 2654, 3462,
	3520, -1000, 870, 3583, 3583, 1048, -50, 3583, 3489, -1000,
	2870, -50, 3583, -1000, 2822, 2654, 1023, 166, 170, 163,
	3452, 43, 676, 888, -1000, -1000, -1000, -1000, 34, 1483,
	-1000, 1695, 2486, 1492, -1000, -1000, 1401, 651, 651, 101,
	101, 662, 681, -1000, -1000, 1058, -1000, 350, 651, 2654,
	-1000, 17, -12, -12, 722, 3624, 2654, 101, 2654, -1000,
	2626, -1000, -12, 101, 101, 27, 27, -1000, -1000, -1000,
	95, 1058, 2148, 166, 165, 2654, 544, 525, 524, 2654,
	751, 768, 1463, 862, 33, -1000, -1000, -1000, -1000, 224,
	-1000, -1000, -1000, -1000, 1132, 866, 32, 853, 1132, 686,
	686, 686, 2288, -1000, 306, 831, 888, 2654, 399, 305,
	222, 220, -1000, -1000, -1000, 2654, 2654, 2654, 2654, 848,
	3583, 3583, 883, 878, 1463, 2654, 2654, 2654, 2654, 3583,
	2654, 3583, -1000, -1000, -1000, 1838, 1483, 888, 1483, 36,
	674, 817, 294, -1000, -1000, 152, 2654, -1000, -1000, -1000,
	-1000, 150, 28, 844, -1000, 3583, -1000, -1000, -34, 219,
	218, 214, 213, 212, 209, 2654, 2458, -1000, -1000, 101,
	155, 155, 155, 665, -1000, 2654, 2850, -1000, -1000, 2654,
	3614, -1000, -12, -1000, -1000, 519, -1000, 2654, 475, 2148,
	473, 2654, 3426, 724, 2654, 1434, 176, 1152, 1463, 2654,
	853, 128, 937, -1000, -1000, 1030, -1000, 208, -1000, 1132,
	1389, 779, 2654, -1000, 163, -1000, 163, 163, -1000, 1483,
	641, -1000, 462, 254, 1152, 1483, -1000, 3583, 641, 1483,
	641, 192, 1483, 3583, -50, 3583, -50, -50, 3583, -50,
	3583, 888, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3583,
	461, 258, -1000, -1000, 2794, 2654, -1000, -1000, -1000, -1000,
	-1000, 510, -1000, 20, 501, 1483, 1483, -1000, 207, 1483,
	-1000, 149, -1000, 2288, 1483, 2486, 651, 651, 651, 2654,
	2654, 2654, 147, 142, 141, 671, -1000, 134, -1000, 206,
	-1000, -1000, 429, 140, 2654, 1058, 2654, 460, 521, 2148,
	2654, 3392, 608, -1000, -1000, 3583, 2148, -1000, 2654, 2840,
	-1000, 12, 761, 3583, -1000, 101, 1152, -1000, 865, 9,
	106, -63, -1000, -32, 1581, -1000, 747, 743, 710, 710,
	729, 1132, -1000, -1000, -1000, -1000, 1483, 261, 2654, 853,
	-1000, 771, 767, 3583, 700, -1000, -1000, 700, 139, 0,
	-1000, 879, 1483, 793, -1000, 1152, 788, 785, -1000, 138,
	-1000, 842, 137, -1, -1000, -1000, -7, 791, -2, -1000,
	558, 1838, 3358, 543, 1838, 1838, 495, 486, 641, 125,
	-1000, -1000, -1000, 121, 2654, 2654, 2458, 2654, 116, 115,
	114, -1000, -1000, -1000, 101, 110, -15, 2654, -1000, 638,
	318, 3264, 1058, 596, 457, -1000, 3332, 2654, -1000, 3322,
	539, 3583, -1000, 643, 314, 1434, 300, -1000, -1000, -1000,
	108, -20, 853, 1152, 2654, -1000, 2654, 1483, 1132, 1132,
	736, -1000, 734, 717, 710, -1000, -1000, -1000, 1565, -1000,
	-1000, 2654, 2654, 838, 1483, -1000, -1000, -1000, 1152, 1152,
	107, -22, 2654, 102, 1483, 2654, 830, 355, 828, 888,
	888, 2654, 827, 888, -1000, -1000, 1838, 520, 2654, 449,
	448, 1838, 1838, 98, 822, 386, 88, 87, 86, 85,
	82, 381, 354, 331, -1000, -1000, 101, 1173, -1000, 778,
	-1000, -1000, 594, 2148, 3322, -1000, -1000, 2654, -1000, -1000,
	-1000, 807, 699, 1152, -1000, -1000, 3583, 76, -8, 729,
	1167, 1132, 1132, 1132, 714, 2654, 3583, -1000, 641, -1000,
	-1000, -1000, 879, 1483, 3583, -1000, -1000, -50, 3583, 641,
	1993, 353, -1000, -1000, -1000, 791, 3583, 352, 75, 493,
	447, 1838, 3296, 557, 555, 445, 443, -1000, 205, 204,
	379, 378, 377, 376, 348, 196, 195, 299, 188, 295,
	-1000, 2654, 187, -1000, 577, 3228, -1000, -1000, -1000, 101,
	-1000, -1000, -1000, -1000, 2654, -1000, 2654, 186, 1167, 1242,
	729, 1132, -13, 3202, -1000, -1000, -1000, -1000, 442, 255,
	-1000, -1000, 2794, 2654, -1000, -1000, 2654, 2654, 1993, 1993,
	821, 441, 517, 1838, 2654, 604, -1000, 1838, -1000, -1000,
	554, 553, 641, 388, 184, 183, 181, 180, 177, 388,
	388, 369, 388, 367, 3192, 781, -1000, 2148, -1000, 73,
	3583, 1483, -1000, 2654, 729, -1000, -1000, -1000, 1993, 3168,
	538, 3158, 42, 673, 3583, 438, 437, 349, 586, 430,
	-1000, 3132, -1000, 537, -1000, -1000, 72, 71, -1000, 782,
	766, 388, 388, 388, 388, 388, 70, 781, 68, 172,
	67, 44, -1000, 66, -1000, 65, 3583, -1000, 1993, 516,
	2654, 1678, 1483, 1483, -1000, -1000, 1993, -1000, 585, 1838,
	-1000, 2654, -1000, -1000, -1000, 759, 2654, 64, 63, 59,
	57, 56, -1000, -1000, 388, -1000, 388, -1000, -1000, 492,
	428, 1993, 3098, 426, 253, -1000, -1000, 2794, 2654, -1000,
	-1000, -1000, 481, 479, 423, -1000, 575, 3064, 1434, -1000,
	-1000, -1000, -1000, -1000, -1000, 54, 47, 415, 514, 1993,
	2654, 603, -1000, 1993, 551, 1678, 3038, 536, 1678, 1678,
	-1000, -1000, 1838, 297, -1000, -1000, 582, 414, -1000, 3028,
	-1000, 535, -1000, -1000, 1678, 494, 2654, 413, 412, -1000,
	666, -1000, 581, 1993, -1000, 2654, 483, 411, 1678, 3004,
	550, 547, -1000, 698, 634, 633, 615, -1000, 570, 2994,
	409, 410, 1678, 2654, 598, -1000, 1678, -1000, -1000, 670,
	628, -1000, 631, 612, -1000, -1000, -1000, -1000, 1993, 580,
	403, -1000, 2968, -1000, 533, 680, -1000, -1000, -1000, -1000,
	-1000, 579, 1678, -1000, 2654, -1000, 618, -1000, -1000, 567,
	2900, -1000, -1000, 1678,
}
var yyPgo = [...]int{

	0, 52, 27, 12, 50, 61, 84, 1082, 31, 1081,
	29, 1079, 1077, 1076, 1064, 71, 25, 1063, 1062, 1061,
	1060, 1056, 1053, 1052, 76, 33, 36, 1051, 1050, 54,
	1049, 1046, 57, 51, 1043, 1040, 1039, 1036, 1035, 709,
	103, 93, 1029, 81, 74, 1027, 1025, 24, 1022, 56,
	1021, 17, 1020, 94, 1017, 97, 95, 59, 0, 65,
	525, 37, 4, 1016, 1015, 1012, 1011, 974, 1007, 89,
	1006, 1005, 1004, 102, 998, 992, 987, 5, 18, 11,
	13, 984, 969, 3, 968, 966, 77, 955, 952, 90,
	85, 88, 949, 28, 948, 34, 947, 945, 943, 7,
	38, 942, 41, 16, 69, 23, 80, 940, 939, 938,
	55, 924, 35, 68, 9, 26, 2, 6, 1, 10,
	64, 922, 14, 921, 15, 920, 8, 918, 997, 70,
	49, 19, 911, 92, 865, 910, 72, 91, 75, 60,
	73, 96, 909, 58, 697,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 7, 7, 8,
	8, 8, 8, 8, 9, 9, 10, 10, 12, 12,
	11, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
	19, 20, 20, 20, 20, 21, 21, 21, 21, 21,
	22, 22, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 24, 24, 25, 25, 26, 26, 26, 26,
	26, 27, 27, 27, 27, 27, 28, 28, 28, 28,
	29, 30, 30, 31, 32, 32, 33, 33, 33, 34,
	34, 34, 34, 34, 35, 35, 35, 35, 35, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 38, 38,
	38, 39, 40, 40, 40, 40, 41, 41, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 48,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 54, 55, 56,
	57, 57, 57, 57, 57, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 59, 60, 60, 60, 61, 61, 62, 62, 63,
	63, 64, 64, 65, 65, 65, 66, 66, 67, 68,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 71, 71, 71, 71, 71, 71, 71, 72,
	72, 72, 72, 73, 73, 74, 74, 74, 74, 75,
	75, 75, 75, 75, 76, 76, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 78, 79, 79,
	80, 80, 81, 81, 82, 82, 82, 83, 83, 83,
	84, 84, 85, 85, 86, 86, 87, 87, 87, 87,
	88, 88, 88, 88, 89, 89, 92, 92, 92, 92,
	93, 93, 93, 93, 93, 93, 94, 94, 94, 94,
	94, 94, 95, 95, 96, 96, 97, 97, 97, 98,
	99, 99, 100, 100, 101, 101, 102, 102, 103, 103,
	104, 104, 90, 90, 91, 91, 105, 105, 106, 106,
	107, 107, 107, 107, 108, 109, 110, 110, 111, 111,
	112, 112, 113, 113, 114, 114, 115, 115, 116, 116,
	117, 117, 118, 118, 119, 119, 120, 120, 121, 121,
	122, 122, 123, 123, 124, 124, 125, 125, 126, 126,
	127, 127, 128, 128, 128, 128, 128, 128, 128, 128,
	129, 130, 130, 131, 132, 132, 133, 133, 134, 135,
	136, 136, 137, 137, 138, 138, 139, 139, 140, 140,
	141, 141, 142, 142, 143, 143, 144, 144,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	8, 8, 9, 9, 1, 1, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 1, 1, 6, 8, 8, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 2, 2, 1, 2, 4, 4, 4, 4, 2,
	1, 1, 6, 8, 5, 6, 8, 5, 7, 7,
	7, 7, 1, 3, 1, 3, 0, 1, 1, 2,
	2, 5, 2, 2, 3, 5, 6, 8, 5, 3,
	1, 1, 3, 3, 1, 3, 1, 1, 3, 9,
	10, 10, 12, 3, 0, 1, 1, 1, 1, 2,
	2, 5, 6, 3, 4, 4, 4, 4, 4, 4,
	2, 2, 2, 2, 4, 4, 2, 2, 2, 4,
	1, 2, 2, 4, 2, 2, 1, 2, 2, 3,
	4, 5, 5, 4, 4, 4, 1, 1, 3, 0,
	2, 0, 2, 0, 3, 0, 2, 0, 3, 0,
	3, 4, 0, 2, 0, 2, 0, 2, 6, 9,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 6, 1, 3, 1, 3, 2,
	4, 1, 1, 0, 1, 1, 1, 1, 3, 3,
	3, 1, 6, 3, 3, 3, 3, 4, 4, 5,
	6, 6, 3, 4, 4, 3, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 3, 3, 2, 2, 3,
	3, 2, 2, 0, 1, 4, 3, 4, 4, 5,
	5, 5, 5, 1, 5, 10, 8, 9, 9, 9,
	9, 9, 8, 8, 10, 8, 10, 2, 1, 5,
	0, 3, 2, 5, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 6, 6, 8, 1, 1, 1, 6, 6, 1,
	1, 2, 3, 1, 1, 3, 4, 5, 6, 7,
	5, 6, 2, 4, 1, 1, 1, 3, 1, 5,
	0, 1, 4, 5, 0, 2, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	6, 9, 5, 8, 7, 3, 1, 3, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -107, -108, -111, -23,
	-20, -21, -27, -28, -34, -22, -37, -38, -58, 15,
	85, 84, -8, -10, -51, 30, 33, 129, 93, -131,
	99, 19, 20, 97, 98, 96, 107, 108, 31, 120,
	130, 112, 113, 114, 115, 116, 121, 117, 118, 119,
	122, -57, -54, -71, -68, -67, -74, -75, -98, -70,
	-72, -129, -134, -135, -36, 158, 87, 111, 77, -128,
	28, 5, 6, 7, -55, 10, -56, 155, 156, 141,
	142, 140, -76, -60, 67, 71, 157, 11, 13, 14,
	94, 4, 131, 132, 133, 134, 135, 136, 137, 9,
	75, 143, 138, 152, 148, 147, 154, 74, 72, 71,
	68, 73, -144, 156, 155, 153, 160, 161, 70, 69,
	-58, 158, -131, 85, 84, -99, -58, -40, 23, 18,
	21, -42, -41, 16, -67, 158, 34, 34, -133, -132,
	-129, -133, -128, -129, 94, 42, 123, -134, 12, -134,
	-128, -128, -35, 100, 101, 35, 36, 102, 103, -58,
	-58, 12, -128, -58, -58, -58, -128, -58, -58, -103,
	-58, -128, -58, -128, -128, 149, -58, -103, -39, -51,
	-58, -129, -130, -9, 129, 93, 6, -53, -52, -142,
	29, 163, 158, 163, -58, -58, 158, 158, 158, 147,
	154, -137, -144, 71, -67, -58, -58, -128, 158, 158,
	-1, -58, -58, -58, -137, -58, 72, 68, 73, -60,
	158, -67, -58, 66, 65, -58, -58, -58, -58, -58,
	-58, -58, 89, -103, -73, 158, -99, -120, -100, 88,
	-47, 43, 24, -91, -89, -86, -88, -128, 28, -87,
	134, 135, 136, 137, 17, -90, -86, -43, 17, 62,
	63, 64, -136, 76, -128, -89, 162, 149, 94, 42,
	123, 124, -128, -128, -128, 154, 41, 154, 41, -128,
	-58, -58, 41, 17, 17, 162, 60, 60, 162, -58,
	6, -58, 159, 159, 159, 91, 68, 162, 68, -129,
	-130, 162, -128, -128, 6, -73, -136, -103, -128, 6,
	159, -106, -97, -96, -59, -58, -77, 153, -128, 142,
	140, 143, 144, 145, 146, -136, -136, -60, -60, 72,
	68, 66, 65, 74, 140, -136, -58, -55, -56, 69,
	-58, -60, -58, -60, -60, -1, 159, 88, -121, 90,
	-101, 90, -58, -48, 49, 46, -89, 19, 162, 158,
	-104, -93, -92, -94, 27, 158, -89, 139, -67, 17,
	162, -44, 22, -104, -141, 65, -141, -141, -106, 158,
	-143, 26, 31, 32, 40, 19, -133, -58, 95, 158,
	26, 158, 158, -58, -128, -58, -128, -128, -58, -128,
	-58, 24, 12, 12, -89, -103, -103, -103, -103, -58,
	-2, -12, -5, -13, 85, 84, -8, -10, -6, 109,
	110, -128, -130, -129, -128, 68, 68, -53, 26, 158,
	159, -73, 159, 162, 26, 158, 158, 158, 158, 158,
	158, 158, -73, -73, -59, -60, -69, 158, -67, 138,
	-69, -69, -137, -73, 162, -58, 69, -113, -112, 90,
	86, -58, 92, -1, 92, -58, 89, -50, 50, -58,
	-62, -63, -64, -58, -77, 25, 158, -39, -110, -109,
	-57, -128, -91, -128, -58, -44, 58, -138, -140, 57,
	61, 162, 53, 55, 56, -128, 26, -93, 158, -104,
	-90, -45, 44, -58, -41, -40, -41, -41, -105, -128,
	-39, -24, 158, -128, -57, 158, -57, -128, -39, -105,
	-39, 159, -33, -30, -32, -29, -31, -129, -128, -130,
	92, 152, -58, -99, 91, 91, -128, -128, 158, -105,
	159, -106, -128, -73, -136, -136, -136, -136, -73, -73,
	-73, 159, 159, 159, 69, -61, -60, 158, 97, 68,
	159, -58, -58, 92, -113, -1, -58, 89, 84, -58,
	-1, -58, -49, 51, 77, 162, -65, 47, 48, -61,
	-102, -57, -43, 162, 154, 159, 162, 162, 52, 52,
	-139, 54, -139, -138, -140, -104, -128, 159, -58, -44,
	-46, 45, 46, 159, 162, -26, 35, 36, 37, 38,
	-25, -24, 39, -102, 41, 41, 159, 26, 159, 162,
	162, 39, 159, 162, 87, -2, 89, -122, 88, -2,
	-2, 91, 91, -39, 159, 159, -73, -73, -73, -59,
	-73, 159, 159, 159, -60, 159, 162, -58, 78, 128,
	159, 85, 92, 89, -58, -100, -120, 88, -49, 131,
	-62, 132, 159, 162, -44, -110, -58, -73, -128, -93,
	-93, 52, 52, 52, -139, 162, -58, -103, -143, -105,
	-57, -57, 159, 162, -58, 159, -128, -128, -58, 26,
	125, 26, -29, -32, -32, -129, -58, 26, -33, -2,
	-123, 90, -58, 92, 92, -2, -2, 159, 26, 106,
	159, 159, 159, 159, 159, 106, 106, 127, 106, 127,
	-61, 162, 44, 85, -1, -58, -66, 35, 36, 25,
	-39, -102, 159, 159, 162, -95, 59, 60, -93, -93,
	-93, 52, -128, -58, -39, -26, -25, -39, -3, -14,
	-5, -18, 85, 84, -15, -16, 87, 126, 125, 125,
	159, -115, -114, 90, 86, 92, -2, 89, 87, 87,
	92, 92, 158, 158, 106, 106, 106, 106, 106, 158,
	158, 132, 158, 132, -58, 158, -112, 89, -61, -73,
	-58, 158, -95, 59, -93, 159, 159, 92, 152, -58,
	-99, -58, -129, -130, -58, -3, -3, 26, 92, -115,
	-2, -58, 84, -2, 87, 87, -39, -79, -78, -80,
	105, 158, 158, 158, 158, 158, -78, -80, -79, 106,
	-78, 106, 159, -47, 159, -105, -58, -3, 89, -124,
	88, 91, 68, 68, 92, 92, 125, 85, 92, 89,
	-122, 88, 159, 159, -47, 43, 46, -79, -79, -79,
	-79, -78, 159, 159, 158, 159, 158, 159, 159, -3,
	-125, 90, -58, -4, -17, -5, -19, 85, 84, -15,
	-16, -6, -128, -128, -3, 85, -2, -58, 46, -103,
	159, 159, 159, 159, 159, -79, -78, -117, -116, 90,
	86, 92, -3, 89, 92, 152, -58, -99, 91, 91,
	92, -114, 89, -62, 159, 159, 92, -117, -3, -58,
	84, -3, 87, -4, 89, -126, 88, -4, -4, -81,
	133, 85, 92, 89, -124, 88, -4, -127, 90, -58,
	92, 92, -82, 72, 79, 6, 82, 85, -3, -58,
	-119, -118, 90, 86, 92, -4, 89, 87, 87, -84,
	79, -83, 6, 82, 80, 80, 83, -116, 89, 92,
	-119, -4, -58, 84, -4, 69, 80, 80, 81, 83,
	85, 92, 89, -126, 88, -85, 79, -83, 85, -4,
	-58, 81, -118, 89,
}
var yyDef = [...]int{

	-2, -2, 2, 27, 28, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	0, 350, 43, 44, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 124, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 156, 0,
	0, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 217, 218, 219, 186, 0, 36, 442, 200,
	0, 192, 193, 194, 195, 196, 197, 0, 0, 0,
	0, 0, 283, 432, 0, 0, 0, 420, 428, 429,
	0, 412, 413, 414, 415, 416, 417, 418, 419, 198,
	199, 0, 0, -2, 0, 446, 447, 432, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 216, 0, 350, 0, 351, -2, 0, 0,
	0, 169, 0, 430, 167, 186, 0, 0, 71, 426,
	424, 72, 0, 74, 0, 0, 0, 0, 0, 79,
	102, 103, 0, 125, 126, 127, 128, 0, 0, 0,
	0, 140, 152, 141, 142, 143, -2, 147, 148, 151,
	358, -2, 155, 157, 158, 0, 0, 0, 0, 0,
	0, 215, 0, 0, 34, 35, 37, 187, 190, 0,
	443, 0, 273, 0, 267, 268, 0, 430, 430, 446,
	447, 0, 0, 433, 261, 271, 272, 0, 430, 0,
	3, 239, -2, -2, 0, 0, 0, 0, 0, 252,
	186, 223, -2, 0, 0, 262, 263, 264, 265, 266,
	269, 270, -2, 0, 0, 273, 0, 398, 354, 0,
	179, 0, 0, 0, 364, 324, 325, 314, 315, 0,
	-2, -2, -2, -2, 0, 0, 362, 171, 0, 440,
	440, 440, 0, 431, 444, 0, 0, 0, 0, 0,
	0, 0, 104, 109, 123, 0, 0, 0, 0, 0,
	129, 130, 0, 0, 0, 0, 0, 0, 0, 159,
	193, 423, 220, 222, 238, -2, 0, 0, 0, 0,
	0, 442, 0, 201, 203, 0, 273, 274, 202, 204,
	276, 0, 368, 346, 348, 344, 345, 221, 200, 0,
	0, 0, 0, 0, 0, 273, 273, 244, 246, 0,
	0, 0, 0, 432, 133, 273, 0, 247, 248, 0,
	0, 253, -2, 257, 259, 382, 278, 0, 0, -2,
	0, 0, 0, 184, 0, 0, 186, 0, 0, 0,
	171, -2, 330, 333, 334, 186, 326, 0, 329, 0,
	0, 173, 0, 170, 0, 441, 0, 0, 168, 0,
	186, 445, 0, 0, 0, 0, 427, 425, 186, 0,
	186, 0, 0, 75, -2, 77, -2, -2, 135, -2,
	137, 0, 138, 139, 153, 144, 145, 149, 359, 160,
	0, 0, 38, 39, 0, 350, 48, 49, 50, 25,
	26, 0, 422, 421, 0, 0, 0, 191, 0, 0,
	275, 0, 277, 0, 0, 273, 430, 430, 430, 273,
	273, 273, 0, 0, 0, 0, 254, 186, 241, 0,
	258, 260, 0, 0, 0, 249, 0, 0, 382, -2,
	0, 0, 0, 399, 349, 355, -2, 161, 0, 182,
	178, 227, 233, 231, 232, 0, 0, 372, 169, 376,
	0, 200, 365, 200, 0, 378, 0, 0, 436, 436,
	434, 0, 435, 438, 439, 331, 0, 434, 0, 171,
	363, 175, 0, 172, 163, 166, 164, 165, 0, 366,
	84, 96, 0, 92, 87, 0, 0, 0, 101, 0,
	108, 0, 0, 116, 117, 111, 114, 110, 0, 105,
	0, -2, 0, 0, -2, -2, 0, 0, 186, 0,
	279, 369, 347, 0, 273, 273, 273, 273, 0, 0,
	0, 280, 281, 282, 0, 0, 225, 0, 131, 0,
	284, 0, 250, 0, 0, 383, 0, 0, 42, 23,
	396, 185, 180, 182, 0, 0, 229, 234, 235, 370,
	0, 356, 171, 0, 0, 320, 273, 0, 0, 0,
	0, 437, 0, 0, 436, 361, 332, 335, 0, 379,
	162, 0, 0, -2, 0, 85, 97, 98, 0, 0,
	0, 94, 0, 0, 0, 0, 106, 0, 0, 0,
	0, 0, 0, 0, 29, 5, -2, 402, 0, 0,
	0, -2, -2, 0, 0, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 240, 0, 0, 132, 0,
	224, 40, 0, -2, 352, 353, 397, 0, 181, 183,
	228, 0, 186, 0, 374, 377, 375, 0, 0, 336,
	434, 0, 0, 0, 0, 0, 176, 174, 186, 367,
	99, 100, 96, 0, 93, 88, 89, -2, 91, 186,
	-2, 0, 112, 118, 115, 0, 113, 0, 0, 386,
	0, -2, 0, 0, 0, 0, 0, 188, 0, 0,
	279, 280, 281, 282, 284, 0, 0, 0, 0, 0,
	226, 0, 0, 41, 380, 0, 230, 236, 237, 0,
	373, 357, 321, 322, 273, 337, 0, 0, 434, 434,
	340, 0, 200, 0, 83, 86, 95, 107, 0, 0,
	51, 52, 0, 350, 63, 64, 0, 56, -2, -2,
	0, 0, 386, -2, 0, 0, 403, -2, 30, 31,
	0, 0, 186, 300, 0, 0, 0, 0, 0, 300,
	300, 0, 300, 0, 0, 177, 381, -2, 371, 0,
	342, 0, 338, 0, 341, 327, 328, 119, -2, 0,
	0, 0, 215, 0, 57, 0, 0, 0, 0, 0,
	387, 0, 47, 400, 32, 33, 0, 0, 298, 177,
	0, 300, 300, 300, 300, 300, 0, 177, 0, 0,
	0, 0, 242, 0, 323, 0, 339, 7, -2, 406,
	0, -2, 0, 0, 120, 121, -2, 45, 0, -2,
	401, 0, 189, 286, 297, 0, 0, 0, 0, 0,
	0, 0, 292, 293, 300, 295, 300, 285, 343, 390,
	0, -2, 0, 0, 0, 58, 59, 0, 350, 68,
	69, 70, 0, 0, 0, 46, 384, 0, 0, 301,
	287, 288, 289, 290, 291, 0, 0, 0, 390, -2,
	0, 0, 407, -2, 0, -2, 0, 0, -2, -2,
	122, 385, -2, 178, 294, 296, 0, 0, 391, 0,
	62, 404, 53, 9, -2, 410, 0, 0, 0, 299,
	0, 60, 0, -2, 405, 0, 394, 0, -2, 0,
	0, 0, 302, 0, 0, 0, 0, 61, 388, 0,
	0, 394, -2, 0, 0, 411, -2, 54, 55, 0,
	0, 311, 0, 0, 304, 305, 306, 389, -2, 0,
	0, 395, 0, 67, 408, 0, 310, 307, 308, 309,
	65, 0, -2, 409, 0, 303, 0, 313, 66, 392,
	0, 312, 393, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 3, 3, 3, 161, 3, 3,
	158, 159, 153, 156, 162, 155, 163, 160, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 152,
	3, 154,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:229
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:234
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:246
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:250
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:256
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:260
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:266
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:270
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:276
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:280
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:284
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:288
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:308
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:312
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:316
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:320
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:328
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:332
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:338
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:348
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:352
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:358
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:362
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:370
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:374
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:380
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:384
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:390
		{
			yyVAL.statement = Exit{}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:400
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:404
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:410
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:414
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:418
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:422
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:426
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:432
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:436
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:440
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:444
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:448
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:452
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:458
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:462
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:468
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:472
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:476
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:482
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:492
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:502
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:506
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:510
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:514
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:518
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:524
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:532
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:536
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:540
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:544
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:550
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:554
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:558
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:562
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:568
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:572
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:576
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:580
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:584
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:590
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:594
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:600
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:604
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:608
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:612
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:616
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:620
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:624
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:628
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:632
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:636
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:642
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:646
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:652
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:656
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:662
		{
			yyVAL.expression = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:666
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:670
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:674
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:678
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:684
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:688
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:692
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:696
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:700
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 106:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:706
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 107:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:710
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:714
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:718
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:724
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:730
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:734
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:740
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:746
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:750
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:756
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:760
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:764
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 119:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:770
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 120:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:774
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 121:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:778
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 122:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:782
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:786
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:792
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:796
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:800
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:804
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:808
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:812
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:816
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:822
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:826
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:830
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:836
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:840
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:844
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:848
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:852
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:856
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:860
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:864
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:868
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:872
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:876
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:880
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:884
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:888
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:892
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:896
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:900
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:904
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:908
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:912
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:916
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:920
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:924
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:928
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:934
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:938
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:942
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:948
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 162:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:970
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:979
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:988
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:999
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1003
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1015
		{
			yyVAL.queryexpr = nil
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1019
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1025
		{
			yyVAL.queryexpr = nil
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1029
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1035
		{
			yyVAL.queryexpr = nil
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1045
		{
			yyVAL.queryexpr = nil
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1049
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1055
		{
			yyVAL.queryexpr = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1059
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1065
		{
			yyVAL.queryexpr = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1069
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1073
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1079
		{
			yyVAL.queryexpr = nil
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1083
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1089
		{
			yyVAL.queryexpr = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1093
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1099
		{
			yyVAL.queryexpr = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1103
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 188:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1109
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1113
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1119
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1123
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1129
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1133
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1137
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1141
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1145
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1149
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1155
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1161
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1171
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1175
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1179
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1189
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1197
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1201
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1205
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1209
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1213
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1217
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1221
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1225
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1229
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1233
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1237
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1241
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1245
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1249
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1261
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1265
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1279
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1295
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1299
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1315
		{
			yyVAL.token = Token{}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1339
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1345
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1368
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1376
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1390
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1394
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1398
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1402
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1410
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1414
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1418
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1422
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1426
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1430
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1434
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1438
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1442
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1446
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1450
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1454
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1460
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1464
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1490
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1494
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1498
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1508
		{
			yyVAL.queryexprs = nil
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1512
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1518
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1522
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1526
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1530
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1537
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1541
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1545
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1549
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1553
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1559
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 285:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1563
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1569
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1573
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 288:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1577
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 289:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1581
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 291:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1589
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 292:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1593
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1597
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 294:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 295:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1605
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 296:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1609
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1615
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1621
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1625
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = nil
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1656
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1661
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1667
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1672
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1677
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1683
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1687
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1693
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1697
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1703
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1707
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1713
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1717
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1721
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1725
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1731
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].identifier, Args: nil}
		}
	case 321:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1735
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].identifier, Args: yyDollar[5].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1739
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 323:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1743
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1749
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1759
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 327:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1763
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1767
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1771
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1777
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1781
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1785
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1789
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1793
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1797
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1803
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1807
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 338:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1811
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1815
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1819
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1823
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1829
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1833
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1839
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1843
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1849
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1853
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1857
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1869
		{
			yyVAL.queryexpr = nil
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1873
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1879
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1883
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1889
		{
			yyVAL.queryexpr = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1899
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1903
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1909
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1913
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1919
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1923
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1929
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1933
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1939
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1943
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1949
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1953
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1959
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1969
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 371:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1973
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1977
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1981
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1987
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1993
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1999
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2003
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2009
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2014
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2021
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2025
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2031
		{
			yyVAL.elseexpr = Else{}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2035
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2041
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2045
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2051
		{
			yyVAL.elseexpr = Else{}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2055
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2061
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2065
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2071
		{
			yyVAL.elseexpr = Else{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2075
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2081
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2085
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2091
		{
			yyVAL.elseexpr = Else{}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2095
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2101
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2105
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2111
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2115
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2121
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2125
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2131
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2135
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2141
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2145
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2151
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2155
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2161
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2165
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2171
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2175
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2181
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2185
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2189
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2193
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2197
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2201
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2205
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2209
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2215
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2221
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2225
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2231
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2237
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2241
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2247
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2251
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2257
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2263
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2269
		{
			yyVAL.token = Token{}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2273
		{
			yyVAL.token = yyDollar[1].token
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2279
		{
			yyVAL.token = Token{}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2283
		{
			yyVAL.token = yyDollar[1].token
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2289
		{
			yyVAL.token = Token{}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2293
		{
			yyVAL.token = yyDollar[1].token
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2299
		{
			yyVAL.token = Token{}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2319
		{
			yyVAL.token = Token{}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2323
		{
			yyVAL.token = yyDollar[1].token
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2329
		{
			yyVAL.token = Token{}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2339
		{
			yyVAL.token = Token{}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2343
		{
			yyVAL.token = yyDollar[1].token
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2349
		{
			yyVAL.token = yyDollar[1].token
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2353
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
