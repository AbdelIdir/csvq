// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const AS = 57369
const DUAL = 57370
const STDIN = 57371
const RECURSIVE = 57372
const CREATE = 57373
const ADD = 57374
const DROP = 57375
const ALTER = 57376
const TABLE = 57377
const FIRST = 57378
const LAST = 57379
const AFTER = 57380
const BEFORE = 57381
const DEFAULT = 57382
const RENAME = 57383
const TO = 57384
const VIEW = 57385
const ORDER = 57386
const GROUP = 57387
const HAVING = 57388
const BY = 57389
const ASC = 57390
const DESC = 57391
const LIMIT = 57392
const OFFSET = 57393
const PERCENT = 57394
const JOIN = 57395
const INNER = 57396
const OUTER = 57397
const LEFT = 57398
const RIGHT = 57399
const FULL = 57400
const CROSS = 57401
const ON = 57402
const USING = 57403
const NATURAL = 57404
const UNION = 57405
const INTERSECT = 57406
const EXCEPT = 57407
const ALL = 57408
const ANY = 57409
const EXISTS = 57410
const IN = 57411
const AND = 57412
const OR = 57413
const NOT = 57414
const BETWEEN = 57415
const LIKE = 57416
const IS = 57417
const NULL = 57418
const DISTINCT = 57419
const WITH = 57420
const RANGE = 57421
const UNBOUNDED = 57422
const PRECEDING = 57423
const FOLLOWING = 57424
const CURRENT = 57425
const ROW = 57426
const CASE = 57427
const IF = 57428
const ELSEIF = 57429
const WHILE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const DO = 57434
const END = 57435
const DECLARE = 57436
const CURSOR = 57437
const FOR = 57438
const FETCH = 57439
const OPEN = 57440
const CLOSE = 57441
const DISPOSE = 57442
const PREPARE = 57443
const NEXT = 57444
const PRIOR = 57445
const ABSOLUTE = 57446
const RELATIVE = 57447
const SEPARATOR = 57448
const PARTITION = 57449
const OVER = 57450
const COMMIT = 57451
const ROLLBACK = 57452
const CONTINUE = 57453
const BREAK = 57454
const EXIT = 57455
const ECHO = 57456
const PRINT = 57457
const PRINTF = 57458
const SOURCE = 57459
const EXECUTE = 57460
const CHDIR = 57461
const PWD = 57462
const RELOAD = 57463
const REMOVE = 57464
const SYNTAX = 57465
const TRIGGER = 57466
const FUNCTION = 57467
const AGGREGATE = 57468
const BEGIN = 57469
const RETURN = 57470
const IGNORE = 57471
const WITHIN = 57472
const VAR = 57473
const SHOW = 57474
const TIES = 57475
const NULLS = 57476
const ROWS = 57477
const CSV = 57478
const JSON = 57479
const FIXED = 57480
const LTSV = 57481
const JSON_ROW = 57482
const JSON_TABLE = 57483
const COUNT = 57484
const JSON_OBJECT = 57485
const AGGREGATE_FUNCTION = 57486
const LIST_FUNCTION = 57487
const ANALYTIC_FUNCTION = 57488
const FUNCTION_NTH = 57489
const FUNCTION_WITH_INS = 57490
const COMPARISON_OP = 57491
const STRING_OP = 57492
const SUBSTITUTION_OP = 57493
const UMINUS = 57494
const UPLUS = 57495

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2475

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 200,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 19,
	1, 24,
	87, 24,
	89, 24,
	91, 24,
	93, 24,
	154, 24,
	-2, 220,
	-1, 30,
	1, 76,
	87, 76,
	89, 76,
	91, 76,
	93, 76,
	154, 76,
	-2, 232,
	-1, 109,
	17, 200,
	19, 200,
	22, 200,
	24, 200,
	-2, 1,
	-1, 111,
	161, 291,
	-2, 200,
	-1, 118,
	63, 180,
	64, 180,
	65, 180,
	-2, 191,
	-1, 152,
	1, 120,
	87, 120,
	89, 120,
	91, 120,
	93, 120,
	154, 120,
	-2, 214,
	-1, 153,
	1, 161,
	87, 161,
	89, 161,
	91, 161,
	93, 161,
	154, 161,
	-2, 220,
	-1, 158,
	1, 154,
	87, 154,
	89, 154,
	91, 154,
	93, 154,
	154, 154,
	-2, 220,
	-1, 159,
	1, 155,
	87, 155,
	89, 155,
	91, 155,
	93, 155,
	154, 155,
	-2, 220,
	-1, 160,
	1, 156,
	87, 156,
	89, 156,
	91, 156,
	93, 156,
	154, 156,
	-2, 220,
	-1, 161,
	1, 159,
	87, 159,
	89, 159,
	91, 159,
	93, 159,
	154, 159,
	-2, 214,
	-1, 162,
	1, 160,
	87, 160,
	89, 160,
	91, 160,
	93, 160,
	154, 160,
	-2, 220,
	-1, 165,
	1, 167,
	87, 167,
	89, 167,
	91, 167,
	93, 167,
	154, 167,
	-2, 214,
	-1, 166,
	1, 168,
	87, 168,
	89, 168,
	91, 168,
	93, 168,
	154, 168,
	-2, 220,
	-1, 222,
	87, 1,
	91, 1,
	93, 1,
	-2, 200,
	-1, 240,
	160, 334,
	-2, 436,
	-1, 241,
	160, 335,
	-2, 437,
	-1, 242,
	160, 336,
	-2, 438,
	-1, 243,
	160, 337,
	-2, 439,
	-1, 272,
	4, 142,
	133, 142,
	134, 142,
	135, 142,
	136, 142,
	137, 142,
	138, 142,
	139, 142,
	-2, 220,
	-1, 273,
	4, 143,
	133, 143,
	134, 143,
	135, 143,
	136, 143,
	137, 143,
	138, 143,
	139, 143,
	-2, 220,
	-1, 283,
	1, 172,
	87, 172,
	89, 172,
	91, 172,
	93, 172,
	154, 172,
	-2, 220,
	-1, 290,
	93, 4,
	-2, 200,
	-1, 299,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 261,
	-1, 300,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 263,
	-1, 309,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 273,
	-1, 357,
	93, 1,
	-2, 200,
	-1, 370,
	53, 455,
	-2, 380,
	-1, 402,
	1, 78,
	87, 78,
	89, 78,
	91, 78,
	93, 78,
	154, 78,
	-2, 220,
	-1, 403,
	1, 79,
	87, 79,
	89, 79,
	91, 79,
	93, 79,
	154, 79,
	-2, 214,
	-1, 404,
	1, 80,
	87, 80,
	89, 80,
	91, 80,
	93, 80,
	154, 80,
	-2, 220,
	-1, 405,
	1, 81,
	87, 81,
	89, 81,
	91, 81,
	93, 81,
	154, 81,
	-2, 214,
	-1, 406,
	1, 147,
	87, 147,
	89, 147,
	91, 147,
	93, 147,
	154, 147,
	-2, 214,
	-1, 407,
	1, 148,
	87, 148,
	89, 148,
	91, 148,
	93, 148,
	154, 148,
	-2, 220,
	-1, 408,
	1, 149,
	87, 149,
	89, 149,
	91, 149,
	93, 149,
	154, 149,
	-2, 214,
	-1, 409,
	1, 150,
	87, 150,
	89, 150,
	91, 150,
	93, 150,
	154, 150,
	-2, 220,
	-1, 412,
	1, 115,
	87, 115,
	89, 115,
	91, 115,
	93, 115,
	154, 115,
	164, 115,
	-2, 220,
	-1, 417,
	1, 378,
	87, 378,
	89, 378,
	91, 378,
	93, 378,
	154, 378,
	-2, 220,
	-1, 424,
	1, 173,
	87, 173,
	89, 173,
	91, 173,
	93, 173,
	154, 173,
	-2, 220,
	-1, 450,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 274,
	-1, 480,
	93, 1,
	-2, 200,
	-1, 487,
	89, 1,
	91, 1,
	93, 1,
	-2, 200,
	-1, 490,
	1, 196,
	51, 196,
	87, 196,
	89, 196,
	91, 196,
	93, 196,
	96, 196,
	154, 196,
	161, 196,
	-2, 220,
	-1, 506,
	161, 332,
	164, 332,
	-2, 214,
	-1, 558,
	87, 4,
	89, 4,
	91, 4,
	93, 4,
	-2, 200,
	-1, 561,
	93, 4,
	-2, 200,
	-1, 562,
	93, 4,
	-2, 200,
	-1, 599,
	1, 199,
	87, 199,
	89, 199,
	91, 199,
	93, 199,
	96, 199,
	154, 199,
	161, 199,
	-2, 220,
	-1, 631,
	17, 465,
	78, 465,
	160, 465,
	-2, 85,
	-1, 657,
	87, 4,
	91, 4,
	93, 4,
	-2, 200,
	-1, 662,
	93, 4,
	-2, 200,
	-1, 663,
	93, 4,
	-2, 200,
	-1, 685,
	87, 1,
	91, 1,
	93, 1,
	-2, 200,
	-1, 719,
	1, 93,
	87, 93,
	89, 93,
	91, 93,
	93, 93,
	154, 93,
	-2, 214,
	-1, 720,
	1, 94,
	87, 94,
	89, 94,
	91, 94,
	93, 94,
	154, 94,
	-2, 220,
	-1, 722,
	93, 6,
	-2, 200,
	-1, 728,
	161, 126,
	164, 126,
	-2, 220,
	-1, 733,
	93, 4,
	-2, 200,
	-1, 789,
	93, 6,
	-2, 200,
	-1, 790,
	93, 6,
	-2, 200,
	-1, 794,
	93, 4,
	-2, 200,
	-1, 798,
	89, 4,
	91, 4,
	93, 4,
	-2, 200,
	-1, 828,
	87, 6,
	89, 6,
	91, 6,
	93, 6,
	-2, 200,
	-1, 835,
	154, 60,
	-2, 220,
	-1, 869,
	87, 6,
	91, 6,
	93, 6,
	-2, 200,
	-1, 872,
	93, 8,
	-2, 200,
	-1, 879,
	93, 6,
	-2, 200,
	-1, 882,
	87, 4,
	91, 4,
	93, 4,
	-2, 200,
	-1, 904,
	93, 6,
	-2, 200,
	-1, 933,
	93, 6,
	-2, 200,
	-1, 937,
	89, 6,
	91, 6,
	93, 6,
	-2, 200,
	-1, 939,
	87, 8,
	89, 8,
	91, 8,
	93, 8,
	-2, 200,
	-1, 942,
	93, 8,
	-2, 200,
	-1, 943,
	93, 8,
	-2, 200,
	-1, 959,
	87, 8,
	91, 8,
	93, 8,
	-2, 200,
	-1, 964,
	93, 8,
	-2, 200,
	-1, 965,
	93, 8,
	-2, 200,
	-1, 970,
	87, 6,
	91, 6,
	93, 6,
	-2, 200,
	-1, 975,
	93, 8,
	-2, 200,
	-1, 990,
	93, 8,
	-2, 200,
	-1, 994,
	89, 8,
	91, 8,
	93, 8,
	-2, 200,
	-1, 1023,
	87, 8,
	91, 8,
	93, 8,
	-2, 200,
}

const yyPrivate = 57344

const yyLast = 3766

var yyAct = [...]int{

	117, 19, 1001, 988, 989, 330, 960, 870, 932, 931,
	491, 848, 913, 115, 112, 30, 658, 793, 323, 177,
	887, 850, 110, 792, 531, 479, 178, 62, 638, 425,
	766, 849, 584, 1, 25, 370, 633, 549, 546, 153,
	608, 389, 154, 155, 224, 158, 159, 160, 162, 548,
	166, 618, 600, 499, 228, 416, 131, 131, 227, 134,
	328, 511, 410, 432, 24, 5, 235, 163, 171, 510,
	175, 247, 380, 478, 433, 369, 325, 245, 639, 431,
	23, 375, 182, 97, 233, 77, 172, 252, 123, 129,
	211, 75, 383, 205, 825, 275, 65, 176, 204, 528,
	873, 469, 174, 220, 204, 291, 205, 86, 427, 3,
	19, 204, 171, 917, 764, 715, 440, 765, 515, 132,
	516, 517, 512, 509, 30, 118, 513, 458, 226, 140,
	223, 281, 204, 173, 197, 650, 196, 195, 651, 230,
	156, 198, 199, 221, 613, 707, 174, 614, 695, 678,
	272, 273, 192, 201, 200, 191, 190, 193, 189, 186,
	648, 174, 647, 632, 197, 615, 196, 195, 611, 283,
	603, 198, 199, 24, 292, 556, 515, 173, 516, 517,
	512, 509, 169, 197, 513, 553, 906, 169, 246, 23,
	198, 199, 173, 456, 205, 292, 379, 367, 295, 204,
	292, 296, 234, 263, 256, 496, 294, 950, 292, 90,
	255, 292, 949, 928, 124, 927, 120, 926, 3, 121,
	98, 119, 925, 19, 924, 71, 901, 900, 514, 898,
	361, 107, 187, 186, 280, 896, 895, 30, 197, 188,
	196, 195, 886, 885, 286, 198, 199, 282, 865, 826,
	321, 307, 124, 791, 763, 746, 353, 71, 745, 744,
	743, 742, 739, 717, 714, 779, 694, 402, 404, 407,
	409, 412, 677, 98, 118, 675, 412, 417, 674, 673,
	301, 417, 417, 625, 131, 424, 24, 107, 667, 665,
	646, 19, 644, 322, 631, 339, 340, 589, 108, 912,
	306, 423, 23, 582, 581, 30, 349, 307, 472, 580,
	569, 455, 437, 453, 365, 354, 288, 341, 342, 289,
	438, 287, 899, 443, 382, 399, 172, 390, 470, 387,
	897, 3, 856, 855, 854, 853, 421, 422, 415, 497,
	852, 821, 174, 385, 386, 816, 395, 813, 811, 99,
	100, 101, 102, 103, 104, 105, 810, 126, 19, 545,
	804, 420, 803, 586, 490, 565, 521, 454, 464, 505,
	495, 463, 30, 173, 418, 419, 535, 462, 461, 442,
	460, 459, 401, 400, 465, 466, 368, 446, 225, 219,
	218, 483, 126, 445, 476, 126, 208, 207, 206, 269,
	174, 467, 99, 100, 101, 102, 103, 104, 105, 174,
	520, 267, 449, 612, 213, 939, 828, 558, 451, 452,
	109, 24, 257, 543, 174, 169, 347, 967, 551, 538,
	559, 498, 174, 555, 174, 504, 814, 23, 475, 812,
	173, 438, 508, 693, 560, 691, 246, 473, 474, 234,
	501, 468, 503, 681, 522, 533, 444, 523, 398, 259,
	388, 809, 879, 541, 750, 544, 3, 790, 748, 566,
	534, 789, 527, 722, 529, 530, 537, 539, 862, 860,
	808, 19, 594, 681, 90, 751, 807, 806, 19, 749,
	599, 209, 805, 348, 98, 30, 747, 741, 210, 851,
	598, 588, 30, 572, 397, 174, 1022, 577, 578, 579,
	1008, 258, 998, 268, 593, 997, 136, 992, 978, 108,
	977, 597, 626, 969, 951, 266, 946, 938, 935, 607,
	587, 881, 878, 570, 877, 839, 173, 827, 802, 147,
	148, 260, 261, 801, 24, 796, 573, 574, 575, 576,
	736, 24, 735, 592, 412, 684, 591, 417, 557, 19,
	23, 484, 19, 19, 620, 482, 991, 23, 135, 965,
	990, 610, 98, 30, 137, 622, 30, 30, 585, 641,
	964, 609, 990, 621, 943, 942, 244, 872, 656, 3,
	623, 660, 661, 663, 662, 627, 3, 238, 138, 934,
	174, 562, 561, 933, 585, 145, 146, 149, 150, 495,
	290, 795, 654, 481, 692, 794, 652, 480, 668, 669,
	670, 672, 609, 99, 100, 101, 102, 103, 104, 105,
	975, 664, 933, 904, 794, 733, 671, 98, 480, 359,
	357, 1023, 994, 970, 720, 959, 937, 882, 869, 709,
	728, 686, 701, 702, 690, 798, 687, 711, 19, 699,
	734, 685, 238, 19, 19, 697, 657, 487, 222, 1025,
	972, 961, 30, 710, 706, 551, 727, 30, 30, 551,
	884, 871, 700, 696, 688, 724, 19, 731, 659, 361,
	730, 676, 737, 738, 355, 501, 229, 725, 726, 1015,
	30, 99, 100, 101, 102, 103, 104, 105, 774, 1014,
	996, 752, 995, 957, 846, 845, 800, 799, 98, 756,
	712, 713, 655, 19, 991, 934, 795, 481, 1029, 174,
	1021, 194, 986, 968, 19, 786, 762, 30, 920, 769,
	770, 771, 373, 238, 777, 174, 880, 755, 30, 24,
	683, 776, 1012, 984, 955, 843, 174, 595, 1020, 1002,
	761, 1006, 1031, 797, 1017, 23, 99, 100, 101, 102,
	103, 104, 105, 1018, 1019, 1005, 775, 1004, 680, 609,
	71, 602, 817, 1002, 829, 601, 585, 778, 831, 835,
	19, 19, 71, 818, 3, 19, 842, 253, 830, 19,
	822, 213, 786, 786, 30, 30, 760, 833, 824, 30,
	819, 602, 95, 30, 834, 832, 1016, 840, 212, 583,
	982, 304, 384, 859, 841, 303, 305, 983, 844, 19,
	985, 781, 858, 1027, 918, 858, 1003, 864, 174, 874,
	344, 786, 857, 30, 343, 861, 866, 99, 100, 101,
	240, 241, 242, 243, 876, 376, 441, 1000, 71, 293,
	1003, 883, 875, 250, 890, 891, 892, 893, 585, 847,
	19, 276, 905, 19, 374, 346, 345, 270, 858, 96,
	19, 619, 786, 19, 30, 734, 772, 30, 894, 311,
	310, 705, 786, 515, 30, 516, 517, 30, 781, 781,
	249, 250, 251, 704, 703, 19, 617, 616, 923, 929,
	489, 940, 921, 605, 606, 922, 363, 786, 78, 30,
	889, 858, 630, 364, 629, 941, 754, 525, 495, 98,
	231, 930, 888, 948, 19, 954, 643, 781, 19, 947,
	19, 116, 952, 19, 19, 642, 786, 914, 30, 277,
	786, 649, 30, 640, 30, 128, 394, 30, 30, 127,
	19, 185, 976, 413, 971, 19, 19, 164, 391, 392,
	838, 19, 740, 905, 30, 729, 19, 393, 781, 30,
	30, 908, 63, 786, 723, 30, 170, 721, 781, 390,
	30, 19, 1011, 1009, 645, 19, 1007, 554, 202, 203,
	758, 759, 457, 71, 232, 30, 381, 215, 216, 30,
	366, 689, 248, 781, 914, 139, 141, 914, 914, 1028,
	1024, 378, 785, 279, 19, 278, 976, 274, 93, 91,
	170, 91, 93, 116, 914, 1032, 90, 181, 30, 914,
	914, 414, 781, 184, 64, 130, 781, 974, 908, 903,
	914, 908, 908, 732, 356, 836, 837, 98, 99, 100,
	101, 102, 103, 104, 105, 914, 8, 500, 908, 914,
	7, 6, 358, 908, 908, 634, 635, 636, 637, 781,
	59, 373, 238, 326, 908, 327, 372, 371, 285, 785,
	785, 236, 239, 1026, 868, 999, 56, 981, 914, 908,
	966, 85, 58, 908, 57, 298, 299, 300, 61, 302,
	54, 60, 309, 55, 312, 313, 314, 315, 316, 317,
	318, 98, 125, 352, 164, 329, 958, 757, 785, 962,
	963, 98, 908, 604, 493, 902, 492, 53, 350, 183,
	488, 362, 628, 524, 164, 919, 973, 122, 360, 18,
	17, 979, 980, 515, 519, 516, 517, 512, 509, 767,
	768, 513, 993, 66, 144, 15, 550, 547, 14, 785,
	936, 329, 411, 13, 12, 9, 396, 1010, 16, 785,
	11, 1013, 98, 10, 214, 909, 99, 100, 101, 240,
	241, 242, 243, 782, 376, 907, 780, 428, 426, 953,
	4, 164, 2, 956, 785, 0, 0, 238, 0, 0,
	1030, 0, 0, 374, 0, 192, 201, 200, 191, 190,
	193, 189, 448, 0, 450, 0, 164, 0, 0, 0,
	0, 0, 0, 785, 0, 0, 987, 785, 0, 0,
	0, 164, 192, 201, 200, 191, 190, 193, 189, 0,
	99, 100, 101, 102, 103, 104, 105, 98, 164, 164,
	99, 100, 101, 102, 103, 104, 105, 0, 164, 0,
	785, 125, 0, 0, 360, 0, 0, 0, 485, 0,
	0, 0, 515, 494, 516, 517, 512, 509, 823, 308,
	513, 0, 0, 0, 0, 187, 186, 0, 0, 0,
	526, 197, 188, 196, 195, 0, 308, 308, 198, 199,
	753, 99, 100, 101, 240, 241, 242, 243, 0, 0,
	0, 0, 187, 186, 0, 0, 0, 0, 197, 188,
	196, 195, 0, 0, 0, 198, 199, 477, 0, 0,
	0, 377, 0, 0, 0, 377, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 201,
	200, 191, 190, 193, 189, 0, 567, 0, 192, 201,
	200, 191, 190, 193, 189, 329, 0, 164, 0, 81,
	0, 164, 164, 164, 0, 0, 99, 100, 101, 102,
	103, 104, 105, 0, 0, 0, 590, 0, 0, 0,
	0, 308, 0, 0, 0, 596, 0, 308, 308, 133,
	0, 0, 0, 0, 142, 143, 0, 151, 152, 0,
	0, 0, 0, 157, 0, 0, 0, 161, 0, 165,
	0, 167, 168, 0, 0, 0, 0, 0, 187, 186,
	308, 471, 471, 471, 197, 188, 196, 195, 187, 186,
	0, 198, 199, 282, 197, 188, 196, 195, 0, 0,
	863, 198, 199, 0, 192, 201, 200, 191, 190, 193,
	189, 377, 0, 0, 217, 377, 0, 0, 0, 0,
	125, 0, 125, 125, 355, 0, 98, 666, 320, 0,
	0, 0, 164, 164, 164, 164, 0, 0, 0, 0,
	237, 237, 0, 0, 0, 679, 0, 254, 237, 0,
	0, 0, 0, 0, 0, 262, 237, 264, 265, 0,
	0, 0, 494, 0, 271, 0, 0, 0, 0, 0,
	0, 698, 98, 164, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 187, 186, 0, 0, 708, 164,
	197, 188, 196, 195, 0, 0, 0, 198, 199, 716,
	0, 0, 0, 0, 297, 0, 0, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 0, 319, 0, 332, 0, 0, 0,
	0, 0, 0, 308, 0, 0, 0, 0, 0, 0,
	351, 192, 201, 200, 191, 190, 193, 189, 0, 0,
	0, 377, 237, 0, 0, 99, 100, 101, 102, 103,
	104, 105, 0, 0, 237, 0, 0, 0, 237, 0,
	0, 0, 332, 0, 0, 192, 201, 200, 191, 190,
	193, 189, 0, 0, 0, 0, 403, 405, 406, 408,
	0, 0, 0, 0, 0, 0, 486, 0, 0, 237,
	0, 99, 100, 101, 102, 103, 104, 105, 0, 0,
	0, 436, 815, 439, 0, 0, 0, 0, 0, 0,
	308, 187, 186, 0, 164, 0, 820, 197, 188, 196,
	195, 0, 0, 682, 198, 199, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 192, 201, 200, 191, 190,
	193, 189, 0, 377, 377, 187, 186, 0, 0, 0,
	98, 197, 188, 196, 195, 0, 0, 90, 198, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 867, 0, 332, 0, 502, 237, 506, 0,
	0, 518, 0, 0, 237, 0, 0, 0, 237, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 0,
	0, 536, 502, 502, 540, 308, 0, 542, 532, 0,
	0, 552, 0, 0, 0, 187, 186, 0, 0, 0,
	360, 197, 188, 196, 195, 0, 0, 0, 198, 199,
	377, 377, 377, 0, 0, 0, 0, 0, 164, 192,
	568, 200, 191, 190, 193, 189, 0, 0, 0, 0,
	563, 564, 0, 0, 532, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 332, 571, 0, 0,
	0, 494, 192, 447, 200, 191, 190, 193, 189, 99,
	100, 101, 102, 103, 104, 105, 0, 308, 192, 201,
	0, 191, 190, 193, 189, 0, 0, 0, 192, 377,
	0, 191, 190, 193, 189, 0, 0, 502, 0, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	186, 0, 0, 0, 237, 197, 188, 196, 195, 624,
	0, 0, 198, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 502, 0,
	0, 0, 187, 186, 0, 0, 0, 0, 197, 188,
	196, 195, 0, 0, 653, 198, 199, 0, 187, 186,
	0, 0, 0, 0, 197, 188, 196, 195, 187, 186,
	0, 198, 199, 0, 197, 188, 196, 195, 0, 0,
	0, 198, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 237, 237, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 0, 0, 0, 502, 502, 0, 0,
	0, 0, 718, 719, 0, 0, 98, 72, 73, 74,
	0, 95, 76, 90, 93, 91, 92, 20, 68, 0,
	0, 0, 32, 33, 0, 0, 0, 0, 0, 0,
	0, 108, 0, 26, 41, 0, 27, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 237, 237, 237, 0, 773, 0, 0,
	87, 0, 0, 0, 88, 536, 0, 0, 96, 0,
	71, 0, 0, 0, 0, 0, 0, 911, 910, 0,
	787, 0, 0, 0, 0, 0, 29, 94, 0, 36,
	34, 35, 31, 37, 0, 0, 0, 0, 0, 0,
	0, 39, 40, 434, 435, 0, 44, 45, 46, 47,
	38, 49, 50, 51, 42, 48, 52, 0, 0, 0,
	788, 0, 237, 28, 43, 99, 100, 101, 102, 103,
	104, 105, 107, 0, 84, 82, 83, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	80, 89, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 72, 73, 74, 0, 95, 76, 90, 93, 91,
	92, 20, 68, 0, 0, 0, 32, 33, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 26, 41, 0,
	27, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 915, 916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 88, 0,
	0, 0, 96, 0, 71, 0, 0, 0, 0, 0,
	0, 430, 429, 0, 69, 0, 0, 944, 945, 0,
	29, 94, 332, 36, 34, 35, 31, 37, 0, 0,
	0, 0, 0, 0, 0, 39, 40, 434, 435, 70,
	44, 45, 46, 47, 38, 49, 50, 51, 42, 48,
	52, 0, 0, 0, 0, 0, 0, 28, 43, 99,
	100, 101, 102, 103, 104, 105, 107, 0, 84, 82,
	83, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 89, 67, 98, 72, 73,
	74, 0, 95, 76, 90, 93, 91, 92, 20, 68,
	0, 0, 0, 32, 33, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 26, 41, 0, 27, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 88, 0, 0, 0, 96,
	0, 71, 0, 0, 0, 0, 0, 0, 784, 783,
	0, 787, 0, 0, 0, 0, 0, 29, 94, 0,
	36, 34, 35, 31, 37, 0, 0, 0, 0, 0,
	0, 0, 39, 40, 0, 0, 0, 44, 45, 46,
	47, 38, 49, 50, 51, 42, 48, 52, 0, 0,
	0, 788, 0, 0, 28, 43, 99, 100, 101, 102,
	103, 104, 105, 107, 0, 84, 82, 83, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 89, 67, 98, 72, 73, 74, 0, 95,
	76, 90, 93, 91, 92, 20, 68, 0, 0, 0,
	32, 33, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 26, 41, 0, 27, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 88, 0, 0, 0, 96, 0, 71, 0,
	0, 0, 0, 0, 0, 22, 21, 0, 69, 0,
	0, 0, 0, 0, 29, 94, 0, 36, 34, 35,
	31, 37, 0, 0, 0, 0, 0, 0, 0, 39,
	40, 0, 0, 70, 44, 45, 46, 47, 38, 49,
	50, 51, 42, 48, 52, 0, 0, 0, 0, 0,
	0, 28, 43, 99, 100, 101, 102, 103, 104, 105,
	107, 0, 84, 82, 83, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 89,
	67, 98, 72, 73, 74, 0, 95, 76, 90, 93,
	91, 92, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 108, 0, 0, 0,
	98, 72, 73, 74, 0, 95, 76, 90, 93, 91,
	92, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 88,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 87, 0, 0, 0, 88, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 100, 101, 102, 103, 104, 105, 107, 0, 334,
	82, 333, 335, 336, 337, 338, 0, 0, 0, 0,
	0, 0, 331, 0, 79, 80, 89, 67, 324, 99,
	100, 101, 102, 103, 104, 105, 107, 0, 334, 82,
	333, 335, 336, 337, 338, 0, 0, 0, 0, 0,
	0, 331, 0, 79, 80, 89, 67, 98, 72, 73,
	74, 0, 95, 76, 90, 93, 91, 92, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 98, 72, 73,
	74, 0, 95, 76, 90, 93, 91, 92, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 88, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 87, 0, 0, 0, 88, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 113,
	0, 0, 0, 0, 0, 0, 0, 180, 94, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 101, 102,
	103, 104, 105, 107, 0, 334, 82, 333, 335, 336,
	337, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 89, 67, 179, 0, 99, 100, 101, 102,
	103, 104, 105, 107, 0, 84, 82, 83, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 89, 67, 98, 72, 73, 74, 0, 95,
	76, 90, 93, 91, 92, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 0, 98, 72, 73, 74, 0, 95, 76, 90,
	93, 91, 92, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 88, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 87, 0, 0, 0,
	88, 0, 0, 0, 96, 253, 0, 0, 0, 0,
	0, 0, 0, 114, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 101, 102, 103, 104, 105,
	107, 0, 84, 82, 83, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 79, 80, 89,
	67, 99, 100, 101, 102, 103, 104, 105, 107, 0,
	84, 82, 83, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 89, 67, 98,
	72, 73, 74, 0, 95, 76, 90, 93, 91, 92,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 98, 72, 73,
	74, 0, 95, 76, 90, 93, 91, 92, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 88, 0, 0,
	0, 96, 0, 71, 0, 0, 0, 0, 0, 0,
	114, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 87, 0, 0, 0, 88, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	101, 102, 103, 104, 105, 107, 0, 84, 82, 83,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 89, 67, 99, 100, 101, 102,
	103, 104, 105, 107, 0, 84, 82, 83, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 89, 67, 98, 72, 73, 74, 0, 95,
	76, 90, 93, 91, 92, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	0, 0, 98, 72, 73, 74, 0, 95, 76, 90,
	93, 91, 92, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 88, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 87, 0, 0, 0,
	88, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 101, 102, 103, 104, 105,
	107, 0, 84, 82, 83, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 89,
	111, 99, 100, 101, 102, 103, 104, 105, 107, 0,
	84, 82, 83, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 89, 67, 98,
	72, 284, 74, 0, 95, 76, 90, 93, 91, 92,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 88, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	101, 102, 103, 104, 105, 107, 0, 84, 82, 83,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 89, 67,
}
var yyPact = [...]int{

	2520, -1000, 266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3420, 3263, -1000, -1000, 197, 924, 920, 1025, 1716,
	-1000, 473, 1016, 1018, 1253, 1253, 503, 1253, 3263, -1000,
	-1000, 3263, 3263, 1528, 3263, 3263, 3263, 3263, 3263, 3263,
	-1000, 1253, 1253, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 274, -1000, -1000, -1000, -1000, 3235, -1000, 2893,
	1031, 931, -1000, -1000, -1000, -1000, -1000, -1000, 1636, 3263,
	3263, -54, 238, 237, 236, -1000, 342, 232, 3263, 3263,
	-1000, -1000, -1000, -1000, 1253, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 230, 229, -62, 2520,
	578, 3235, -1000, 228, 3263, 607, 1636, -1000, 886, 979,
	1178, 568, 994, 837, 720, -1000, 702, 1253, 1178, -1000,
	40, 271, -1000, 416, -1000, 1253, 633, 1253, 1253, 369,
	357, -1000, 816, -1000, 1253, -1000, -1000, -1000, -1000, 3263,
	3263, 1009, 34, 810, 907, 1007, -1000, 1005, -1000, -1000,
	70, -54, -1000, -1000, 1289, -54, -1000, -1000, 3605, 3263,
	83, 160, 155, 158, 235, 518, 36, 790, 1025, -1000,
	-1000, -1000, -1000, 37, 1253, -1000, 3263, 3263, 3263, 729,
	3263, 752, 91, 3263, 823, 3263, 3263, 3263, 3263, 3263,
	3263, 3263, -1000, -1000, 1482, 3078, 2677, 720, 720, 91,
	91, 771, 809, -1000, -1000, 1799, -1000, 351, 720, 3263,
	1117, -1000, 2520, 155, 154, 3263, 605, 549, 548, 3263,
	866, 876, 1178, 990, 33, -1000, -1000, -1000, -1000, 226,
	-1000, -1000, -1000, -1000, 1053, 1003, 32, 983, 1053, 756,
	756, 756, 2706, -1000, 300, 936, 1025, 3263, 408, 298,
	223, 222, -1000, -1000, -1000, -1000, 3263, 3263, 3263, 3263,
	3263, 938, -1000, -1000, 1036, 3263, 3263, 1020, 1020, 1178,
	3263, 3263, 3263, -1000, 3263, 1636, -1000, -1000, -1000, -1000,
	2206, 1253, 1025, 1253, 47, 787, 931, 296, -21, 9,
	9, 803, 1773, 3263, 91, 3263, -1000, 3235, -1000, 9,
	91, 91, 28, 28, -1000, -1000, -1000, 1789, 1799, -1000,
	-1000, 152, 3263, -1000, -1000, 150, 29, 975, -1000, 1636,
	-1000, -1000, -33, 221, 220, 218, 217, 211, 208, 3263,
	3050, -1000, -1000, 91, 168, 168, 168, 729, -1000, 3263,
	1173, -1000, -1000, 526, -1000, 3263, 472, 2520, 468, 3263,
	1566, 577, 859, 3263, 2863, 179, 490, 1178, 3448, 983,
	64, 1127, -1000, -1000, 714, -1000, 206, -1000, 1053, 633,
	882, 3263, -1000, 235, -1000, 235, 235, -1000, 1253, 702,
	-1000, 216, 269, 490, 1253, -1000, 1636, 925, 1253, 702,
	198, 1253, -1000, -54, -1000, -54, -54, -1000, -54, -1000,
	-1000, 21, 970, 1025, -1000, -1000, -1000, 11, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 465, 263, -1000, -1000, 3420,
	3263, -1000, -1000, -1000, -1000, -1000, 510, -1000, 10, 509,
	1253, 1253, -1000, 205, 1253, -1000, -1000, 3263, 1740, -1000,
	9, -1000, -1000, -1000, 149, -1000, 2706, 1253, 3078, 720,
	720, 720, 3263, 3263, 3263, 148, 143, 142, 749, -1000,
	147, -1000, 203, -1000, -1000, 432, 136, 3263, 463, 547,
	2520, 3263, 672, -1000, -1000, 1636, 3263, 2520, 404, 3263,
	733, -1000, 6, 865, 1636, -1000, 91, 490, -1000, 994,
	4, 257, -61, -1000, -17, 1, -54, -62, -1000, 854,
	853, 826, 826, 839, 1053, -1000, -1000, -1000, -1000, 1253,
	122, 3263, 983, -1000, 878, 875, 1636, 799, -1000, -1000,
	799, 133, -1, -1000, 1039, 1253, 913, -1000, 490, 903,
	894, -1000, -1000, 131, -1000, 967, 129, -2, -1000, -1000,
	-4, 911, -26, 3263, 1253, -1000, 3263, 634, 2206, 576,
	599, 2206, 2206, 502, 501, 702, 128, 1799, 3263, -1000,
	-1000, -1000, 127, 3263, 3263, 3050, 3263, 118, 117, 114,
	-1000, -1000, -1000, 91, 111, -15, 3263, -1000, 699, 323,
	1532, 664, 462, -1000, 571, -1000, 1395, 595, 992, -1000,
	-1000, 703, 312, 2863, 309, -1000, -1000, -1000, 105, -16,
	983, 490, 3263, -1000, 3263, 633, 1053, 1053, 851, -1000,
	850, 838, 826, -1000, -1000, -1000, -19, -1000, -1000, 3263,
	3263, 962, 1253, -1000, -1000, -1000, 490, 490, 103, -49,
	3263, 102, 1253, 3263, 960, 346, 957, 1025, 1025, 3263,
	948, 1025, -1000, -1000, -1000, -1000, -1000, 2206, 544, 3263,
	459, 457, 2206, 2206, 101, 945, 1799, 389, 100, 99,
	98, 97, 94, 388, 360, 356, -1000, -1000, 91, 1146,
	-1000, 881, -1000, -1000, 661, 2520, -1000, -1000, 3263, -1000,
	-1000, -1000, -1000, 964, 780, 490, -1000, -1000, 1636, 93,
	-47, 839, 1099, 1053, 1053, 1053, 833, 3263, 1636, -1000,
	702, -1000, -1000, -1000, 1039, 1253, 1636, -1000, -1000, -54,
	-1000, 702, 2363, 344, -1000, -1000, -1000, 911, -1000, 340,
	92, 524, 452, 2206, 565, 629, 628, 450, 445, -1000,
	202, 200, 384, 379, 378, 372, 353, 196, 188, 305,
	187, 302, -1000, 3263, 185, -1000, 640, -1000, -1000, -1000,
	91, -1000, -1000, -1000, -1000, 3263, -1000, 3263, 181, 1099,
	1228, 839, 1053, -67, 88, -1000, -1000, -1000, -1000, 444,
	262, -1000, -1000, 3420, 3263, -1000, -1000, 2893, 3263, 2363,
	2363, 943, 442, 543, 2206, 3263, 670, -1000, 2206, -1000,
	-1000, 627, 626, 702, 392, 180, 175, 174, 173, 172,
	392, 392, 371, 392, 370, 1299, 886, -1000, -1000, 87,
	1636, 1253, -1000, 3263, 839, -1000, -1000, -1000, 2363, 558,
	592, 495, 31, 770, 1025, -1000, 441, 439, 335, 660,
	438, -1000, 557, -1000, 591, -1000, -1000, 82, 81, -1000,
	888, 873, 392, 392, 392, 392, 392, 75, 886, 74,
	170, 68, 162, -1000, 66, -1000, 65, 1636, -1000, 2363,
	542, 3263, 2022, 1253, 1253, 44, 765, -1000, -1000, 2363,
	-1000, 652, 2206, -1000, 3263, -1000, -1000, -1000, 868, 3263,
	63, 61, 56, 54, 52, -1000, -1000, 392, -1000, 392,
	-1000, -1000, 512, 435, 2363, 556, 434, 261, -1000, -1000,
	3420, 3263, -1000, -1000, -1000, 493, 492, 1253, 1253, 433,
	-1000, 639, 2863, -1000, -1000, -1000, -1000, -1000, -1000, 51,
	46, 431, 541, 2363, 3263, 669, -1000, 2363, 625, 2022,
	555, 582, 2022, 2022, 488, 477, -1000, -1000, 292, -1000,
	-1000, 647, 430, -1000, 553, -1000, 581, -1000, -1000, 2022,
	539, 3263, 427, 425, 2022, 2022, -1000, 747, -1000, 646,
	2363, -1000, 3263, 479, 424, 2022, 552, 624, 622, 422,
	419, -1000, 777, 696, 694, 677, -1000, 638, 417, 491,
	2022, 3263, 667, -1000, 2022, -1000, -1000, 621, 611, 746,
	683, -1000, 692, 674, -1000, -1000, -1000, -1000, 644, 413,
	-1000, 551, -1000, 580, -1000, -1000, 753, -1000, -1000, -1000,
	-1000, -1000, 642, 2022, -1000, 3263, -1000, 680, -1000, -1000,
	637, -1000, -1000,
}
var yyPgo = [...]int{

	0, 33, 29, 265, 186, 108, 74, 1202, 79, 26,
	63, 1200, 1198, 1197, 1196, 299, 12, 1195, 1193, 1185,
	1183, 1180, 1178, 1175, 78, 28, 36, 1174, 1173, 1172,
	62, 1168, 37, 1167, 1166, 49, 38, 1165, 1164, 1163,
	1150, 1149, 65, 99, 88, 1147, 71, 72, 1143, 1142,
	20, 1141, 52, 1140, 34, 1139, 82, 1137, 91, 85,
	83, 918, 0, 60, 107, 32, 10, 1136, 1134, 1133,
	1127, 1096, 1113, 101, 1111, 1110, 1108, 44, 1104, 1102,
	1101, 5, 31, 11, 21, 1100, 1097, 2, 1095, 1093,
	66, 1092, 1091, 81, 77, 84, 1087, 35, 1086, 30,
	1085, 1083, 1080, 13, 54, 1072, 40, 18, 55, 75,
	24, 76, 1071, 1070, 1067, 53, 1066, 25, 73, 17,
	23, 8, 9, 4, 3, 58, 1054, 16, 1053, 7,
	1049, 6, 1047, 1379, 27, 19, 14, 1045, 89, 982,
	1044, 96, 87, 90, 69, 51, 61, 92, 1043, 41,
	731,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 6, 6, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 10, 10, 12,
	12, 11, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 13, 14, 14, 15, 15, 15, 15, 15, 16,
	16, 17, 17, 18, 18, 18, 18, 18, 19, 19,
	19, 19, 19, 19, 20, 20, 20, 20, 21, 21,
	21, 21, 21, 22, 22, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 24, 24, 25, 25, 26,
	26, 26, 26, 26, 27, 27, 27, 27, 27, 27,
	27, 28, 28, 28, 28, 29, 29, 30, 30, 31,
	31, 31, 31, 32, 33, 33, 34, 35, 35, 36,
	36, 36, 37, 37, 37, 37, 37, 38, 38, 38,
	38, 38, 38, 38, 39, 39, 39, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 41, 41, 41, 42, 42, 43, 43, 43, 43,
	44, 44, 45, 46, 46, 47, 47, 48, 48, 49,
	49, 50, 50, 51, 51, 51, 52, 52, 53, 53,
	54, 54, 55, 55, 56, 56, 57, 57, 57, 57,
	57, 57, 58, 59, 60, 60, 60, 60, 60, 61,
	61, 61, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 63,
	64, 64, 64, 65, 65, 66, 66, 67, 67, 68,
	68, 69, 69, 69, 70, 70, 71, 72, 73, 73,
	73, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	75, 75, 75, 75, 75, 75, 75, 76, 76, 76,
	76, 77, 77, 78, 78, 78, 78, 79, 79, 79,
	79, 79, 80, 80, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 82, 83, 83, 84, 84,
	85, 85, 86, 86, 86, 87, 87, 87, 88, 88,
	89, 89, 90, 90, 91, 91, 91, 91, 92, 92,
	92, 92, 93, 93, 96, 96, 96, 96, 97, 97,
	97, 97, 97, 97, 98, 98, 98, 98, 98, 98,
	99, 99, 100, 100, 101, 101, 101, 102, 103, 103,
	104, 104, 105, 105, 106, 106, 107, 107, 108, 108,
	109, 109, 94, 94, 95, 95, 110, 110, 111, 111,
	112, 112, 112, 112, 113, 114, 115, 115, 116, 116,
	117, 117, 118, 118, 119, 119, 120, 120, 121, 121,
	122, 122, 123, 123, 124, 124, 125, 125, 126, 126,
	127, 127, 128, 128, 129, 129, 130, 130, 131, 131,
	132, 132, 133, 133, 133, 133, 133, 133, 133, 133,
	134, 135, 135, 136, 137, 137, 138, 138, 139, 140,
	141, 142, 142, 143, 143, 144, 144, 145, 145, 146,
	146, 147, 147, 148, 148, 149, 149, 150, 150,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 8, 8, 9, 9, 1, 1, 1, 2, 1,
	1, 7, 8, 6, 1, 1, 7, 8, 6, 1,
	1, 1, 1, 1, 6, 8, 8, 9, 9, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 2, 2, 1, 2, 4, 4,
	4, 4, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 7, 7, 1, 3, 1, 3, 0,
	1, 1, 2, 2, 5, 5, 2, 4, 2, 3,
	5, 6, 8, 5, 3, 1, 3, 1, 3, 4,
	2, 4, 3, 1, 1, 3, 3, 1, 3, 1,
	1, 3, 9, 10, 10, 12, 3, 0, 1, 1,
	1, 1, 2, 2, 5, 6, 3, 4, 4, 4,
	4, 4, 4, 2, 2, 2, 2, 4, 4, 2,
	2, 2, 4, 1, 2, 2, 4, 2, 2, 1,
	2, 2, 3, 4, 5, 7, 5, 4, 4, 4,
	1, 1, 3, 0, 2, 0, 2, 0, 3, 0,
	2, 0, 3, 0, 3, 4, 0, 2, 0, 2,
	0, 2, 6, 9, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	3, 1, 6, 1, 3, 1, 3, 2, 4, 1,
	1, 0, 1, 1, 1, 1, 3, 3, 3, 1,
	6, 3, 3, 3, 3, 4, 4, 5, 6, 6,
	3, 4, 4, 3, 4, 4, 4, 4, 4, 2,
	3, 3, 3, 3, 3, 2, 2, 3, 3, 2,
	2, 0, 1, 4, 3, 4, 4, 5, 5, 5,
	5, 1, 5, 10, 8, 9, 9, 9, 9, 9,
	8, 8, 10, 8, 10, 2, 1, 5, 0, 3,
	2, 5, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 4, 6,
	6, 8, 1, 1, 1, 6, 6, 1, 1, 2,
	3, 1, 1, 3, 4, 5, 6, 7, 5, 6,
	2, 4, 1, 1, 1, 3, 1, 5, 0, 1,
	4, 5, 0, 2, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	6, 9, 5, 8, 7, 3, 1, 3, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -112, -113, -116, -23,
	-20, -21, -27, -28, -31, -37, -22, -40, -41, -62,
	15, 86, 85, -8, -10, -54, 31, 34, 131, 94,
	-136, 100, 20, 21, 98, 99, 97, 101, 118, 109,
	110, 32, 122, 132, 114, 115, 116, 117, 123, 119,
	120, 121, 124, -57, -75, -72, -71, -78, -79, -102,
	-74, -76, -134, -139, -140, -141, -39, 160, 16, 88,
	113, 78, 5, 6, 7, -58, 10, -59, -61, 157,
	158, -133, 143, 144, 142, -80, -64, 68, 72, 159,
	11, 13, 14, 12, 95, 9, 76, -60, 4, 133,
	134, 135, 136, 137, 138, 139, 145, 140, 29, 154,
	-62, 160, -136, 86, 85, -103, -61, -62, -43, 24,
	19, 22, -45, -44, 17, -71, 160, 35, 35, -138,
	-137, -134, -138, -133, -134, 95, 43, 101, 125, -139,
	-141, -139, -133, -133, -38, 102, 103, 36, 37, 104,
	105, -133, -133, -62, -62, -62, -141, -133, -62, -62,
	-62, -133, -62, -107, -61, -133, -62, -133, -133, 151,
	-61, -62, -107, -42, -54, -62, -134, -135, -9, 131,
	94, 6, -56, -55, -148, 30, 150, 149, 156, 75,
	73, 72, 69, 74, -150, 158, 157, 155, 162, 163,
	71, 70, -61, -61, 165, 160, 160, 160, 160, 149,
	156, -143, -150, 72, -71, -61, -61, -133, 160, 160,
	165, -1, 90, -107, -77, 160, -103, -125, -104, 89,
	-50, 44, 25, -95, -93, -90, -92, -133, 29, -91,
	136, 137, 138, 139, 18, -94, -90, -46, 18, 63,
	64, 65, -142, 77, -133, -93, 164, 151, 95, 43,
	125, 126, -133, -90, -133, -133, 156, 42, 156, 42,
	61, -133, -62, -62, 18, 61, 61, 42, 18, 18,
	164, 61, 164, -62, 6, -61, 161, 161, 161, 161,
	92, 69, 164, 69, -134, -135, 164, -133, -61, -61,
	-61, -143, -61, 73, 69, 74, -64, 160, -71, -61,
	67, 66, -61, -61, -61, -61, -61, -61, -61, -133,
	6, -77, -142, -107, 161, -111, -101, -100, -63, -61,
	-81, 155, -133, 144, 142, 145, 146, 147, 148, -142,
	-142, -64, -64, 73, 69, 67, 66, 75, 142, -142,
	-61, -133, 6, -1, 161, 89, -126, 91, -105, 91,
	-61, -62, -51, 50, 47, -93, 20, 164, 160, -109,
	-97, -96, -98, 28, 160, -93, 141, -71, 18, 164,
	-47, 23, -109, -147, 66, -147, -147, -111, 160, -149,
	27, 32, 33, 41, 20, -138, -61, 96, 160, 27,
	160, 160, -62, -133, -62, -133, -133, -62, -133, -62,
	-30, -29, -62, 25, 5, -30, -108, -62, -141, -141,
	-93, -108, -108, -107, -62, -2, -12, -5, -13, 86,
	85, -8, -10, -6, 111, 112, -133, -135, -134, -133,
	69, 69, -56, 27, 160, -58, -59, 70, -61, -64,
	-61, -64, -64, 161, -77, 161, 164, 27, 160, 160,
	160, 160, 160, 160, 160, -77, -77, -63, -64, -73,
	160, -71, 140, -73, -73, -143, -77, 164, -118, -117,
	91, 87, 93, -1, 93, -61, 90, 90, -53, 51,
	-62, -66, -67, -68, -61, -81, 26, 160, -42, -115,
	-114, -60, -133, -95, -90, -62, -133, 29, -47, 59,
	-144, -146, 58, 62, 164, 54, 56, 57, -133, 27,
	-97, 160, -109, -94, -48, 45, -61, -44, -43, -44,
	-44, -110, -133, -42, -24, 160, -133, -60, 160, -60,
	-133, -42, -133, -110, -42, 161, -36, -33, -35, -32,
	-34, -134, -133, 164, 27, -135, 164, 93, 154, -62,
	-103, 92, 92, -133, -133, 160, -110, -61, 70, 161,
	-111, -133, -77, -142, -142, -142, -142, -77, -77, -77,
	161, 161, 161, 70, -65, -64, 160, 98, 69, 161,
	-61, 93, -118, -1, -62, 85, -61, -1, 96, -62,
	-52, 52, 78, 164, -69, 48, 49, -65, -106, -60,
	-46, 164, 156, 161, 164, 164, 53, 53, -145, 55,
	-145, -144, -146, -109, -133, 161, -62, -47, -49, 46,
	47, 161, 164, -26, 36, 37, 38, 39, -25, -24,
	40, -106, 42, 42, 161, 27, 161, 164, 164, 40,
	161, 164, -30, -133, -108, 88, -2, 90, -127, 89,
	-2, -2, 92, 92, -42, 161, -61, 161, -77, -77,
	-77, -63, -77, 161, 161, 161, -64, 161, 164, -61,
	79, 130, 161, 86, 93, 90, -104, -125, 89, 19,
	-52, 133, -66, 134, 161, 164, -47, -115, -61, -77,
	-90, -97, -97, 53, 53, 53, -145, 164, -61, -107,
	-149, -110, -60, -60, 161, 164, -61, 161, -133, -133,
	-62, 27, 127, 27, -32, -35, -35, -134, -62, 27,
	-36, -2, -128, 91, -62, 93, 93, -2, -2, 161,
	27, 108, 161, 161, 161, 161, 161, 108, 108, 129,
	108, 129, -65, 164, 45, 86, -1, -70, 36, 37,
	26, -42, -106, 161, 161, 164, -99, 60, 61, -97,
	-97, -97, 53, -133, -62, -42, -26, -25, -42, -3,
	-14, -5, -18, 86, 85, -15, -16, 88, 128, 127,
	127, 161, -120, -119, 91, 87, 93, -2, 90, 88,
	88, 93, 93, 160, 160, 108, 108, 108, 108, 108,
	160, 160, 134, 160, 134, -61, 160, -117, -65, -77,
	-61, 160, -99, 60, -97, 161, 161, 93, 154, -62,
	-103, -62, -134, -135, -9, -62, -3, -3, 27, 93,
	-120, -2, -62, 85, -2, 88, 88, -42, -83, -82,
	-84, 107, 160, 160, 160, 160, 160, -82, -84, -83,
	108, -82, 108, 161, -50, 161, -110, -61, -3, 90,
	-129, 89, 92, 69, 69, -134, -135, 93, 93, 127,
	86, 93, 90, -127, 89, 161, 161, -50, 44, 47,
	-83, -83, -83, -83, -82, 161, 161, 160, 161, 160,
	161, 161, -3, -130, 91, -62, -4, -17, -5, -19,
	86, 85, -15, -16, -6, -133, -133, 69, 69, -3,
	86, -2, 47, -107, 161, 161, 161, 161, 161, -83,
	-82, -122, -121, 91, 87, 93, -3, 90, 93, 154,
	-62, -103, 92, 92, -133, -133, 93, -119, -66, 161,
	161, 93, -122, -3, -62, 85, -3, 88, -4, 90,
	-131, 89, -4, -4, 92, 92, -85, 135, 86, 93,
	90, -129, 89, -4, -132, 91, -62, 93, 93, -4,
	-4, -86, 73, 80, 6, 83, 86, -3, -124, -123,
	91, 87, 93, -4, 90, 88, 88, 93, 93, -88,
	80, -87, 6, 83, 81, 81, 84, -121, 93, -124,
	-4, -62, 85, -4, 88, 88, 70, 81, 81, 82,
	84, 86, 93, 90, -131, 89, -89, 80, -87, 86,
	-4, 82, -123,
}
var yyDef = [...]int{

	-2, -2, 2, 28, 29, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, -2,
	25, 0, 368, 44, 45, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 137, 0, 0, 83,
	84, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	169, 0, 0, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 233, 234, 235, 236, 200, 238, 0,
	37, 463, 206, 207, 208, 209, 210, 211, 0, 0,
	0, 214, 0, 0, 0, 301, 453, 0, 0, 0,
	440, 448, 449, 450, 0, 212, 213, 219, 432, 433,
	434, 435, 436, 437, 438, 439, 0, 0, 0, -2,
	220, -2, 232, 0, 368, 0, 369, 220, -2, 0,
	0, 0, 183, 0, 451, 181, 200, 0, 0, 74,
	446, 444, 75, 0, 77, 0, 0, 0, 0, 0,
	0, 82, 106, 108, 0, 138, 139, 140, 141, 0,
	0, 0, -2, -2, 220, 220, 153, 165, -2, -2,
	-2, -2, -2, 164, 376, -2, -2, 170, 171, 0,
	0, 220, 0, 0, 0, 220, 231, 0, 0, 35,
	36, 38, 201, 204, 0, 464, 0, 467, 468, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 286, 0, 291, 0, 451, 451, 467,
	468, 0, 0, 454, 279, 289, 290, 0, 451, 0,
	0, 3, -2, 0, 0, 291, 0, 418, 372, 0,
	193, 0, 0, 0, 384, 342, 343, 332, 333, 0,
	-2, -2, -2, -2, 0, 0, 382, 185, 0, 461,
	461, 461, 0, 452, 465, 0, 0, 0, 0, 0,
	0, 0, 109, 114, 122, 136, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 207, 443, 221, 237, 240, 256,
	-2, 0, 0, 0, 0, 0, 463, 0, 257, -2,
	-2, 0, 0, 0, 0, 0, 270, 200, 241, -2,
	0, 0, 280, 281, 282, 283, 284, 287, 288, 215,
	217, 0, 291, 292, 294, 0, 388, 364, 366, 362,
	363, 239, 214, 0, 0, 0, 0, 0, 0, 291,
	291, 262, 264, 0, 0, 0, 0, 453, 146, 291,
	0, 216, 218, 402, 296, 0, 0, -2, 0, 0,
	0, 220, 198, 0, 0, 200, 0, 0, 0, 185,
	-2, 348, 351, 352, 200, 344, 0, 347, 0, 0,
	187, 0, 184, 0, 462, 0, 0, 182, 0, 200,
	466, 0, 0, 0, 0, 447, 445, 200, 0, 200,
	0, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	107, 117, -2, 0, 119, 121, 162, -2, 151, 152,
	166, 157, 158, 377, -2, 0, 0, 39, 40, 0,
	368, 49, 50, 51, 26, 27, 0, 442, 441, 0,
	0, 0, 205, 0, 0, 265, 266, 0, 0, 271,
	-2, 275, 277, 293, 0, 295, 0, 0, 291, 451,
	451, 451, 291, 291, 291, 0, 0, 0, 0, 272,
	200, 259, 0, 276, 278, 0, 0, 0, 0, 402,
	-2, 0, 0, 419, 367, 373, 0, -2, 174, 0,
	-2, 192, 245, 251, 249, 250, 0, 0, 392, 183,
	396, 0, 214, 385, 0, 220, -2, 333, 398, 0,
	0, 457, 457, 455, 0, 456, 459, 460, 349, 0,
	455, 0, 185, 383, 189, 0, 186, 177, 180, 178,
	179, 0, 386, 87, 99, 0, 95, 90, 0, 0,
	0, 104, 105, 0, 113, 0, 0, 129, 130, 124,
	127, 123, 0, 0, 0, 110, 0, 0, -2, 220,
	0, -2, -2, 0, 0, 200, 0, 267, 0, 297,
	389, 365, 0, 291, 291, 291, 291, 0, 0, 0,
	298, 299, 300, 0, 0, 243, 0, 144, 0, 302,
	0, 0, 0, 403, 220, 43, 370, 416, 0, -2,
	194, 196, 0, 0, 247, 252, 253, 390, 0, 374,
	185, 0, 0, 338, 291, 0, 0, 0, 0, 458,
	0, 0, 457, 381, 350, 353, 220, 399, 176, 0,
	0, -2, 0, 88, 100, 101, 0, 0, 0, 97,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 0, 118, 116, 379, 30, 5, -2, 422, 0,
	0, 0, -2, -2, 0, 0, 268, 293, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 258, 0, 0,
	145, 0, 242, 41, 0, -2, 371, 417, 0, 175,
	195, 197, 246, 0, 200, 0, 394, 397, 395, 0,
	0, 354, 455, 0, 0, 0, 0, 0, 190, 188,
	200, 387, 102, 103, 99, 0, 96, 91, 92, -2,
	-2, 200, -2, 0, 125, 131, 128, 0, -2, 0,
	0, 406, 0, -2, 220, 0, 0, 0, 0, 202,
	0, 0, 297, 298, 299, 300, 302, 0, 0, 0,
	0, 0, 244, 0, 0, 42, 400, 248, 254, 255,
	0, 393, 375, 339, 340, 291, 355, 0, 0, 455,
	455, 358, 0, 214, 220, 86, 89, 98, 112, 0,
	0, 52, 53, 0, 368, 66, 67, 0, 59, -2,
	-2, 0, 0, 406, -2, 0, 0, 423, -2, 31,
	32, 0, 0, 200, 318, 0, 0, 0, 0, 0,
	318, 318, 0, 318, 0, 0, 191, 401, 391, 0,
	360, 0, 356, 0, 359, 345, 346, 132, -2, 220,
	0, 220, 231, 0, 0, -2, 0, 0, 0, 0,
	0, 407, 220, 48, 420, 33, 34, 0, 0, 316,
	191, 0, 318, 318, 318, 318, 318, 0, 191, 0,
	0, 0, 0, 260, 0, 341, 0, 357, 7, -2,
	426, 0, -2, 0, 0, 0, 0, 133, 134, -2,
	46, 0, -2, 421, 0, 203, 304, 315, 0, 0,
	0, 0, 0, 0, 0, 310, 311, 318, 313, 318,
	303, 361, 410, 0, -2, 220, 0, 0, 61, 62,
	0, 368, 71, 72, 73, 0, 0, 0, 0, 0,
	47, 404, 0, 319, 305, 306, 307, 308, 309, 0,
	0, 0, 410, -2, 0, 0, 427, -2, 0, -2,
	220, 0, -2, -2, 0, 0, 135, 405, 192, 312,
	314, 0, 0, 411, 220, 65, 424, 54, 9, -2,
	430, 0, 0, 0, -2, -2, 317, 0, 63, 0,
	-2, 425, 0, 414, 0, -2, 220, 0, 0, 0,
	0, 320, 0, 0, 0, 0, 64, 408, 0, 414,
	-2, 0, 0, 431, -2, 55, 56, 0, 0, 0,
	0, 329, 0, 0, 322, 323, 324, 409, 0, 0,
	415, 220, 70, 428, 57, 58, 0, 328, 325, 326,
	327, 68, 0, -2, 429, 0, 321, 0, 331, 69,
	412, 330, 413,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 3, 3, 3, 163, 3, 3,
	160, 161, 155, 158, 164, 157, 165, 162, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 154,
	3, 156,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:238
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:248
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:255
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:259
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:265
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:269
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:275
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:279
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:341
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:361
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:365
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 30:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:383
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:393
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = Exit{}
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:413
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:439
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:475
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:517
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:561
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:575
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:593
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:597
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:601
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:605
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 85:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:637
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:641
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:645
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:649
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:653
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:657
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:663
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:667
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:673
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:677
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:683
		{
			yyVAL.expression = nil
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:687
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:691
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:695
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:699
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:705
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:709
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:713
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:717
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:721
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:725
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:729
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 111:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:735
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 112:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:739
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:743
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:747
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:753
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:757
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:763
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:767
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:773
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:777
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:781
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:785
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:791
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:797
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:801
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:807
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:813
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:817
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:823
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:827
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:831
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 132:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 133:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 134:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 135:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:849
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:853
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:859
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:863
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:867
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:871
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:875
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:879
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:883
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:889
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:893
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:897
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:903
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:907
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:911
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:915
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:919
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:923
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:927
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:931
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:935
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:939
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:943
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:947
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:951
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:955
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:959
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:963
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:967
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:971
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:975
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:979
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:983
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:987
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:991
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:995
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1001
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1015
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1025
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				OffsetClause:     yyDollar[5].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal,
			}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1039
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1049
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1067
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1082
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = nil
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = nil
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = nil
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = nil
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1162
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexpr = nil
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1182
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 202:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 203:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1192
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1202
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1208
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1212
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1216
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1220
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1224
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1240
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1246
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1262
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1268
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1272
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1276
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1282
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1286
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1290
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1298
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1302
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1306
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1310
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1314
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1318
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1322
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1326
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1330
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1334
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1338
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1342
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1346
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1356
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1366
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1370
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1376
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1380
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1390
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1400
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1406
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1410
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.token = Token{}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1420
		{
			yyVAL.token = yyDollar[1].token
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1424
		{
			yyVAL.token = yyDollar[1].token
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1430
		{
			yyVAL.token = yyDollar[1].token
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1434
		{
			yyVAL.token = yyDollar[1].token
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1446
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 260:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1477
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1503
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1507
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1511
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1515
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1523
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1535
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1539
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1543
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1555
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1561
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1565
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1569
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1573
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1577
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1581
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1591
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1595
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1599
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1603
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1609
		{
			yyVAL.queryexprs = nil
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1613
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1619
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1623
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1627
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1631
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1654
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 305:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 306:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 307:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 308:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 309:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 311:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 312:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 313:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1706
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 314:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1726
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1733
		{
			yyVAL.queryexpr = nil
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1737
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1743
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1747
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1757
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1768
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1773
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1778
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1808
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1818
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1832
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1836
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 341:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 345:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1868
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1872
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1898
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 356:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 357:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1964
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.queryexpr = nil
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1974
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1984
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.queryexpr = nil
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2020
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2024
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2040
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2044
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2060
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2064
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2080
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 391:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2084
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2088
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 393:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2092
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 394:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2104
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2110
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2114
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2120
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2125
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2132
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.elseexpr = Else{}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2146
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.elseexpr = Else{}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2166
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2176
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2182
		{
			yyVAL.elseexpr = Else{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2186
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2196
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.elseexpr = Else{}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2206
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2216
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2226
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2232
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2236
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2242
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2246
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2252
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2256
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2262
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2266
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2272
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2276
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2282
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2286
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2292
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2296
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2300
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2304
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2308
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2312
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2316
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2320
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2326
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2332
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2336
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2342
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2348
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2352
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2358
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2362
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2368
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2374
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2380
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2386
		{
			yyVAL.token = Token{}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2390
		{
			yyVAL.token = yyDollar[1].token
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2396
		{
			yyVAL.token = Token{}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2400
		{
			yyVAL.token = yyDollar[1].token
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2406
		{
			yyVAL.token = Token{}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2410
		{
			yyVAL.token = yyDollar[1].token
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2416
		{
			yyVAL.token = Token{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2420
		{
			yyVAL.token = yyDollar[1].token
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2426
		{
			yyVAL.token = yyDollar[1].token
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2430
		{
			yyVAL.token = yyDollar[1].token
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2436
		{
			yyVAL.token = Token{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2440
		{
			yyVAL.token = yyDollar[1].token
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2446
		{
			yyVAL.token = Token{}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2450
		{
			yyVAL.token = yyDollar[1].token
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2456
		{
			yyVAL.token = Token{}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2460
		{
			yyVAL.token = yyDollar[1].token
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2466
		{
			yyVAL.token = yyDollar[1].token
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2470
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
