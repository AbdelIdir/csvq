// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvVar
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const SELECT = 57356
const FROM = 57357
const UPDATE = 57358
const SET = 57359
const UNSET = 57360
const DELETE = 57361
const WHERE = 57362
const INSERT = 57363
const INTO = 57364
const VALUES = 57365
const AS = 57366
const DUAL = 57367
const STDIN = 57368
const RECURSIVE = 57369
const CREATE = 57370
const ADD = 57371
const DROP = 57372
const ALTER = 57373
const TABLE = 57374
const FIRST = 57375
const LAST = 57376
const AFTER = 57377
const BEFORE = 57378
const DEFAULT = 57379
const RENAME = 57380
const TO = 57381
const VIEW = 57382
const ORDER = 57383
const GROUP = 57384
const HAVING = 57385
const BY = 57386
const ASC = 57387
const DESC = 57388
const LIMIT = 57389
const OFFSET = 57390
const PERCENT = 57391
const JOIN = 57392
const INNER = 57393
const OUTER = 57394
const LEFT = 57395
const RIGHT = 57396
const FULL = 57397
const CROSS = 57398
const ON = 57399
const USING = 57400
const NATURAL = 57401
const UNION = 57402
const INTERSECT = 57403
const EXCEPT = 57404
const ALL = 57405
const ANY = 57406
const EXISTS = 57407
const IN = 57408
const AND = 57409
const OR = 57410
const NOT = 57411
const BETWEEN = 57412
const LIKE = 57413
const IS = 57414
const NULL = 57415
const DISTINCT = 57416
const WITH = 57417
const RANGE = 57418
const UNBOUNDED = 57419
const PRECEDING = 57420
const FOLLOWING = 57421
const CURRENT = 57422
const ROW = 57423
const CASE = 57424
const IF = 57425
const ELSEIF = 57426
const WHILE = 57427
const WHEN = 57428
const THEN = 57429
const ELSE = 57430
const DO = 57431
const END = 57432
const DECLARE = 57433
const CURSOR = 57434
const FOR = 57435
const FETCH = 57436
const OPEN = 57437
const CLOSE = 57438
const DISPOSE = 57439
const NEXT = 57440
const PRIOR = 57441
const ABSOLUTE = 57442
const RELATIVE = 57443
const SEPARATOR = 57444
const PARTITION = 57445
const OVER = 57446
const COMMIT = 57447
const ROLLBACK = 57448
const CONTINUE = 57449
const BREAK = 57450
const EXIT = 57451
const PRINT = 57452
const PRINTF = 57453
const SOURCE = 57454
const EXECUTE = 57455
const TRIGGER = 57456
const FUNCTION = 57457
const AGGREGATE = 57458
const BEGIN = 57459
const RETURN = 57460
const IGNORE = 57461
const WITHIN = 57462
const VAR = 57463
const SHOW = 57464
const TIES = 57465
const NULLS = 57466
const ROWS = 57467
const JSON_ROW = 57468
const JSON_TABLE = 57469
const COUNT = 57470
const JSON_OBJECT = 57471
const AGGREGATE_FUNCTION = 57472
const LIST_FUNCTION = 57473
const ANALYTIC_FUNCTION = 57474
const FUNCTION_NTH = 57475
const FUNCTION_WITH_INS = 57476
const COMPARISON_OP = 57477
const STRING_OP = 57478
const SUBSTITUTION_OP = 57479
const UMINUS = 57480
const UPLUS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2237

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 172,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 54,
	14, 172,
	16, 172,
	19, 172,
	21, 172,
	146, 172,
	-2, 1,
	-1, 56,
	147, 258,
	-2, 172,
	-1, 99,
	60, 152,
	61, 152,
	62, 152,
	-2, 163,
	-1, 137,
	1, 138,
	84, 138,
	86, 138,
	88, 138,
	90, 138,
	140, 138,
	-2, 186,
	-1, 154,
	84, 1,
	88, 1,
	90, 1,
	-2, 172,
	-1, 255,
	90, 4,
	-2, 172,
	-1, 266,
	66, 0,
	70, 0,
	71, 0,
	72, 0,
	135, 0,
	142, 0,
	-2, 228,
	-1, 267,
	66, 0,
	70, 0,
	71, 0,
	72, 0,
	135, 0,
	142, 0,
	-2, 230,
	-1, 276,
	66, 0,
	70, 0,
	71, 0,
	72, 0,
	135, 0,
	142, 0,
	-2, 240,
	-1, 311,
	90, 1,
	-2, 172,
	-1, 321,
	50, 407,
	-2, 340,
	-1, 365,
	1, 75,
	84, 75,
	86, 75,
	88, 75,
	90, 75,
	140, 75,
	-2, 186,
	-1, 366,
	1, 131,
	84, 131,
	86, 131,
	88, 131,
	90, 131,
	140, 131,
	-2, 186,
	-1, 396,
	90, 1,
	-2, 172,
	-1, 403,
	66, 0,
	70, 0,
	71, 0,
	72, 0,
	135, 0,
	142, 0,
	-2, 241,
	-1, 426,
	86, 1,
	88, 1,
	90, 1,
	-2, 172,
	-1, 501,
	84, 4,
	86, 4,
	88, 4,
	90, 4,
	-2, 172,
	-1, 504,
	90, 4,
	-2, 172,
	-1, 505,
	90, 4,
	-2, 172,
	-1, 573,
	14, 417,
	75, 417,
	146, 417,
	-2, 79,
	-1, 596,
	84, 4,
	88, 4,
	90, 4,
	-2, 172,
	-1, 601,
	90, 4,
	-2, 172,
	-1, 602,
	90, 4,
	-2, 172,
	-1, 607,
	84, 1,
	88, 1,
	90, 1,
	-2, 172,
	-1, 657,
	1, 87,
	84, 87,
	86, 87,
	88, 87,
	90, 87,
	140, 87,
	-2, 186,
	-1, 660,
	90, 6,
	-2, 172,
	-1, 671,
	90, 4,
	-2, 172,
	-1, 726,
	90, 6,
	-2, 172,
	-1, 727,
	90, 6,
	-2, 172,
	-1, 731,
	90, 4,
	-2, 172,
	-1, 735,
	86, 4,
	88, 4,
	90, 4,
	-2, 172,
	-1, 770,
	84, 6,
	86, 6,
	88, 6,
	90, 6,
	-2, 172,
	-1, 809,
	84, 6,
	88, 6,
	90, 6,
	-2, 172,
	-1, 812,
	90, 8,
	-2, 172,
	-1, 817,
	90, 6,
	-2, 172,
	-1, 820,
	84, 4,
	88, 4,
	90, 4,
	-2, 172,
	-1, 837,
	90, 6,
	-2, 172,
	-1, 858,
	90, 6,
	-2, 172,
	-1, 862,
	86, 6,
	88, 6,
	90, 6,
	-2, 172,
	-1, 864,
	84, 8,
	86, 8,
	88, 8,
	90, 8,
	-2, 172,
	-1, 867,
	90, 8,
	-2, 172,
	-1, 868,
	90, 8,
	-2, 172,
	-1, 881,
	84, 8,
	88, 8,
	90, 8,
	-2, 172,
	-1, 893,
	84, 6,
	88, 6,
	90, 6,
	-2, 172,
	-1, 897,
	90, 8,
	-2, 172,
	-1, 913,
	90, 8,
	-2, 172,
	-1, 917,
	86, 8,
	88, 8,
	90, 8,
	-2, 172,
	-1, 937,
	84, 8,
	88, 8,
	90, 8,
	-2, 172,
}

const yyPrivate = 57344

const yyLast = 3318

var yyAct = [...]int{

	71, 24, 882, 912, 903, 810, 911, 730, 856, 857,
	723, 597, 729, 96, 374, 691, 478, 795, 722, 395,
	524, 224, 754, 430, 580, 57, 216, 542, 575, 756,
	116, 298, 321, 143, 1, 124, 125, 550, 494, 351,
	134, 440, 492, 137, 755, 140, 448, 495, 534, 447,
	196, 174, 320, 331, 208, 24, 219, 415, 381, 22,
	222, 187, 394, 581, 317, 78, 202, 380, 21, 213,
	104, 76, 334, 148, 112, 382, 177, 750, 322, 177,
	176, 176, 465, 172, 176, 839, 813, 256, 155, 153,
	166, 752, 193, 166, 753, 165, 164, 167, 168, 184,
	167, 168, 204, 204, 115, 592, 99, 178, 593, 343,
	226, 233, 204, 22, 176, 389, 653, 199, 623, 241,
	242, 243, 21, 612, 590, 198, 452, 246, 453, 454,
	449, 446, 589, 574, 450, 452, 23, 453, 454, 449,
	446, 546, 166, 450, 165, 164, 537, 257, 341, 167,
	168, 262, 319, 261, 235, 24, 53, 152, 152, 855,
	215, 854, 832, 831, 830, 829, 203, 203, 716, 207,
	257, 257, 47, 828, 435, 825, 234, 291, 260, 294,
	824, 823, 822, 48, 806, 804, 803, 794, 48, 264,
	728, 161, 170, 175, 160, 159, 162, 158, 677, 257,
	655, 105, 204, 101, 325, 205, 102, 329, 100, 652,
	329, 642, 161, 22, 226, 160, 159, 162, 158, 95,
	268, 641, 21, 95, 640, 451, 47, 639, 638, 215,
	622, 557, 611, 604, 588, 175, 586, 573, 572, 274,
	105, 571, 570, 274, 175, 365, 366, 293, 564, 529,
	369, 519, 296, 297, 47, 518, 24, 385, 99, 388,
	156, 155, 333, 86, 308, 517, 166, 157, 165, 164,
	338, 516, 807, 167, 168, 340, 418, 370, 371, 372,
	316, 156, 155, 339, 336, 337, 288, 166, 157, 165,
	164, 386, 491, 805, 167, 168, 416, 436, 547, 290,
	48, 198, 49, 50, 51, 289, 328, 49, 50, 51,
	357, 392, 24, 361, 406, 762, 226, 352, 438, 443,
	204, 325, 205, 761, 455, 326, 760, 329, 759, 758,
	482, 329, 746, 107, 399, 391, 743, 434, 740, 710,
	398, 708, 226, 469, 442, 407, 425, 48, 408, 409,
	707, 479, 5, 701, 483, 443, 443, 487, 410, 457,
	422, 479, 419, 420, 498, 526, 508, 459, 421, 72,
	22, 458, 107, 363, 445, 362, 349, 489, 348, 21,
	484, 486, 347, 460, 203, 346, 444, 345, 344, 195,
	506, 507, 194, 503, 479, 470, 107, 24, 468, 475,
	476, 477, 499, 183, 182, 464, 181, 466, 467, 173,
	509, 175, 109, 471, 472, 473, 474, 481, 108, 49,
	50, 51, 245, 328, 244, 273, 189, 24, 864, 872,
	770, 512, 501, 393, 54, 360, 236, 443, 152, 350,
	544, 711, 326, 48, 709, 621, 619, 306, 48, 300,
	301, 173, 329, 175, 206, 22, 541, 556, 511, 706,
	173, 532, 543, 175, 21, 205, 49, 50, 51, 646,
	72, 615, 768, 817, 766, 615, 644, 727, 726, 660,
	238, 705, 704, 483, 647, 22, 443, 552, 175, 485,
	703, 645, 185, 702, 21, 545, 175, 554, 175, 186,
	553, 48, 24, 307, 555, 24, 24, 643, 637, 757,
	359, 543, 936, 583, 560, 53, 595, 528, 926, 599,
	600, 456, 915, 565, 566, 567, 569, 900, 899, 914,
	913, 892, 237, 873, 568, 402, 48, 869, 226, 863,
	860, 404, 405, 819, 119, 816, 527, 443, 815, 329,
	329, 780, 769, 175, 739, 239, 240, 738, 205, 434,
	733, 620, 49, 50, 51, 674, 414, 49, 50, 51,
	673, 48, 442, 295, 48, 479, 292, 606, 520, 443,
	443, 627, 628, 617, 618, 656, 657, 48, 625, 510,
	636, 649, 632, 68, 30, 500, 118, 24, 424, 624,
	868, 867, 24, 24, 650, 651, 914, 439, 24, 602,
	913, 669, 601, 648, 859, 505, 675, 676, 858, 120,
	49, 50, 51, 504, 443, 897, 858, 173, 663, 664,
	329, 329, 329, 682, 698, 700, 668, 662, 837, 732,
	397, 681, 680, 731, 396, 175, 731, 671, 30, 543,
	396, 690, 412, 48, 483, 49, 50, 51, 163, 48,
	53, 24, 694, 695, 696, 311, 22, 133, 883, 437,
	48, 811, 24, 598, 197, 21, 217, 299, 714, 173,
	525, 713, 919, 918, 879, 787, 734, 786, 737, 736,
	49, 50, 51, 49, 50, 51, 55, 97, 329, 525,
	741, 594, 859, 732, 480, 397, 49, 50, 51, 744,
	747, 940, 488, 935, 490, 909, 891, 135, 136, 138,
	139, 851, 141, 818, 889, 679, 605, 24, 24, 904,
	749, 765, 24, 171, 930, 772, 24, 764, 877, 784,
	764, 531, 924, 781, 908, 188, 782, 479, 30, 939,
	785, 921, 763, 922, 923, 767, 179, 180, 775, 175,
	907, 790, 97, 791, 906, 191, 192, 688, 614, 173,
	47, 24, 49, 50, 51, 171, 536, 214, 49, 50,
	51, 798, 799, 800, 801, 175, 223, 610, 887, 49,
	50, 51, 764, 904, 189, 888, 175, 821, 890, 920,
	933, 523, 814, 905, 390, 793, 92, 802, 247, 248,
	24, 258, 303, 24, 848, 849, 302, 253, 24, 47,
	335, 24, 211, 846, 827, 67, 52, 226, 833, 263,
	551, 845, 265, 266, 267, 852, 269, 764, 24, 276,
	697, 279, 280, 281, 282, 283, 284, 285, 434, 30,
	853, 631, 834, 630, 114, 114, 629, 117, 866, 24,
	870, 603, 549, 24, 902, 24, 874, 905, 24, 24,
	93, 142, 309, 548, 312, 846, 525, 175, 846, 846,
	52, 428, 24, 845, 894, 314, 845, 845, 847, 826,
	223, 797, 846, 562, 24, 777, 778, 271, 24, 563,
	845, 270, 272, 305, 304, 30, 278, 277, 846, 210,
	211, 212, 315, 358, 24, 684, 845, 462, 24, 927,
	925, 364, 367, 200, 846, 934, 796, 452, 846, 453,
	454, 373, 845, 585, 938, 584, 845, 591, 24, 808,
	847, 62, 9, 847, 847, 942, 582, 401, 846, 403,
	880, 356, 525, 884, 885, 111, 845, 847, 110, 376,
	3, 539, 540, 353, 354, 686, 687, 895, 129, 130,
	259, 69, 355, 847, 151, 689, 413, 779, 835, 678,
	52, 667, 661, 916, 659, 352, 850, 587, 342, 847,
	30, 429, 433, 847, 368, 201, 9, 332, 318, 928,
	209, 712, 330, 931, 121, 123, 861, 249, 90, 463,
	122, 90, 715, 847, 3, 53, 147, 150, 223, 113,
	30, 896, 836, 941, 670, 310, 8, 875, 441, 7,
	6, 878, 411, 127, 128, 131, 132, 64, 220, 221,
	61, 48, 73, 74, 75, 324, 92, 77, 53, 323,
	90, 576, 577, 578, 579, 502, 97, 932, 901, 886,
	871, 114, 910, 72, 106, 452, 84, 453, 454, 449,
	446, 692, 693, 450, 513, 63, 66, 514, 59, 65,
	60, 52, 452, 387, 453, 454, 449, 446, 748, 521,
	450, 685, 538, 788, 432, 30, 9, 431, 30, 30,
	530, 58, 87, 149, 427, 533, 88, 313, 561, 461,
	93, 103, 18, 17, 3, 70, 126, 15, 496, 85,
	81, 493, 14, 13, 10, 16, 12, 11, 190, 91,
	842, 719, 840, 717, 377, 558, 559, 52, 375, 4,
	144, 2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 50, 51, 95, 0, 228, 25, 227, 229, 230,
	231, 232, 0, 0, 0, 0, 0, 0, 225, 0,
	79, 80, 89, 98, 218, 0, 0, 0, 497, 0,
	30, 0, 608, 0, 387, 30, 30, 9, 0, 609,
	0, 30, 275, 613, 161, 170, 169, 160, 159, 162,
	158, 0, 0, 0, 433, 0, 106, 0, 0, 0,
	0, 0, 52, 251, 626, 0, 275, 275, 0, 0,
	0, 161, 170, 169, 160, 159, 162, 158, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	327, 0, 52, 9, 30, 0, 0, 0, 0, 654,
	0, 0, 658, 0, 0, 30, 0, 0, 666, 0,
	0, 3, 0, 156, 155, 672, 0, 0, 0, 166,
	157, 165, 164, 0, 0, 286, 167, 168, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 155, 0, 0, 0, 0, 166, 157, 165, 164,
	699, 0, 275, 167, 168, 250, 0, 0, 275, 275,
	30, 30, 0, 0, 0, 30, 0, 52, 0, 30,
	52, 52, 0, 0, 0, 0, 0, 0, 9, 0,
	0, 0, 0, 275, 417, 417, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3, 0, 0, 0,
	742, 0, 0, 0, 30, 0, 0, 327, 9, 745,
	0, 327, 0, 0, 0, 106, 0, 106, 106, 0,
	0, 0, 0, 0, 0, 0, 3, 0, 0, 0,
	161, 170, 169, 160, 159, 162, 158, 771, 97, 0,
	0, 773, 776, 30, 0, 0, 30, 0, 0, 783,
	0, 30, 0, 0, 30, 497, 665, 0, 0, 497,
	0, 0, 52, 0, 0, 792, 0, 52, 52, 0,
	0, 30, 0, 52, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 9, 0, 0, 9, 9, 0, 0,
	0, 0, 30, 0, 0, 0, 30, 275, 30, 156,
	155, 30, 30, 0, 0, 166, 157, 165, 164, 0,
	0, 0, 167, 168, 683, 30, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 30, 838, 0,
	0, 30, 327, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 30, 0, 0,
	0, 30, 0, 0, 0, 0, 0, 0, 0, 0,
	865, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 30, 0, 0, 0, 0, 876, 0, 9, 0,
	0, 0, 0, 9, 9, 0, 0, 0, 0, 9,
	774, 0, 52, 52, 0, 0, 0, 52, 0, 0,
	898, 52, 0, 0, 275, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 73, 74, 75,
	0, 92, 77, 53, 0, 90, 0, 0, 0, 327,
	327, 929, 0, 0, 0, 0, 52, 0, 72, 0,
	0, 0, 9, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 9, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 87, 52, 0,
	0, 88, 0, 52, 0, 93, 52, 0, 0, 0,
	0, 0, 0, 275, 85, 81, 0, 0, 0, 0,
	0, 0, 0, 52, 91, 0, 0, 0, 9, 9,
	327, 327, 327, 9, 0, 0, 0, 9, 0, 0,
	0, 0, 0, 0, 52, 0, 718, 718, 52, 0,
	52, 0, 0, 52, 52, 49, 50, 51, 95, 0,
	228, 25, 227, 229, 230, 231, 232, 52, 0, 0,
	0, 0, 9, 225, 0, 79, 80, 89, 98, 52,
	0, 0, 0, 52, 0, 0, 0, 0, 0, 275,
	718, 0, 0, 0, 0, 0, 0, 0, 327, 52,
	0, 0, 0, 52, 0, 0, 0, 0, 0, 0,
	0, 9, 0, 0, 9, 0, 0, 0, 0, 9,
	0, 0, 9, 52, 0, 0, 0, 0, 0, 718,
	0, 0, 841, 0, 0, 0, 0, 718, 0, 9,
	0, 0, 0, 48, 73, 74, 75, 0, 92, 77,
	53, 0, 90, 0, 0, 0, 0, 718, 0, 0,
	9, 0, 0, 0, 9, 72, 9, 0, 0, 9,
	9, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 718, 9, 841, 0, 0, 841, 841, 0,
	0, 0, 0, 0, 0, 9, 0, 0, 0, 9,
	0, 841, 0, 0, 87, 0, 0, 0, 88, 0,
	0, 0, 93, 718, 0, 9, 0, 841, 0, 9,
	0, 85, 81, 0, 161, 170, 169, 160, 159, 162,
	158, 91, 0, 841, 0, 0, 0, 841, 0, 9,
	0, 0, 0, 0, 48, 73, 74, 75, 0, 92,
	77, 53, 0, 90, 0, 0, 0, 841, 0, 0,
	0, 0, 49, 50, 51, 95, 72, 228, 25, 227,
	229, 230, 231, 232, 161, 170, 169, 160, 159, 162,
	158, 0, 79, 80, 89, 98, 0, 0, 0, 0,
	0, 0, 0, 156, 155, 0, 0, 0, 0, 166,
	157, 165, 164, 0, 0, 87, 167, 168, 634, 88,
	0, 0, 0, 93, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 81, 0, 0, 0, 0, 0, 0,
	0, 146, 91, 48, 73, 74, 75, 0, 92, 77,
	53, 0, 90, 156, 155, 0, 0, 0, 0, 166,
	157, 165, 164, 0, 0, 72, 167, 168, 633, 0,
	0, 145, 0, 49, 50, 51, 95, 0, 83, 25,
	82, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 89, 98, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 88, 0,
	0, 0, 93, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 81, 0, 0, 0, 0, 48, 73, 74,
	75, 91, 92, 77, 53, 0, 90, 0, 48, 73,
	74, 75, 0, 92, 77, 53, 0, 90, 0, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 0, 49, 50, 51, 95, 0, 83, 25, 82,
	94, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 79, 80, 89, 98, 0, 0, 87, 0,
	0, 0, 88, 0, 0, 0, 93, 214, 0, 87,
	0, 0, 0, 88, 0, 85, 81, 93, 0, 47,
	0, 0, 0, 0, 0, 91, 85, 81, 0, 0,
	0, 0, 48, 73, 74, 75, 91, 92, 77, 53,
	0, 90, 0, 48, 73, 74, 75, 0, 92, 77,
	53, 0, 90, 0, 72, 0, 49, 50, 51, 95,
	0, 83, 25, 82, 94, 72, 0, 49, 50, 51,
	95, 0, 83, 25, 82, 94, 79, 80, 89, 98,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 89,
	98, 0, 0, 87, 0, 0, 0, 88, 0, 0,
	0, 93, 0, 0, 87, 0, 0, 0, 88, 0,
	85, 81, 93, 0, 0, 0, 0, 0, 0, 0,
	91, 85, 81, 0, 535, 0, 0, 48, 73, 254,
	75, 91, 92, 77, 53, 0, 90, 0, 0, 0,
	0, 161, 170, 169, 160, 159, 162, 158, 0, 72,
	536, 49, 50, 51, 95, 0, 83, 25, 82, 94,
	0, 0, 49, 50, 51, 95, 0, 83, 25, 82,
	94, 79, 80, 89, 98, 0, 0, 0, 0, 0,
	0, 0, 79, 80, 89, 56, 0, 0, 87, 0,
	0, 0, 88, 0, 0, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 81, 0, 0, 0,
	156, 155, 0, 0, 0, 91, 166, 157, 165, 164,
	0, 0, 0, 167, 168, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 0, 49, 50, 51, 95,
	0, 83, 25, 82, 94, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 0, 79, 80, 89, 98,
	0, 0, 0, 0, 0, 0, 937, 161, 170, 169,
	160, 159, 162, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 155, 0, 0, 917, 0,
	166, 157, 165, 164, 156, 155, 0, 167, 168, 423,
	166, 157, 165, 164, 0, 0, 0, 167, 168, 287,
	0, 0, 0, 0, 156, 155, 0, 0, 0, 0,
	166, 157, 165, 164, 0, 0, 0, 167, 168, 0,
	0, 0, 0, 0, 0, 0, 156, 155, 0, 0,
	0, 0, 166, 157, 165, 164, 0, 0, 0, 167,
	168, 161, 170, 169, 160, 159, 162, 158, 0, 0,
	0, 161, 170, 169, 160, 159, 162, 158, 0, 0,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 161, 170, 169, 160, 159, 162, 158,
	0, 0, 0, 161, 170, 169, 160, 159, 162, 158,
	0, 0, 0, 0, 862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 820, 0, 0, 0, 0, 0,
	156, 155, 0, 0, 0, 0, 166, 157, 165, 164,
	156, 155, 0, 167, 168, 0, 166, 157, 165, 164,
	0, 0, 0, 167, 168, 161, 170, 169, 160, 159,
	162, 158, 156, 155, 0, 0, 0, 0, 166, 157,
	165, 164, 156, 155, 0, 167, 168, 0, 166, 157,
	165, 164, 0, 0, 0, 167, 168, 161, 170, 169,
	160, 159, 162, 158, 0, 0, 0, 161, 170, 169,
	160, 159, 162, 158, 0, 0, 0, 0, 0, 0,
	812, 0, 0, 0, 0, 0, 0, 0, 809, 0,
	0, 0, 0, 0, 156, 155, 0, 0, 0, 0,
	166, 157, 165, 164, 0, 0, 789, 167, 168, 161,
	170, 169, 160, 159, 162, 158, 0, 0, 0, 161,
	170, 169, 160, 159, 162, 158, 156, 155, 0, 0,
	0, 0, 166, 157, 165, 164, 156, 155, 0, 167,
	168, 0, 166, 157, 165, 164, 0, 0, 0, 167,
	168, 161, 170, 169, 160, 159, 162, 158, 0, 0,
	0, 161, 170, 169, 160, 159, 162, 158, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 156, 155,
	0, 299, 0, 0, 166, 157, 165, 164, 156, 155,
	751, 167, 168, 0, 166, 157, 165, 164, 0, 0,
	616, 167, 168, 161, 170, 169, 160, 159, 162, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 155, 0, 0, 607, 0, 166, 157, 165, 164,
	156, 155, 0, 167, 168, 0, 166, 157, 165, 164,
	0, 0, 0, 167, 168, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 0, 596, 0, 0, 0,
	0, 0, 156, 155, 0, 0, 522, 0, 166, 157,
	165, 164, 0, 0, 0, 167, 168, 161, 170, 169,
	160, 159, 162, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 426, 0,
	0, 0, 0, 0, 156, 155, 0, 0, 0, 0,
	166, 157, 165, 164, 156, 155, 0, 167, 168, 0,
	166, 157, 165, 164, 0, 0, 0, 167, 168, 0,
	0, 0, 0, 161, 170, 169, 160, 159, 162, 158,
	0, 0, 0, 0, 0, 0, 156, 155, 0, 0,
	0, 0, 166, 157, 165, 164, 255, 252, 0, 167,
	168, 0, 0, 0, 0, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 161, 170, 169, 160, 159,
	162, 158, 0, 0, 0, 0, 154, 0, 0, 0,
	0, 0, 156, 155, 0, 0, 0, 0, 166, 157,
	165, 164, 0, 0, 0, 167, 168, 161, 515, 169,
	160, 159, 162, 158, 0, 0, 0, 161, 400, 169,
	160, 159, 162, 158, 156, 155, 0, 0, 0, 0,
	166, 157, 165, 164, 156, 155, 0, 167, 168, 0,
	166, 157, 165, 164, 156, 155, 0, 167, 168, 0,
	166, 157, 165, 164, 48, 0, 0, 167, 168, 0,
	0, 53, 0, 0, 0, 0, 0, 32, 33, 0,
	0, 0, 0, 0, 0, 0, 156, 155, 26, 0,
	0, 27, 166, 157, 165, 164, 156, 155, 0, 167,
	168, 0, 166, 157, 165, 164, 0, 0, 0, 167,
	168, 0, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	32, 33, 0, 0, 0, 47, 0, 0, 0, 0,
	0, 26, 844, 843, 27, 724, 0, 0, 0, 0,
	0, 29, 0, 0, 36, 34, 35, 31, 0, 0,
	0, 0, 0, 0, 0, 37, 38, 383, 384, 0,
	40, 41, 42, 43, 44, 0, 0, 0, 725, 48,
	0, 28, 39, 49, 50, 51, 53, 0, 47, 25,
	0, 0, 32, 33, 0, 379, 378, 0, 45, 0,
	0, 0, 0, 26, 29, 0, 27, 36, 34, 35,
	31, 0, 0, 0, 0, 0, 0, 0, 37, 38,
	383, 384, 46, 40, 41, 42, 43, 44, 0, 0,
	0, 0, 48, 0, 28, 39, 49, 50, 51, 53,
	0, 0, 25, 0, 0, 32, 33, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 26, 721, 720, 27,
	724, 0, 0, 0, 0, 0, 29, 0, 0, 36,
	34, 35, 31, 0, 0, 0, 0, 0, 0, 0,
	37, 38, 0, 0, 0, 40, 41, 42, 43, 44,
	0, 0, 0, 725, 0, 0, 28, 39, 49, 50,
	51, 0, 0, 47, 25, 0, 0, 0, 0, 0,
	20, 19, 0, 45, 0, 0, 0, 0, 0, 29,
	0, 0, 36, 34, 35, 31, 0, 0, 0, 0,
	0, 0, 0, 37, 38, 0, 0, 46, 40, 41,
	42, 43, 44, 0, 0, 0, 0, 0, 0, 28,
	39, 49, 50, 51, 0, 0, 0, 25,
}
var yyPact = [...]int{

	3188, -1000, 294, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2159,
	2148, -1000, -1000, 187, 272, 266, 926, 923, 1004, 649,
	-1000, 504, 998, 995, 666, 666, 935, -1000, -1000, 655,
	2148, 2148, 2148, 2148, 666, 1880, 1010, 947, -1000, -1000,
	-1000, -1000, 301, -1000, 3188, 2869, 2064, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 301, -1000, -1000,
	-1000, -67, -44, -1000, -1000, -1000, -1000, -1000, -1000, 2148,
	2148, 260, 258, 257, -1000, 2148, 357, 250, 2148, 2148,
	-1000, 666, -1000, -1000, 246, 243, 588, 2879, 2064, 882,
	973, 532, 439, 985, 849, 703, -1000, 695, 2148, 1037,
	666, 532, -1000, 4, 299, -1000, 440, -1000, 666, 666,
	666, 282, 280, -1000, -1000, -1000, 666, -1000, -1000, -1000,
	-1000, 2148, 2148, -1000, 992, 2879, 1165, -67, 2879, 2859,
	2243, 2827, 21, 745, 1004, -1000, -1000, -1000, -1000, 3,
	666, -1000, 2148, -1000, 3188, 2148, 2148, 2148, 725, 2148,
	831, 93, 2148, 843, 2148, 2148, 2148, 2148, 2148, 2148,
	2148, 1138, 139, 158, 152, 226, 570, 2053, 567, -1000,
	-1000, 2148, 703, 703, 591, 93, 93, 746, 840, -1000,
	-1000, 146, -1000, 375, 703, 2148, 577, 2148, 139, 838,
	868, 532, 981, 2, -1000, -1000, 296, 987, 977, 296,
	757, 757, 757, 1572, -1000, 136, -1000, 2289, -1000, 128,
	-2, 964, -1000, 2879, -1000, -1000, -37, 242, 241, 239,
	236, 232, 230, 293, 934, 1004, 2148, 417, 289, 229,
	227, -1000, -1000, -1000, 2148, 2148, 972, 2879, 2879, 666,
	2148, 2148, 2148, 2879, 2148, 3073, 666, 1004, 666, 49,
	738, 947, 287, 2879, 556, 1, -48, -48, 797, 2921,
	2148, 93, 2148, -1000, 2064, -1000, -48, 93, 93, -51,
	-51, -1000, -1000, -1000, 125, 146, -1000, 2148, -1000, -1000,
	-1000, -1000, -1000, 2148, -1000, -1000, 2148, 1969, 564, 2148,
	-1000, -1000, 93, 150, 150, 150, 725, -1000, 2148, 2279,
	508, 3188, 2771, 833, 2148, 1779, 151, 583, 444, 532,
	977, 75, -1000, 497, -1000, -1000, 179, -1000, 225, 221,
	296, 875, 2148, -1000, 226, -1000, 226, 226, -1000, -1000,
	-1000, 1572, 666, 2053, 703, 703, 703, 2148, 2148, 2148,
	666, 695, -1000, 184, 343, 444, 666, -1000, 2879, 695,
	666, 695, 145, 666, 2879, -67, -67, 2879, 1004, -1000,
	-1000, -1000, -1000, 2879, 505, 292, -1000, -1000, 2159, 2148,
	-1000, -1000, -1000, -1000, -1000, 534, -1000, -3, 526, 666,
	666, -1000, 220, 666, 499, 562, 3188, 2148, -1000, -1000,
	2148, 2911, -1000, -48, -1000, -1000, -1000, 124, 118, 108,
	104, 488, 2148, 2739, 734, -1000, 97, -1000, 219, -1000,
	-1000, 451, 102, 2148, 659, -1000, 3188, -1000, 2148, 2195,
	-1000, -4, 916, 2879, -1000, 93, 444, -1000, -1000, 666,
	985, -9, 156, -71, -1000, -1000, 823, 812, 778, 778,
	876, 296, -1000, -1000, -1000, -1000, 666, 84, 2148, 2148,
	977, 850, 855, 2879, 761, -1000, -1000, 761, -1000, -1000,
	101, 2148, 2148, 1969, 2148, 95, 94, 91, 90, -17,
	-1000, 1018, 666, 909, -1000, 444, 896, 894, -1000, 89,
	-1000, 963, 87, -18, -1000, -1000, -26, 900, -42, -1000,
	616, 3073, 2729, 587, 3073, 3073, 523, 520, 695, 86,
	643, 487, -1000, 2687, 146, 2148, -1000, -1000, -1000, -1000,
	-1000, 2879, 2148, 93, 85, -27, 2148, -1000, 692, 351,
	2603, -1000, 588, 2879, -1000, 701, 323, 1779, 321, -1000,
	-1000, -1000, 83, -32, -1000, 977, 444, 2148, 296, 296,
	806, -1000, 803, 801, 778, -1000, -1000, -1000, 1848, 1798,
	-1000, -1000, 2148, 2148, 404, 81, 80, 77, 74, 64,
	403, 372, 365, 961, 666, -1000, -1000, -1000, 444, 444,
	62, -34, 2148, 53, 666, 2148, 960, 362, 958, 1004,
	1004, 2148, 957, 1004, -1000, -1000, 3073, 559, 2148, 480,
	475, 3073, 3073, 51, 955, -1000, 642, 3188, 146, 2645,
	-1000, -1000, 93, 1324, -1000, 873, -1000, -1000, -1000, -1000,
	-1000, 932, 744, 444, -1000, -1000, 2879, 876, 1014, 296,
	296, 296, 790, 2148, 666, 2879, -1000, 207, 389, 386,
	378, 377, 355, 204, 195, 320, 193, 317, 695, -1000,
	-1000, -1000, 1018, 666, 2879, -1000, -1000, -67, 2879, 695,
	3135, 361, -1000, -1000, -1000, 900, 2879, 360, 43, 555,
	470, 3073, 2635, 604, 603, 467, 464, -1000, 192, -1000,
	621, -1000, -1000, 2148, 190, -1000, -1000, -1000, 93, -1000,
	-1000, -1000, 2148, 186, 1014, 1031, 876, 296, -70, 2593,
	-56, 406, 183, 182, 180, 177, 169, 406, 406, 370,
	406, 368, -1000, -1000, -1000, -1000, 462, 290, -1000, -1000,
	2159, 2148, -1000, -1000, 2148, 2148, 3135, 3135, 953, 461,
	558, 3073, 2148, 657, -1000, 3073, -1000, -1000, 602, 600,
	695, -1000, 2509, 882, -1000, 2879, 666, -1000, 2148, 876,
	-1000, -1000, -1000, 2148, 40, -1000, 885, 847, 406, 406,
	406, 406, 406, 39, 882, 38, 147, 37, 126, -1000,
	3135, 2551, 585, 2541, 20, 736, 2879, 458, 455, 356,
	640, 453, -1000, 2457, -1000, 587, -1000, -1000, 35, -1000,
	34, 33, 2879, 28, -1000, -1000, 845, 2148, 26, 18,
	17, 16, 15, -1000, -1000, 406, -1000, 406, -1000, 3135,
	550, 2148, 3020, 666, 666, -1000, -1000, 3135, -1000, 638,
	3073, -1000, -1000, -1000, -1000, -1000, 1779, -1000, -1000, -1000,
	-1000, -1000, -1000, 14, 12, 530, 450, 3135, 2447, 449,
	288, -1000, -1000, 2159, 2148, -1000, -1000, -1000, 512, 511,
	447, -1000, 619, 304, -1000, -1000, 443, 538, 3135, 2148,
	656, -1000, 3135, 599, 3020, 2425, 582, 3020, 3020, -1000,
	-1000, -1000, 718, 633, 441, -1000, 2415, -1000, 585, -1000,
	-1000, 3020, 537, 2148, 438, 437, -1000, 787, 686, 682,
	663, -1000, 632, 3135, -1000, 522, 432, 3020, 2331, 598,
	597, 732, 673, -1000, 675, 661, -1000, -1000, -1000, -1000,
	618, 428, 442, 3020, 2148, 652, -1000, 3020, -1000, -1000,
	723, -1000, -1000, -1000, -1000, -1000, 630, 422, -1000, 2309,
	-1000, 582, -1000, 670, -1000, -1000, 628, 3020, -1000, -1000,
	-1000, 445, -1000,
}
var yyPgo = [...]int{

	0, 34, 14, 168, 85, 959, 75, 1141, 67, 1140,
	58, 1139, 1138, 1134, 1133, 18, 10, 1132, 1131, 1130,
	1127, 1126, 1125, 1124, 63, 24, 28, 1123, 1122, 47,
	1121, 1118, 38, 42, 1117, 1116, 1115, 1113, 1112, 352,
	82, 70, 1111, 54, 53, 1109, 1108, 17, 1107, 48,
	1104, 136, 1103, 73, 1101, 71, 65, 25, 676, 60,
	263, 20, 23, 1097, 1094, 1092, 1091, 1040, 1080, 57,
	1079, 1078, 1076, 51, 941, 1075, 1066, 21, 44, 22,
	29, 1060, 1059, 4, 1058, 1057, 64, 78, 66, 1049,
	32, 1045, 15, 1039, 1038, 1037, 13, 31, 1032, 27,
	26, 52, 16, 56, 1030, 1029, 1028, 41, 1026, 19,
	62, 7, 12, 9, 8, 3, 6, 50, 1025, 11,
	1024, 5, 1022, 2, 1021, 0, 825, 33, 593, 1019,
	74, 971, 69, 61, 49, 37, 46, 72, 1017, 39,
	658,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 6, 6, 7, 7, 8, 8,
	8, 8, 8, 9, 9, 10, 10, 12, 12, 11,
	11, 11, 11, 11, 13, 13, 13, 13, 13, 13,
	14, 14, 15, 15, 15, 16, 16, 17, 17, 18,
	18, 18, 18, 18, 19, 19, 19, 19, 19, 19,
	20, 20, 20, 20, 21, 21, 21, 22, 22, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 24,
	24, 25, 25, 26, 26, 26, 26, 26, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 30, 30,
	31, 32, 32, 33, 33, 33, 34, 34, 34, 34,
	34, 35, 35, 35, 35, 35, 35, 35, 36, 36,
	36, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 38, 38, 38, 39, 40, 40,
	40, 40, 41, 41, 42, 43, 43, 44, 44, 45,
	45, 46, 46, 47, 47, 48, 48, 48, 49, 49,
	50, 50, 51, 51, 52, 52, 53, 53, 54, 54,
	54, 54, 54, 54, 55, 56, 57, 57, 57, 57,
	57, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 59, 60, 60, 60,
	61, 61, 62, 62, 63, 63, 64, 64, 65, 65,
	65, 66, 66, 67, 68, 69, 69, 69, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 71, 71, 71,
	71, 71, 71, 71, 72, 72, 72, 72, 73, 73,
	74, 74, 74, 74, 75, 75, 75, 75, 75, 76,
	76, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 78, 79, 79, 80, 80, 81, 81, 82,
	82, 82, 83, 83, 83, 84, 84, 85, 85, 86,
	86, 87, 87, 87, 89, 89, 89, 89, 89, 90,
	90, 90, 90, 90, 90, 90, 91, 91, 91, 91,
	91, 91, 92, 92, 93, 93, 94, 94, 94, 95,
	96, 96, 97, 97, 98, 98, 99, 99, 100, 100,
	101, 101, 88, 88, 102, 102, 103, 103, 104, 104,
	104, 104, 105, 106, 107, 107, 108, 108, 109, 109,
	110, 110, 111, 111, 112, 112, 113, 113, 114, 114,
	115, 115, 116, 116, 117, 117, 118, 118, 119, 119,
	120, 120, 121, 121, 122, 122, 123, 123, 124, 124,
	125, 125, 125, 125, 126, 127, 127, 128, 129, 129,
	130, 130, 131, 132, 132, 133, 133, 134, 134, 135,
	135, 136, 136, 137, 137, 138, 138, 139, 139, 140,
	140,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 6, 8,
	8, 9, 9, 1, 1, 1, 2, 1, 1, 7,
	8, 6, 1, 1, 7, 8, 6, 1, 1, 1,
	1, 1, 6, 8, 8, 1, 2, 1, 1, 7,
	8, 6, 1, 1, 7, 8, 6, 1, 1, 1,
	2, 2, 1, 2, 4, 4, 2, 1, 1, 6,
	8, 5, 6, 8, 5, 7, 7, 7, 7, 1,
	3, 1, 3, 0, 1, 1, 2, 2, 5, 2,
	2, 3, 5, 6, 8, 5, 3, 1, 1, 3,
	3, 1, 3, 1, 1, 3, 9, 10, 10, 12,
	3, 0, 1, 1, 1, 1, 2, 2, 5, 6,
	3, 4, 4, 2, 2, 2, 4, 4, 2, 2,
	2, 4, 2, 4, 2, 3, 4, 5, 5, 4,
	4, 4, 1, 1, 3, 0, 2, 0, 2, 0,
	3, 0, 2, 0, 3, 0, 3, 4, 0, 2,
	0, 2, 0, 2, 6, 9, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 6,
	1, 3, 1, 3, 2, 4, 1, 1, 0, 1,
	1, 1, 1, 3, 3, 3, 1, 6, 3, 3,
	3, 3, 4, 4, 5, 6, 6, 3, 4, 4,
	3, 4, 4, 4, 4, 4, 2, 3, 3, 3,
	3, 3, 2, 2, 3, 3, 2, 2, 0, 1,
	4, 3, 4, 4, 5, 5, 5, 5, 1, 5,
	10, 8, 9, 9, 9, 9, 9, 8, 8, 10,
	8, 10, 2, 1, 5, 0, 3, 2, 5, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 1, 1,
	1, 1, 2, 3, 1, 6, 6, 6, 8, 1,
	1, 2, 3, 1, 1, 3, 4, 5, 6, 7,
	5, 6, 2, 4, 1, 1, 1, 3, 1, 5,
	0, 1, 4, 5, 0, 2, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 6, 9,
	5, 8, 7, 3, 1, 3, 5, 6, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	1, 1, 1, 1, 1, 1, 3, 3, 1, 3,
	1, 3, 1, 0, 1, 0, 1, 0, 1, 0,
	1, 1, 1, 0, 1, 0, 1, 0, 1, 1,
	1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -104, -105, -108, -74,
	-23, -20, -21, -27, -28, -34, -22, -37, -38, 83,
	82, -8, -10, -51, -125, 129, 28, 31, 121, 91,
	-128, 97, 17, 18, 95, 96, 94, 105, 106, 122,
	110, 111, 112, 113, 114, 85, 109, 75, 4, 123,
	124, 125, -126, 11, 140, -58, 146, -57, -54, -71,
	-68, -67, -74, -75, -95, -70, -72, -126, -128, -131,
	-36, -125, 26, 5, 6, 7, -55, 10, -56, 143,
	144, 83, 130, 128, -76, 82, -60, 65, 69, 145,
	13, 92, 9, 73, 131, 126, -96, -58, 146, -40,
	21, 16, 19, -42, -41, 14, -67, 146, 146, 146,
	32, 32, -130, -129, -126, -130, -125, -126, 92, 40,
	115, -131, 12, -131, -125, -125, -35, 98, 99, 33,
	34, 100, 101, 12, -125, -58, -58, -125, -58, -58,
	-125, -58, -126, -127, -9, 121, 91, 6, -53, -52,
	-138, 27, 137, -1, 87, 136, 135, 142, 72, 70,
	69, 66, 71, -140, 144, 143, 141, 148, 149, 68,
	67, -58, -100, -39, -73, -51, 151, 146, 151, -58,
	-58, 146, 146, 146, -96, 135, 142, -133, -140, 69,
	-67, -58, -58, -125, 146, 146, -117, 86, -100, -47,
	41, 22, -88, -86, -125, 26, 15, -88, -43, 15,
	60, 61, 62, -132, 74, -73, -100, -58, 147, -103,
	-94, -93, -59, -58, -77, 141, -125, 130, 128, 131,
	132, 133, 134, -125, -86, 150, 137, 92, 40, 115,
	116, -125, -125, -125, 142, 142, -125, -58, -58, 15,
	150, 58, 58, -58, 6, 89, 66, 150, 66, -126,
	-127, 150, -125, -58, -1, -58, -58, -58, -133, -58,
	70, 66, 71, -60, 146, -67, -58, 64, 63, -58,
	-58, -58, -58, -58, -58, -58, 147, 150, 147, 147,
	147, -125, 6, -132, -125, 6, -132, -132, -97, 86,
	-60, -60, 70, 66, 64, 63, 72, 128, -132, -58,
	-118, 88, -58, -48, 47, 44, -87, -86, 17, 150,
	-101, -90, -87, -89, -91, 25, 146, -67, 127, -125,
	15, -44, 20, -101, -137, 63, -137, -137, -103, 147,
	147, 150, 24, 146, 146, 146, 146, 146, 146, 146,
	146, -139, 24, 29, 30, 38, 17, -130, -58, 93,
	146, 24, 146, 146, -58, -125, -125, -58, 22, -125,
	-100, -100, -100, -58, -2, -12, -5, -13, 83, 82,
	-8, -10, -6, 107, 108, -125, -127, -126, -125, 66,
	66, -53, 24, 146, -110, -109, 88, 84, -55, -56,
	67, -58, -60, -58, -60, -60, -100, -73, -73, -73,
	-59, -98, 88, -58, -60, -69, 146, -67, 126, -69,
	-69, -133, -73, 150, 90, -1, 87, -50, 48, -58,
	-62, -63, -64, -58, -77, 23, 146, -39, -125, 24,
	-107, -106, -57, -125, -88, -44, 56, -134, -136, 55,
	59, 150, 51, 53, 54, -125, 24, -90, 146, 146,
	-101, -45, 42, -58, -41, -40, -41, -41, -103, -125,
	-73, -132, -132, -132, -132, -73, -73, -73, -102, -125,
	-39, -24, 146, -125, -57, 146, -57, -125, -39, -102,
	-39, 147, -33, -30, -32, -29, -31, -126, -125, -127,
	90, 140, -58, -96, 89, 89, -125, -125, 146, -102,
	90, -110, -1, -58, -58, 67, 147, 147, 147, 147,
	90, -58, 87, 67, -61, -60, 146, 95, 66, 147,
	-58, 82, -1, -58, -49, 49, 75, 150, -65, 45,
	46, -61, -99, -57, -125, -43, 150, 142, 50, 50,
	-135, 52, -135, -134, -136, -101, -125, 147, -58, -58,
	-44, -46, 43, 44, 147, -73, -73, -73, -59, -73,
	147, 147, 147, 147, 150, -26, 33, 34, 35, 36,
	-25, -24, 37, -99, 39, 39, 147, 24, 147, 150,
	150, 37, 147, 150, 85, -2, 87, -119, 86, -2,
	-2, 89, 89, -39, 147, 83, 90, 87, -58, -58,
	-60, 147, 150, -58, 76, 120, 147, -117, -49, 123,
	-62, 124, 147, 150, -44, -107, -58, -90, -90, 50,
	50, 50, -135, 150, 150, -58, -100, 104, 147, 147,
	147, 147, 147, 104, 104, 119, 104, 119, -139, -102,
	-57, -57, 147, 150, -58, 147, -125, -125, -58, 24,
	117, 24, -29, -32, -32, -126, -58, 24, -33, -2,
	-120, 88, -58, 90, 90, -2, -2, 147, 24, 83,
	-1, -97, -61, 150, 42, -66, 33, 34, 23, -39,
	-99, -92, 57, 58, -90, -90, -90, 50, -125, -58,
	-125, 146, 104, 104, 104, 104, 104, 146, 146, 124,
	146, 124, -39, -26, -25, -39, -3, -14, -5, -18,
	83, 82, -15, -16, 85, 118, 117, 117, 147, -112,
	-111, 88, 84, 90, -2, 87, 85, 85, 90, 90,
	146, -109, -58, 146, -61, -58, 146, -92, 57, -90,
	147, 147, 147, 150, -79, -78, -80, 103, 146, 146,
	146, 146, 146, -78, -80, -79, 104, -78, 104, 90,
	140, -58, -96, -58, -126, -127, -58, -3, -3, 24,
	90, -112, -2, -58, 82, -2, 85, 85, -39, 147,
	-47, -102, -58, -73, 147, -47, 41, 44, -79, -79,
	-79, -79, -78, 147, 147, 146, 147, 146, -3, 87,
	-121, 86, 89, 66, 66, 90, 90, 117, 83, 90,
	87, -119, 147, 147, 147, 147, 44, -100, 147, 147,
	147, 147, 147, -79, -78, -3, -122, 88, -58, -4,
	-17, -5, -19, 83, 82, -15, -16, -6, -125, -125,
	-3, 83, -2, -62, 147, 147, -114, -113, 88, 84,
	90, -3, 87, 90, 140, -58, -96, 89, 89, 90,
	-111, -81, 125, 90, -114, -3, -58, 82, -3, 85,
	-4, 87, -123, 86, -4, -4, -82, 70, 77, 6,
	80, 83, 90, 87, -121, -4, -124, 88, -58, 90,
	90, -84, 77, -83, 6, 80, 78, 78, 81, 83,
	-3, -116, -115, 88, 84, 90, -4, 87, 85, 85,
	67, 78, 78, 79, 81, -113, 90, -116, -4, -58,
	82, -4, -85, 77, -83, 83, 90, 87, -123, 79,
	83, -4, -115,
}
var yyDef = [...]int{

	-2, -2, 2, 26, 27, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 0,
	330, 42, 43, 0, 0, 0, 0, 0, 0, 0,
	72, 0, 0, 0, 0, 0, 121, 77, 78, 0,
	0, 0, 0, 0, 0, 0, 35, 415, 390, 391,
	392, 393, 0, 394, -2, 0, -2, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 186, 0, 178, 179, 180, 181, 182, 183, 0,
	0, 0, 0, 0, 268, 330, 405, 0, 0, 0,
	402, 0, 184, 185, 0, 0, 0, 331, 172, -2,
	0, 0, 0, 155, 0, 403, 153, 172, 258, 0,
	0, 0, 70, 400, 398, 71, 0, 73, 0, 0,
	0, 0, 0, 76, 99, 100, 0, 122, 123, 124,
	125, 0, 0, 133, 142, 134, 135, -2, 139, 140,
	144, 0, 201, 0, 0, 33, 34, 36, 173, 176,
	0, 416, 0, 3, -2, 0, 419, 420, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 252,
	253, 258, 403, 403, 0, 419, 420, 0, 0, 406,
	246, 256, 257, 0, 403, 0, 376, 0, 0, 165,
	0, 0, 0, 342, 299, 300, 0, 0, 157, 0,
	413, 413, 413, 0, 404, 0, 259, 338, 261, 0,
	346, 326, 328, 324, 325, 206, 186, 0, 0, 0,
	0, 0, 0, 417, 0, 0, 0, 0, 0, 0,
	0, 101, 106, 120, 0, 0, 0, 126, 127, 0,
	0, 0, 0, 145, 179, -2, 0, 0, 0, 0,
	0, 415, 0, 397, 360, 224, -2, -2, 0, 0,
	0, 0, 0, 237, 172, 208, -2, 0, 0, 247,
	248, 249, 250, 251, 254, 255, 205, 0, 207, 223,
	263, 187, 189, 258, 188, 190, 258, 258, 334, 0,
	229, 231, 0, 0, 0, 0, 405, 130, 258, 0,
	0, -2, 0, 170, 0, 0, 172, 301, 0, 0,
	157, -2, 309, 310, 313, 314, 172, 304, 0, 299,
	0, 159, 0, 156, 0, 414, 0, 0, 154, 260,
	262, 0, 0, 258, 403, 403, 403, 258, 258, 258,
	0, 172, 418, 0, 0, 0, 0, 401, 399, 172,
	0, 172, 0, 0, 74, -2, -2, 132, 0, 143,
	136, 137, 141, 146, 0, 0, 37, 38, 0, 330,
	47, 48, 49, 24, 25, 0, 396, 395, 0, 0,
	0, 177, 0, 0, 0, 360, -2, 0, 232, 233,
	0, 0, 238, -2, 242, 244, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 172, 226, 0, 243,
	245, 0, 0, 0, 0, 377, -2, 147, 0, 168,
	164, 212, 218, 216, 217, 0, 0, 350, 302, 0,
	155, 354, 0, 186, 343, 356, 0, 0, 409, 409,
	407, 0, 408, 411, 412, 311, 0, 407, 0, 0,
	157, 161, 0, 158, 149, 152, 150, 151, 347, 327,
	0, 258, 258, 258, 258, 0, 0, 0, 0, 344,
	81, 93, 0, 89, 84, 0, 0, 0, 98, 0,
	105, 0, 0, 113, 114, 108, 111, 107, 0, 102,
	0, -2, 0, 0, -2, -2, 0, 0, 172, 0,
	0, 0, 361, 0, 234, 0, 264, 265, 266, 267,
	329, 335, 0, 0, 0, 210, 0, 128, 0, 269,
	0, 41, 374, 171, 166, 168, 0, 0, 214, 219,
	220, 348, 0, 336, 303, 157, 0, 0, 0, 0,
	0, 410, 0, 0, 409, 341, 312, 315, 0, 0,
	357, 148, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 82, 94, 95, 0, 0,
	0, 91, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 28, 5, -2, 380, 0, 0,
	0, -2, -2, 0, 0, 39, 0, -2, 235, 332,
	236, 225, 0, 0, 129, 0, 209, 375, 167, 169,
	213, 0, 172, 0, 352, 355, 353, 316, 407, 0,
	0, 0, 0, 0, 0, 162, 160, 0, 264, 265,
	266, 267, 269, 0, 0, 0, 0, 0, 172, 345,
	96, 97, 93, 0, 90, 85, 86, -2, 88, 172,
	-2, 0, 109, 115, 112, 0, 110, 0, 0, 364,
	0, -2, 0, 0, 0, 0, 0, 174, 0, 40,
	358, 333, 211, 0, 0, 215, 221, 222, 0, 351,
	337, 317, 0, 0, 407, 407, 320, 0, 186, 0,
	0, 285, 0, 0, 0, 0, 0, 285, 285, 0,
	285, 0, 80, 83, 92, 104, 0, 0, 50, 51,
	0, 330, 62, 63, 0, 55, -2, -2, 0, 0,
	364, -2, 0, 0, 381, -2, 29, 30, 0, 0,
	172, 359, 0, 163, 349, 322, 0, 318, 0, 321,
	305, 306, 307, 258, 0, 283, 163, 0, 285, 285,
	285, 285, 285, 0, 163, 0, 0, 0, 0, 116,
	-2, 0, 0, 0, 201, 0, 56, 0, 0, 0,
	0, 0, 365, 0, 46, 378, 31, 32, 0, 227,
	0, 0, 319, 0, 271, 282, 0, 0, 0, 0,
	0, 0, 0, 277, 278, 285, 280, 285, 7, -2,
	384, 0, -2, 0, 0, 117, 118, -2, 44, 0,
	-2, 379, 175, 270, 323, 308, 0, 286, 272, 273,
	274, 275, 276, 0, 0, 368, 0, -2, 0, 0,
	0, 57, 58, 0, 330, 67, 68, 69, 0, 0,
	0, 45, 362, 164, 279, 281, 0, 368, -2, 0,
	0, 385, -2, 0, -2, 0, 0, -2, -2, 119,
	363, 284, 0, 0, 0, 369, 0, 61, 382, 52,
	9, -2, 388, 0, 0, 0, 287, 0, 0, 0,
	0, 59, 0, -2, 383, 372, 0, -2, 0, 0,
	0, 0, 0, 296, 0, 0, 289, 290, 291, 60,
	366, 0, 372, -2, 0, 0, 389, -2, 53, 54,
	0, 295, 292, 293, 294, 367, 0, 0, 373, 0,
	66, 386, 288, 0, 298, 64, 0, -2, 387, 297,
	65, 370, 371,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 149, 3, 3,
	146, 147, 141, 144, 150, 143, 151, 148, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 140,
	3, 142,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:224
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:229
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:234
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:245
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:255
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:265
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:361
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:365
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:371
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:381
		{
			yyVAL.statement = Exit{}
		}
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:391
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:409
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:413
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:439
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:463
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:501
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:505
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 79:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:595
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:599
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:603
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:619
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:625
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:629
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:635
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:639
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:645
		{
			yyVAL.expression = nil
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:649
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:653
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:657
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:661
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:667
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:671
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:675
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:679
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:683
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:689
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:701
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:707
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:713
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:717
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:723
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:729
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:733
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:739
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:743
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:747
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 116:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:753
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 117:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:757
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 118:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:761
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:769
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:775
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:779
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:783
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:787
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:791
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:795
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:799
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:805
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:809
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:813
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:819
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:823
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:827
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:831
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:835
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:839
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:843
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:847
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:851
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:855
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:859
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:863
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:867
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:873
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:877
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:881
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 147:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:887
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:899
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:909
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:918
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:927
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:938
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:942
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:948
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:954
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:958
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:964
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:974
		{
			yyVAL.queryexpr = nil
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:978
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:984
		{
			yyVAL.queryexpr = nil
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:988
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:994
		{
			yyVAL.queryexpr = nil
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:998
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = nil
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1018
		{
			yyVAL.queryexpr = nil
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.queryexpr = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = nil
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1048
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 175:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1058
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1122
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1176
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1196
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1200
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1220
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1224
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1240
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1244
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.token = Token{}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.token = yyDollar[1].token
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.token = yyDollar[1].token
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1264
		{
			yyVAL.token = yyDollar[1].token
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1268
		{
			yyVAL.token = yyDollar[1].token
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1280
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1303
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1307
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1311
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1349
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1353
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1361
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1433
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1437
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexprs = nil
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1447
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1453
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1457
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1494
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 270:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1498
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 272:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1508
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 273:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1512
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 274:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1516
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 275:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 276:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1528
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 278:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1532
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 279:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1536
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 280:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1540
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 281:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1560
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1567
		{
			yyVAL.queryexpr = nil
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1571
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1577
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1581
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1587
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1591
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1596
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1602
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1607
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1618
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 306:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 308:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1684
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1688
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 321:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1768
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1774
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = nil
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.queryexpr = nil
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 348:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 349:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 351:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 352:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1910
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1915
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1922
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1932
		{
			yyVAL.elseexpr = Else{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1942
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1946
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1952
		{
			yyVAL.elseexpr = Else{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.elseexpr = Else{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.elseexpr = Else{}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2032
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2052
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2072
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2076
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2100
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2110
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2122
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2126
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2132
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.envvar = EnvVar{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.token = Token{}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.token = yyDollar[1].token
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.token = Token{}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.token = yyDollar[1].token
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.token = Token{}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.token = yyDollar[1].token
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.token = Token{}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2182
		{
			yyVAL.token = yyDollar[1].token
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.token = yyDollar[1].token
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.token = Token{}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.token = yyDollar[1].token
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.token = Token{}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.token = Token{}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.token = yyDollar[1].token
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2232
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
