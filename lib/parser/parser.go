// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const SELECT = 57358
const FROM = 57359
const UPDATE = 57360
const SET = 57361
const UNSET = 57362
const DELETE = 57363
const WHERE = 57364
const INSERT = 57365
const INTO = 57366
const VALUES = 57367
const AS = 57368
const DUAL = 57369
const STDIN = 57370
const RECURSIVE = 57371
const CREATE = 57372
const ADD = 57373
const DROP = 57374
const ALTER = 57375
const TABLE = 57376
const FIRST = 57377
const LAST = 57378
const AFTER = 57379
const BEFORE = 57380
const DEFAULT = 57381
const RENAME = 57382
const TO = 57383
const VIEW = 57384
const ORDER = 57385
const GROUP = 57386
const HAVING = 57387
const BY = 57388
const ASC = 57389
const DESC = 57390
const LIMIT = 57391
const OFFSET = 57392
const PERCENT = 57393
const JOIN = 57394
const INNER = 57395
const OUTER = 57396
const LEFT = 57397
const RIGHT = 57398
const FULL = 57399
const CROSS = 57400
const ON = 57401
const USING = 57402
const NATURAL = 57403
const UNION = 57404
const INTERSECT = 57405
const EXCEPT = 57406
const ALL = 57407
const ANY = 57408
const EXISTS = 57409
const IN = 57410
const AND = 57411
const OR = 57412
const NOT = 57413
const BETWEEN = 57414
const LIKE = 57415
const IS = 57416
const NULL = 57417
const DISTINCT = 57418
const WITH = 57419
const RANGE = 57420
const UNBOUNDED = 57421
const PRECEDING = 57422
const FOLLOWING = 57423
const CURRENT = 57424
const ROW = 57425
const CASE = 57426
const IF = 57427
const ELSEIF = 57428
const WHILE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const DO = 57433
const END = 57434
const DECLARE = 57435
const CURSOR = 57436
const FOR = 57437
const FETCH = 57438
const OPEN = 57439
const CLOSE = 57440
const DISPOSE = 57441
const NEXT = 57442
const PRIOR = 57443
const ABSOLUTE = 57444
const RELATIVE = 57445
const SEPARATOR = 57446
const PARTITION = 57447
const OVER = 57448
const COMMIT = 57449
const ROLLBACK = 57450
const CONTINUE = 57451
const BREAK = 57452
const EXIT = 57453
const ECHO = 57454
const PRINT = 57455
const PRINTF = 57456
const SOURCE = 57457
const EXECUTE = 57458
const CHDIR = 57459
const PWD = 57460
const RELOAD = 57461
const REMOVE = 57462
const SYNTAX = 57463
const TRIGGER = 57464
const FUNCTION = 57465
const AGGREGATE = 57466
const BEGIN = 57467
const RETURN = 57468
const IGNORE = 57469
const WITHIN = 57470
const VAR = 57471
const SHOW = 57472
const TIES = 57473
const NULLS = 57474
const ROWS = 57475
const JSON_ROW = 57476
const JSON_TABLE = 57477
const COUNT = 57478
const JSON_OBJECT = 57479
const AGGREGATE_FUNCTION = 57480
const LIST_FUNCTION = 57481
const ANALYTIC_FUNCTION = 57482
const FUNCTION_NTH = 57483
const FUNCTION_WITH_INS = 57484
const COMPARISON_OP = 57485
const STRING_OP = 57486
const SUBSTITUTION_OP = 57487
const UMINUS = 57488
const UPLUS = 57489

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2305

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 186,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 73,
	86, 73,
	88, 73,
	90, 73,
	92, 73,
	148, 73,
	-2, 216,
	-1, 99,
	16, 186,
	18, 186,
	21, 186,
	23, 186,
	-2, 1,
	-1, 117,
	155, 273,
	-2, 186,
	-1, 123,
	62, 166,
	63, 166,
	64, 166,
	-2, 177,
	-1, 162,
	1, 146,
	86, 146,
	88, 146,
	90, 146,
	92, 146,
	148, 146,
	-2, 200,
	-1, 167,
	1, 154,
	86, 154,
	88, 154,
	90, 154,
	92, 154,
	148, 154,
	-2, 200,
	-1, 208,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	143, 0,
	150, 0,
	-2, 243,
	-1, 209,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	143, 0,
	150, 0,
	-2, 245,
	-1, 218,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	143, 0,
	150, 0,
	-2, 255,
	-1, 228,
	86, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 283,
	92, 4,
	-2, 186,
	-1, 330,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	143, 0,
	150, 0,
	-2, 256,
	-1, 337,
	92, 1,
	-2, 186,
	-1, 349,
	52, 423,
	-2, 355,
	-1, 382,
	1, 76,
	86, 76,
	88, 76,
	90, 76,
	92, 76,
	148, 76,
	-2, 200,
	-1, 384,
	1, 78,
	86, 78,
	88, 78,
	90, 78,
	92, 78,
	148, 78,
	-2, 200,
	-1, 385,
	1, 134,
	86, 134,
	88, 134,
	90, 134,
	92, 134,
	148, 134,
	-2, 200,
	-1, 387,
	1, 136,
	86, 136,
	88, 136,
	90, 136,
	92, 136,
	148, 136,
	-2, 200,
	-1, 447,
	92, 1,
	-2, 186,
	-1, 454,
	88, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 519,
	86, 4,
	88, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 522,
	92, 4,
	-2, 186,
	-1, 523,
	92, 4,
	-2, 186,
	-1, 590,
	16, 433,
	77, 433,
	154, 433,
	-2, 82,
	-1, 613,
	86, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 618,
	92, 4,
	-2, 186,
	-1, 619,
	92, 4,
	-2, 186,
	-1, 640,
	86, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 673,
	1, 90,
	86, 90,
	88, 90,
	90, 90,
	92, 90,
	148, 90,
	-2, 200,
	-1, 676,
	92, 6,
	-2, 186,
	-1, 687,
	92, 4,
	-2, 186,
	-1, 742,
	92, 6,
	-2, 186,
	-1, 743,
	92, 6,
	-2, 186,
	-1, 747,
	92, 4,
	-2, 186,
	-1, 751,
	88, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 771,
	88, 1,
	90, 1,
	92, 1,
	-2, 186,
	-1, 783,
	86, 6,
	88, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 823,
	86, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 826,
	92, 8,
	-2, 186,
	-1, 831,
	92, 6,
	-2, 186,
	-1, 834,
	86, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 857,
	92, 6,
	-2, 186,
	-1, 885,
	92, 6,
	-2, 186,
	-1, 889,
	88, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 891,
	86, 8,
	88, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 894,
	92, 8,
	-2, 186,
	-1, 895,
	92, 8,
	-2, 186,
	-1, 898,
	88, 4,
	90, 4,
	92, 4,
	-2, 186,
	-1, 910,
	86, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 919,
	86, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 924,
	92, 8,
	-2, 186,
	-1, 938,
	92, 8,
	-2, 186,
	-1, 942,
	88, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 954,
	88, 6,
	90, 6,
	92, 6,
	-2, 186,
	-1, 968,
	86, 8,
	90, 8,
	92, 8,
	-2, 186,
	-1, 979,
	88, 8,
	90, 8,
	92, 8,
	-2, 186,
}

const yyPrivate = 57344

const yyLast = 3626

var yyAct = [...]int{

	18, 937, 911, 936, 947, 304, 883, 884, 824, 746,
	802, 458, 960, 121, 804, 839, 803, 295, 496, 118,
	29, 116, 122, 614, 446, 745, 51, 597, 798, 405,
	23, 718, 592, 24, 568, 510, 349, 234, 368, 155,
	156, 543, 159, 160, 161, 163, 164, 166, 168, 404,
	22, 230, 513, 576, 468, 512, 359, 739, 233, 560,
	348, 61, 302, 245, 165, 476, 172, 176, 475, 400,
	3, 907, 445, 558, 1, 598, 299, 239, 190, 191,
	434, 183, 362, 173, 197, 76, 201, 202, 178, 136,
	136, 350, 139, 5, 345, 128, 134, 74, 187, 175,
	827, 207, 208, 209, 284, 211, 493, 189, 218, 738,
	221, 222, 223, 224, 225, 226, 227, 780, 172, 29,
	781, 122, 188, 778, 413, 137, 87, 187, 177, 23,
	669, 123, 188, 406, 232, 229, 901, 187, 480, 236,
	481, 482, 477, 474, 609, 100, 478, 610, 650, 22,
	111, 175, 110, 109, 268, 269, 91, 112, 113, 174,
	111, 423, 110, 109, 633, 175, 187, 112, 113, 3,
	607, 277, 279, 206, 606, 111, 591, 171, 572, 353,
	242, 171, 112, 113, 129, 563, 285, 421, 210, 166,
	285, 347, 91, 303, 285, 480, 289, 481, 482, 477,
	474, 254, 900, 478, 244, 463, 324, 880, 879, 878,
	877, 174, 68, 328, 285, 330, 70, 166, 876, 854,
	240, 240, 853, 852, 850, 174, 250, 848, 253, 68,
	847, 91, 166, 838, 173, 837, 340, 744, 700, 98,
	293, 287, 129, 479, 125, 699, 698, 126, 29, 124,
	175, 303, 697, 696, 353, 242, 375, 68, 23, 216,
	573, 693, 671, 668, 381, 383, 386, 388, 288, 98,
	509, 649, 632, 630, 166, 166, 166, 166, 22, 397,
	629, 628, 123, 92, 93, 94, 622, 356, 621, 216,
	416, 393, 394, 395, 396, 166, 326, 583, 3, 605,
	603, 590, 333, 29, 548, 541, 354, 361, 325, 540,
	174, 539, 398, 528, 166, 166, 136, 437, 420, 92,
	93, 94, 131, 851, 166, 418, 378, 366, 443, 334,
	344, 364, 365, 281, 464, 369, 449, 435, 266, 282,
	453, 849, 503, 457, 461, 810, 419, 411, 809, 462,
	808, 374, 807, 806, 774, 769, 766, 29, 92, 93,
	94, 491, 356, 764, 763, 430, 431, 23, 757, 756,
	545, 415, 91, 470, 410, 441, 526, 432, 175, 487,
	131, 354, 486, 429, 428, 427, 426, 22, 175, 425,
	424, 485, 380, 379, 231, 205, 507, 204, 502, 504,
	438, 439, 175, 520, 122, 473, 440, 3, 131, 194,
	175, 451, 175, 193, 192, 294, 264, 521, 417, 488,
	313, 314, 303, 199, 166, 472, 891, 783, 166, 166,
	166, 323, 519, 99, 255, 171, 527, 916, 465, 767,
	765, 515, 240, 549, 91, 550, 499, 265, 174, 554,
	321, 411, 91, 648, 377, 557, 646, 559, 492, 636,
	494, 495, 498, 367, 91, 243, 831, 29, 70, 175,
	506, 762, 508, 704, 29, 531, 242, 23, 517, 536,
	537, 538, 87, 743, 23, 702, 484, 584, 585, 742,
	816, 569, 814, 636, 705, 195, 676, 22, 529, 92,
	93, 94, 196, 91, 22, 567, 703, 761, 91, 760,
	297, 759, 322, 141, 758, 701, 695, 3, 805, 552,
	547, 553, 500, 376, 3, 263, 967, 242, 91, 174,
	569, 578, 571, 166, 166, 166, 166, 91, 600, 29,
	581, 955, 29, 29, 580, 586, 634, 579, 612, 546,
	467, 616, 617, 91, 940, 292, 641, 927, 926, 91,
	175, 918, 257, 895, 461, 140, 902, 157, 896, 462,
	890, 92, 93, 94, 653, 647, 91, 887, 833, 92,
	93, 94, 830, 87, 623, 624, 625, 627, 829, 662,
	166, 92, 93, 94, 142, 642, 894, 626, 793, 470,
	670, 782, 755, 674, 754, 749, 690, 663, 689, 682,
	665, 654, 655, 639, 256, 551, 688, 643, 518, 452,
	620, 645, 666, 667, 450, 619, 618, 652, 651, 664,
	92, 93, 94, 29, 659, 92, 93, 94, 29, 29,
	970, 523, 685, 258, 259, 711, 684, 691, 692, 522,
	532, 533, 534, 535, 939, 92, 93, 94, 938, 678,
	29, 726, 679, 680, 92, 93, 94, 886, 515, 681,
	23, 885, 515, 938, 748, 706, 924, 569, 747, 642,
	92, 93, 94, 175, 885, 717, 92, 93, 94, 857,
	22, 747, 687, 721, 722, 723, 29, 730, 175, 447,
	339, 729, 448, 92, 93, 94, 447, 29, 768, 175,
	3, 337, 921, 912, 710, 836, 750, 825, 644, 615,
	773, 151, 152, 335, 235, 944, 943, 908, 800, 799,
	753, 752, 611, 939, 886, 770, 748, 784, 122, 448,
	974, 786, 789, 716, 966, 933, 734, 917, 732, 796,
	871, 785, 557, 775, 832, 709, 638, 772, 728, 948,
	959, 777, 29, 29, 906, 797, 556, 29, 108, 731,
	965, 29, 794, 952, 977, 813, 795, 820, 812, 962,
	811, 812, 166, 815, 951, 818, 149, 150, 153, 154,
	175, 29, 950, 819, 948, 715, 931, 963, 964, 635,
	68, 23, 787, 29, 562, 251, 213, 95, 199, 961,
	212, 214, 734, 734, 790, 791, 542, 842, 843, 844,
	845, 22, 835, 828, 318, 812, 858, 846, 317, 788,
	414, 286, 972, 821, 363, 949, 248, 873, 577, 859,
	874, 3, 166, 29, 320, 319, 29, 68, 724, 83,
	801, 29, 198, 734, 29, 822, 220, 219, 658, 875,
	881, 657, 929, 872, 892, 122, 812, 946, 882, 930,
	949, 656, 932, 96, 575, 461, 574, 29, 893, 456,
	462, 342, 897, 841, 866, 589, 899, 905, 565, 566,
	557, 903, 343, 734, 588, 855, 861, 247, 248, 249,
	708, 734, 490, 870, 909, 29, 237, 913, 914, 29,
	840, 29, 373, 925, 29, 29, 920, 480, 29, 481,
	482, 602, 935, 922, 370, 371, 601, 734, 608, 888,
	29, 599, 133, 372, 713, 714, 865, 941, 132, 29,
	958, 956, 953, 557, 29, 593, 594, 595, 596, 866,
	186, 957, 866, 866, 62, 734, 215, 904, 29, 734,
	867, 861, 29, 969, 861, 861, 973, 792, 866, 694,
	683, 976, 677, 675, 29, 369, 604, 978, 422, 389,
	861, 975, 866, 238, 360, 346, 143, 145, 29, 734,
	246, 934, 358, 272, 861, 88, 866, 144, 88, 29,
	866, 865, 391, 390, 865, 865, 69, 87, 861, 182,
	106, 115, 861, 105, 104, 107, 103, 185, 63, 135,
	865, 923, 856, 686, 734, 867, 866, 336, 867, 867,
	8, 469, 7, 6, 865, 138, 338, 866, 861, 58,
	146, 147, 300, 301, 867, 315, 316, 158, 865, 861,
	352, 162, 865, 351, 167, 971, 169, 170, 867, 945,
	928, 915, 82, 329, 57, 56, 60, 53, 59, 331,
	332, 54, 867, 712, 564, 460, 867, 459, 865, 52,
	55, 184, 455, 341, 587, 101, 100, 489, 127, 865,
	17, 111, 102, 110, 109, 16, 64, 203, 112, 113,
	148, 14, 867, 514, 480, 130, 481, 482, 477, 474,
	719, 720, 478, 867, 511, 13, 12, 9, 15, 11,
	10, 862, 106, 115, 114, 105, 104, 107, 103, 735,
	860, 733, 241, 241, 401, 399, 4, 179, 2, 252,
	241, 0, 0, 0, 0, 0, 0, 260, 261, 262,
	274, 0, 0, 0, 0, 267, 0, 0, 106, 115,
	114, 105, 104, 107, 103, 200, 480, 433, 481, 482,
	477, 474, 776, 0, 478, 0, 0, 0, 0, 106,
	115, 114, 105, 104, 107, 103, 0, 217, 0, 0,
	0, 0, 290, 0, 291, 0, 296, 101, 100, 306,
	0, 0, 0, 111, 102, 110, 109, 0, 0, 280,
	112, 113, 276, 0, 106, 115, 114, 105, 104, 107,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 100, 0, 0, 0, 0, 111,
	102, 110, 109, 0, 0, 241, 112, 113, 273, 0,
	357, 0, 0, 357, 101, 100, 130, 306, 0, 0,
	111, 102, 110, 109, 0, 0, 0, 112, 113, 707,
	382, 384, 385, 387, 0, 0, 217, 217, 0, 392,
	0, 0, 0, 0, 0, 544, 0, 0, 0, 101,
	100, 409, 0, 412, 217, 111, 102, 110, 109, 0,
	217, 217, 112, 113, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 355, 106, 115,
	114, 105, 104, 107, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	306, 0, 466, 471, 241, 0, 0, 0, 483, 0,
	0, 357, 0, 0, 0, 357, 106, 115, 114, 105,
	104, 107, 103, 0, 497, 562, 0, 501, 471, 471,
	505, 0, 0, 0, 497, 0, 0, 516, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 0, 217, 436,
	436, 436, 0, 101, 100, 0, 0, 0, 0, 111,
	102, 110, 109, 0, 0, 0, 112, 113, 660, 0,
	524, 525, 0, 0, 497, 0, 0, 0, 306, 530,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 355,
	0, 101, 100, 130, 0, 130, 130, 111, 102, 110,
	109, 0, 0, 0, 112, 113, 0, 91, 71, 72,
	73, 0, 95, 75, 87, 0, 88, 89, 0, 0,
	0, 471, 0, 0, 570, 0, 0, 0, 0, 0,
	0, 70, 0, 544, 0, 0, 357, 91, 71, 72,
	73, 582, 95, 75, 87, 0, 88, 89, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 0, 0,
	471, 70, 0, 0, 0, 0, 217, 0, 0, 0,
	84, 0, 0, 0, 85, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 119, 0,
	0, 0, 0, 0, 217, 0, 0, 90, 0, 0,
	84, 0, 0, 0, 85, 0, 0, 0, 96, 0,
	355, 0, 0, 0, 0, 544, 0, 120, 119, 0,
	306, 0, 0, 0, 0, 0, 181, 90, 0, 471,
	0, 357, 357, 0, 92, 93, 94, 98, 0, 308,
	79, 307, 309, 310, 311, 312, 0, 0, 497, 0,
	0, 0, 471, 471, 77, 78, 86, 65, 672, 673,
	0, 0, 180, 0, 92, 93, 94, 98, 0, 81,
	79, 80, 97, 217, 0, 0, 0, 106, 115, 114,
	105, 104, 107, 103, 77, 78, 86, 65, 0, 0,
	0, 0, 0, 0, 106, 115, 114, 105, 104, 107,
	103, 0, 0, 0, 0, 355, 355, 471, 0, 0,
	0, 0, 0, 357, 357, 357, 0, 725, 727, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 100, 0, 0, 0, 0, 111, 102,
	110, 109, 0, 0, 217, 112, 113, 442, 106, 101,
	100, 105, 104, 107, 103, 111, 102, 110, 109, 0,
	0, 357, 112, 113, 276, 0, 0, 355, 355, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	91, 71, 72, 73, 0, 95, 75, 87, 0, 88,
	89, 19, 0, 0, 0, 31, 32, 0, 0, 0,
	0, 0, 0, 0, 70, 0, 25, 38, 0, 26,
	0, 497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 100, 0, 217, 0, 0, 111,
	102, 110, 109, 0, 0, 355, 112, 113, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 85, 0, 0,
	0, 96, 0, 68, 0, 0, 0, 0, 0, 0,
	864, 863, 0, 740, 868, 869, 0, 0, 0, 28,
	90, 0, 35, 33, 34, 30, 0, 0, 0, 0,
	0, 0, 0, 36, 37, 407, 408, 0, 41, 42,
	43, 44, 45, 47, 48, 49, 39, 46, 50, 0,
	0, 0, 741, 0, 0, 27, 40, 92, 93, 94,
	98, 306, 81, 79, 80, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 78, 86,
	65, 91, 71, 72, 73, 0, 95, 75, 87, 0,
	88, 89, 19, 0, 0, 0, 31, 32, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 25, 38, 0,
	26, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 85, 0,
	0, 0, 96, 0, 68, 0, 0, 0, 0, 0,
	0, 403, 402, 0, 66, 0, 0, 0, 0, 0,
	28, 90, 0, 35, 33, 34, 30, 0, 0, 0,
	0, 0, 0, 0, 36, 37, 407, 408, 67, 41,
	42, 43, 44, 45, 47, 48, 49, 39, 46, 50,
	0, 0, 0, 0, 0, 0, 27, 40, 92, 93,
	94, 98, 0, 81, 79, 80, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 78,
	86, 65, 91, 71, 72, 73, 0, 95, 75, 87,
	0, 88, 89, 19, 0, 0, 0, 31, 32, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 25, 38,
	0, 26, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 85,
	0, 0, 0, 96, 0, 68, 0, 0, 0, 0,
	0, 0, 737, 736, 0, 740, 0, 0, 0, 0,
	0, 28, 90, 0, 35, 33, 34, 30, 0, 0,
	0, 0, 0, 0, 0, 36, 37, 0, 0, 0,
	41, 42, 43, 44, 45, 47, 48, 49, 39, 46,
	50, 0, 0, 0, 741, 0, 0, 27, 40, 92,
	93, 94, 98, 0, 81, 79, 80, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	78, 86, 65, 91, 71, 72, 73, 0, 95, 75,
	87, 0, 88, 89, 19, 0, 0, 0, 31, 32,
	0, 0, 0, 0, 0, 0, 0, 70, 0, 25,
	38, 0, 26, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	85, 0, 0, 0, 96, 0, 68, 0, 0, 0,
	0, 0, 0, 21, 20, 0, 66, 0, 0, 0,
	0, 0, 28, 90, 0, 35, 33, 34, 30, 0,
	0, 0, 0, 0, 0, 0, 36, 37, 0, 0,
	67, 41, 42, 43, 44, 45, 47, 48, 49, 39,
	46, 50, 0, 0, 0, 0, 0, 0, 27, 40,
	92, 93, 94, 98, 0, 81, 79, 80, 97, 91,
	71, 72, 73, 0, 95, 75, 87, 0, 88, 89,
	77, 78, 86, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 70, 91, 71, 72, 73, 0, 95,
	75, 87, 0, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 85, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	119, 0, 0, 0, 0, 0, 0, 84, 0, 90,
	0, 85, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 91, 71, 72, 73, 0,
	95, 75, 87, 0, 88, 89, 92, 93, 94, 98,
	0, 308, 79, 307, 309, 310, 311, 312, 0, 70,
	0, 0, 0, 0, 305, 0, 77, 78, 86, 65,
	298, 92, 93, 94, 98, 0, 308, 79, 307, 309,
	310, 311, 312, 0, 0, 0, 0, 0, 0, 305,
	0, 77, 78, 86, 65, 0, 0, 0, 84, 0,
	0, 0, 85, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 90, 91, 71, 72, 73,
	0, 95, 75, 87, 0, 88, 89, 91, 71, 72,
	73, 0, 95, 75, 87, 0, 88, 89, 0, 0,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 70, 92, 93, 94, 98, 0, 81, 79, 80,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	305, 0, 77, 78, 86, 65, 0, 0, 0, 84,
	0, 0, 0, 85, 0, 0, 0, 96, 251, 0,
	84, 0, 0, 0, 85, 0, 120, 119, 96, 0,
	68, 0, 0, 0, 0, 0, 90, 120, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 91, 71,
	72, 73, 0, 95, 75, 87, 0, 88, 89, 91,
	71, 72, 73, 0, 95, 75, 87, 0, 88, 89,
	0, 0, 70, 92, 93, 94, 98, 0, 81, 79,
	80, 97, 0, 70, 92, 93, 94, 98, 0, 81,
	79, 80, 97, 77, 78, 86, 65, 0, 0, 0,
	0, 0, 0, 0, 77, 78, 86, 65, 0, 0,
	0, 84, 0, 0, 0, 85, 0, 0, 0, 96,
	0, 0, 84, 0, 0, 0, 85, 0, 120, 119,
	96, 0, 0, 0, 0, 0, 0, 0, 90, 120,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	91, 71, 278, 73, 0, 95, 75, 87, 0, 88,
	89, 0, 0, 106, 115, 114, 105, 104, 107, 103,
	0, 0, 0, 0, 70, 92, 93, 94, 98, 0,
	81, 79, 80, 97, 979, 0, 92, 93, 94, 98,
	0, 81, 79, 80, 97, 77, 78, 86, 65, 0,
	0, 0, 0, 0, 0, 0, 77, 78, 86, 117,
	0, 0, 0, 84, 0, 0, 0, 85, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 119, 0, 0, 0, 0, 0, 0, 101, 100,
	90, 0, 0, 0, 111, 102, 110, 109, 0, 0,
	0, 112, 113, 106, 115, 114, 105, 104, 107, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 92, 93, 94,
	98, 0, 81, 79, 80, 97, 106, 115, 114, 105,
	104, 107, 103, 0, 0, 0, 0, 77, 78, 86,
	65, 0, 0, 0, 0, 0, 0, 954, 0, 106,
	115, 114, 105, 104, 107, 103, 0, 0, 0, 106,
	115, 114, 105, 104, 107, 103, 0, 0, 101, 100,
	942, 0, 0, 0, 111, 102, 110, 109, 0, 0,
	919, 112, 113, 106, 115, 114, 105, 104, 107, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 100, 0, 910, 0, 0, 111, 102, 110,
	109, 0, 0, 0, 112, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 100, 0, 0, 0, 0,
	111, 102, 110, 109, 101, 100, 0, 112, 113, 0,
	111, 102, 110, 109, 0, 0, 0, 112, 113, 106,
	115, 114, 105, 104, 107, 103, 0, 0, 101, 100,
	0, 0, 0, 0, 111, 102, 110, 109, 0, 0,
	898, 112, 113, 106, 115, 114, 105, 104, 107, 103,
	0, 0, 0, 106, 115, 114, 105, 104, 107, 103,
	0, 0, 0, 0, 889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 106, 115, 114, 105, 104,
	107, 103, 0, 0, 0, 106, 115, 114, 105, 104,
	107, 103, 0, 0, 101, 100, 0, 0, 826, 0,
	111, 102, 110, 109, 0, 0, 823, 112, 113, 106,
	115, 114, 105, 104, 107, 103, 0, 0, 101, 100,
	0, 0, 0, 0, 111, 102, 110, 109, 101, 100,
	0, 112, 113, 0, 111, 102, 110, 109, 0, 0,
	0, 112, 113, 106, 115, 114, 105, 104, 107, 103,
	101, 100, 0, 0, 0, 0, 111, 102, 110, 109,
	101, 100, 0, 112, 113, 0, 111, 102, 110, 109,
	0, 0, 0, 112, 113, 106, 115, 114, 105, 104,
	107, 103, 0, 0, 101, 100, 0, 0, 0, 0,
	111, 102, 110, 109, 0, 335, 817, 112, 113, 106,
	115, 114, 105, 104, 107, 103, 0, 0, 0, 106,
	115, 114, 105, 104, 107, 103, 0, 0, 101, 100,
	771, 0, 0, 0, 111, 102, 110, 109, 0, 0,
	779, 112, 113, 106, 115, 114, 105, 104, 107, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 100, 0, 0, 751, 0, 111, 102, 110, 109,
	0, 0, 0, 112, 113, 106, 115, 114, 105, 104,
	107, 103, 0, 0, 101, 100, 0, 0, 0, 0,
	111, 102, 110, 109, 101, 100, 640, 112, 113, 0,
	111, 102, 110, 109, 0, 0, 637, 112, 113, 106,
	115, 114, 105, 104, 107, 103, 0, 0, 101, 100,
	0, 0, 0, 0, 111, 102, 110, 109, 0, 0,
	613, 112, 113, 106, 115, 114, 105, 104, 107, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	101, 100, 0, 0, 555, 0, 111, 102, 110, 109,
	0, 0, 0, 112, 113, 106, 115, 114, 105, 104,
	107, 103, 0, 0, 0, 0, 106, 115, 114, 105,
	104, 107, 103, 0, 101, 100, 454, 0, 0, 0,
	111, 102, 110, 109, 0, 0, 0, 112, 113, 283,
	106, 115, 114, 105, 104, 107, 103, 0, 101, 100,
	0, 0, 0, 0, 111, 102, 110, 109, 275, 0,
	0, 112, 113, 0, 0, 0, 106, 115, 114, 105,
	104, 107, 103, 0, 0, 0, 0, 0, 0, 270,
	101, 100, 0, 0, 0, 0, 111, 102, 110, 109,
	0, 101, 100, 112, 113, 0, 0, 111, 102, 110,
	109, 0, 0, 0, 112, 113, 106, 115, 114, 105,
	104, 107, 103, 0, 0, 101, 100, 0, 0, 0,
	0, 111, 102, 110, 109, 0, 0, 0, 112, 113,
	106, 115, 114, 105, 104, 107, 103, 0, 0, 0,
	0, 101, 100, 0, 0, 0, 0, 111, 102, 110,
	109, 228, 0, 0, 112, 113, 106, 115, 114, 105,
	104, 107, 103, 0, 0, 0, 106, 444, 114, 105,
	104, 107, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 100, 0, 0, 0, 0, 111, 102, 110,
	109, 0, 0, 0, 112, 113, 106, 327, 114, 105,
	104, 107, 103, 0, 0, 101, 100, 0, 0, 0,
	0, 111, 102, 110, 109, 0, 0, 0, 112, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 100, 0, 0, 0, 0, 111, 102, 110,
	109, 101, 100, 0, 112, 113, 0, 111, 102, 110,
	109, 0, 0, 0, 112, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 100, 0, 0, 0, 0, 111, 102, 110,
	109, 0, 0, 0, 112, 113,
}
var yyPact = [...]int{

	2199, -1000, 285, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3428, -1000,
	2655, 2644, -1000, -1000, 226, 904, 898, 996, 572, -1000,
	471, 985, 982, 533, 533, 686, -1000, -1000, 2644, 2644,
	555, 2644, 2644, 2644, 2644, 2644, 2644, 2644, -1000, 533,
	533, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 290, -1000, -1000, -1000, 2553, 1483, 1003, 921, -22,
	-52, -1000, -1000, -1000, -1000, -1000, -1000, 2644, 2644, 260,
	259, 255, -1000, 352, 254, 2644, 2644, -1000, -1000, -1000,
	533, -1000, -1000, -1000, -1000, -1000, -1000, 243, 241, 2199,
	2644, 2644, 2644, 737, 2644, 738, 105, 2644, 791, 2644,
	2644, 2644, 2644, 2644, 2644, 2644, 3402, 2553, -1000, 240,
	2644, 636, 3428, 863, 959, 499, 448, 973, 835, 729,
	-1000, 723, 533, 499, -1000, 43, 289, -1000, 520, -1000,
	533, 533, 533, 375, 297, -1000, -1000, -1000, 533, -1000,
	-1000, -1000, -1000, 2644, 2644, 3378, 3312, -1000, 976, 3428,
	3428, 1090, -22, 3428, 3338, -1000, 1576, -22, 3428, -1000,
	2746, 2644, 1054, 178, 184, 168, 3288, 36, 763, 996,
	-1000, -1000, -1000, -1000, 38, 533, -1000, 549, 2542, 504,
	-1000, -1000, 2335, 729, 729, 105, 105, 756, 779, -1000,
	-1000, 1650, -1000, 376, 729, 2644, -1000, 11, 1, 1,
	798, 3468, 2644, 105, 2644, -1000, 2553, -1000, 1, 105,
	105, 26, 26, -1000, -1000, -1000, 942, 1650, 2199, 178,
	174, 2644, 635, 621, 610, 2644, 832, 846, 499, 966,
	33, -1000, -1000, 227, 975, 962, 227, 769, 769, 769,
	2360, -1000, 309, 893, 996, 2644, 428, 300, 239, 238,
	-1000, -1000, -1000, 2644, 2644, 2644, 2644, 955, 3428, 3428,
	991, 990, 533, 2644, 2644, 2644, 2644, 3428, 2644, 3428,
	-1000, -1000, -1000, 1897, 533, 996, 533, 56, 762, 921,
	264, -1000, -1000, 170, 2644, -1000, -1000, -1000, -1000, 163,
	29, 952, -1000, 3428, -1000, -1000, 7, 236, 235, 232,
	231, 230, 229, 2644, 2451, -1000, -1000, 105, 183, 183,
	183, 737, -1000, 2644, 1559, -1000, -1000, 2644, 3438, -1000,
	1, -1000, -1000, 616, -1000, 2644, 532, 2199, 527, 2644,
	3277, 829, 2644, 1453, 180, 524, 440, 499, 962, 85,
	-1000, 460, -1000, -1000, 152, -1000, 228, 225, 227, 858,
	2644, -1000, 168, -1000, 168, 168, -1000, 533, 723, -1000,
	368, 188, 440, 533, -1000, 3428, 723, 533, 723, 115,
	533, 3428, -22, 3428, -22, -22, 3428, -22, 3428, 996,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3428, 526, 284,
	-1000, -1000, 2655, 2644, -1000, -1000, -1000, -1000, -1000, 558,
	-1000, 28, 550, 533, 533, -1000, 222, 533, -1000, 158,
	-1000, 2360, 533, 2542, 729, 729, 729, 2644, 2644, 2644,
	156, 154, 150, 747, -1000, 135, -1000, 216, -1000, -1000,
	452, 149, 2644, 1650, 2644, 523, 609, 2199, 2644, 3245,
	682, -1000, -1000, 3428, 2199, -1000, 2644, 1298, -1000, 27,
	841, 3428, -1000, 105, 440, -1000, -1000, 533, 973, 20,
	110, -61, -1000, -1000, 824, 822, 784, 784, 864, 227,
	-1000, -1000, -1000, -1000, 533, 142, 2644, 2644, 962, 849,
	839, 3428, 773, -1000, -1000, 773, 146, 18, -1000, 910,
	533, 892, -1000, 440, 885, 880, -1000, 145, -1000, 950,
	144, 16, -1000, -1000, 12, 889, -11, -1000, 645, 1897,
	3221, 631, 1897, 1897, 535, 534, 723, 133, -1000, -1000,
	-1000, 131, 2644, 2644, 2451, 2644, 126, 125, 118, -1000,
	-1000, -1000, 105, 117, 6, 2644, -1000, 721, 331, 3131,
	1650, 671, 521, -1000, 3187, 2644, -1000, 3097, 630, 3428,
	-1000, 727, 325, 1453, 321, -1000, -1000, -1000, 116, -10,
	-1000, 962, 440, 2644, 227, 227, 819, -1000, 809, 806,
	784, -1000, -1000, -1000, 1260, 1146, -1000, -1000, 2644, 2644,
	949, 533, -1000, -1000, -1000, 440, 440, 108, -28, 2644,
	107, 533, 2644, 947, 371, 946, 996, 996, 2644, 944,
	996, -1000, -1000, 1897, 602, 2644, 516, 514, 1897, 1897,
	106, 943, 410, 98, 97, 91, 90, 83, 409, 379,
	367, -1000, -1000, 105, 1111, -1000, 856, -1000, -1000, 670,
	2199, 3097, -1000, -1000, 2644, -1000, -1000, -1000, 899, 770,
	440, -1000, -1000, 3428, 864, 1051, 227, 227, 227, 796,
	2644, 533, 3428, -1000, 723, -1000, -1000, -1000, 910, 533,
	3428, -1000, -1000, -22, 3428, 723, 2048, 364, -1000, -1000,
	-1000, 889, 3428, 358, 82, 588, 513, 1897, 3155, 644,
	643, 512, 510, -1000, 215, 214, 408, 405, 403, 401,
	365, 210, 209, 308, 202, 307, -1000, 2644, 201, -1000,
	653, 3121, -1000, -1000, -1000, 105, -1000, -1000, -1000, 2644,
	200, 1051, 1113, 864, 227, -32, 3065, -38, -1000, -1000,
	-1000, -1000, 509, 279, -1000, -1000, 2655, 2644, -1000, -1000,
	2644, 2644, 2048, 2048, 941, 506, 601, 1897, 2644, 681,
	-1000, 1897, -1000, -1000, 642, 641, 723, 413, 199, 198,
	196, 194, 191, 413, 413, 386, 413, 384, 3031, 863,
	-1000, 2199, -1000, 3428, 533, -1000, 2644, 864, -1000, -1000,
	-1000, 2644, -1000, 2048, 3007, 629, 2997, 32, 755, 3428,
	496, 490, 341, 669, 486, -1000, 2975, -1000, 627, -1000,
	-1000, 80, 78, -1000, 867, 837, 413, 413, 413, 413,
	413, 75, 863, 72, 187, 69, 169, -1000, 68, 67,
	3428, 64, -1000, 2048, 599, 2644, 1746, 533, 533, -1000,
	-1000, 2048, -1000, 665, 1897, -1000, 2644, -1000, -1000, -1000,
	794, 2644, 63, 55, 54, 53, 52, -1000, -1000, 413,
	-1000, 413, -1000, -1000, -1000, 581, 485, 2048, 2965, 478,
	278, -1000, -1000, 2655, 2644, -1000, -1000, -1000, 505, 472,
	476, -1000, 650, 2941, 1453, -1000, -1000, -1000, -1000, -1000,
	-1000, 47, -19, 474, 594, 2048, 2644, 680, -1000, 2048,
	640, 1746, 2875, 625, 1746, 1746, -1000, -1000, 1897, 304,
	-1000, -1000, 662, 469, -1000, 2851, -1000, 624, -1000, -1000,
	1746, 586, 2644, 466, 465, -1000, 790, -1000, 660, 2048,
	-1000, 2644, 568, 462, 1746, 2841, 639, 638, -1000, 788,
	712, 704, 690, -1000, 648, 2818, 449, 583, 1746, 2644,
	676, -1000, 1746, -1000, -1000, 740, 699, -1000, 717, 687,
	-1000, -1000, -1000, -1000, 2048, 659, 434, -1000, 2785, -1000,
	552, 753, -1000, -1000, -1000, -1000, -1000, 655, 1746, -1000,
	2644, -1000, 693, -1000, -1000, 647, 2695, -1000, -1000, 1746,
}
var yyPgo = [...]int{

	0, 73, 28, 71, 12, 69, 133, 1138, 49, 1137,
	29, 1136, 1135, 1134, 1131, 109, 57, 1130, 1129, 1121,
	1120, 1119, 1118, 1117, 75, 27, 32, 1116, 1115, 52,
	1114, 1103, 55, 35, 1101, 1100, 1096, 1095, 1090, 93,
	106, 95, 1088, 63, 56, 1087, 1084, 15, 1083, 59,
	1082, 33, 1081, 81, 1079, 97, 85, 26, 0, 62,
	849, 41, 11, 1077, 1075, 1074, 1073, 1080, 1071, 80,
	1068, 1067, 1066, 51, 1065, 1064, 1062, 5, 16, 10,
	14, 1061, 1060, 4, 1059, 1055, 94, 91, 77, 1053,
	36, 1050, 31, 1043, 1042, 1039, 13, 37, 1036, 34,
	17, 60, 18, 76, 1033, 1032, 1031, 54, 1030, 24,
	72, 9, 25, 7, 6, 1, 3, 58, 1027, 23,
	1023, 8, 1022, 2, 1021, 1006, 61, 88, 19, 1019,
	96, 954, 1018, 226, 84, 68, 53, 65, 82, 1017,
	38, 768,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 7, 7, 8,
	8, 8, 8, 8, 9, 9, 10, 10, 12, 12,
	11, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
	19, 20, 20, 20, 20, 21, 21, 21, 21, 21,
	22, 22, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 24, 24, 25, 25, 26, 26, 26, 26,
	26, 27, 27, 27, 27, 27, 28, 28, 28, 28,
	29, 30, 30, 31, 32, 32, 33, 33, 33, 34,
	34, 34, 34, 34, 35, 35, 35, 35, 35, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 38, 38,
	38, 39, 40, 40, 40, 40, 41, 41, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 48,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 54, 55, 56,
	57, 57, 57, 57, 57, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 59, 60, 60, 60, 61, 61, 62, 62, 63,
	63, 64, 64, 65, 65, 65, 66, 66, 67, 68,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 71, 71, 71, 71, 71, 71, 71, 72,
	72, 72, 72, 73, 73, 74, 74, 74, 74, 75,
	75, 75, 75, 75, 76, 76, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 78, 79, 79,
	80, 80, 81, 81, 82, 82, 82, 83, 83, 83,
	84, 84, 85, 85, 86, 86, 87, 87, 87, 89,
	89, 89, 89, 89, 90, 90, 90, 90, 90, 90,
	90, 91, 91, 91, 91, 91, 91, 92, 92, 93,
	93, 94, 94, 94, 95, 96, 96, 97, 97, 98,
	98, 99, 99, 100, 100, 101, 101, 88, 88, 102,
	102, 103, 103, 104, 104, 104, 104, 105, 106, 107,
	107, 108, 108, 109, 109, 110, 110, 111, 111, 112,
	112, 113, 113, 114, 114, 115, 115, 116, 116, 117,
	117, 118, 118, 119, 119, 120, 120, 121, 121, 122,
	122, 123, 123, 124, 124, 125, 125, 125, 125, 126,
	127, 127, 128, 129, 129, 130, 130, 131, 132, 133,
	133, 134, 134, 135, 135, 136, 136, 137, 137, 138,
	138, 139, 139, 140, 140, 141, 141,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	8, 8, 9, 9, 1, 1, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 1, 1, 6, 8, 8, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 2, 2, 1, 2, 4, 4, 4, 4, 2,
	1, 1, 6, 8, 5, 6, 8, 5, 7, 7,
	7, 7, 1, 3, 1, 3, 0, 1, 1, 2,
	2, 5, 2, 2, 3, 5, 6, 8, 5, 3,
	1, 1, 3, 3, 1, 3, 1, 1, 3, 9,
	10, 10, 12, 3, 0, 1, 1, 1, 1, 2,
	2, 5, 6, 3, 4, 4, 4, 4, 4, 4,
	2, 2, 2, 2, 4, 4, 2, 2, 2, 4,
	1, 2, 2, 4, 2, 2, 1, 2, 2, 3,
	4, 5, 5, 4, 4, 4, 1, 1, 3, 0,
	2, 0, 2, 0, 3, 0, 2, 0, 3, 0,
	3, 4, 0, 2, 0, 2, 0, 2, 6, 9,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 6, 1, 3, 1, 3, 2,
	4, 1, 1, 0, 1, 1, 1, 1, 3, 3,
	3, 1, 6, 3, 3, 3, 3, 4, 4, 5,
	6, 6, 3, 4, 4, 3, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 3, 3, 2, 2, 3,
	3, 2, 2, 0, 1, 4, 3, 4, 4, 5,
	5, 5, 5, 1, 5, 10, 8, 9, 9, 9,
	9, 9, 8, 8, 10, 8, 10, 2, 1, 5,
	0, 3, 2, 5, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 1, 1, 1, 1, 2, 3, 1,
	6, 6, 6, 8, 1, 1, 2, 3, 1, 1,
	3, 4, 5, 6, 7, 5, 6, 2, 4, 1,
	1, 1, 3, 1, 5, 0, 1, 4, 5, 0,
	2, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 1, 3, 6, 9, 5, 8, 7, 3, 1,
	3, 5, 6, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 1, 1, 1, 1, 1,
	1, 3, 3, 1, 3, 1, 3, 1, 1, 0,
	1, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -104, -105, -108, -23,
	-20, -21, -27, -28, -34, -22, -37, -38, -58, 15,
	85, 84, -8, -10, -51, 30, 33, 129, 93, -128,
	99, 19, 20, 97, 98, 96, 107, 108, 31, 120,
	130, 112, 113, 114, 115, 116, 121, 117, 118, 119,
	122, -57, -54, -71, -68, -67, -74, -75, -95, -70,
	-72, -126, -131, -132, -36, 154, 87, 111, 77, -125,
	28, 5, 6, 7, -55, 10, -56, 151, 152, 137,
	138, 136, -76, -60, 67, 71, 153, 11, 13, 14,
	94, 4, 131, 132, 133, 9, 75, 139, 134, 148,
	144, 143, 150, 74, 72, 71, 68, 73, -141, 152,
	151, 149, 156, 157, 70, 69, -58, 154, -128, 85,
	84, -96, -58, -40, 23, 18, 21, -42, -41, 16,
	-67, 154, 34, 34, -130, -129, -126, -130, -125, -126,
	94, 42, 123, -131, 12, -131, -125, -125, -35, 100,
	101, 35, 36, 102, 103, -58, -58, 12, -125, -58,
	-58, -58, -125, -58, -58, -100, -58, -125, -58, -125,
	-125, 145, -58, -100, -39, -51, -58, -126, -127, -9,
	129, 93, 6, -53, -52, -139, 29, 159, 154, 159,
	-58, -58, 154, 154, 154, 143, 150, -134, -141, 71,
	-67, -58, -58, -125, 154, 154, -1, -58, -58, -58,
	-134, -58, 72, 68, 73, -60, 154, -67, -58, 66,
	65, -58, -58, -58, -58, -58, -58, -58, 89, -100,
	-73, 154, -96, -117, -97, 88, -47, 43, 24, -88,
	-86, -125, 28, 17, -88, -43, 17, 62, 63, 64,
	-133, 76, -125, -86, 158, 145, 94, 42, 123, 124,
	-125, -125, -125, 150, 41, 150, 41, -125, -58, -58,
	41, 17, 17, 158, 60, 60, 158, -58, 6, -58,
	155, 155, 155, 91, 68, 158, 68, -126, -127, 158,
	-125, -125, 6, -73, -133, -100, -125, 6, 155, -103,
	-94, -93, -59, -58, -77, 149, -125, 138, 136, 139,
	140, 141, 142, -133, -133, -60, -60, 72, 68, 66,
	65, 74, 136, -133, -58, -55, -56, 69, -58, -60,
	-58, -60, -60, -1, 155, 88, -118, 90, -98, 90,
	-58, -48, 49, 46, -87, -86, 19, 158, -101, -90,
	-87, -89, -91, 27, 154, -67, 135, -125, 17, -44,
	22, -101, -138, 65, -138, -138, -103, 154, -140, 26,
	31, 32, 40, 19, -130, -58, 95, 154, 26, 154,
	154, -58, -125, -58, -125, -125, -58, -125, -58, 24,
	12, 12, -125, -100, -100, -100, -100, -58, -2, -12,
	-5, -13, 85, 84, -8, -10, -6, 109, 110, -125,
	-127, -126, -125, 68, 68, -53, 26, 154, 155, -73,
	155, 158, 26, 154, 154, 154, 154, 154, 154, 154,
	-73, -73, -59, -60, -69, 154, -67, 134, -69, -69,
	-134, -73, 158, -58, 69, -110, -109, 90, 86, -58,
	92, -1, 92, -58, 89, -50, 50, -58, -62, -63,
	-64, -58, -77, 25, 154, -39, -125, 26, -107, -106,
	-57, -125, -88, -44, 58, -135, -137, 57, 61, 158,
	53, 55, 56, -125, 26, -90, 154, 154, -101, -45,
	44, -58, -41, -40, -41, -41, -102, -125, -39, -24,
	154, -125, -57, 154, -57, -125, -39, -102, -39, 155,
	-33, -30, -32, -29, -31, -126, -125, -127, 92, 148,
	-58, -96, 91, 91, -125, -125, 154, -102, 155, -103,
	-125, -73, -133, -133, -133, -133, -73, -73, -73, 155,
	155, 155, 69, -61, -60, 154, 97, 68, 155, -58,
	-58, 92, -110, -1, -58, 89, 84, -58, -1, -58,
	-49, 51, 77, 158, -65, 47, 48, -61, -99, -57,
	-125, -43, 158, 150, 52, 52, -136, 54, -136, -135,
	-137, -101, -125, 155, -58, -58, -44, -46, 45, 46,
	155, 158, -26, 35, 36, 37, 38, -25, -24, 39,
	-99, 41, 41, 155, 26, 155, 158, 158, 39, 155,
	158, 87, -2, 89, -119, 88, -2, -2, 91, 91,
	-39, 155, 155, -73, -73, -73, -59, -73, 155, 155,
	155, -60, 155, 158, -58, 78, 128, 155, 85, 92,
	89, -58, -97, -117, 88, -49, 131, -62, 132, 155,
	158, -44, -107, -58, -90, -90, 52, 52, 52, -136,
	158, 158, -58, -100, -140, -102, -57, -57, 155, 158,
	-58, 155, -125, -125, -58, 26, 125, 26, -29, -32,
	-32, -126, -58, 26, -33, -2, -120, 90, -58, 92,
	92, -2, -2, 155, 26, 106, 155, 155, 155, 155,
	155, 106, 106, 127, 106, 127, -61, 158, 44, 85,
	-1, -58, -66, 35, 36, 25, -39, -99, -92, 59,
	60, -90, -90, -90, 52, -125, -58, -125, -39, -26,
	-25, -39, -3, -14, -5, -18, 85, 84, -15, -16,
	87, 126, 125, 125, 155, -112, -111, 90, 86, 92,
	-2, 89, 87, 87, 92, 92, 154, 154, 106, 106,
	106, 106, 106, 154, 154, 132, 154, 132, -58, 154,
	-109, 89, -61, -58, 154, -92, 59, -90, 155, 155,
	155, 158, 92, 148, -58, -96, -58, -126, -127, -58,
	-3, -3, 26, 92, -112, -2, -58, 84, -2, 87,
	87, -39, -79, -78, -80, 105, 154, 154, 154, 154,
	154, -78, -80, -79, 106, -78, 106, 155, -47, -102,
	-58, -73, -3, 89, -121, 88, 91, 68, 68, 92,
	92, 125, 85, 92, 89, -119, 88, 155, 155, -47,
	43, 46, -79, -79, -79, -79, -78, 155, 155, 154,
	155, 154, 155, 155, 155, -3, -122, 90, -58, -4,
	-17, -5, -19, 85, 84, -15, -16, -6, -125, -125,
	-3, 85, -2, -58, 46, -100, 155, 155, 155, 155,
	155, -79, -78, -114, -113, 90, 86, 92, -3, 89,
	92, 148, -58, -96, 91, 91, 92, -111, 89, -62,
	155, 155, 92, -114, -3, -58, 84, -3, 87, -4,
	89, -123, 88, -4, -4, -81, 133, 85, 92, 89,
	-121, 88, -4, -124, 90, -58, 92, 92, -82, 72,
	79, 6, 82, 85, -3, -58, -116, -115, 90, 86,
	92, -4, 89, 87, 87, -84, 79, -83, 6, 82,
	80, 80, 83, -113, 89, 92, -116, -4, -58, 84,
	-4, 69, 80, 80, 81, 83, 85, 92, 89, -123,
	88, -85, 79, -83, 85, -4, -58, 81, -115, 89,
}
var yyDef = [...]int{

	-2, -2, 2, 27, 28, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	0, 345, 43, 44, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 124, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 156, 0,
	0, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 217, 218, 219, 186, 0, 36, 431, 200,
	0, 192, 193, 194, 195, 196, 197, 0, 0, 0,
	0, 0, 283, 421, 0, 0, 0, 409, 417, 418,
	0, 405, 406, 407, 408, 198, 199, 0, 0, -2,
	0, 435, 436, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 216, 0,
	345, 0, 346, -2, 0, 0, 0, 169, 0, 419,
	167, 186, 0, 0, 71, 415, 413, 72, 0, 74,
	0, 0, 0, 0, 0, 79, 102, 103, 0, 125,
	126, 127, 128, 0, 0, 0, 0, 140, 152, 141,
	142, 143, -2, 147, 148, 151, 353, -2, 155, 157,
	158, 0, 0, 0, 0, 0, 0, 215, 0, 0,
	34, 35, 37, 187, 190, 0, 432, 0, 273, 0,
	267, 268, 0, 419, 419, 435, 436, 0, 0, 422,
	261, 271, 272, 0, 419, 0, 3, 239, -2, -2,
	0, 0, 0, 0, 0, 252, 186, 223, -2, 0,
	0, 262, 263, 264, 265, 266, 269, 270, -2, 0,
	0, 273, 0, 391, 349, 0, 179, 0, 0, 0,
	357, 314, 315, 0, 0, 171, 0, 429, 429, 429,
	0, 420, 433, 0, 0, 0, 0, 0, 0, 0,
	104, 109, 123, 0, 0, 0, 0, 0, 129, 130,
	0, 0, 0, 0, 0, 0, 0, 159, 193, 412,
	220, 222, 238, -2, 0, 0, 0, 0, 0, 431,
	0, 201, 203, 0, 273, 274, 202, 204, 276, 0,
	361, 341, 343, 339, 340, 221, 200, 0, 0, 0,
	0, 0, 0, 273, 273, 244, 246, 0, 0, 0,
	0, 421, 133, 273, 0, 247, 248, 0, 0, 253,
	-2, 257, 259, 375, 278, 0, 0, -2, 0, 0,
	0, 184, 0, 0, 186, 316, 0, 0, 171, -2,
	324, 325, 328, 329, 186, 319, 0, 314, 0, 173,
	0, 170, 0, 430, 0, 0, 168, 0, 186, 434,
	0, 0, 0, 0, 416, 414, 186, 0, 186, 0,
	0, 75, -2, 77, -2, -2, 135, -2, 137, 0,
	138, 139, 153, 144, 145, 149, 354, 160, 0, 0,
	38, 39, 0, 345, 48, 49, 50, 25, 26, 0,
	411, 410, 0, 0, 0, 191, 0, 0, 275, 0,
	277, 0, 0, 273, 419, 419, 419, 273, 273, 273,
	0, 0, 0, 0, 254, 186, 241, 0, 258, 260,
	0, 0, 0, 249, 0, 0, 375, -2, 0, 0,
	0, 392, 344, 350, -2, 161, 0, 182, 178, 227,
	233, 231, 232, 0, 0, 365, 317, 0, 169, 369,
	0, 200, 358, 371, 0, 0, 425, 425, 423, 0,
	424, 427, 428, 326, 0, 423, 0, 0, 171, 175,
	0, 172, 163, 166, 164, 165, 0, 359, 84, 96,
	0, 92, 87, 0, 0, 0, 101, 0, 108, 0,
	0, 116, 117, 111, 114, 110, 0, 105, 0, -2,
	0, 0, -2, -2, 0, 0, 186, 0, 279, 362,
	342, 0, 273, 273, 273, 273, 0, 0, 0, 280,
	281, 282, 0, 0, 225, 0, 131, 0, 284, 0,
	250, 0, 0, 376, 0, 0, 42, 23, 389, 185,
	180, 182, 0, 0, 229, 234, 235, 363, 0, 351,
	318, 171, 0, 0, 0, 0, 0, 426, 0, 0,
	425, 356, 327, 330, 0, 0, 372, 162, 0, 0,
	-2, 0, 85, 97, 98, 0, 0, 0, 94, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 29, 5, -2, 395, 0, 0, 0, -2, -2,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 240, 0, 0, 132, 0, 224, 40, 0,
	-2, 347, 348, 390, 0, 181, 183, 228, 0, 186,
	0, 367, 370, 368, 331, 423, 0, 0, 0, 0,
	0, 0, 176, 174, 186, 360, 99, 100, 96, 0,
	93, 88, 89, -2, 91, 186, -2, 0, 112, 118,
	115, 0, 113, 0, 0, 379, 0, -2, 0, 0,
	0, 0, 0, 188, 0, 0, 279, 280, 281, 282,
	284, 0, 0, 0, 0, 0, 226, 0, 0, 41,
	373, 0, 230, 236, 237, 0, 366, 352, 332, 0,
	0, 423, 423, 335, 0, 200, 0, 0, 83, 86,
	95, 107, 0, 0, 51, 52, 0, 345, 63, 64,
	0, 56, -2, -2, 0, 0, 379, -2, 0, 0,
	396, -2, 30, 31, 0, 0, 186, 300, 0, 0,
	0, 0, 0, 300, 300, 0, 300, 0, 0, 177,
	374, -2, 364, 337, 0, 333, 0, 336, 320, 321,
	322, 273, 119, -2, 0, 0, 0, 215, 0, 57,
	0, 0, 0, 0, 0, 380, 0, 47, 393, 32,
	33, 0, 0, 298, 177, 0, 300, 300, 300, 300,
	300, 0, 177, 0, 0, 0, 0, 242, 0, 0,
	334, 0, 7, -2, 399, 0, -2, 0, 0, 120,
	121, -2, 45, 0, -2, 394, 0, 189, 286, 297,
	0, 0, 0, 0, 0, 0, 0, 292, 293, 300,
	295, 300, 285, 338, 323, 383, 0, -2, 0, 0,
	0, 58, 59, 0, 345, 68, 69, 70, 0, 0,
	0, 46, 377, 0, 0, 301, 287, 288, 289, 290,
	291, 0, 0, 0, 383, -2, 0, 0, 400, -2,
	0, -2, 0, 0, -2, -2, 122, 378, -2, 178,
	294, 296, 0, 0, 384, 0, 62, 397, 53, 9,
	-2, 403, 0, 0, 0, 299, 0, 60, 0, -2,
	398, 0, 387, 0, -2, 0, 0, 0, 302, 0,
	0, 0, 0, 61, 381, 0, 0, 387, -2, 0,
	0, 404, -2, 54, 55, 0, 0, 311, 0, 0,
	304, 305, 306, 382, -2, 0, 0, 388, 0, 67,
	401, 0, 310, 307, 308, 309, 65, 0, -2, 402,
	0, 303, 0, 313, 66, 385, 0, 312, 386, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 153, 3, 3, 3, 157, 3, 3,
	154, 155, 149, 152, 158, 151, 159, 156, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 148,
	3, 150,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:231
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:236
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:247
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:257
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:267
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:377
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:381
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = Exit{}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:391
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:419
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:533
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:569
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:597
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:601
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:605
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:609
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:613
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:639
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:643
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:649
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:653
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:659
		{
			yyVAL.expression = nil
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:663
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:667
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:671
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:675
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:681
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:685
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:689
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:693
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 106:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:703
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 107:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:707
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:711
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:715
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:721
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:727
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:731
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:737
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:743
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:747
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:753
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:757
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:761
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 119:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:767
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 120:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:771
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 121:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:775
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 122:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:779
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:783
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:789
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:793
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:797
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:801
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:805
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:809
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:813
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:819
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:823
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:827
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:833
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:849
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:853
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[4].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:857
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:861
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:865
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:869
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:873
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:877
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:881
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:885
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:889
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:893
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:897
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:901
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:905
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:909
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:913
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:917
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:921
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:925
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:931
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:935
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:939
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:945
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 162:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:957
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:967
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:985
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.queryexpr = nil
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.queryexpr = nil
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = nil
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = nil
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1046
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1052
		{
			yyVAL.queryexpr = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1066
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.queryexpr = nil
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1086
		{
			yyVAL.queryexpr = nil
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 188:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1146
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1176
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1186
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1202
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1206
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1214
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1222
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1226
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1234
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1238
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1242
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1246
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1252
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1262
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1272
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1276
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1282
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1286
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1292
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1296
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1302
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1306
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1312
		{
			yyVAL.token = Token{}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1316
		{
			yyVAL.token = yyDollar[1].token
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1320
		{
			yyVAL.token = yyDollar[1].token
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1336
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1342
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1365
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1369
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1373
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1383
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1387
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1391
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1423
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1427
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1431
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1447
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1457
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1477
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1481
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1505
		{
			yyVAL.queryexprs = nil
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1509
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1515
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1523
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1534
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1546
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 285:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1560
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 288:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 289:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1578
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 291:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 292:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 294:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1598
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 295:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1602
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 296:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1606
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1618
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1622
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1629
		{
			yyVAL.queryexpr = nil
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1633
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1639
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1643
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1649
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1653
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1664
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1669
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1680
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1684
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1724
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 320:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 321:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1736
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 323:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1750
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1758
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1766
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 333:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 334:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1796
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1836
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1842
		{
			yyVAL.queryexpr = nil
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1862
		{
			yyVAL.queryexpr = nil
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1866
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1872
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1876
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1892
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1906
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1922
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1932
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 364:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 366:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1972
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1977
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1984
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1988
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.elseexpr = Else{}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1998
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2008
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.elseexpr = Else{}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2024
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2028
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.elseexpr = Else{}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2038
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2044
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2048
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.elseexpr = Else{}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2064
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2068
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2084
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2088
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2104
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2114
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2118
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2124
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2128
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2134
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2138
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2144
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2184
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2194
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2204
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2210
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2216
		{
			yyVAL.token = Token{}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2220
		{
			yyVAL.token = yyDollar[1].token
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2226
		{
			yyVAL.token = Token{}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2230
		{
			yyVAL.token = yyDollar[1].token
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2236
		{
			yyVAL.token = Token{}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2240
		{
			yyVAL.token = yyDollar[1].token
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2246
		{
			yyVAL.token = Token{}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2250
		{
			yyVAL.token = yyDollar[1].token
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2256
		{
			yyVAL.token = yyDollar[1].token
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2260
		{
			yyVAL.token = yyDollar[1].token
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2266
		{
			yyVAL.token = Token{}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2270
		{
			yyVAL.token = yyDollar[1].token
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2276
		{
			yyVAL.token = Token{}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2280
		{
			yyVAL.token = yyDollar[1].token
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2286
		{
			yyVAL.token = Token{}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2290
		{
			yyVAL.token = yyDollar[1].token
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2296
		{
			yyVAL.token = yyDollar[1].token
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2300
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
