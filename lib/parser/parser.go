//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const TRIGGER = 57453
const FUNCTION = 57454
const AGGREGATE = 57455
const BEGIN = 57456
const RETURN = 57457
const IGNORE = 57458
const WITHIN = 57459
const VAR = 57460
const SHOW = 57461
const TIES = 57462
const NULLS = 57463
const TABLES = 57464
const VIEWS = 57465
const FIELDS = 57466
const CURSORS = 57467
const FUNCTIONS = 57468
const ROWS = 57469
const ERROR = 57470
const COUNT = 57471
const LISTAGG = 57472
const AGGREGATE_FUNCTION = 57473
const ANALYTIC_FUNCTION = 57474
const FUNCTION_NTH = 57475
const FUNCTION_WITH_INS = 57476
const COMPARISON_OP = 57477
const STRING_OP = 57478
const SUBSTITUTION_OP = 57479
const UMINUS = 57480
const UPLUS = 57481

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"TABLES",
	"VIEWS",
	"FIELDS",
	"CURSORS",
	"FUNCTIONS",
	"ROWS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2207

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 164,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 62,
	13, 164,
	15, 164,
	17, 164,
	19, 164,
	146, 164,
	-2, 1,
	-1, 64,
	147, 248,
	-2, 164,
	-1, 104,
	58, 144,
	59, 144,
	60, 144,
	-2, 155,
	-1, 158,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 240,
	88, 4,
	-2, 164,
	-1, 251,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	135, 0,
	142, 0,
	-2, 215,
	-1, 252,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	135, 0,
	142, 0,
	-2, 217,
	-1, 261,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	135, 0,
	142, 0,
	-2, 228,
	-1, 295,
	88, 1,
	-2, 164,
	-1, 305,
	48, 402,
	-2, 324,
	-1, 375,
	88, 1,
	-2, 164,
	-1, 382,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	135, 0,
	142, 0,
	-2, 229,
	-1, 404,
	84, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 475,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 478,
	88, 4,
	-2, 164,
	-1, 479,
	88, 4,
	-2, 164,
	-1, 546,
	13, 412,
	73, 412,
	146, 412,
	-2, 75,
	-1, 568,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 573,
	88, 4,
	-2, 164,
	-1, 574,
	88, 4,
	-2, 164,
	-1, 579,
	82, 1,
	86, 1,
	88, 1,
	-2, 164,
	-1, 626,
	88, 6,
	-2, 164,
	-1, 637,
	88, 4,
	-2, 164,
	-1, 688,
	88, 6,
	-2, 164,
	-1, 689,
	88, 6,
	-2, 164,
	-1, 693,
	88, 4,
	-2, 164,
	-1, 697,
	84, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 723,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 761,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 764,
	88, 8,
	-2, 164,
	-1, 769,
	88, 6,
	-2, 164,
	-1, 772,
	82, 4,
	86, 4,
	88, 4,
	-2, 164,
	-1, 793,
	88, 6,
	-2, 164,
	-1, 820,
	88, 6,
	-2, 164,
	-1, 824,
	84, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 826,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 829,
	88, 8,
	-2, 164,
	-1, 830,
	88, 8,
	-2, 164,
	-1, 844,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 853,
	82, 6,
	86, 6,
	88, 6,
	-2, 164,
	-1, 857,
	88, 8,
	-2, 164,
	-1, 870,
	88, 8,
	-2, 164,
	-1, 874,
	84, 8,
	86, 8,
	88, 8,
	-2, 164,
	-1, 899,
	82, 8,
	86, 8,
	88, 8,
	-2, 164,
}

const yyPrivate = 57344

const yyLast = 3601

var yyAct = [...]int{

	78, 23, 869, 879, 868, 845, 762, 685, 819, 818,
	692, 691, 101, 408, 747, 569, 305, 453, 147, 553,
	746, 778, 656, 498, 548, 219, 678, 374, 120, 516,
	93, 125, 126, 466, 360, 21, 469, 336, 468, 65,
	508, 283, 418, 323, 524, 304, 320, 199, 152, 412,
	745, 373, 22, 426, 425, 211, 313, 116, 554, 191,
	205, 216, 353, 23, 109, 85, 83, 316, 306, 66,
	301, 441, 359, 20, 180, 430, 1, 431, 432, 427,
	424, 446, 182, 428, 765, 119, 180, 241, 159, 368,
	176, 75, 60, 170, 104, 169, 168, 21, 197, 181,
	171, 172, 170, 564, 180, 188, 565, 207, 207, 171,
	172, 61, 621, 595, 584, 221, 207, 179, 118, 118,
	562, 121, 561, 229, 230, 231, 202, 547, 232, 201,
	684, 520, 511, 146, 242, 20, 444, 303, 430, 157,
	431, 432, 427, 424, 246, 170, 428, 169, 168, 223,
	835, 413, 171, 172, 60, 247, 179, 156, 834, 23,
	156, 815, 814, 813, 812, 179, 811, 245, 210, 789,
	242, 787, 43, 242, 786, 242, 429, 206, 206, 777,
	776, 276, 775, 279, 774, 690, 222, 668, 110, 667,
	106, 666, 107, 21, 105, 665, 258, 664, 643, 623,
	620, 615, 361, 43, 614, 207, 613, 607, 594, 586,
	207, 795, 585, 207, 583, 576, 560, 327, 558, 546,
	285, 286, 253, 504, 493, 492, 491, 490, 371, 334,
	345, 20, 110, 337, 273, 249, 531, 350, 275, 274,
	244, 23, 364, 278, 367, 259, 521, 465, 281, 282,
	60, 104, 790, 788, 753, 752, 751, 750, 315, 749,
	293, 365, 720, 351, 718, 717, 325, 711, 707, 259,
	704, 702, 482, 300, 452, 451, 414, 450, 449, 448,
	447, 341, 318, 319, 398, 201, 396, 381, 394, 347,
	346, 198, 112, 383, 384, 370, 23, 187, 385, 186,
	327, 185, 416, 421, 207, 349, 113, 193, 433, 235,
	826, 207, 179, 207, 723, 118, 475, 62, 393, 378,
	377, 112, 224, 156, 144, 850, 389, 435, 721, 291,
	21, 719, 60, 593, 366, 591, 454, 588, 769, 458,
	421, 421, 420, 689, 716, 454, 672, 688, 472, 626,
	759, 400, 372, 179, 344, 757, 715, 335, 436, 588,
	673, 423, 463, 179, 422, 112, 714, 473, 20, 480,
	481, 477, 403, 454, 206, 189, 23, 61, 670, 459,
	461, 440, 190, 442, 443, 713, 712, 60, 292, 179,
	483, 135, 671, 669, 663, 748, 179, 456, 179, 503,
	343, 167, 898, 886, 123, 23, 872, 76, 28, 860,
	21, 859, 852, 226, 836, 421, 831, 825, 518, 822,
	500, 771, 501, 70, 9, 499, 485, 499, 502, 499,
	207, 768, 767, 733, 722, 530, 701, 515, 471, 21,
	366, 700, 695, 640, 499, 327, 537, 179, 20, 179,
	639, 179, 486, 578, 517, 494, 122, 484, 458, 474,
	402, 421, 871, 830, 829, 225, 870, 60, 574, 821,
	28, 573, 526, 820, 519, 529, 23, 20, 124, 23,
	23, 506, 528, 527, 479, 694, 9, 227, 228, 693,
	556, 536, 478, 532, 325, 192, 60, 870, 857, 820,
	517, 136, 137, 140, 138, 139, 793, 693, 539, 540,
	541, 542, 327, 376, 637, 375, 391, 375, 295, 846,
	763, 421, 570, 207, 207, 592, 200, 284, 582, 876,
	875, 842, 740, 739, 699, 179, 698, 566, 567, 599,
	600, 571, 572, 871, 130, 131, 821, 694, 454, 376,
	590, 904, 421, 421, 589, 897, 866, 851, 624, 807,
	420, 606, 770, 597, 645, 617, 28, 60, 577, 23,
	60, 60, 890, 604, 23, 23, 596, 864, 840, 737,
	23, 505, 9, 896, 616, 611, 880, 884, 894, 895,
	880, 618, 619, 906, 893, 883, 421, 882, 628, 634,
	629, 630, 207, 207, 207, 587, 43, 510, 648, 128,
	129, 132, 133, 217, 21, 499, 653, 193, 659, 660,
	661, 99, 458, 647, 256, 655, 288, 23, 255, 257,
	287, 635, 355, 3, 892, 517, 641, 642, 23, 862,
	497, 676, 766, 369, 317, 675, 863, 179, 28, 865,
	243, 214, 20, 471, 631, 902, 646, 471, 881, 878,
	60, 662, 881, 207, 9, 60, 60, 525, 43, 179,
	603, 60, 290, 289, 703, 263, 262, 705, 179, 710,
	602, 601, 708, 100, 499, 213, 214, 215, 523, 23,
	23, 522, 406, 298, 23, 3, 725, 809, 23, 430,
	696, 431, 432, 28, 734, 728, 513, 514, 454, 80,
	81, 82, 780, 99, 84, 730, 731, 535, 60, 9,
	299, 534, 649, 438, 23, 743, 742, 203, 779, 60,
	338, 339, 755, 557, 563, 755, 555, 115, 754, 340,
	430, 758, 431, 432, 427, 424, 657, 658, 428, 114,
	760, 651, 652, 155, 773, 179, 735, 732, 644, 633,
	738, 627, 23, 625, 337, 23, 804, 805, 755, 756,
	23, 559, 802, 23, 785, 100, 445, 348, 727, 204,
	60, 60, 314, 28, 302, 60, 212, 312, 791, 60,
	236, 3, 134, 61, 23, 151, 806, 154, 117, 9,
	781, 782, 783, 784, 856, 755, 810, 792, 636, 294,
	327, 817, 28, 828, 8, 60, 419, 7, 6, 832,
	823, 23, 390, 833, 72, 23, 321, 23, 9, 837,
	23, 23, 322, 308, 802, 808, 178, 802, 802, 816,
	549, 550, 551, 552, 307, 23, 901, 838, 854, 877,
	220, 841, 802, 60, 23, 861, 60, 849, 23, 91,
	71, 60, 74, 67, 60, 802, 73, 68, 650, 63,
	102, 23, 512, 410, 887, 23, 885, 409, 802, 153,
	867, 405, 802, 28, 297, 60, 28, 28, 141, 142,
	143, 533, 145, 437, 108, 801, 903, 900, 17, 9,
	23, 16, 9, 9, 77, 127, 14, 802, 907, 470,
	467, 13, 60, 12, 10, 175, 60, 15, 60, 11,
	798, 60, 60, 681, 796, 679, 356, 430, 3, 431,
	432, 427, 424, 709, 354, 428, 60, 183, 184, 4,
	148, 2, 0, 102, 0, 60, 195, 196, 0, 60,
	218, 0, 0, 0, 175, 0, 0, 801, 0, 0,
	801, 801, 60, 0, 0, 0, 60, 803, 0, 0,
	0, 0, 0, 0, 0, 801, 28, 0, 0, 0,
	0, 28, 28, 233, 234, 0, 0, 28, 801, 0,
	0, 60, 9, 0, 0, 238, 0, 9, 9, 0,
	0, 801, 0, 9, 0, 801, 0, 248, 3, 0,
	250, 251, 252, 0, 254, 0, 0, 261, 218, 264,
	265, 266, 267, 268, 269, 270, 0, 0, 0, 803,
	801, 0, 803, 803, 28, 0, 0, 3, 843, 0,
	0, 847, 848, 0, 5, 28, 0, 803, 0, 0,
	9, 296, 0, 0, 0, 0, 855, 0, 0, 0,
	803, 9, 0, 0, 0, 0, 0, 324, 0, 873,
	0, 0, 0, 803, 0, 342, 0, 803, 0, 0,
	0, 0, 888, 0, 0, 0, 891, 0, 0, 0,
	352, 0, 0, 0, 0, 0, 28, 28, 0, 0,
	0, 28, 803, 0, 0, 28, 380, 0, 382, 177,
	0, 905, 9, 9, 0, 386, 0, 9, 387, 388,
	165, 9, 0, 164, 163, 166, 162, 0, 0, 0,
	401, 28, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 9, 177, 407,
	411, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 439, 0, 0, 0, 28,
	0, 0, 28, 0, 0, 0, 0, 28, 0, 0,
	28, 0, 0, 0, 0, 9, 0, 0, 9, 0,
	0, 160, 159, 9, 0, 0, 9, 170, 161, 169,
	168, 28, 0, 0, 171, 172, 0, 0, 476, 102,
	0, 0, 3, 0, 0, 0, 0, 9, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 28, 0,
	488, 0, 28, 0, 28, 0, 0, 28, 28, 0,
	0, 0, 495, 0, 9, 0, 0, 0, 9, 0,
	9, 0, 28, 9, 9, 0, 0, 507, 0, 680,
	0, 28, 0, 0, 0, 28, 0, 0, 9, 0,
	0, 0, 0, 0, 0, 0, 0, 9, 28, 0,
	0, 9, 28, 538, 0, 69, 0, 543, 544, 545,
	0, 0, 0, 0, 9, 324, 0, 0, 9, 0,
	0, 0, 0, 0, 177, 0, 0, 28, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 680, 680, 9, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 174, 173, 164, 163, 166, 162, 0,
	580, 0, 0, 0, 0, 415, 0, 581, 0, 0,
	0, 0, 0, 0, 0, 177, 680, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 608, 609, 610, 612,
	194, 455, 0, 0, 0, 605, 0, 0, 462, 0,
	464, 0, 0, 0, 680, 0, 0, 797, 0, 0,
	0, 0, 680, 160, 159, 0, 622, 0, 0, 170,
	161, 169, 168, 0, 632, 271, 171, 172, 272, 0,
	0, 638, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 177, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 680, 0, 0, 0, 680, 0, 797,
	0, 0, 797, 797, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 260, 797, 0, 165,
	174, 173, 164, 163, 166, 162, 680, 0, 0, 0,
	797, 0, 509, 0, 0, 311, 0, 0, 311, 0,
	0, 0, 0, 797, 0, 0, 0, 797, 706, 165,
	174, 173, 164, 163, 166, 162, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 575, 0, 0,
	0, 0, 797, 724, 102, 0, 0, 726, 729, 0,
	0, 0, 260, 0, 0, 736, 0, 0, 260, 260,
	160, 159, 0, 0, 0, 0, 170, 161, 169, 168,
	744, 0, 0, 171, 172, 272, 0, 0, 0, 0,
	0, 0, 0, 260, 395, 397, 399, 0, 0, 0,
	160, 159, 0, 0, 0, 0, 170, 161, 169, 168,
	0, 0, 0, 171, 172, 0, 311, 0, 311, 0,
	0, 0, 111, 0, 111, 111, 0, 0, 0, 0,
	44, 80, 81, 82, 794, 99, 84, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 674, 0, 0, 0, 0, 0, 0, 0, 94,
	677, 0, 839, 95, 0, 0, 0, 100, 0, 0,
	260, 0, 260, 0, 260, 0, 92, 88, 0, 0,
	0, 0, 0, 0, 0, 150, 97, 858, 0, 260,
	44, 80, 81, 82, 0, 99, 84, 61, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	79, 0, 889, 0, 149, 0, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 90, 98, 89, 56, 57,
	58, 0, 0, 0, 0, 0, 0, 741, 0, 86,
	87, 96, 103, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 95, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 88, 0, 0,
	0, 0, 0, 260, 0, 0, 97, 44, 80, 81,
	82, 0, 99, 84, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 311, 311,
	0, 0, 0, 0, 0, 0, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 90, 98, 89, 56, 57,
	58, 0, 0, 0, 0, 0, 0, 326, 0, 86,
	87, 96, 103, 0, 0, 0, 94, 0, 0, 0,
	95, 0, 0, 0, 100, 217, 0, 0, 0, 0,
	0, 0, 0, 92, 88, 0, 0, 0, 0, 0,
	260, 0, 0, 97, 44, 80, 81, 82, 0, 99,
	84, 61, 0, 0, 0, 0, 0, 311, 311, 311,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 46, 47, 48, 52, 49, 50,
	51, 59, 90, 98, 89, 56, 57, 58, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 87, 96, 103,
	0, 0, 0, 94, 0, 0, 0, 95, 0, 260,
	0, 100, 0, 0, 0, 0, 0, 0, 311, 0,
	92, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 44, 80, 81, 82, 0, 99, 84, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	45, 46, 47, 48, 52, 49, 50, 51, 59, 329,
	330, 328, 331, 332, 333, 0, 0, 0, 0, 0,
	0, 326, 0, 86, 87, 96, 103, 0, 0, 0,
	94, 0, 0, 0, 95, 0, 0, 0, 100, 0,
	43, 0, 0, 0, 0, 0, 0, 92, 88, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 44, 80,
	81, 82, 0, 99, 84, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 45, 46, 47,
	48, 52, 49, 50, 51, 59, 90, 98, 89, 56,
	57, 58, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 87, 96, 103, 0, 0, 0, 94, 0, 0,
	0, 95, 0, 0, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 44, 80, 81, 82, 0,
	99, 84, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 45, 46, 47, 48, 52, 49,
	50, 51, 59, 90, 98, 89, 56, 57, 58, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 87, 96,
	103, 0, 0, 0, 94, 0, 0, 0, 95, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 44, 80, 81, 82, 0, 99, 84, 61,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 45, 46, 47, 48, 52, 49, 50, 51, 59,
	329, 330, 328, 331, 332, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 87, 96, 103, 0, 0,
	0, 94, 0, 0, 0, 95, 0, 44, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 209, 92, 88,
	0, 0, 0, 0, 0, 0, 0, 208, 97, 44,
	80, 239, 82, 0, 99, 84, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 45, 46,
	47, 48, 52, 49, 50, 51, 59, 90, 98, 89,
	56, 57, 58, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 87, 96, 64, 0, 0, 0, 94, 0,
	0, 0, 95, 0, 0, 0, 100, 44, 0, 0,
	0, 0, 0, 0, 61, 92, 88, 0, 0, 35,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 24,
	0, 0, 25, 45, 46, 47, 48, 52, 49, 50,
	51, 59, 53, 54, 55, 56, 57, 58, 0, 0,
	0, 44, 0, 0, 0, 45, 46, 47, 48, 52,
	49, 50, 51, 59, 90, 98, 89, 56, 57, 58,
	309, 208, 0, 0, 0, 0, 43, 0, 86, 87,
	96, 103, 0, 800, 799, 0, 686, 0, 0, 0,
	0, 0, 27, 0, 0, 32, 30, 31, 29, 0,
	0, 0, 0, 0, 0, 0, 33, 34, 362, 363,
	0, 37, 38, 39, 40, 0, 0, 0, 687, 0,
	43, 26, 36, 45, 46, 47, 48, 52, 49, 50,
	51, 59, 53, 54, 55, 56, 57, 58, 44, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 0, 0,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	24, 0, 0, 25, 0, 0, 0, 45, 46, 47,
	48, 52, 49, 50, 51, 59, 53, 54, 55, 56,
	57, 58, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 0, 44,
	0, 0, 0, 0, 358, 357, 61, 41, 0, 0,
	0, 35, 0, 27, 0, 0, 32, 30, 31, 29,
	0, 24, 0, 0, 25, 0, 0, 33, 34, 362,
	363, 42, 37, 38, 39, 40, 0, 0, 0, 0,
	0, 0, 26, 36, 45, 46, 47, 48, 52, 49,
	50, 51, 59, 53, 54, 55, 56, 57, 58, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 0,
	44, 0, 0, 0, 0, 683, 682, 61, 686, 0,
	0, 0, 35, 0, 27, 0, 0, 32, 30, 31,
	29, 0, 24, 0, 0, 25, 0, 0, 33, 34,
	0, 0, 0, 37, 38, 39, 40, 0, 0, 0,
	687, 0, 0, 26, 36, 45, 46, 47, 48, 52,
	49, 50, 51, 59, 53, 54, 55, 56, 57, 58,
	0, 165, 174, 173, 164, 163, 166, 162, 0, 43,
	0, 0, 0, 0, 0, 0, 19, 18, 0, 41,
	0, 0, 0, 0, 0, 27, 0, 0, 32, 30,
	31, 29, 165, 174, 173, 164, 163, 166, 162, 33,
	34, 0, 0, 42, 37, 38, 39, 40, 0, 0,
	0, 0, 0, 899, 26, 36, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 53, 54, 55, 56, 57,
	58, 0, 160, 159, 0, 0, 0, 0, 170, 161,
	169, 168, 0, 0, 0, 171, 172, 237, 0, 0,
	0, 0, 165, 174, 173, 164, 163, 166, 162, 0,
	0, 0, 0, 160, 159, 0, 0, 0, 0, 170,
	161, 169, 168, 874, 0, 0, 171, 172, 165, 174,
	173, 164, 163, 166, 162, 0, 0, 0, 165, 174,
	173, 164, 163, 166, 162, 0, 0, 0, 0, 853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 844,
	0, 0, 165, 174, 173, 164, 163, 166, 162, 0,
	0, 0, 0, 160, 159, 0, 0, 0, 0, 170,
	161, 169, 168, 824, 0, 0, 171, 172, 0, 0,
	165, 174, 173, 164, 163, 166, 162, 0, 0, 160,
	159, 0, 0, 0, 0, 170, 161, 169, 168, 160,
	159, 772, 171, 172, 0, 170, 161, 169, 168, 0,
	0, 0, 171, 172, 44, 165, 174, 173, 164, 163,
	166, 162, 0, 160, 159, 0, 0, 0, 0, 170,
	161, 169, 168, 309, 208, 0, 171, 172, 764, 0,
	165, 174, 173, 164, 163, 166, 162, 0, 0, 0,
	0, 160, 159, 0, 0, 0, 0, 170, 161, 169,
	168, 761, 0, 0, 171, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 174, 173, 164, 163,
	166, 162, 0, 0, 0, 0, 160, 159, 0, 0,
	0, 0, 170, 161, 169, 168, 697, 0, 0, 171,
	172, 165, 174, 173, 164, 163, 166, 162, 0, 0,
	0, 160, 159, 0, 0, 0, 0, 170, 161, 169,
	168, 284, 0, 0, 171, 172, 0, 0, 0, 0,
	45, 46, 47, 48, 52, 49, 50, 51, 59, 53,
	54, 55, 56, 57, 58, 0, 160, 159, 0, 0,
	0, 0, 170, 161, 169, 168, 310, 0, 0, 171,
	172, 165, 174, 173, 164, 163, 166, 162, 0, 0,
	0, 0, 160, 159, 0, 0, 0, 0, 170, 161,
	169, 168, 579, 0, 0, 171, 172, 165, 174, 173,
	164, 163, 166, 162, 0, 0, 0, 165, 174, 173,
	164, 163, 166, 162, 0, 0, 0, 0, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 165, 174, 173, 164, 163, 166, 162, 0, 0,
	0, 0, 160, 159, 0, 0, 0, 0, 170, 161,
	169, 168, 404, 0, 0, 171, 172, 165, 174, 173,
	164, 163, 166, 162, 0, 0, 0, 0, 160, 159,
	0, 0, 0, 0, 170, 161, 169, 168, 160, 159,
	240, 171, 172, 0, 170, 161, 169, 168, 0, 0,
	0, 171, 172, 165, 174, 173, 164, 163, 166, 162,
	0, 0, 160, 159, 0, 0, 0, 0, 170, 161,
	169, 168, 0, 44, 158, 171, 172, 165, 174, 173,
	164, 163, 166, 162, 0, 0, 0, 0, 160, 159,
	0, 0, 0, 79, 170, 161, 169, 168, 0, 0,
	0, 171, 172, 165, 489, 173, 164, 163, 166, 162,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 159, 0, 0, 0, 0,
	170, 161, 169, 168, 0, 0, 0, 171, 172, 165,
	379, 173, 164, 163, 166, 162, 44, 0, 160, 159,
	0, 0, 0, 0, 170, 161, 169, 168, 0, 0,
	0, 171, 172, 0, 0, 0, 79, 44, 0, 0,
	0, 0, 0, 0, 160, 159, 0, 0, 0, 0,
	170, 161, 169, 168, 0, 434, 0, 171, 172, 45,
	46, 47, 48, 52, 49, 50, 51, 59, 53, 54,
	55, 56, 57, 58, 0, 0, 0, 0, 0, 0,
	160, 159, 0, 0, 0, 460, 170, 161, 169, 168,
	0, 0, 0, 171, 172, 44, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 53, 54, 55, 56, 57,
	58, 165, 174, 417, 164, 163, 166, 162, 0, 0,
	0, 0, 457, 0, 0, 0, 0, 44, 0, 0,
	0, 0, 45, 46, 47, 48, 52, 49, 50, 51,
	59, 53, 54, 55, 56, 57, 58, 208, 44, 0,
	280, 0, 0, 45, 46, 47, 48, 52, 49, 50,
	51, 59, 53, 54, 55, 56, 57, 58, 44, 0,
	277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 159, 0, 44, 0, 0, 170, 161,
	169, 168, 61, 0, 0, 171, 172, 0, 0, 0,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 45, 46, 47, 48, 52, 49, 50, 51, 59,
	53, 54, 55, 56, 57, 58, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 46, 47, 48, 52, 49, 50,
	51, 59, 53, 54, 55, 56, 57, 58, 0, 0,
	0, 0, 0, 0, 45, 46, 47, 48, 52, 49,
	50, 51, 59, 53, 54, 55, 56, 57, 58, 0,
	0, 0, 0, 0, 45, 46, 47, 48, 52, 49,
	50, 51, 59, 53, 54, 55, 56, 57, 58, 0,
	0, 45, 46, 47, 48, 52, 49, 50, 51, 59,
	53, 54, 55, 56, 57, 58, 45, 46, 47, 48,
	52, 49, 50, 51, 59, 53, 54, 55, 56, 57,
	58,
}
var yyPact = [...]int{

	2646, -1000, 177, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2218, 2044,
	-1000, -1000, 175, 160, 719, 707, 782, 3451, -1000, 366,
	3466, 3466, 513, -1000, -1000, 780, 379, 2044, 2044, 2044,
	196, 1606, 789, 728, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	186, -1000, 2646, 3129, 1957, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 186, -1000, -1000, -47, -69,
	-1000, -1000, -1000, -1000, -1000, -1000, 2044, 2044, 155, 153,
	151, -1000, 2044, 240, 146, 2044, 2044, 3466, 145, -1000,
	-1000, 442, 3153, 1957, 688, 759, 3393, 2283, 772, 627,
	541, -1000, 533, 2044, 3466, 3393, -1000, -1, 185, -1000,
	375, -1000, 3466, 3466, 3466, -1000, -1000, 3466, -1000, -1000,
	-1000, -1000, 2044, 2044, 167, -1000, -1000, -1000, -1000, -1000,
	776, 3153, 2647, 3153, 2305, 3093, 23, 586, 782, -1000,
	-1000, -1000, -1000, -6, 3466, -1000, 2044, -1000, 2646, 2044,
	2044, 2044, 550, 2044, 560, 123, 2044, 614, 2044, 2044,
	2044, 2044, 2044, 2044, 2044, 1268, 87, 92, 91, 219,
	3434, 1783, 3414, -1000, -1000, 2044, 541, 541, 443, 123,
	123, 562, 611, -1000, -1000, 1056, -1000, 259, 541, 432,
	2044, 87, 648, 678, 3393, 768, -13, -1000, -1000, 2920,
	773, 764, 2920, 583, 583, 583, 1870, -1000, 82, -1000,
	1415, 211, 703, 782, 2044, 309, 208, 144, 143, -1000,
	-1000, -1000, 757, 3153, 3153, 704, 3466, 2044, 3153, 2044,
	2504, 3466, 782, 3466, 25, 579, 728, 206, 3153, 431,
	4, -48, -48, 612, 3215, 2044, 123, 2044, -1000, 1957,
	-1000, -48, 123, 123, -39, -39, -1000, -1000, -1000, 3317,
	1056, -1000, 2044, -1000, -1000, -1000, -1000, -1000, 2044, -1000,
	-1000, 2044, 1696, 430, 2044, -1000, -1000, 123, 142, 140,
	138, 550, -1000, 2044, 372, 2646, 3067, 646, 2044, 2131,
	130, 3361, 3282, 3393, 764, 26, -1000, 3303, -1000, -1000,
	2417, -1000, 2920, 683, 2044, -1000, 219, -1000, 219, 219,
	-1000, -14, 754, -1000, 3153, -1000, -1000, -65, 134, 133,
	132, 131, 129, 128, -1000, 3466, 533, -1000, 3246, 3209,
	3282, -1000, 3153, 533, 3466, 533, 100, 3466, 782, -1000,
	-1000, -1000, 3153, 371, 176, -1000, -1000, 2218, 2044, -1000,
	-1000, -1000, -1000, -1000, 405, -1000, -16, 397, 3466, 3466,
	-1000, 126, 3466, 369, 429, 2646, 2044, -1000, -1000, 2044,
	3179, -1000, -48, -1000, -1000, -1000, 80, 79, 78, 77,
	367, 2044, 3043, 575, 99, -1000, 99, -1000, 99, -1000,
	335, 76, 501, -1000, 2646, -1000, 2044, 1445, -1000, -18,
	663, 3153, -1000, 123, 3282, -1000, -1000, 3466, 772, -19,
	104, -77, -1000, -1000, 643, 640, 617, 617, 650, 2920,
	-1000, -1000, -1000, -1000, 3466, 89, 764, 680, 675, 3153,
	592, -1000, -1000, 592, 1870, 3466, 1783, 541, 541, 541,
	2044, 2044, 2044, 72, -23, -1000, 809, 3466, 701, -1000,
	3282, 696, -1000, 71, -1000, 749, 69, -28, -1000, -1000,
	-30, 699, -44, -1000, 454, 2504, 3033, 438, 2504, 2504,
	384, 381, 533, 68, 487, 365, -1000, 3007, 1056, 2044,
	-1000, -1000, -1000, -1000, -1000, 3153, 2044, 123, 67, -36,
	65, 62, -1000, 531, 220, -1000, 442, 3153, -1000, 534,
	215, 2131, 212, -1000, -1000, -1000, 61, -37, -1000, 764,
	3282, 2044, 2920, 2920, 633, -1000, 632, 622, 617, -1000,
	-1000, -1000, -1000, -1000, 2044, 2044, -1000, -1000, 60, 2044,
	2044, 1696, 2044, 59, 57, 54, 742, 3466, -1000, -1000,
	-1000, 3282, 3282, 53, -38, 2044, 52, 3466, 741, 235,
	739, 782, 782, 2044, 737, 782, -1000, -1000, 2504, 428,
	2044, 362, 355, 2504, 2504, 51, 736, -1000, 483, 2646,
	1056, 2947, -1000, -1000, 123, -1000, -1000, -1000, 682, -1000,
	-1000, -1000, -1000, 720, 595, 3282, -1000, -1000, 3153, 650,
	691, 2920, 2920, 2920, 613, 3153, -1000, 292, 50, 48,
	44, 42, 40, 291, 276, 244, 533, -1000, -1000, -1000,
	809, 3466, 3153, -1000, -1000, 533, 2575, 233, -1000, -1000,
	-1000, 699, 3153, 229, 38, 403, 354, 2504, 2921, 453,
	451, 353, 348, -1000, 125, -1000, 467, -1000, -1000, 124,
	-1000, -1000, -1000, 123, -1000, -1000, -1000, 2044, 122, 691,
	878, 650, 2920, 121, 284, 283, 264, 254, 242, 119,
	118, 210, 116, 207, -1000, -1000, -1000, -1000, 346, 174,
	-1000, -1000, 2218, 2044, -1000, -1000, 2044, 2044, 2575, 2575,
	735, 345, 421, 2504, 2044, 499, -1000, 2504, -1000, -1000,
	450, 449, 533, -1000, 688, -1000, 3153, 3466, -1000, 2044,
	650, 294, 113, 111, 110, 109, 108, 294, 294, 253,
	294, 248, -1000, 2575, 2886, 436, 2861, 20, 578, 3153,
	344, 343, 224, 481, 333, -1000, 2826, -1000, 438, -1000,
	-1000, 37, 35, 33, 3153, 32, -1000, 689, 670, 294,
	294, 294, 294, 294, 27, 688, 24, 107, 22, 106,
	-1000, 2575, 420, 2044, 2373, 3466, 3466, -1000, -1000, 2575,
	-1000, 478, 2504, -1000, -1000, -1000, -1000, -1000, -1000, 655,
	2044, 19, 17, 16, 15, 14, -1000, -1000, 294, -1000,
	294, 387, 331, 2575, 2798, 329, 170, -1000, -1000, 2218,
	2044, -1000, -1000, -1000, 377, 376, 328, -1000, 465, 2131,
	-1000, -1000, -1000, -1000, -1000, -1000, 11, 3, 326, 413,
	2575, 2044, 498, -1000, 2575, 448, 2373, 2774, 435, 2373,
	2373, -1000, -1000, 198, -1000, -1000, 476, 324, -1000, 2764,
	-1000, 436, -1000, -1000, 2373, 412, 2044, 323, 321, -1000,
	571, -1000, 475, 2575, -1000, 380, 318, 2373, 2738, 447,
	446, -1000, 584, 521, 519, 508, -1000, 464, 315, 411,
	2373, 2044, 492, -1000, 2373, -1000, -1000, 569, 518, -1000,
	512, 504, -1000, -1000, -1000, -1000, 474, 314, -1000, 2678,
	-1000, 435, 580, -1000, -1000, -1000, -1000, -1000, 470, 2373,
	-1000, -1000, 516, -1000, -1000, 461, -1000, -1000,
}
var yyPgo = [...]int{

	0, 76, 62, 26, 211, 632, 202, 941, 72, 940,
	34, 939, 934, 926, 925, 130, 7, 924, 923, 920,
	919, 917, 914, 58, 19, 24, 913, 911, 36, 910,
	909, 38, 33, 906, 905, 904, 901, 898, 1044, 71,
	64, 894, 55, 56, 893, 891, 21, 884, 40, 881,
	52, 879, 48, 69, 66, 65, 39, 850, 43, 30,
	23, 13, 877, 873, 872, 868, 1285, 867, 866, 863,
	862, 836, 423, 860, 859, 49, 20, 50, 14, 857,
	855, 3, 849, 846, 70, 68, 60, 844, 16, 833,
	22, 832, 826, 824, 12, 41, 822, 29, 25, 45,
	17, 46, 818, 817, 816, 42, 814, 27, 51, 10,
	11, 8, 9, 2, 4, 47, 809, 15, 808, 6,
	807, 5, 804, 0, 91, 18, 407, 798, 57, 61,
	59, 54, 44, 53, 67, 797, 37, 401,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 26, 27, 27, 27,
	27, 28, 29, 29, 30, 31, 31, 32, 32, 32,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 34, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 37, 37, 37, 38,
	39, 39, 39, 39, 40, 40, 41, 42, 42, 43,
	43, 44, 44, 45, 45, 46, 46, 47, 47, 47,
	48, 48, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 53, 53, 53, 53, 54, 55, 56, 56,
	56, 56, 56, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 64, 64,
	64, 65, 65, 66, 67, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 69, 69, 69,
	69, 69, 69, 69, 70, 70, 70, 70, 71, 71,
	72, 72, 73, 73, 73, 73, 73, 74, 74, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	76, 77, 77, 78, 78, 79, 79, 80, 80, 80,
	81, 81, 81, 82, 82, 83, 83, 84, 84, 85,
	85, 85, 87, 88, 88, 88, 88, 88, 88, 88,
	89, 89, 89, 89, 89, 89, 90, 90, 91, 91,
	92, 92, 92, 93, 94, 94, 95, 95, 96, 96,
	97, 97, 98, 98, 99, 99, 86, 86, 100, 100,
	101, 101, 102, 102, 102, 102, 103, 104, 105, 105,
	106, 106, 107, 107, 108, 108, 109, 109, 110, 110,
	111, 111, 112, 112, 113, 113, 114, 114, 115, 115,
	116, 116, 117, 117, 118, 118, 119, 119, 120, 120,
	121, 121, 122, 122, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	124, 125, 125, 126, 127, 127, 128, 128, 129, 129,
	130, 130, 131, 131, 132, 132, 133, 133, 134, 134,
	135, 135, 136, 136, 137, 137,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 2, 2, 2, 4,
	2, 2, 2, 2, 2, 4, 2, 3, 4, 5,
	5, 4, 4, 4, 1, 1, 3, 0, 2, 0,
	2, 0, 3, 0, 2, 0, 3, 0, 3, 4,
	0, 2, 0, 2, 0, 2, 6, 9, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	1, 3, 1, 3, 2, 4, 1, 1, 0, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 4,
	4, 5, 6, 6, 3, 4, 6, 4, 3, 4,
	4, 6, 4, 4, 6, 4, 2, 3, 3, 3,
	3, 3, 2, 2, 3, 3, 2, 2, 0, 1,
	4, 4, 5, 5, 5, 5, 1, 5, 10, 8,
	9, 9, 9, 9, 9, 8, 8, 10, 8, 10,
	2, 1, 5, 0, 3, 2, 5, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 1, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 3, 1, 1, 3,
	4, 5, 6, 7, 5, 6, 2, 4, 1, 1,
	1, 3, 1, 5, 0, 1, 4, 5, 0, 2,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	5, 6, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 0, 1,
	0, 1, 0, 1, 0, 1, 1, 1, 0, 1,
	0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -102, -103, -106, -72,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -123, 26, 29, 118, 89, -126, 95,
	93, 94, 92, 103, 104, 16, 119, 108, 109, 110,
	111, 83, 107, 73, 4, 120, 121, 122, 123, 125,
	126, 127, 124, 129, 130, 131, 132, 133, 134, 128,
	-124, 11, 140, -57, 146, -56, -53, -69, -67, -66,
	-72, -73, -93, -68, -70, -124, -126, -35, -123, 24,
	5, 6, 7, -54, 10, -55, 143, 144, 81, 131,
	129, -74, 80, -59, 63, 67, 145, 90, 130, 9,
	71, -94, -57, 146, -39, 19, 15, 17, -41, -40,
	13, -66, 146, 146, 30, 30, -128, -127, -124, -128,
	-123, -124, 90, 38, 112, -123, -123, -34, 96, 97,
	31, 32, 98, 99, 12, 12, 122, 123, 125, 126,
	124, -57, -57, -57, 128, -57, -124, -125, -9, 118,
	89, 6, -52, -51, -135, 25, 137, -1, 85, 136,
	135, 142, 70, 68, 67, 64, 69, -137, 144, 143,
	141, 148, 149, 66, 65, -57, -98, -38, -71, -50,
	151, 146, 151, -57, -57, 146, 146, 146, -94, 135,
	142, -130, -137, 67, -66, -57, -57, -123, 146, -115,
	84, -98, -46, 39, 20, -86, -84, -123, 24, 14,
	-86, -42, 14, 58, 59, 60, -129, 72, -71, -98,
	-57, -123, -84, 150, 137, 90, 38, 112, 113, -123,
	-123, -123, -123, -57, -57, 142, 14, 150, -57, 6,
	87, 64, 150, 64, -124, -125, 150, -123, -57, -1,
	-57, -57, -57, -130, -57, 68, 64, 69, -59, 146,
	-66, -57, 62, 61, -57, -57, -57, -57, -57, -57,
	-57, 147, 150, 147, 147, 147, -123, 6, -129, -123,
	6, -129, -129, -95, 84, -59, -59, 68, 64, 62,
	61, 70, 129, -129, -116, 86, -57, -47, 45, 42,
	-85, -84, 16, 150, -99, -88, -85, -87, -89, 23,
	146, -66, 14, -43, 18, -99, -134, 61, -134, -134,
	-101, -92, -91, -58, -57, -75, 141, -123, 131, 129,
	130, 132, 133, 134, 147, 146, -136, 22, 27, 28,
	36, -128, -57, 91, 146, 22, 146, 146, 20, -53,
	-123, -98, -57, -2, -12, -5, -13, 81, 80, -8,
	-10, -6, 105, 106, -123, -125, -124, -123, 64, 64,
	-52, 22, 146, -108, -107, 86, 82, -54, -55, 65,
	-57, -59, -57, -59, -59, -98, -71, -71, -71, -58,
	-96, 86, -57, -59, 146, -66, 146, -66, 146, -66,
	-130, -71, 88, -1, 85, -49, 46, -57, -61, -62,
	-63, -57, -75, 21, 146, -38, -123, 22, -105, -104,
	-56, -123, -86, -43, 54, -131, -133, 53, 57, 150,
	49, 51, 52, -123, 22, -88, -99, -44, 40, -57,
	-40, -39, -40, -40, 150, 22, 146, 146, 146, 146,
	146, 146, 146, -100, -123, -38, -23, 146, -123, -56,
	146, -56, -38, -100, -38, 147, -32, -29, -31, -28,
	-30, -124, -123, -125, 88, 140, -57, -94, 87, 87,
	-123, -123, 146, -100, 88, -108, -1, -57, -57, 65,
	147, 147, 147, 147, 88, -57, 85, 65, -60, -59,
	-60, -60, 93, 64, 147, 80, -1, -57, -48, 47,
	73, 150, -64, 43, 44, -60, -97, -56, -123, -42,
	150, 142, 48, 48, -132, 50, -132, -131, -133, -99,
	-123, 147, -43, -45, 41, 42, -101, -123, -71, -129,
	-129, -129, -129, -71, -71, -71, 147, 150, -25, 31,
	32, 33, 34, -24, -23, 35, -97, 37, 147, 22,
	147, 150, 150, 35, 147, 150, 83, -2, 85, -117,
	84, -2, -2, 87, 87, -38, 147, 81, 88, 85,
	-57, -57, -59, 147, 150, 147, 147, 74, 117, -115,
	-48, 120, -61, 121, 147, 150, -43, -105, -57, -88,
	-88, 48, 48, 48, -132, -57, -98, 147, -71, -71,
	-71, -58, -71, 147, 147, 147, -136, -100, -56, -56,
	147, 150, -57, 147, -123, 22, 114, 22, -28, -31,
	-31, -124, -57, 22, -32, -2, -118, 86, -57, 88,
	88, -2, -2, 147, 22, 81, -1, -95, -60, 40,
	-65, 31, 32, 21, -38, -97, -90, 55, 56, -88,
	-88, -88, 48, 102, 147, 147, 147, 147, 147, 102,
	102, 116, 102, 116, -38, -25, -24, -38, -3, -14,
	-5, -18, 81, 80, -15, -16, 83, 115, 114, 114,
	147, -110, -109, 86, 82, 88, -2, 85, 83, 83,
	88, 88, 146, -107, 146, -60, -57, 146, -90, 55,
	-88, 146, 102, 102, 102, 102, 102, 146, 146, 121,
	146, 121, 88, 140, -57, -94, -57, -124, -125, -57,
	-3, -3, 22, 88, -110, -2, -57, 80, -2, 83,
	83, -38, -46, -100, -57, -77, -76, -78, 101, 146,
	146, 146, 146, 146, -76, -78, -77, 102, -76, 102,
	-3, 85, -119, 84, 87, 64, 64, 88, 88, 114,
	81, 88, 85, -117, 147, 147, 147, 147, -46, 39,
	42, -77, -77, -77, -77, -76, 147, 147, 146, 147,
	146, -3, -120, 86, -57, -4, -17, -5, -19, 81,
	80, -15, -16, -6, -123, -123, -3, 81, -2, 42,
	-98, 147, 147, 147, 147, 147, -77, -76, -112, -111,
	86, 82, 88, -3, 85, 88, 140, -57, -94, 87,
	87, 88, -109, -61, 147, 147, 88, -112, -3, -57,
	80, -3, 83, -4, 85, -121, 84, -4, -4, -79,
	127, 81, 88, 85, -119, -4, -122, 86, -57, 88,
	88, -80, 68, 75, 6, 78, 81, -3, -114, -113,
	86, 82, 88, -4, 85, 83, 83, -82, 75, -81,
	6, 78, 76, 76, 79, -111, 88, -114, -4, -57,
	80, -4, 65, 76, 76, 77, 79, 81, 88, 85,
	-121, -83, 75, -81, 81, -4, 77, -113,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 314,
	41, 42, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 115, 73, 74, 0, 0, 0, 0, 0,
	0, 0, 34, 410, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, -2, 0, -2, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 178, 0,
	170, 171, 172, 173, 174, 175, 0, 0, 0, 385,
	383, 256, 314, 400, 0, 0, 0, 0, 384, 176,
	177, 0, 315, 164, -2, 0, 0, 0, 147, 0,
	398, 145, 164, 248, 0, 0, 69, 396, 394, 70,
	0, 72, 0, 0, 0, 93, 94, 0, 116, 117,
	118, 119, 0, 0, 0, 126, 131, 132, 133, 134,
	0, 127, 128, 130, 136, 0, 193, 0, 0, 32,
	33, 35, 165, 168, 0, 411, 0, 3, -2, 0,
	414, 415, 400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 242, 243, 248, 398, 398, 0, 414,
	415, 0, 0, 401, 236, 246, 247, 0, 398, 360,
	0, 0, 157, 0, 0, 0, 326, 287, 288, 0,
	0, 149, 0, 408, 408, 408, 0, 399, 0, 249,
	322, 412, 0, 0, 0, 0, 0, 0, 0, 95,
	100, 114, 0, 120, 121, 0, 0, 0, 137, 171,
	-2, 0, 0, 0, 0, 0, 410, 0, 393, 344,
	214, -2, -2, 0, 0, 0, 0, 0, 224, 164,
	199, -2, 0, 0, 237, 238, 239, 240, 241, 244,
	245, 196, 0, 198, 213, 251, 179, 181, 248, 180,
	182, 248, 248, 318, 0, 216, 218, 0, 0, 0,
	0, 400, 124, 248, 0, -2, 0, 162, 0, 0,
	164, 289, 0, 0, 149, -2, 293, 294, 297, 298,
	164, 292, 0, 151, 0, 148, 0, 409, 0, 0,
	146, 330, 310, 312, 308, 309, 197, 178, 385, 383,
	384, 386, 387, 388, 250, 0, 164, 413, 0, 0,
	0, 397, 395, 164, 0, 164, 0, 0, 0, 125,
	135, 129, 138, 0, 0, 36, 37, 0, 314, 46,
	47, 48, 23, 24, 0, 392, 391, 0, 0, 0,
	169, 0, 0, 0, 344, -2, 0, 219, 220, 0,
	0, 225, -2, 230, 233, 323, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 227, 164, 232, 164, 235,
	0, 0, 0, 361, -2, 139, 0, 160, 156, 202,
	208, 206, 207, 0, 0, 334, 290, 0, 147, 338,
	0, 178, 327, 340, 0, 0, 404, 404, 402, 0,
	403, 406, 407, 295, 0, 402, 149, 153, 0, 150,
	141, 144, 142, 143, 0, 0, 248, 398, 398, 398,
	248, 248, 248, 0, 328, 77, 87, 0, 83, 80,
	0, 0, 92, 0, 99, 0, 0, 107, 108, 102,
	105, 101, 0, 96, 0, -2, 0, 0, -2, -2,
	0, 0, 164, 0, 0, 0, 345, 0, 221, 0,
	252, 253, 254, 255, 313, 319, 0, 0, 0, 200,
	0, 0, 122, 0, 257, 40, 358, 163, 158, 160,
	0, 0, 204, 209, 210, 332, 0, 320, 291, 149,
	0, 0, 0, 0, 0, 405, 0, 0, 404, 325,
	296, 299, 341, 140, 0, 0, 331, 311, 0, 248,
	248, 248, 248, 0, 0, 0, -2, 0, 78, 88,
	89, 0, 0, 0, 85, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 27, 5, -2, 364,
	0, 0, 0, -2, -2, 0, 0, 38, 0, -2,
	222, 316, 223, 226, 0, 231, 234, 123, 0, 359,
	159, 161, 203, 0, 164, 0, 336, 339, 337, 300,
	402, 0, 0, 0, 0, 154, 152, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 329, 90, 91,
	87, 0, 84, 81, 82, 164, -2, 0, 103, 109,
	106, 0, 104, 0, 0, 348, 0, -2, 0, 0,
	0, 0, 0, 166, 0, 39, 342, 317, 201, 0,
	205, 211, 212, 0, 335, 321, 301, 0, 0, 402,
	402, 304, 0, 0, 252, 253, 254, 255, 257, 0,
	0, 0, 0, 0, 76, 79, 86, 98, 0, 0,
	49, 50, 0, 314, 61, 62, 0, 54, -2, -2,
	0, 0, 348, -2, 0, 0, 365, -2, 28, 29,
	0, 0, 164, 343, 155, 333, 306, 0, 302, 0,
	305, 273, 0, 0, 0, 0, 0, 273, 273, 0,
	273, 0, 110, -2, 0, 0, 0, 193, 0, 55,
	0, 0, 0, 0, 0, 349, 0, 45, 362, 30,
	31, 0, 0, 0, 303, 0, 271, 155, 0, 273,
	273, 273, 273, 273, 0, 155, 0, 0, 0, 0,
	7, -2, 368, 0, -2, 0, 0, 111, 112, -2,
	43, 0, -2, 363, 167, 258, 307, 259, 270, 0,
	0, 0, 0, 0, 0, 0, 265, 266, 273, 268,
	273, 352, 0, -2, 0, 0, 0, 56, 57, 0,
	314, 66, 67, 68, 0, 0, 0, 44, 346, 0,
	274, 260, 261, 262, 263, 264, 0, 0, 0, 352,
	-2, 0, 0, 369, -2, 0, -2, 0, 0, -2,
	-2, 113, 347, 156, 267, 269, 0, 0, 353, 0,
	60, 366, 51, 9, -2, 372, 0, 0, 0, 272,
	0, 58, 0, -2, 367, 356, 0, -2, 0, 0,
	0, 275, 0, 0, 0, 0, 59, 350, 0, 356,
	-2, 0, 0, 373, -2, 52, 53, 0, 0, 284,
	0, 0, 277, 278, 279, 351, 0, 0, 357, 0,
	65, 370, 0, 283, 280, 281, 282, 63, 0, -2,
	371, 276, 0, 286, 64, 354, 285, 355,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 145, 3, 3, 3, 149, 3, 3,
	146, 147, 141, 144, 150, 143, 151, 148, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 140,
	3, 142,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:220
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:225
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:230
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:237
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:241
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:247
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:257
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:267
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:271
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:275
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:279
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:283
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:287
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:331
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:341
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:353
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:357
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:363
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:367
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:373
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:377
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:383
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:393
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:409
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:419
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:451
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:475
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:497
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:501
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:533
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:561
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:569
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:577
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:585
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:595
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:599
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:605
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:609
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:615
		{
			yyVAL.expression = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:619
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:623
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:627
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:631
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:637
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:641
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:645
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:649
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:653
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 97:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:659
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:663
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:667
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:671
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:677
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:683
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:687
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:693
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:699
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:703
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:709
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:713
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:717
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:723
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 111:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:727
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:731
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:735
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:739
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:745
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:749
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:753
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:757
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:761
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:765
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:769
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:775
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:779
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:783
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:789
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:793
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:797
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:801
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:805
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:809
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:813
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:817
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:821
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:825
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:829
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[4].identifier}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:835
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:839
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:843
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:849
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:861
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:871
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:880
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:889
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:900
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:910
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:916
		{
			yyVAL.queryexpr = nil
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:920
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:926
		{
			yyVAL.queryexpr = nil
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:930
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:936
		{
			yyVAL.queryexpr = nil
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:940
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:946
		{
			yyVAL.queryexpr = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:950
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:956
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:966
		{
			yyVAL.queryexpr = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:970
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:974
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:984
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:990
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:994
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.queryexpr = nil
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 167:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1034
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1038
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1046
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1068
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1072
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1076
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1114
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1118
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1122
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1134
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1168
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1188
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.token = Token{}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1208
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1212
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1222
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1234
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1257
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1261
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1265
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1273
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 226:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1347
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1351
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1355
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexprs = nil
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1405
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1409
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1420
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1424
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1428
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1438
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 258:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1442
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1448
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 260:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1452
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 261:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1456
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 262:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1460
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 263:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1464
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 265:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 268:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 269:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1494
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1504
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 273:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1511
		{
			yyVAL.queryexpr = nil
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1515
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1521
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1525
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1535
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1540
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1546
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1551
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1556
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1572
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1576
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1592
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1596
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1600
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1606
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1650
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1654
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1688
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = nil
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1728
		{
			yyVAL.queryexpr = nil
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1738
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1758
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1768
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1772
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1778
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1782
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 332:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 336:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1828
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1832
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1838
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1843
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.elseexpr = Else{}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.elseexpr = Else{}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.elseexpr = Else{}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1910
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1914
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.elseexpr = Else{}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1940
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1960
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1964
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1970
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1974
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1984
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2010
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2030
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2038
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2076
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2092
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2112
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2118
		{
			yyVAL.token = Token{}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2122
		{
			yyVAL.token = yyDollar[1].token
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2128
		{
			yyVAL.token = Token{}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2132
		{
			yyVAL.token = yyDollar[1].token
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2138
		{
			yyVAL.token = Token{}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.token = yyDollar[1].token
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.token = Token{}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.token = yyDollar[1].token
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.token = yyDollar[1].token
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.token = yyDollar[1].token
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.token = Token{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.token = yyDollar[1].token
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.token = Token{}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2182
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.token = Token{}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.token = yyDollar[1].token
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.token = yyDollar[1].token
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2202
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
