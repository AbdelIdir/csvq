// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const AS = 57369
const DUAL = 57370
const STDIN = 57371
const RECURSIVE = 57372
const CREATE = 57373
const ADD = 57374
const DROP = 57375
const ALTER = 57376
const TABLE = 57377
const FIRST = 57378
const LAST = 57379
const AFTER = 57380
const BEFORE = 57381
const DEFAULT = 57382
const RENAME = 57383
const TO = 57384
const VIEW = 57385
const ORDER = 57386
const GROUP = 57387
const HAVING = 57388
const BY = 57389
const ASC = 57390
const DESC = 57391
const LIMIT = 57392
const OFFSET = 57393
const PERCENT = 57394
const JOIN = 57395
const INNER = 57396
const OUTER = 57397
const LEFT = 57398
const RIGHT = 57399
const FULL = 57400
const CROSS = 57401
const ON = 57402
const USING = 57403
const NATURAL = 57404
const UNION = 57405
const INTERSECT = 57406
const EXCEPT = 57407
const ALL = 57408
const ANY = 57409
const EXISTS = 57410
const IN = 57411
const AND = 57412
const OR = 57413
const NOT = 57414
const BETWEEN = 57415
const LIKE = 57416
const IS = 57417
const NULL = 57418
const DISTINCT = 57419
const WITH = 57420
const RANGE = 57421
const UNBOUNDED = 57422
const PRECEDING = 57423
const FOLLOWING = 57424
const CURRENT = 57425
const ROW = 57426
const CASE = 57427
const IF = 57428
const ELSEIF = 57429
const WHILE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const DO = 57434
const END = 57435
const DECLARE = 57436
const CURSOR = 57437
const FOR = 57438
const FETCH = 57439
const OPEN = 57440
const CLOSE = 57441
const DISPOSE = 57442
const PREPARE = 57443
const NEXT = 57444
const PRIOR = 57445
const ABSOLUTE = 57446
const RELATIVE = 57447
const SEPARATOR = 57448
const PARTITION = 57449
const OVER = 57450
const COMMIT = 57451
const ROLLBACK = 57452
const CONTINUE = 57453
const BREAK = 57454
const EXIT = 57455
const ECHO = 57456
const PRINT = 57457
const PRINTF = 57458
const SOURCE = 57459
const EXECUTE = 57460
const CHDIR = 57461
const PWD = 57462
const RELOAD = 57463
const REMOVE = 57464
const SYNTAX = 57465
const TRIGGER = 57466
const FUNCTION = 57467
const AGGREGATE = 57468
const BEGIN = 57469
const RETURN = 57470
const IGNORE = 57471
const WITHIN = 57472
const VAR = 57473
const SHOW = 57474
const TIES = 57475
const NULLS = 57476
const ROWS = 57477
const CSV = 57478
const JSON = 57479
const FIXED = 57480
const LTSV = 57481
const JSON_ROW = 57482
const JSON_TABLE = 57483
const COUNT = 57484
const JSON_OBJECT = 57485
const AGGREGATE_FUNCTION = 57486
const LIST_FUNCTION = 57487
const ANALYTIC_FUNCTION = 57488
const FUNCTION_NTH = 57489
const FUNCTION_WITH_INS = 57490
const COMPARISON_OP = 57491
const STRING_OP = 57492
const SUBSTITUTION_OP = 57493
const UMINUS = 57494
const UPLUS = 57495

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2467

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, datetimeFormats []string, forPrepared bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, datetimeFormats, forPrepared)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 198,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 19,
	1, 24,
	87, 24,
	89, 24,
	91, 24,
	93, 24,
	154, 24,
	-2, 218,
	-1, 30,
	1, 74,
	87, 74,
	89, 74,
	91, 74,
	93, 74,
	154, 74,
	-2, 230,
	-1, 109,
	17, 198,
	19, 198,
	22, 198,
	24, 198,
	-2, 1,
	-1, 111,
	161, 289,
	-2, 198,
	-1, 118,
	63, 178,
	64, 178,
	65, 178,
	-2, 189,
	-1, 152,
	1, 118,
	87, 118,
	89, 118,
	91, 118,
	93, 118,
	154, 118,
	-2, 212,
	-1, 153,
	1, 159,
	87, 159,
	89, 159,
	91, 159,
	93, 159,
	154, 159,
	-2, 218,
	-1, 158,
	1, 152,
	87, 152,
	89, 152,
	91, 152,
	93, 152,
	154, 152,
	-2, 218,
	-1, 159,
	1, 153,
	87, 153,
	89, 153,
	91, 153,
	93, 153,
	154, 153,
	-2, 218,
	-1, 160,
	1, 154,
	87, 154,
	89, 154,
	91, 154,
	93, 154,
	154, 154,
	-2, 218,
	-1, 161,
	1, 157,
	87, 157,
	89, 157,
	91, 157,
	93, 157,
	154, 157,
	-2, 212,
	-1, 162,
	1, 158,
	87, 158,
	89, 158,
	91, 158,
	93, 158,
	154, 158,
	-2, 218,
	-1, 165,
	1, 165,
	87, 165,
	89, 165,
	91, 165,
	93, 165,
	154, 165,
	-2, 212,
	-1, 166,
	1, 166,
	87, 166,
	89, 166,
	91, 166,
	93, 166,
	154, 166,
	-2, 218,
	-1, 222,
	87, 1,
	91, 1,
	93, 1,
	-2, 198,
	-1, 240,
	160, 332,
	-2, 434,
	-1, 241,
	160, 333,
	-2, 435,
	-1, 242,
	160, 334,
	-2, 436,
	-1, 243,
	160, 335,
	-2, 437,
	-1, 272,
	4, 140,
	133, 140,
	134, 140,
	135, 140,
	136, 140,
	137, 140,
	138, 140,
	139, 140,
	-2, 218,
	-1, 273,
	4, 141,
	133, 141,
	134, 141,
	135, 141,
	136, 141,
	137, 141,
	138, 141,
	139, 141,
	-2, 218,
	-1, 283,
	1, 170,
	87, 170,
	89, 170,
	91, 170,
	93, 170,
	154, 170,
	-2, 218,
	-1, 290,
	93, 4,
	-2, 198,
	-1, 299,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 259,
	-1, 300,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 261,
	-1, 309,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 271,
	-1, 357,
	93, 1,
	-2, 198,
	-1, 370,
	53, 453,
	-2, 378,
	-1, 402,
	1, 76,
	87, 76,
	89, 76,
	91, 76,
	93, 76,
	154, 76,
	-2, 218,
	-1, 403,
	1, 77,
	87, 77,
	89, 77,
	91, 77,
	93, 77,
	154, 77,
	-2, 212,
	-1, 404,
	1, 78,
	87, 78,
	89, 78,
	91, 78,
	93, 78,
	154, 78,
	-2, 218,
	-1, 405,
	1, 79,
	87, 79,
	89, 79,
	91, 79,
	93, 79,
	154, 79,
	-2, 212,
	-1, 406,
	1, 145,
	87, 145,
	89, 145,
	91, 145,
	93, 145,
	154, 145,
	-2, 212,
	-1, 407,
	1, 146,
	87, 146,
	89, 146,
	91, 146,
	93, 146,
	154, 146,
	-2, 218,
	-1, 408,
	1, 147,
	87, 147,
	89, 147,
	91, 147,
	93, 147,
	154, 147,
	-2, 212,
	-1, 409,
	1, 148,
	87, 148,
	89, 148,
	91, 148,
	93, 148,
	154, 148,
	-2, 218,
	-1, 412,
	1, 113,
	87, 113,
	89, 113,
	91, 113,
	93, 113,
	154, 113,
	164, 113,
	-2, 218,
	-1, 417,
	1, 376,
	87, 376,
	89, 376,
	91, 376,
	93, 376,
	154, 376,
	-2, 218,
	-1, 424,
	1, 171,
	87, 171,
	89, 171,
	91, 171,
	93, 171,
	154, 171,
	-2, 218,
	-1, 450,
	69, 0,
	73, 0,
	74, 0,
	75, 0,
	149, 0,
	156, 0,
	-2, 272,
	-1, 480,
	93, 1,
	-2, 198,
	-1, 487,
	89, 1,
	91, 1,
	93, 1,
	-2, 198,
	-1, 490,
	1, 194,
	51, 194,
	87, 194,
	89, 194,
	91, 194,
	93, 194,
	96, 194,
	154, 194,
	161, 194,
	-2, 218,
	-1, 506,
	161, 330,
	164, 330,
	-2, 212,
	-1, 558,
	87, 4,
	89, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 561,
	93, 4,
	-2, 198,
	-1, 562,
	93, 4,
	-2, 198,
	-1, 599,
	1, 197,
	87, 197,
	89, 197,
	91, 197,
	93, 197,
	96, 197,
	154, 197,
	161, 197,
	-2, 218,
	-1, 631,
	17, 463,
	78, 463,
	160, 463,
	-2, 83,
	-1, 657,
	87, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 662,
	93, 4,
	-2, 198,
	-1, 663,
	93, 4,
	-2, 198,
	-1, 685,
	87, 1,
	91, 1,
	93, 1,
	-2, 198,
	-1, 719,
	1, 91,
	87, 91,
	89, 91,
	91, 91,
	93, 91,
	154, 91,
	-2, 212,
	-1, 720,
	1, 92,
	87, 92,
	89, 92,
	91, 92,
	93, 92,
	154, 92,
	-2, 218,
	-1, 722,
	93, 6,
	-2, 198,
	-1, 728,
	161, 124,
	164, 124,
	-2, 218,
	-1, 733,
	93, 4,
	-2, 198,
	-1, 789,
	93, 6,
	-2, 198,
	-1, 790,
	93, 6,
	-2, 198,
	-1, 794,
	93, 4,
	-2, 198,
	-1, 798,
	89, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 828,
	87, 6,
	89, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 834,
	154, 58,
	-2, 218,
	-1, 868,
	87, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 871,
	93, 8,
	-2, 198,
	-1, 876,
	93, 6,
	-2, 198,
	-1, 879,
	87, 4,
	91, 4,
	93, 4,
	-2, 198,
	-1, 901,
	93, 6,
	-2, 198,
	-1, 928,
	93, 6,
	-2, 198,
	-1, 932,
	89, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 934,
	87, 8,
	89, 8,
	91, 8,
	93, 8,
	-2, 198,
	-1, 937,
	93, 8,
	-2, 198,
	-1, 938,
	93, 8,
	-2, 198,
	-1, 952,
	87, 8,
	91, 8,
	93, 8,
	-2, 198,
	-1, 961,
	87, 6,
	91, 6,
	93, 6,
	-2, 198,
	-1, 966,
	93, 8,
	-2, 198,
	-1, 979,
	93, 8,
	-2, 198,
	-1, 983,
	89, 8,
	91, 8,
	93, 8,
	-2, 198,
	-1, 1008,
	87, 8,
	91, 8,
	93, 8,
	-2, 198,
}

const yyPrivate = 57344

const yyLast = 3514

var yyAct = [...]int{

	117, 19, 978, 988, 869, 953, 977, 330, 491, 926,
	927, 793, 112, 30, 849, 658, 531, 884, 25, 425,
	479, 847, 110, 115, 177, 323, 792, 766, 638, 97,
	633, 584, 546, 549, 848, 380, 1, 608, 600, 153,
	224, 389, 154, 155, 370, 158, 159, 160, 162, 416,
	166, 548, 432, 24, 227, 431, 23, 618, 328, 5,
	499, 247, 786, 86, 785, 410, 511, 478, 171, 510,
	175, 235, 62, 369, 163, 325, 639, 228, 123, 233,
	245, 469, 528, 77, 433, 75, 174, 129, 383, 211,
	252, 182, 515, 172, 516, 517, 512, 509, 205, 375,
	513, 131, 131, 204, 134, 275, 458, 98, 118, 220,
	19, 204, 171, 204, 427, 3, 872, 132, 291, 65,
	440, 903, 30, 205, 825, 715, 764, 173, 204, 765,
	174, 373, 238, 707, 695, 678, 230, 223, 226, 648,
	650, 613, 176, 651, 614, 174, 221, 281, 186, 647,
	272, 273, 140, 197, 632, 196, 195, 615, 611, 197,
	198, 199, 24, 156, 603, 23, 198, 199, 90, 283,
	197, 173, 196, 195, 292, 556, 553, 198, 199, 496,
	515, 71, 516, 517, 512, 509, 173, 456, 513, 379,
	367, 296, 256, 246, 943, 942, 923, 922, 169, 124,
	169, 921, 514, 295, 205, 124, 920, 120, 263, 204,
	121, 292, 119, 292, 919, 292, 898, 897, 71, 895,
	234, 893, 98, 19, 3, 892, 883, 882, 255, 864,
	361, 71, 826, 107, 779, 30, 99, 100, 101, 240,
	241, 242, 243, 791, 376, 763, 321, 108, 746, 745,
	280, 294, 744, 307, 612, 743, 306, 118, 742, 353,
	739, 717, 714, 374, 934, 694, 677, 402, 404, 407,
	409, 412, 675, 341, 342, 24, 412, 417, 23, 301,
	107, 417, 417, 674, 673, 424, 667, 625, 665, 646,
	644, 19, 631, 589, 582, 581, 322, 580, 339, 340,
	307, 472, 569, 30, 455, 453, 443, 354, 423, 349,
	399, 390, 288, 497, 958, 289, 287, 437, 545, 896,
	894, 470, 382, 855, 854, 853, 174, 852, 387, 131,
	421, 422, 365, 172, 851, 821, 816, 3, 813, 385,
	386, 415, 126, 811, 395, 98, 810, 804, 126, 803,
	586, 99, 100, 101, 102, 103, 104, 105, 19, 565,
	521, 464, 463, 454, 490, 438, 462, 173, 449, 505,
	30, 461, 495, 460, 451, 452, 459, 401, 538, 420,
	465, 466, 400, 368, 174, 446, 225, 445, 442, 219,
	476, 218, 126, 174, 483, 208, 501, 418, 419, 467,
	207, 206, 828, 558, 269, 508, 267, 468, 174, 109,
	24, 257, 169, 23, 213, 543, 174, 850, 174, 520,
	347, 814, 537, 539, 812, 498, 693, 473, 474, 691,
	559, 809, 681, 876, 173, 750, 790, 475, 555, 444,
	504, 789, 748, 398, 388, 722, 861, 503, 859, 533,
	598, 246, 522, 681, 560, 259, 751, 541, 808, 544,
	523, 566, 527, 749, 529, 530, 807, 234, 534, 806,
	397, 805, 3, 551, 99, 100, 101, 102, 103, 104,
	105, 19, 594, 747, 741, 1007, 438, 348, 19, 174,
	599, 209, 588, 30, 995, 981, 969, 968, 210, 572,
	30, 535, 960, 577, 578, 579, 944, 258, 939, 933,
	192, 201, 200, 191, 190, 193, 189, 593, 268, 930,
	266, 587, 626, 90, 597, 878, 875, 609, 607, 874,
	173, 838, 570, 24, 585, 827, 23, 260, 261, 802,
	24, 801, 796, 23, 736, 735, 684, 592, 591, 573,
	574, 575, 576, 557, 412, 136, 484, 417, 627, 19,
	585, 610, 19, 19, 147, 148, 482, 938, 609, 980,
	620, 30, 98, 979, 30, 30, 641, 937, 656, 90,
	622, 660, 661, 621, 174, 929, 871, 663, 623, 928,
	187, 186, 662, 562, 561, 3, 197, 188, 196, 195,
	290, 979, 3, 198, 199, 753, 654, 135, 966, 928,
	901, 495, 692, 137, 668, 669, 670, 672, 795, 652,
	481, 794, 794, 733, 480, 664, 98, 480, 359, 357,
	145, 146, 149, 150, 671, 1008, 983, 138, 961, 952,
	690, 501, 932, 879, 720, 868, 696, 676, 798, 711,
	728, 108, 687, 685, 657, 699, 709, 487, 19, 222,
	734, 701, 702, 19, 19, 1010, 712, 713, 963, 954,
	30, 881, 697, 710, 686, 30, 30, 731, 870, 688,
	706, 724, 737, 738, 730, 659, 19, 700, 355, 361,
	229, 985, 984, 950, 845, 844, 800, 799, 30, 725,
	726, 99, 100, 101, 102, 103, 104, 105, 774, 655,
	752, 980, 929, 174, 795, 481, 1014, 194, 1006, 975,
	551, 727, 756, 19, 551, 609, 959, 915, 877, 174,
	755, 683, 999, 762, 19, 30, 989, 948, 24, 842,
	174, 23, 585, 595, 777, 776, 30, 1005, 769, 770,
	771, 993, 1016, 797, 761, 99, 100, 101, 102, 103,
	104, 105, 989, 192, 201, 200, 191, 190, 193, 189,
	775, 1003, 1004, 1002, 992, 760, 991, 817, 680, 601,
	71, 778, 602, 253, 829, 213, 95, 973, 831, 834,
	19, 19, 818, 1001, 344, 19, 841, 822, 343, 19,
	3, 583, 30, 30, 212, 602, 819, 30, 830, 873,
	1012, 30, 833, 990, 840, 441, 293, 824, 843, 384,
	839, 276, 174, 250, 585, 857, 304, 71, 857, 19,
	303, 305, 270, 858, 863, 772, 987, 781, 865, 990,
	619, 30, 705, 187, 186, 856, 346, 345, 860, 197,
	188, 196, 195, 96, 971, 286, 198, 199, 282, 880,
	832, 972, 704, 846, 974, 311, 310, 703, 617, 19,
	857, 902, 19, 887, 888, 889, 890, 19, 616, 489,
	19, 30, 734, 363, 30, 249, 250, 251, 917, 30,
	891, 515, 30, 516, 517, 605, 606, 886, 630, 916,
	364, 629, 19, 754, 781, 781, 643, 525, 935, 231,
	885, 857, 918, 642, 30, 515, 924, 516, 517, 512,
	509, 767, 768, 513, 277, 495, 941, 649, 940, 19,
	947, 925, 936, 19, 910, 19, 909, 945, 19, 19,
	640, 30, 128, 781, 127, 30, 78, 30, 758, 759,
	30, 30, 185, 19, 962, 967, 911, 634, 635, 636,
	637, 837, 19, 740, 902, 30, 729, 19, 723, 116,
	721, 390, 645, 554, 30, 457, 413, 394, 232, 30,
	19, 998, 381, 781, 19, 996, 905, 994, 366, 391,
	392, 781, 30, 689, 248, 164, 30, 910, 393, 909,
	910, 910, 909, 909, 378, 1013, 1009, 63, 279, 19,
	278, 967, 274, 91, 170, 910, 781, 909, 1017, 911,
	93, 30, 911, 911, 835, 836, 202, 203, 90, 910,
	181, 909, 93, 91, 414, 215, 216, 911, 184, 64,
	139, 141, 910, 781, 909, 130, 910, 781, 909, 905,
	965, 911, 905, 905, 900, 732, 951, 356, 170, 955,
	956, 116, 8, 867, 911, 500, 7, 905, 911, 6,
	358, 910, 59, 909, 964, 326, 781, 327, 372, 371,
	236, 905, 239, 1011, 986, 970, 957, 85, 982, 58,
	57, 61, 54, 911, 905, 60, 55, 757, 905, 604,
	493, 997, 492, 899, 515, 1000, 516, 517, 512, 509,
	823, 914, 513, 53, 183, 488, 285, 362, 628, 524,
	122, 18, 17, 905, 66, 144, 15, 98, 550, 547,
	1015, 14, 411, 298, 299, 300, 931, 302, 13, 12,
	309, 9, 312, 313, 314, 315, 316, 317, 318, 16,
	11, 10, 164, 329, 906, 192, 201, 200, 191, 190,
	193, 189, 782, 946, 904, 780, 350, 949, 428, 426,
	4, 178, 164, 2, 0, 355, 360, 0, 0, 0,
	0, 0, 0, 98, 72, 73, 74, 0, 95, 76,
	90, 93, 91, 92, 0, 68, 976, 0, 0, 329,
	0, 71, 0, 0, 396, 0, 0, 0, 108, 0,
	0, 0, 98, 72, 73, 74, 0, 95, 76, 90,
	93, 91, 92, 0, 68, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 187, 186, 108, 0, 0,
	0, 197, 188, 196, 195, 0, 0, 87, 198, 199,
	448, 88, 450, 0, 164, 96, 99, 100, 101, 102,
	103, 104, 105, 0, 114, 113, 0, 0, 0, 164,
	0, 0, 0, 0, 94, 0, 87, 0, 0, 0,
	88, 0, 0, 0, 96, 0, 164, 164, 0, 0,
	0, 0, 0, 114, 113, 192, 164, 98, 191, 190,
	193, 189, 360, 94, 0, 0, 485, 0, 0, 0,
	0, 494, 99, 100, 101, 102, 103, 104, 105, 107,
	519, 334, 82, 333, 335, 336, 337, 338, 526, 0,
	0, 0, 0, 0, 331, 0, 79, 80, 89, 67,
	324, 99, 100, 101, 102, 103, 104, 105, 107, 0,
	334, 82, 333, 335, 336, 337, 338, 0, 0, 0,
	0, 0, 98, 331, 0, 79, 80, 89, 67, 0,
	0, 0, 0, 0, 0, 187, 186, 116, 0, 0,
	0, 197, 188, 196, 195, 0, 0, 238, 198, 199,
	56, 0, 0, 0, 567, 192, 201, 200, 191, 190,
	193, 189, 0, 329, 0, 164, 0, 0, 0, 164,
	164, 164, 0, 0, 0, 0, 125, 81, 0, 0,
	0, 0, 0, 0, 590, 0, 99, 100, 101, 102,
	103, 104, 105, 596, 0, 0, 0, 0, 192, 201,
	200, 191, 190, 193, 189, 0, 0, 133, 0, 0,
	0, 0, 142, 143, 0, 151, 152, 0, 0, 0,
	0, 157, 0, 0, 0, 161, 0, 165, 0, 167,
	168, 0, 0, 0, 0, 187, 186, 0, 214, 0,
	0, 197, 188, 196, 195, 0, 0, 0, 198, 199,
	477, 99, 100, 101, 102, 103, 104, 105, 98, 0,
	352, 0, 0, 0, 192, 201, 200, 191, 190, 193,
	189, 0, 217, 0, 0, 666, 0, 0, 187, 186,
	164, 164, 164, 164, 197, 188, 196, 195, 0, 0,
	862, 198, 199, 679, 0, 0, 0, 0, 237, 237,
	0, 0, 0, 0, 0, 254, 237, 0, 0, 0,
	494, 0, 0, 262, 237, 264, 265, 0, 0, 698,
	0, 164, 271, 0, 0, 125, 192, 201, 200, 191,
	190, 193, 189, 0, 0, 0, 708, 164, 0, 0,
	0, 0, 0, 308, 187, 186, 98, 716, 0, 0,
	197, 188, 196, 195, 0, 98, 0, 198, 199, 282,
	308, 308, 297, 0, 0, 0, 360, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 373,
	238, 0, 319, 0, 332, 0, 0, 99, 100, 101,
	102, 103, 104, 105, 0, 377, 0, 0, 351, 377,
	0, 0, 0, 0, 0, 0, 187, 186, 0, 0,
	237, 0, 197, 188, 196, 195, 0, 0, 682, 198,
	199, 0, 237, 0, 0, 0, 237, 0, 0, 98,
	332, 320, 0, 192, 201, 200, 191, 190, 193, 189,
	0, 0, 0, 0, 403, 405, 406, 408, 0, 0,
	0, 0, 0, 0, 486, 308, 0, 237, 0, 0,
	815, 308, 308, 0, 0, 0, 0, 0, 0, 436,
	0, 439, 164, 0, 820, 99, 100, 101, 240, 241,
	242, 243, 0, 0, 99, 100, 101, 240, 241, 242,
	243, 116, 376, 0, 308, 471, 471, 471, 98, 0,
	0, 192, 201, 200, 191, 190, 193, 189, 0, 0,
	0, 374, 244, 187, 186, 0, 0, 0, 0, 197,
	188, 196, 195, 238, 98, 377, 198, 199, 0, 377,
	866, 0, 93, 0, 125, 0, 125, 125, 98, 0,
	0, 0, 332, 0, 502, 237, 506, 0, 0, 518,
	0, 0, 237, 0, 0, 0, 237, 237, 99, 100,
	101, 102, 103, 104, 105, 0, 532, 0, 0, 536,
	502, 502, 540, 0, 0, 542, 532, 360, 0, 552,
	0, 187, 186, 0, 0, 0, 0, 197, 188, 196,
	195, 0, 0, 164, 198, 199, 192, 568, 200, 191,
	190, 193, 189, 0, 0, 0, 0, 192, 447, 200,
	191, 190, 193, 189, 0, 116, 0, 0, 563, 564,
	0, 308, 532, 0, 494, 0, 0, 99, 100, 101,
	102, 103, 104, 105, 332, 571, 0, 192, 201, 0,
	191, 190, 193, 189, 0, 0, 0, 308, 0, 0,
	0, 0, 0, 99, 100, 101, 102, 103, 104, 105,
	0, 360, 0, 0, 0, 377, 0, 99, 100, 101,
	102, 103, 104, 105, 0, 502, 187, 186, 0, 0,
	0, 0, 197, 188, 196, 195, 0, 187, 186, 198,
	199, 0, 237, 197, 188, 196, 195, 624, 0, 0,
	198, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 0, 0, 502, 187, 186, 0,
	0, 0, 0, 197, 188, 196, 195, 0, 0, 0,
	198, 199, 653, 0, 308, 0, 98, 72, 73, 74,
	0, 95, 76, 90, 93, 91, 92, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 108, 0, 0, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 237, 237, 237, 0, 0, 0, 0,
	87, 0, 0, 0, 88, 0, 0, 0, 96, 0,
	532, 0, 0, 0, 502, 502, 0, 114, 113, 0,
	718, 719, 0, 0, 0, 0, 0, 94, 0, 308,
	0, 0, 0, 0, 98, 72, 73, 74, 0, 95,
	76, 90, 93, 91, 92, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 377, 377, 377, 0, 0, 108,
	0, 0, 0, 0, 0, 99, 100, 101, 102, 103,
	104, 105, 107, 502, 334, 82, 333, 335, 336, 337,
	338, 237, 237, 237, 0, 773, 0, 0, 0, 79,
	80, 89, 67, 536, 0, 0, 0, 0, 87, 0,
	0, 0, 88, 0, 0, 0, 96, 0, 0, 0,
	0, 308, 0, 0, 0, 114, 113, 0, 0, 0,
	0, 0, 0, 377, 180, 94, 0, 0, 98, 72,
	73, 74, 0, 95, 76, 90, 93, 91, 92, 20,
	68, 0, 0, 0, 32, 33, 0, 0, 0, 0,
	237, 0, 0, 108, 0, 26, 41, 0, 27, 0,
	0, 179, 0, 99, 100, 101, 102, 103, 104, 105,
	107, 0, 84, 82, 83, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 80, 89,
	67, 0, 87, 0, 0, 0, 88, 0, 0, 532,
	96, 0, 71, 0, 0, 0, 0, 0, 0, 908,
	907, 0, 787, 0, 0, 0, 0, 0, 29, 94,
	0, 36, 34, 35, 31, 37, 0, 0, 0, 0,
	0, 0, 0, 39, 40, 434, 435, 0, 44, 45,
	46, 47, 38, 49, 50, 51, 42, 48, 52, 0,
	912, 913, 788, 0, 0, 28, 43, 99, 100, 101,
	102, 103, 104, 105, 107, 0, 84, 82, 83, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 80, 89, 67, 0, 0, 0, 0, 0,
	0, 98, 72, 73, 74, 332, 95, 76, 90, 93,
	91, 92, 20, 68, 0, 0, 0, 32, 33, 0,
	0, 0, 0, 0, 0, 0, 108, 0, 26, 41,
	0, 27, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 88,
	0, 0, 0, 96, 0, 71, 0, 0, 0, 0,
	0, 0, 430, 429, 0, 69, 0, 0, 0, 0,
	0, 29, 94, 0, 36, 34, 35, 31, 37, 0,
	0, 0, 0, 0, 0, 0, 39, 40, 434, 435,
	70, 44, 45, 46, 47, 38, 49, 50, 51, 42,
	48, 52, 0, 0, 0, 0, 0, 0, 28, 43,
	99, 100, 101, 102, 103, 104, 105, 107, 0, 84,
	82, 83, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 80, 89, 67, 98, 72,
	73, 74, 0, 95, 76, 90, 93, 91, 92, 20,
	68, 0, 0, 0, 32, 33, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 26, 41, 0, 27, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 88, 0, 0, 0,
	96, 0, 71, 0, 0, 0, 0, 0, 0, 784,
	783, 0, 787, 0, 0, 0, 0, 0, 29, 94,
	0, 36, 34, 35, 31, 37, 0, 0, 0, 0,
	0, 0, 0, 39, 40, 0, 0, 0, 44, 45,
	46, 47, 38, 49, 50, 51, 42, 48, 52, 0,
	0, 0, 788, 0, 0, 28, 43, 99, 100, 101,
	102, 103, 104, 105, 107, 0, 84, 82, 83, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 80, 89, 67, 98, 72, 73, 74, 0,
	95, 76, 90, 93, 91, 92, 20, 68, 0, 0,
	0, 32, 33, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 26, 41, 0, 27, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 88, 0, 0, 0, 96, 0, 71,
	0, 0, 0, 0, 0, 0, 22, 21, 0, 69,
	0, 0, 0, 0, 0, 29, 94, 0, 36, 34,
	35, 31, 37, 0, 0, 0, 0, 0, 0, 0,
	39, 40, 0, 0, 70, 44, 45, 46, 47, 38,
	49, 50, 51, 42, 48, 52, 0, 0, 0, 0,
	0, 0, 28, 43, 99, 100, 101, 102, 103, 104,
	105, 107, 0, 84, 82, 83, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 80,
	89, 67, 98, 72, 73, 74, 0, 95, 76, 90,
	93, 91, 92, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	98, 72, 73, 74, 0, 95, 76, 90, 93, 91,
	92, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 108, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	88, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 87, 0, 0, 0, 88, 0,
	0, 0, 96, 253, 0, 0, 0, 0, 0, 0,
	0, 114, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 101, 102, 103, 104, 105, 107, 0,
	84, 82, 83, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 79, 80, 89, 67, 99,
	100, 101, 102, 103, 104, 105, 107, 0, 84, 82,
	83, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 89, 67, 98, 72, 73,
	74, 0, 95, 76, 90, 93, 91, 92, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 98, 72, 73, 74, 0,
	95, 76, 90, 93, 91, 92, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 88, 0, 0, 0, 96,
	0, 71, 0, 0, 0, 0, 0, 0, 114, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 87,
	0, 0, 0, 88, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 101, 102,
	103, 104, 105, 107, 0, 84, 82, 83, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 89, 67, 99, 100, 101, 102, 103, 104,
	105, 107, 0, 84, 82, 83, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 80,
	89, 67, 98, 72, 73, 74, 0, 95, 76, 90,
	93, 91, 92, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 108, 0, 0,
	98, 72, 73, 74, 0, 95, 76, 90, 93, 91,
	92, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	88, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 87, 0, 0, 0, 88, 0,
	0, 0, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 114, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 101, 102, 103, 104, 105, 107, 0,
	84, 82, 83, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 80, 89, 111, 99,
	100, 101, 102, 103, 104, 105, 107, 0, 84, 82,
	83, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 80, 89, 67, 98, 72, 284,
	74, 0, 95, 76, 90, 93, 91, 92, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 88, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 101, 102,
	103, 104, 105, 107, 0, 84, 82, 83, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 89, 67,
}
var yyPact = [...]int{

	2641, -1000, 255, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3168, 3011, -1000, -1000, 188, 909, 907, 1017, 568,
	-1000, 512, 1020, 1000, 1774, 1774, 528, 1774, 3011, -1000,
	-1000, 3011, 3011, 1760, 3011, 3011, 3011, 3011, 3011, 3011,
	-1000, 1774, 1774, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 261, -1000, -1000, -1000, -1000, 2983, -1000, 2070,
	1024, 922, -1000, -1000, -1000, -1000, -1000, -1000, 1672, 3011,
	3011, -62, 241, 240, 235, -1000, 342, 232, 3011, 3011,
	-1000, -1000, -1000, -1000, 1774, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 231, 229, -56, 2641,
	569, 2983, -1000, 226, 3011, 601, 1672, -1000, 865, 953,
	1582, 1734, 976, 822, 706, -1000, 702, 1774, 1582, -1000,
	28, 260, -1000, 412, -1000, 1774, 1358, 1774, 1774, 364,
	362, -1000, 771, -1000, 1774, -1000, -1000, -1000, -1000, 3011,
	3011, 994, 44, 760, 882, 992, -1000, 990, -1000, -1000,
	86, -62, -1000, -1000, 1435, -62, -1000, -1000, 3353, 3011,
	694, 155, 151, 154, 182, 508, 49, 747, 1017, -1000,
	-1000, -1000, -1000, 27, 1774, -1000, 3011, 3011, 3011, 713,
	3011, 757, 93, 3011, 799, 3011, 3011, 3011, 3011, 3011,
	3011, 3011, -1000, -1000, 1665, 2826, 1179, 706, 706, 93,
	93, 725, 780, -1000, -1000, 1226, -1000, 345, 706, 3011,
	1494, -1000, 2641, 151, 146, 3011, 599, 538, 537, 3011,
	833, 853, 1582, 968, 26, -1000, -1000, -1000, -1000, 223,
	-1000, -1000, -1000, -1000, 1591, 986, 25, 959, 1591, 753,
	753, 753, 1208, -1000, 284, 957, 1017, 3011, 374, 283,
	222, 217, -1000, -1000, -1000, -1000, 3011, 3011, 3011, 3011,
	3011, 951, -1000, -1000, 1029, 3011, 3011, 1008, 1008, 1582,
	3011, 3011, 3011, -1000, 3011, 1672, -1000, -1000, -1000, -1000,
	2327, 1774, 1017, 1774, 51, 746, 922, 279, 15, -2,
	-2, 777, 1778, 3011, 93, 3011, -1000, 2983, -1000, -2,
	93, 93, 4, 4, -1000, -1000, -1000, 1808, 1226, -1000,
	-1000, 144, 3011, -1000, -1000, 143, 23, 948, -1000, 1672,
	-1000, -1000, -54, 216, 213, 211, 206, 202, 201, 3011,
	2798, -1000, -1000, 93, 161, 161, 161, 713, -1000, 3011,
	1326, -1000, -1000, 533, -1000, 3011, 473, 2641, 463, 3011,
	1604, 567, 828, 3011, 1972, 153, 622, 1582, 3196, 959,
	38, 1293, -1000, -1000, 103, -1000, 200, -1000, 1591, 1358,
	862, 3011, -1000, 182, -1000, 182, 182, -1000, 1774, 702,
	-1000, 341, 218, 622, 1774, -1000, 1672, 1123, 1774, 702,
	157, 1774, -1000, -62, -1000, -62, -62, -1000, -62, -1000,
	-1000, 12, 946, 1017, -1000, -1000, -1000, 11, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 460, 249, -1000, -1000, 3168,
	3011, -1000, -1000, -1000, -1000, -1000, 502, -1000, 10, 501,
	1774, 1774, -1000, 199, 1774, -1000, -1000, 3011, 1767, -1000,
	-2, -1000, -1000, -1000, 141, -1000, 1208, 1774, 2826, 706,
	706, 706, 3011, 3011, 3011, 136, 134, 133, 731, -1000,
	140, -1000, 190, -1000, -1000, 423, 132, 3011, 455, 536,
	2641, 3011, 658, -1000, -1000, 1672, 3011, 2641, 354, 3011,
	727, -1000, 0, 847, 1672, -1000, 93, 622, -1000, 976,
	-6, 98, -52, -1000, -20, -7, -62, -56, -1000, 825,
	815, 785, 785, 837, 1591, -1000, -1000, -1000, -1000, 1774,
	126, 3011, 959, -1000, 855, 851, 1672, 759, -1000, -1000,
	759, 131, -10, -1000, 921, 1774, 900, -1000, 622, 871,
	864, -1000, -1000, 129, -1000, 945, 128, -15, -1000, -1000,
	-25, 887, -21, 3011, 1774, -1000, 3011, 621, 2327, 564,
	596, 2327, 2327, 500, 495, 702, 127, 1226, 3011, -1000,
	-1000, -1000, 125, 3011, 3011, 2798, 3011, 123, 122, 111,
	-1000, -1000, -1000, 93, 105, -29, 3011, -1000, 699, 302,
	1497, 645, 453, -1000, 563, -1000, 1086, 590, 974, -1000,
	-1000, 704, 296, 1972, 292, -1000, -1000, -1000, 104, -30,
	959, 622, 3011, -1000, 3011, 1358, 1591, 1591, 814, -1000,
	809, 789, 785, -1000, -1000, -1000, -31, -1000, -1000, 3011,
	3011, 944, 1774, -1000, -1000, -1000, 622, 622, 101, -39,
	3011, 100, 1774, 3011, 943, 318, 941, 1017, 1017, 3011,
	939, 1017, -1000, -1000, -1000, -1000, -1000, 2327, 532, 3011,
	452, 451, 2327, 2327, 99, 936, 1226, 376, 97, 94,
	91, 88, 87, 375, 334, 327, -1000, -1000, 93, 441,
	-1000, 858, -1000, -1000, 644, 2641, -1000, -1000, 3011, -1000,
	-1000, -1000, -1000, 912, 749, 622, -1000, -1000, 1672, 84,
	-35, 837, 861, 1591, 1591, 1591, 782, 3011, 1672, -1000,
	702, -1000, -1000, -1000, 921, 1774, 1672, -1000, -1000, -62,
	-1000, 702, 2484, 314, -1000, -1000, -1000, 887, -1000, 309,
	82, 531, 449, 2327, 558, 609, 608, 448, 446, -1000,
	189, 187, 363, 361, 358, 350, 323, 186, 183, 290,
	178, 287, -1000, 3011, 176, -1000, 628, -1000, -1000, -1000,
	93, -1000, -1000, -1000, -1000, 3011, -1000, 3011, 175, 861,
	1050, 837, 1591, -37, 71, -1000, -1000, -1000, -1000, 442,
	248, -1000, -1000, 3168, 3011, -1000, -1000, 3011, 3011, 2484,
	2484, 934, 438, 530, 2327, 3011, 654, -1000, 2327, -1000,
	-1000, 607, 606, 702, 310, 174, 167, 165, 164, 163,
	310, 310, 340, 310, 338, 1369, 865, -1000, -1000, 68,
	1672, 1774, -1000, 3011, 837, -1000, -1000, -1000, 2484, 555,
	589, 494, 47, 740, -1000, 436, 433, 306, 642, 432,
	-1000, 553, -1000, 582, -1000, -1000, 66, 65, -1000, 866,
	850, 310, 310, 310, 310, 310, 64, 865, 60, 160,
	58, 159, -1000, 56, -1000, 55, 1672, -1000, 2484, 519,
	3011, 2164, 1774, 1774, -1000, -1000, 2484, -1000, 641, 2327,
	-1000, 3011, -1000, -1000, -1000, 841, 3011, 53, 45, 40,
	36, 35, -1000, -1000, 310, -1000, 310, -1000, -1000, 498,
	426, 2484, 552, 416, 110, -1000, -1000, 3168, 3011, -1000,
	-1000, -1000, 485, 475, 415, -1000, 627, 1972, -1000, -1000,
	-1000, -1000, -1000, -1000, 34, 33, 413, 518, 2484, 3011,
	652, -1000, 2484, 605, 2164, 549, 580, 2164, 2164, -1000,
	-1000, 179, -1000, -1000, 640, 409, -1000, 548, -1000, 579,
	-1000, -1000, 2164, 517, 3011, 404, 403, -1000, 781, -1000,
	633, 2484, -1000, 3011, 482, 402, 2164, 546, 604, 603,
	-1000, 756, 695, 693, 667, -1000, 625, 401, 510, 2164,
	3011, 647, -1000, 2164, -1000, -1000, 723, 692, -1000, 690,
	663, -1000, -1000, -1000, -1000, 632, 392, -1000, 545, -1000,
	576, 730, -1000, -1000, -1000, -1000, -1000, 630, 2164, -1000,
	3011, -1000, 670, -1000, -1000, 624, -1000, -1000,
}
var yyPgo = [...]int{

	0, 36, 19, 234, 121, 114, 84, 1173, 55, 1171,
	52, 1170, 1169, 1168, 1165, 64, 62, 1164, 1162, 1154,
	1151, 1150, 1149, 1141, 76, 28, 30, 1139, 1138, 1132,
	65, 1131, 33, 1129, 1128, 51, 32, 1126, 1125, 1124,
	1122, 1121, 59, 82, 78, 1120, 61, 35, 1119, 1118,
	17, 1117, 38, 1115, 18, 1114, 91, 1113, 85, 83,
	29, 946, 0, 58, 63, 31, 8, 1102, 1100, 1099,
	1097, 1390, 1096, 81, 1095, 1092, 1091, 40, 1090, 1089,
	1087, 7, 34, 21, 14, 1086, 1085, 3, 1084, 1083,
	71, 1082, 1080, 99, 80, 79, 1079, 44, 1078, 27,
	1077, 1075, 1072, 23, 77, 1070, 37, 25, 49, 73,
	16, 75, 1069, 1066, 1065, 60, 1062, 20, 67, 11,
	26, 10, 9, 2, 6, 54, 1057, 15, 1055, 4,
	1054, 5, 1050, 1417, 72, 24, 12, 1045, 87, 1007,
	1039, 119, 90, 89, 69, 57, 66, 88, 1038, 41,
	717,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 6, 6, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 10, 10, 12,
	12, 11, 11, 11, 11, 11, 13, 13, 13, 13,
	13, 13, 14, 14, 15, 15, 15, 16, 16, 17,
	17, 18, 18, 18, 18, 18, 19, 19, 19, 19,
	19, 19, 20, 20, 20, 20, 21, 21, 21, 21,
	21, 22, 22, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 24, 24, 25, 25, 26, 26, 26,
	26, 26, 27, 27, 27, 27, 27, 27, 27, 28,
	28, 28, 28, 29, 29, 30, 30, 31, 31, 31,
	31, 32, 33, 33, 34, 35, 35, 36, 36, 36,
	37, 37, 37, 37, 37, 38, 38, 38, 38, 38,
	38, 38, 39, 39, 39, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 41,
	41, 41, 42, 42, 43, 43, 43, 43, 44, 44,
	45, 46, 46, 47, 47, 48, 48, 49, 49, 50,
	50, 51, 51, 51, 52, 52, 53, 53, 54, 54,
	55, 55, 56, 56, 57, 57, 57, 57, 57, 57,
	58, 59, 60, 60, 60, 60, 60, 61, 61, 61,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 63, 64, 64,
	64, 65, 65, 66, 66, 67, 67, 68, 68, 69,
	69, 69, 70, 70, 71, 72, 73, 73, 73, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 75, 75,
	75, 75, 75, 75, 75, 76, 76, 76, 76, 77,
	77, 78, 78, 78, 78, 79, 79, 79, 79, 79,
	80, 80, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 82, 83, 83, 84, 84, 85, 85,
	86, 86, 86, 87, 87, 87, 88, 88, 89, 89,
	90, 90, 91, 91, 91, 91, 92, 92, 92, 92,
	93, 93, 96, 96, 96, 96, 97, 97, 97, 97,
	97, 97, 98, 98, 98, 98, 98, 98, 99, 99,
	100, 100, 101, 101, 101, 102, 103, 103, 104, 104,
	105, 105, 106, 106, 107, 107, 108, 108, 109, 109,
	94, 94, 95, 95, 110, 110, 111, 111, 112, 112,
	112, 112, 113, 114, 115, 115, 116, 116, 117, 117,
	118, 118, 119, 119, 120, 120, 121, 121, 122, 122,
	123, 123, 124, 124, 125, 125, 126, 126, 127, 127,
	128, 128, 129, 129, 130, 130, 131, 131, 132, 132,
	133, 133, 133, 133, 133, 133, 133, 133, 134, 135,
	135, 136, 137, 137, 138, 138, 139, 140, 141, 142,
	142, 143, 143, 144, 144, 145, 145, 146, 146, 147,
	147, 148, 148, 149, 149, 150, 150,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 8, 8, 9, 9, 1, 1, 1, 2, 1,
	1, 7, 8, 6, 1, 1, 7, 8, 6, 1,
	1, 1, 1, 1, 6, 8, 8, 1, 2, 1,
	1, 7, 8, 6, 1, 1, 7, 8, 6, 1,
	1, 1, 2, 2, 1, 2, 4, 4, 4, 4,
	2, 1, 1, 6, 8, 5, 6, 8, 5, 7,
	7, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 5, 2, 4, 2, 3, 5, 6,
	8, 5, 3, 1, 3, 1, 3, 4, 2, 4,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 4, 4, 4, 4,
	4, 2, 2, 2, 2, 4, 4, 2, 2, 2,
	4, 1, 2, 2, 4, 2, 2, 1, 2, 2,
	3, 4, 5, 7, 5, 4, 4, 4, 1, 1,
	3, 0, 2, 0, 2, 0, 3, 0, 2, 0,
	3, 0, 3, 4, 0, 2, 0, 2, 0, 2,
	6, 9, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 3, 1,
	6, 1, 3, 1, 3, 2, 4, 1, 1, 0,
	1, 1, 1, 1, 3, 3, 3, 1, 6, 3,
	3, 3, 3, 4, 4, 5, 6, 6, 3, 4,
	4, 3, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 2, 2, 3, 3, 2, 2, 0,
	1, 4, 3, 4, 4, 5, 5, 5, 5, 1,
	5, 10, 8, 9, 9, 9, 9, 9, 8, 8,
	10, 8, 10, 2, 1, 5, 0, 3, 2, 5,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 4, 6, 6, 8,
	1, 1, 1, 6, 6, 1, 1, 2, 3, 1,
	1, 3, 4, 5, 6, 7, 5, 6, 2, 4,
	1, 1, 1, 3, 1, 5, 0, 1, 4, 5,
	0, 2, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 6, 9,
	5, 8, 7, 3, 1, 3, 5, 6, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -112, -113, -116, -23,
	-20, -21, -27, -28, -31, -37, -22, -40, -41, -62,
	15, 86, 85, -8, -10, -54, 31, 34, 131, 94,
	-136, 100, 20, 21, 98, 99, 97, 101, 118, 109,
	110, 32, 122, 132, 114, 115, 116, 117, 123, 119,
	120, 121, 124, -57, -75, -72, -71, -78, -79, -102,
	-74, -76, -134, -139, -140, -141, -39, 160, 16, 88,
	113, 78, 5, 6, 7, -58, 10, -59, -61, 157,
	158, -133, 143, 144, 142, -80, -64, 68, 72, 159,
	11, 13, 14, 12, 95, 9, 76, -60, 4, 133,
	134, 135, 136, 137, 138, 139, 145, 140, 29, 154,
	-62, 160, -136, 86, 85, -103, -61, -62, -43, 24,
	19, 22, -45, -44, 17, -71, 160, 35, 35, -138,
	-137, -134, -138, -133, -134, 95, 43, 101, 125, -139,
	-141, -139, -133, -133, -38, 102, 103, 36, 37, 104,
	105, -133, -133, -62, -62, -62, -141, -133, -62, -62,
	-62, -133, -62, -107, -61, -133, -62, -133, -133, 151,
	-61, -62, -107, -42, -54, -62, -134, -135, -9, 131,
	94, 6, -56, -55, -148, 30, 150, 149, 156, 75,
	73, 72, 69, 74, -150, 158, 157, 155, 162, 163,
	71, 70, -61, -61, 165, 160, 160, 160, 160, 149,
	156, -143, -150, 72, -71, -61, -61, -133, 160, 160,
	165, -1, 90, -107, -77, 160, -103, -125, -104, 89,
	-50, 44, 25, -95, -93, -90, -92, -133, 29, -91,
	136, 137, 138, 139, 18, -94, -90, -46, 18, 63,
	64, 65, -142, 77, -133, -93, 164, 151, 95, 43,
	125, 126, -133, -90, -133, -133, 156, 42, 156, 42,
	61, -133, -62, -62, 18, 61, 61, 42, 18, 18,
	164, 61, 164, -62, 6, -61, 161, 161, 161, 161,
	92, 69, 164, 69, -134, -135, 164, -133, -61, -61,
	-61, -143, -61, 73, 69, 74, -64, 160, -71, -61,
	67, 66, -61, -61, -61, -61, -61, -61, -61, -133,
	6, -77, -142, -107, 161, -111, -101, -100, -63, -61,
	-81, 155, -133, 144, 142, 145, 146, 147, 148, -142,
	-142, -64, -64, 73, 69, 67, 66, 75, 142, -142,
	-61, -133, 6, -1, 161, 89, -126, 91, -105, 91,
	-61, -62, -51, 50, 47, -93, 20, 164, 160, -109,
	-97, -96, -98, 28, 160, -93, 141, -71, 18, 164,
	-47, 23, -109, -147, 66, -147, -147, -111, 160, -149,
	27, 32, 33, 41, 20, -138, -61, 96, 160, 27,
	160, 160, -62, -133, -62, -133, -133, -62, -133, -62,
	-30, -29, -62, 25, 5, -30, -108, -62, -141, -141,
	-93, -108, -108, -107, -62, -2, -12, -5, -13, 86,
	85, -8, -10, -6, 111, 112, -133, -135, -134, -133,
	69, 69, -56, 27, 160, -58, -59, 70, -61, -64,
	-61, -64, -64, 161, -77, 161, 164, 27, 160, 160,
	160, 160, 160, 160, 160, -77, -77, -63, -64, -73,
	160, -71, 140, -73, -73, -143, -77, 164, -118, -117,
	91, 87, 93, -1, 93, -61, 90, 90, -53, 51,
	-62, -66, -67, -68, -61, -81, 26, 160, -42, -115,
	-114, -60, -133, -95, -90, -62, -133, 29, -47, 59,
	-144, -146, 58, 62, 164, 54, 56, 57, -133, 27,
	-97, 160, -109, -94, -48, 45, -61, -44, -43, -44,
	-44, -110, -133, -42, -24, 160, -133, -60, 160, -60,
	-133, -42, -133, -110, -42, 161, -36, -33, -35, -32,
	-34, -134, -133, 164, 27, -135, 164, 93, 154, -62,
	-103, 92, 92, -133, -133, 160, -110, -61, 70, 161,
	-111, -133, -77, -142, -142, -142, -142, -77, -77, -77,
	161, 161, 161, 70, -65, -64, 160, 98, 69, 161,
	-61, 93, -118, -1, -62, 85, -61, -1, 96, -62,
	-52, 52, 78, 164, -69, 48, 49, -65, -106, -60,
	-46, 164, 156, 161, 164, 164, 53, 53, -145, 55,
	-145, -144, -146, -109, -133, 161, -62, -47, -49, 46,
	47, 161, 164, -26, 36, 37, 38, 39, -25, -24,
	40, -106, 42, 42, 161, 27, 161, 164, 164, 40,
	161, 164, -30, -133, -108, 88, -2, 90, -127, 89,
	-2, -2, 92, 92, -42, 161, -61, 161, -77, -77,
	-77, -63, -77, 161, 161, 161, -64, 161, 164, -61,
	79, 130, 161, 86, 93, 90, -104, -125, 89, 19,
	-52, 133, -66, 134, 161, 164, -47, -115, -61, -77,
	-90, -97, -97, 53, 53, 53, -145, 164, -61, -107,
	-149, -110, -60, -60, 161, 164, -61, 161, -133, -133,
	-62, 27, 127, 27, -32, -35, -35, -134, -62, 27,
	-36, -2, -128, 91, -62, 93, 93, -2, -2, 161,
	27, 108, 161, 161, 161, 161, 161, 108, 108, 129,
	108, 129, -65, 164, 45, 86, -1, -70, 36, 37,
	26, -42, -106, 161, 161, 164, -99, 60, 61, -97,
	-97, -97, 53, -133, -62, -42, -26, -25, -42, -3,
	-14, -5, -18, 86, 85, -15, -16, 88, 128, 127,
	127, 161, -120, -119, 91, 87, 93, -2, 90, 88,
	88, 93, 93, 160, 160, 108, 108, 108, 108, 108,
	160, 160, 134, 160, 134, -61, 160, -117, -65, -77,
	-61, 160, -99, 60, -97, 161, 161, 93, 154, -62,
	-103, -62, -134, -135, -62, -3, -3, 27, 93, -120,
	-2, -62, 85, -2, 88, 88, -42, -83, -82, -84,
	107, 160, 160, 160, 160, 160, -82, -84, -83, 108,
	-82, 108, 161, -50, 161, -110, -61, -3, 90, -129,
	89, 92, 69, 69, 93, 93, 127, 86, 93, 90,
	-127, 89, 161, 161, -50, 44, 47, -83, -83, -83,
	-83, -82, 161, 161, 160, 161, 160, 161, 161, -3,
	-130, 91, -62, -4, -17, -5, -19, 86, 85, -15,
	-16, -6, -133, -133, -3, 86, -2, 47, -107, 161,
	161, 161, 161, 161, -83, -82, -122, -121, 91, 87,
	93, -3, 90, 93, 154, -62, -103, 92, 92, 93,
	-119, -66, 161, 161, 93, -122, -3, -62, 85, -3,
	88, -4, 90, -131, 89, -4, -4, -85, 135, 86,
	93, 90, -129, 89, -4, -132, 91, -62, 93, 93,
	-86, 73, 80, 6, 83, 86, -3, -124, -123, 91,
	87, 93, -4, 90, 88, 88, -88, 80, -87, 6,
	83, 81, 81, 84, -121, 93, -124, -4, -62, 85,
	-4, 70, 81, 81, 82, 84, 86, 93, 90, -131,
	89, -89, 80, -87, 86, -4, 82, -123,
}
var yyDef = [...]int{

	-2, -2, 2, 28, 29, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, -2,
	25, 0, 366, 44, 45, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 135, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	167, 0, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 231, 232, 233, 234, 198, 236, 0,
	37, 461, 204, 205, 206, 207, 208, 209, 0, 0,
	0, 212, 0, 0, 0, 299, 451, 0, 0, 0,
	438, 446, 447, 448, 0, 210, 211, 217, 430, 431,
	432, 433, 434, 435, 436, 437, 0, 0, 0, -2,
	218, -2, 230, 0, 366, 0, 367, 218, -2, 0,
	0, 0, 181, 0, 449, 179, 198, 0, 0, 72,
	444, 442, 73, 0, 75, 0, 0, 0, 0, 0,
	0, 80, 104, 106, 0, 136, 137, 138, 139, 0,
	0, 0, -2, -2, 218, 218, 151, 163, -2, -2,
	-2, -2, -2, 162, 374, -2, -2, 168, 169, 0,
	0, 218, 0, 0, 0, 218, 229, 0, 0, 35,
	36, 38, 199, 202, 0, 462, 0, 465, 466, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 284, 0, 289, 0, 449, 449, 465,
	466, 0, 0, 452, 277, 287, 288, 0, 449, 0,
	0, 3, -2, 0, 0, 289, 0, 416, 370, 0,
	191, 0, 0, 0, 382, 340, 341, 330, 331, 0,
	-2, -2, -2, -2, 0, 0, 380, 183, 0, 459,
	459, 459, 0, 450, 463, 0, 0, 0, 0, 0,
	0, 0, 107, 112, 120, 134, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 205, 441, 219, 235, 238, 254,
	-2, 0, 0, 0, 0, 0, 461, 0, 255, -2,
	-2, 0, 0, 0, 0, 0, 268, 198, 239, -2,
	0, 0, 278, 279, 280, 281, 282, 285, 286, 213,
	215, 0, 289, 290, 292, 0, 386, 362, 364, 360,
	361, 237, 212, 0, 0, 0, 0, 0, 0, 289,
	289, 260, 262, 0, 0, 0, 0, 451, 144, 289,
	0, 214, 216, 400, 294, 0, 0, -2, 0, 0,
	0, 218, 196, 0, 0, 198, 0, 0, 0, 183,
	-2, 346, 349, 350, 198, 342, 0, 345, 0, 0,
	185, 0, 182, 0, 460, 0, 0, 180, 0, 198,
	464, 0, 0, 0, 0, 445, 443, 198, 0, 198,
	0, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	105, 115, -2, 0, 117, 119, 160, -2, 149, 150,
	164, 155, 156, 375, -2, 0, 0, 39, 40, 0,
	366, 49, 50, 51, 26, 27, 0, 440, 439, 0,
	0, 0, 203, 0, 0, 263, 264, 0, 0, 269,
	-2, 273, 275, 291, 0, 293, 0, 0, 289, 449,
	449, 449, 289, 289, 289, 0, 0, 0, 0, 270,
	198, 257, 0, 274, 276, 0, 0, 0, 0, 400,
	-2, 0, 0, 417, 365, 371, 0, -2, 172, 0,
	-2, 190, 243, 249, 247, 248, 0, 0, 390, 181,
	394, 0, 212, 383, 0, 218, -2, 331, 396, 0,
	0, 455, 455, 453, 0, 454, 457, 458, 347, 0,
	453, 0, 183, 381, 187, 0, 184, 175, 178, 176,
	177, 0, 384, 85, 97, 0, 93, 88, 0, 0,
	0, 102, 103, 0, 111, 0, 0, 127, 128, 122,
	125, 121, 0, 0, 0, 108, 0, 0, -2, 218,
	0, -2, -2, 0, 0, 198, 0, 265, 0, 295,
	387, 363, 0, 289, 289, 289, 289, 0, 0, 0,
	296, 297, 298, 0, 0, 241, 0, 142, 0, 300,
	0, 0, 0, 401, 218, 43, 368, 414, 0, -2,
	192, 194, 0, 0, 245, 250, 251, 388, 0, 372,
	183, 0, 0, 336, 289, 0, 0, 0, 0, 456,
	0, 0, 455, 379, 348, 351, 218, 397, 174, 0,
	0, -2, 0, 86, 98, 99, 0, 0, 0, 95,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 116, 114, 377, 30, 5, -2, 420, 0,
	0, 0, -2, -2, 0, 0, 266, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 256, 0, 0,
	143, 0, 240, 41, 0, -2, 369, 415, 0, 173,
	193, 195, 244, 0, 198, 0, 392, 395, 393, 0,
	0, 352, 453, 0, 0, 0, 0, 0, 188, 186,
	198, 385, 100, 101, 97, 0, 94, 89, 90, -2,
	-2, 198, -2, 0, 123, 129, 126, 0, -2, 0,
	0, 404, 0, -2, 218, 0, 0, 0, 0, 200,
	0, 0, 295, 296, 297, 298, 300, 0, 0, 0,
	0, 0, 242, 0, 0, 42, 398, 246, 252, 253,
	0, 391, 373, 337, 338, 289, 353, 0, 0, 453,
	453, 356, 0, 212, 218, 84, 87, 96, 110, 0,
	0, 52, 53, 0, 366, 64, 65, 0, 57, -2,
	-2, 0, 0, 404, -2, 0, 0, 421, -2, 31,
	32, 0, 0, 198, 316, 0, 0, 0, 0, 0,
	316, 316, 0, 316, 0, 0, 189, 399, 389, 0,
	358, 0, 354, 0, 357, 343, 344, 130, -2, 218,
	0, 218, 229, 0, -2, 0, 0, 0, 0, 0,
	405, 218, 48, 418, 33, 34, 0, 0, 314, 189,
	0, 316, 316, 316, 316, 316, 0, 189, 0, 0,
	0, 0, 258, 0, 339, 0, 355, 7, -2, 424,
	0, -2, 0, 0, 131, 132, -2, 46, 0, -2,
	419, 0, 201, 302, 313, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 316, 311, 316, 301, 359, 408,
	0, -2, 218, 0, 0, 59, 60, 0, 366, 69,
	70, 71, 0, 0, 0, 47, 402, 0, 317, 303,
	304, 305, 306, 307, 0, 0, 0, 408, -2, 0,
	0, 425, -2, 0, -2, 218, 0, -2, -2, 133,
	403, 190, 310, 312, 0, 0, 409, 218, 63, 422,
	54, 9, -2, 428, 0, 0, 0, 315, 0, 61,
	0, -2, 423, 0, 412, 0, -2, 218, 0, 0,
	318, 0, 0, 0, 0, 62, 406, 0, 412, -2,
	0, 0, 429, -2, 55, 56, 0, 0, 327, 0,
	0, 320, 321, 322, 407, 0, 0, 413, 218, 68,
	426, 0, 326, 323, 324, 325, 66, 0, -2, 427,
	0, 319, 0, 329, 67, 410, 328, 411,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 159, 3, 3, 3, 163, 3, 3,
	160, 161, 155, 158, 164, 157, 165, 162, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 154,
	3, 156,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:238
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:248
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:255
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:259
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:265
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:269
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:275
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:279
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:341
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:361
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:365
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 30:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:383
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:393
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = Exit{}
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:413
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:427
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:439
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:475
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:485
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:505
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:519
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:523
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:527
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 68:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:575
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:581
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:585
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:593
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:597
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:603
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 83:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:613
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 88:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:637
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 90:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:641
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:645
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:649
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:655
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:659
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:665
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:669
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:675
		{
			yyVAL.expression = nil
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:679
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:683
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:687
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:691
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:697
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:701
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:705
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:709
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:713
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:717
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:721
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 109:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:727
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 110:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:731
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:735
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:739
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:745
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:749
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:755
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:759
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:769
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:773
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:777
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:783
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:789
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:793
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:799
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:805
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:809
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:815
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:819
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:823
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:829
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 131:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:833
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 132:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 133:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:851
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:855
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:859
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:863
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:867
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:871
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:875
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:881
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:885
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:889
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:895
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:899
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:903
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:907
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:911
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:915
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:919
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:923
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:927
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:931
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:935
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:939
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:943
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:947
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:951
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:955
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:959
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:963
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:967
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:971
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:975
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:979
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:983
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:987
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:993
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:997
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1001
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1007
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 173:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1017
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:       yyDollar[1].queryexpr,
				SelectEntity:     yyDollar[2].queryexpr,
				OrderByClause:    yyDollar[3].queryexpr,
				LimitClause:      yyDollar[4].queryexpr,
				OffsetClause:     yyDollar[5].queryexpr,
				ForUpdate:        true,
				ForUpdateLiteral: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal,
			}
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1031
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1041
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1059
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1086
		{
			yyVAL.queryexpr = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = nil
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = nil
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1126
		{
			yyVAL.queryexpr = nil
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1130
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = nil
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 200:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 201:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1200
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1204
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1208
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1212
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1216
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal, yylex.(*Lexer).GetDatetimeFormats())
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1220
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1226
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1232
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1238
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1242
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1246
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1260
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1264
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1268
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1278
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1282
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1286
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1290
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1298
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1302
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1306
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1310
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1314
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1318
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1322
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1326
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1330
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1334
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1338
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1348
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1354
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1358
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1368
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1378
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1388
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1392
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1398
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1402
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1408
		{
			yyVAL.token = Token{}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1412
		{
			yyVAL.token = yyDollar[1].token
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.token = yyDollar[1].token
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1422
		{
			yyVAL.token = yyDollar[1].token
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1426
		{
			yyVAL.token = yyDollar[1].token
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1438
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 258:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1499
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1503
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1507
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1511
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1515
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1523
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1535
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1539
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1543
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1553
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1557
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1561
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1565
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1569
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1573
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1577
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1583
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1587
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1591
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1595
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexprs = nil
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1605
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1611
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1615
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1619
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1623
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1634
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1642
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1646
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 301:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1662
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 303:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 305:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 306:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 307:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 308:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 309:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 310:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 311:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 312:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1718
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1725
		{
			yyVAL.queryexpr = nil
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1729
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1735
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1739
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1745
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1749
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1754
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1760
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1765
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1786
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1796
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1814
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1818
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1828
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 338:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1832
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 339:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1836
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1842
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 344:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1882
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 354:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 355:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1912
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1916
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1922
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1932
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1936
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1942
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1946
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1950
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1956
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.queryexpr = nil
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.queryexpr = nil
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2006
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2032
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2052
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 388:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2072
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 389:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2076
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2080
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 391:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2084
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2096
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2106
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2112
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2117
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2124
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2128
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2134
		{
			yyVAL.elseexpr = Else{}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2138
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2144
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2154
		{
			yyVAL.elseexpr = Else{}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2164
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2174
		{
			yyVAL.elseexpr = Else{}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2184
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2194
		{
			yyVAL.elseexpr = Else{}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2198
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2204
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2208
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2214
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2218
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2224
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2228
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2234
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2238
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2244
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2248
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2254
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2258
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2264
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2268
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2274
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2278
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2284
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2288
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2292
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2296
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2300
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2304
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2308
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2312
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2318
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2324
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2328
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2334
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2340
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2344
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2350
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2354
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2360
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2366
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2372
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2378
		{
			yyVAL.token = Token{}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2382
		{
			yyVAL.token = yyDollar[1].token
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2388
		{
			yyVAL.token = Token{}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2392
		{
			yyVAL.token = yyDollar[1].token
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2398
		{
			yyVAL.token = Token{}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2402
		{
			yyVAL.token = yyDollar[1].token
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2408
		{
			yyVAL.token = Token{}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2412
		{
			yyVAL.token = yyDollar[1].token
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2418
		{
			yyVAL.token = yyDollar[1].token
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2422
		{
			yyVAL.token = yyDollar[1].token
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2428
		{
			yyVAL.token = Token{}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2432
		{
			yyVAL.token = yyDollar[1].token
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2438
		{
			yyVAL.token = Token{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2442
		{
			yyVAL.token = yyDollar[1].token
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2448
		{
			yyVAL.token = Token{}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2452
		{
			yyVAL.token = yyDollar[1].token
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2458
		{
			yyVAL.token = yyDollar[1].token
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2462
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
