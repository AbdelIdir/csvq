//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2
import "github.com/mithrandie/csvq/lib/value"

//line parser.y:7
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const CASE = 57416
const IF = 57417
const ELSEIF = 57418
const WHILE = 57419
const WHEN = 57420
const THEN = 57421
const ELSE = 57422
const DO = 57423
const END = 57424
const DECLARE = 57425
const CURSOR = 57426
const FOR = 57427
const FETCH = 57428
const OPEN = 57429
const CLOSE = 57430
const DISPOSE = 57431
const NEXT = 57432
const PRIOR = 57433
const ABSOLUTE = 57434
const RELATIVE = 57435
const RANGE = 57436
const SEPARATOR = 57437
const PARTITION = 57438
const OVER = 57439
const COMMIT = 57440
const ROLLBACK = 57441
const CONTINUE = 57442
const BREAK = 57443
const EXIT = 57444
const PRINT = 57445
const PRINTF = 57446
const SOURCE = 57447
const TRIGGER = 57448
const FUNCTION = 57449
const AGGREGATE = 57450
const BEGIN = 57451
const RETURN = 57452
const IGNORE = 57453
const WITHIN = 57454
const VAR = 57455
const SHOW = 57456
const TIES = 57457
const NULLS = 57458
const TABLES = 57459
const VIEWS = 57460
const FIELDS = 57461
const CURSORS = 57462
const FUNCTIONS = 57463
const ERROR = 57464
const COUNT = 57465
const LISTAGG = 57466
const AGGREGATE_FUNCTION = 57467
const FUNCTION_WITH_INS = 57468
const COMPARISON_OP = 57469
const STRING_OP = 57470
const SUBSTITUTION_OP = 57471
const UMINUS = 57472
const UPLUS = 57473

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"RANGE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"TABLES",
	"VIEWS",
	"FIELDS",
	"CURSORS",
	"FUNCTIONS",
	"ERROR",
	"COUNT",
	"LISTAGG",
	"AGGREGATE_FUNCTION",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2084

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 163,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	13, 163,
	15, 163,
	17, 163,
	19, 163,
	138, 163,
	-2, 1,
	-1, 61,
	139, 244,
	-2, 163,
	-1, 99,
	78, 294,
	-2, 376,
	-1, 101,
	58, 143,
	59, 143,
	60, 143,
	-2, 154,
	-1, 137,
	64, 376,
	68, 376,
	69, 376,
	-2, 126,
	-1, 138,
	64, 376,
	68, 376,
	69, 376,
	-2, 127,
	-1, 139,
	64, 376,
	68, 376,
	69, 376,
	-2, 129,
	-1, 154,
	76, 1,
	80, 1,
	82, 1,
	-2, 163,
	-1, 213,
	64, 376,
	68, 376,
	69, 376,
	-2, 301,
	-1, 225,
	64, 376,
	68, 376,
	69, 376,
	-2, 119,
	-1, 226,
	64, 376,
	68, 376,
	69, 376,
	-2, 120,
	-1, 230,
	64, 376,
	68, 376,
	69, 376,
	-2, 136,
	-1, 232,
	82, 4,
	-2, 163,
	-1, 243,
	70, 0,
	127, 0,
	134, 0,
	-2, 214,
	-1, 244,
	70, 0,
	127, 0,
	134, 0,
	-2, 216,
	-1, 284,
	82, 1,
	-2, 163,
	-1, 294,
	48, 378,
	-2, 303,
	-1, 313,
	64, 376,
	68, 376,
	69, 376,
	-2, 287,
	-1, 329,
	64, 376,
	68, 376,
	69, 376,
	-2, 371,
	-1, 339,
	64, 376,
	68, 376,
	69, 376,
	-2, 137,
	-1, 362,
	82, 1,
	-2, 163,
	-1, 368,
	70, 0,
	127, 0,
	134, 0,
	-2, 225,
	-1, 390,
	78, 1,
	80, 1,
	82, 1,
	-2, 163,
	-1, 393,
	64, 376,
	68, 376,
	69, 376,
	-2, 159,
	-1, 397,
	64, 376,
	68, 376,
	69, 376,
	-2, 205,
	-1, 425,
	64, 376,
	68, 376,
	69, 376,
	-2, 149,
	-1, 459,
	76, 4,
	78, 4,
	80, 4,
	82, 4,
	-2, 163,
	-1, 462,
	82, 4,
	-2, 163,
	-1, 463,
	82, 4,
	-2, 163,
	-1, 478,
	82, 298,
	-2, 376,
	-1, 490,
	64, 376,
	68, 376,
	69, 376,
	-2, 162,
	-1, 527,
	13, 388,
	73, 388,
	138, 388,
	-2, 75,
	-1, 549,
	76, 4,
	80, 4,
	82, 4,
	-2, 163,
	-1, 554,
	82, 4,
	-2, 163,
	-1, 555,
	82, 4,
	-2, 163,
	-1, 560,
	76, 1,
	80, 1,
	82, 1,
	-2, 163,
	-1, 562,
	80, 295,
	82, 295,
	-2, 376,
	-1, 579,
	64, 376,
	68, 376,
	69, 376,
	-2, 316,
	-1, 586,
	64, 376,
	68, 376,
	69, 376,
	-2, 153,
	-1, 601,
	64, 376,
	68, 376,
	69, 376,
	-2, 84,
	-1, 605,
	82, 6,
	-2, 163,
	-1, 611,
	139, 104,
	142, 104,
	-2, 376,
	-1, 616,
	82, 4,
	-2, 163,
	-1, 664,
	82, 6,
	-2, 163,
	-1, 665,
	82, 6,
	-2, 163,
	-1, 669,
	82, 4,
	-2, 163,
	-1, 673,
	78, 4,
	80, 4,
	82, 4,
	-2, 163,
	-1, 682,
	64, 376,
	68, 376,
	69, 376,
	-2, 285,
	-1, 696,
	76, 6,
	78, 6,
	80, 6,
	82, 6,
	-2, 163,
	-1, 702,
	132, 55,
	-2, 376,
	-1, 717,
	64, 376,
	68, 376,
	69, 376,
	-2, 282,
	-1, 729,
	76, 6,
	80, 6,
	82, 6,
	-2, 163,
	-1, 732,
	82, 8,
	-2, 163,
	-1, 737,
	82, 6,
	-2, 163,
	-1, 740,
	76, 4,
	80, 4,
	82, 4,
	-2, 163,
	-1, 757,
	82, 6,
	-2, 163,
	-1, 782,
	82, 6,
	-2, 163,
	-1, 786,
	78, 6,
	80, 6,
	82, 6,
	-2, 163,
	-1, 788,
	76, 8,
	78, 8,
	80, 8,
	82, 8,
	-2, 163,
	-1, 791,
	82, 8,
	-2, 163,
	-1, 792,
	82, 8,
	-2, 163,
	-1, 804,
	76, 8,
	80, 8,
	82, 8,
	-2, 163,
	-1, 811,
	76, 6,
	80, 6,
	82, 6,
	-2, 163,
	-1, 815,
	82, 8,
	-2, 163,
	-1, 823,
	82, 8,
	-2, 163,
	-1, 827,
	78, 8,
	80, 8,
	82, 8,
	-2, 163,
	-1, 839,
	76, 8,
	80, 8,
	82, 8,
	-2, 163,
}

const yyPrivate = 57344

const yyLast = 3013

var yyAct = [...]int{

	75, 23, 805, 821, 781, 195, 822, 730, 780, 668,
	667, 437, 98, 212, 550, 340, 635, 361, 661, 143,
	294, 534, 499, 270, 481, 529, 1, 90, 117, 450,
	394, 121, 122, 507, 347, 21, 452, 312, 453, 62,
	323, 192, 491, 302, 404, 309, 718, 412, 204, 314,
	411, 360, 535, 290, 198, 660, 106, 293, 159, 82,
	23, 348, 80, 346, 20, 113, 63, 148, 295, 168,
	174, 305, 158, 427, 733, 170, 233, 209, 355, 416,
	432, 417, 418, 413, 410, 174, 153, 414, 545, 176,
	600, 546, 175, 116, 21, 190, 101, 174, 576, 759,
	565, 543, 182, 155, 200, 200, 542, 528, 163, 503,
	162, 161, 214, 200, 194, 164, 165, 167, 166, 168,
	222, 223, 158, 20, 224, 163, 494, 492, 234, 156,
	155, 839, 164, 165, 58, 163, 157, 162, 161, 152,
	430, 152, 164, 165, 795, 167, 166, 168, 292, 185,
	158, 239, 234, 493, 234, 23, 234, 199, 199, 203,
	238, 216, 778, 777, 237, 776, 215, 72, 57, 167,
	166, 168, 415, 399, 158, 263, 775, 266, 774, 156,
	155, 241, 753, 745, 744, 163, 157, 162, 161, 21,
	743, 754, 164, 165, 115, 115, 742, 118, 200, 666,
	647, 646, 645, 200, 644, 643, 200, 156, 155, 142,
	316, 272, 275, 163, 157, 162, 161, 245, 20, 172,
	164, 165, 622, 602, 107, 43, 103, 57, 104, 337,
	102, 156, 155, 23, 351, 599, 354, 163, 157, 162,
	161, 594, 588, 338, 164, 165, 259, 101, 163, 575,
	162, 161, 654, 265, 352, 164, 165, 567, 268, 269,
	566, 564, 449, 304, 557, 541, 289, 539, 527, 282,
	487, 43, 476, 371, 475, 367, 474, 369, 370, 307,
	308, 473, 328, 358, 321, 23, 107, 194, 260, 316,
	400, 402, 407, 200, 336, 262, 261, 419, 332, 324,
	200, 725, 200, 724, 379, 365, 357, 375, 364, 723,
	722, 389, 236, 416, 721, 417, 418, 413, 410, 21,
	421, 414, 57, 438, 693, 687, 442, 407, 407, 683,
	211, 406, 438, 273, 680, 456, 273, 409, 398, 386,
	678, 466, 436, 447, 435, 434, 199, 408, 20, 109,
	433, 384, 382, 380, 334, 457, 464, 465, 461, 422,
	438, 333, 426, 23, 428, 429, 443, 445, 191, 109,
	181, 467, 180, 179, 110, 504, 168, 227, 440, 788,
	696, 459, 59, 217, 115, 152, 280, 140, 694, 470,
	574, 23, 648, 572, 569, 211, 737, 21, 665, 359,
	57, 407, 353, 514, 501, 692, 649, 483, 482, 484,
	482, 109, 482, 469, 331, 322, 200, 489, 727, 664,
	569, 513, 605, 691, 498, 21, 20, 482, 219, 690,
	689, 316, 520, 688, 642, 720, 183, 568, 486, 281,
	500, 330, 442, 184, 838, 407, 160, 509, 831, 825,
	58, 818, 57, 502, 20, 126, 127, 817, 810, 796,
	23, 485, 511, 23, 23, 510, 515, 537, 342, 3,
	793, 787, 792, 512, 218, 548, 519, 120, 552, 553,
	784, 739, 73, 28, 500, 372, 736, 735, 373, 374,
	706, 695, 677, 676, 671, 316, 619, 220, 221, 618,
	559, 455, 387, 353, 407, 131, 200, 200, 563, 477,
	522, 523, 524, 525, 124, 125, 128, 129, 468, 458,
	388, 791, 555, 119, 554, 573, 580, 581, 3, 438,
	57, 570, 587, 407, 407, 571, 463, 186, 462, 603,
	596, 823, 28, 406, 398, 585, 577, 824, 578, 783,
	23, 823, 815, 782, 782, 23, 23, 757, 57, 670,
	363, 23, 592, 669, 362, 614, 669, 616, 595, 362,
	620, 621, 597, 598, 377, 284, 613, 407, 806, 608,
	609, 607, 731, 200, 200, 200, 626, 625, 551, 193,
	627, 271, 829, 482, 828, 21, 802, 713, 712, 634,
	675, 442, 674, 638, 639, 640, 23, 547, 824, 783,
	132, 133, 136, 134, 135, 670, 500, 23, 363, 841,
	837, 819, 652, 3, 20, 651, 809, 57, 771, 738,
	57, 57, 672, 624, 77, 78, 79, 28, 96, 81,
	558, 835, 200, 679, 800, 710, 632, 488, 43, 493,
	210, 96, 521, 168, 247, 684, 526, 681, 246, 248,
	482, 480, 686, 277, 734, 23, 23, 276, 356, 235,
	23, 306, 698, 508, 23, 279, 278, 250, 249, 707,
	207, 641, 701, 584, 438, 708, 715, 392, 416, 711,
	417, 418, 413, 410, 685, 716, 414, 23, 43, 416,
	97, 417, 418, 413, 410, 636, 637, 414, 287, 583,
	455, 610, 582, 97, 455, 28, 506, 57, 206, 207,
	208, 505, 57, 57, 747, 746, 741, 518, 57, 416,
	23, 417, 418, 23, 768, 769, 496, 497, 23, 288,
	726, 23, 589, 590, 591, 593, 517, 628, 424, 196,
	538, 766, 544, 3, 325, 326, 772, 536, 23, 630,
	631, 773, 112, 327, 111, 151, 705, 28, 748, 749,
	750, 751, 752, 57, 623, 612, 606, 790, 67, 9,
	604, 324, 794, 23, 57, 540, 335, 23, 765, 23,
	797, 431, 23, 23, 767, 530, 531, 532, 533, 197,
	303, 779, 291, 205, 301, 23, 228, 766, 130, 812,
	766, 766, 23, 58, 147, 150, 23, 114, 814, 756,
	615, 283, 8, 766, 23, 830, 832, 405, 23, 7,
	700, 3, 57, 57, 766, 6, 213, 57, 9, 840,
	23, 57, 766, 376, 765, 28, 766, 765, 765, 843,
	767, 69, 310, 767, 767, 60, 99, 311, 766, 3,
	765, 297, 296, 719, 57, 88, 767, 68, 71, 64,
	70, 765, 65, 28, 137, 138, 139, 767, 141, 765,
	629, 495, 396, 765, 395, 767, 149, 391, 803, 767,
	286, 807, 808, 516, 423, 765, 105, 57, 169, 17,
	57, 767, 44, 16, 813, 57, 74, 123, 57, 14,
	454, 451, 13, 12, 10, 826, 15, 703, 704, 11,
	177, 178, 76, 833, 762, 57, 99, 836, 657, 188,
	189, 760, 655, 9, 343, 341, 4, 169, 144, 842,
	2, 0, 28, 0, 0, 28, 28, 0, 0, 728,
	57, 0, 0, 0, 57, 0, 57, 0, 0, 57,
	57, 0, 0, 0, 0, 225, 226, 0, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 230, 0, 57,
	0, 0, 755, 57, 0, 0, 0, 0, 0, 240,
	770, 57, 242, 243, 244, 57, 0, 0, 251, 252,
	253, 254, 255, 256, 257, 0, 0, 57, 0, 0,
	785, 9, 0, 45, 46, 47, 48, 51, 49, 50,
	56, 52, 53, 54, 55, 0, 0, 22, 0, 3,
	285, 0, 28, 0, 0, 798, 444, 28, 28, 801,
	0, 0, 0, 28, 0, 5, 313, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 9, 820, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 656, 0, 0, 0, 0, 0,
	0, 0, 0, 366, 0, 368, 0, 0, 28, 173,
	0, 167, 166, 168, 0, 0, 158, 0, 0, 28,
	0, 0, 0, 0, 0, 0, 0, 171, 378, 0,
	0, 0, 0, 0, 0, 167, 166, 168, 0, 0,
	158, 0, 0, 0, 393, 397, 0, 0, 173, 0,
	0, 0, 0, 656, 656, 0, 0, 173, 0, 0,
	425, 9, 0, 0, 0, 0, 171, 28, 28, 0,
	0, 0, 28, 156, 155, 171, 28, 0, 0, 163,
	157, 162, 161, 0, 0, 656, 164, 165, 229, 9,
	0, 0, 0, 0, 0, 0, 0, 156, 155, 28,
	0, 460, 99, 163, 157, 162, 161, 0, 0, 258,
	164, 165, 259, 0, 0, 0, 0, 0, 656, 0,
	471, 761, 0, 0, 0, 0, 656, 0, 0, 0,
	0, 0, 28, 0, 478, 28, 0, 0, 0, 0,
	28, 0, 0, 28, 0, 0, 656, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 9, 0,
	28, 9, 9, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 656, 0, 761, 0, 0,
	761, 761, 0, 0, 0, 28, 0, 313, 0, 28,
	0, 28, 0, 761, 28, 28, 0, 0, 0, 66,
	656, 0, 0, 0, 761, 44, 0, 28, 0, 0,
	0, 0, 761, 0, 28, 0, 761, 0, 28, 0,
	0, 173, 108, 0, 298, 201, 28, 0, 761, 561,
	28, 0, 0, 0, 0, 0, 562, 173, 0, 171,
	44, 0, 28, 0, 0, 0, 0, 173, 9, 0,
	0, 397, 0, 9, 9, 401, 0, 0, 0, 9,
	0, 579, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 173, 0, 0, 586, 0, 0, 0, 173, 0,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 439,
	0, 187, 0, 601, 0, 0, 446, 0, 448, 0,
	0, 611, 0, 0, 9, 0, 0, 0, 617, 0,
	0, 0, 0, 0, 0, 9, 45, 46, 47, 48,
	51, 49, 50, 56, 52, 53, 54, 55, 173, 0,
	173, 0, 173, 0, 0, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 171, 0, 171, 0,
	171, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55, 9, 9, 0, 0, 0, 9, 0,
	0, 0, 9, 108, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 274, 0, 0, 0, 0, 167,
	166, 168, 0, 682, 158, 9, 0, 0, 0, 0,
	0, 0, 300, 827, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 697, 99, 0, 0, 699,
	702, 0, 0, 0, 0, 0, 0, 709, 9, 0,
	0, 9, 556, 0, 0, 0, 9, 0, 0, 9,
	0, 0, 717, 0, 0, 0, 0, 274, 0, 274,
	274, 156, 155, 0, 0, 0, 9, 163, 157, 162,
	161, 0, 0, 0, 164, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 274, 381, 383, 385,
	0, 9, 0, 0, 0, 9, 0, 9, 758, 0,
	9, 9, 0, 0, 298, 201, 0, 0, 0, 300,
	0, 300, 0, 9, 0, 108, 0, 108, 108, 0,
	9, 0, 0, 0, 9, 0, 0, 0, 0, 0,
	789, 99, 9, 173, 0, 0, 9, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 9, 0,
	799, 633, 0, 173, 43, 0, 0, 202, 0, 0,
	0, 0, 173, 44, 77, 78, 79, 201, 96, 81,
	58, 650, 0, 816, 0, 0, 0, 0, 0, 0,
	653, 0, 0, 76, 0, 0, 0, 0, 0, 0,
	274, 834, 274, 0, 274, 0, 45, 46, 47, 48,
	51, 49, 50, 56, 52, 53, 54, 55, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 0, 91, 0, 0, 300, 92, 0, 0, 0,
	97, 0, 0, 89, 85, 0, 173, 0, 0, 0,
	0, 0, 146, 94, 0, 0, 0, 0, 0, 0,
	44, 77, 78, 79, 714, 96, 81, 58, 45, 46,
	47, 48, 51, 49, 50, 56, 52, 53, 54, 55,
	76, 0, 145, 0, 45, 46, 47, 48, 51, 49,
	50, 56, 87, 95, 86, 55, 0, 0, 0, 0,
	274, 0, 0, 0, 83, 84, 93, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 92, 0, 300, 300, 97, 0, 0,
	89, 85, 0, 0, 0, 0, 0, 167, 166, 168,
	94, 0, 158, 0, 0, 0, 0, 0, 167, 166,
	168, 811, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 44, 77, 78, 79, 0, 96, 81,
	58, 45, 46, 47, 48, 51, 49, 50, 56, 87,
	95, 86, 55, 76, 0, 274, 0, 0, 0, 315,
	0, 83, 84, 93, 100, 0, 0, 0, 0, 156,
	155, 0, 300, 300, 300, 163, 157, 162, 161, 0,
	156, 155, 164, 165, 0, 0, 163, 157, 162, 161,
	0, 0, 91, 164, 165, 0, 92, 0, 0, 0,
	97, 210, 0, 89, 85, 0, 0, 0, 0, 44,
	77, 78, 79, 94, 96, 81, 58, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 76,
	0, 300, 0, 0, 0, 0, 44, 77, 78, 79,
	0, 96, 81, 58, 45, 46, 47, 48, 51, 49,
	50, 56, 87, 95, 86, 55, 76, 0, 0, 0,
	0, 0, 0, 0, 83, 84, 93, 100, 91, 0,
	0, 0, 92, 0, 0, 0, 97, 0, 0, 89,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 91, 0, 0, 0, 92,
	0, 0, 0, 97, 0, 43, 89, 85, 0, 0,
	0, 0, 44, 77, 78, 79, 94, 96, 81, 58,
	45, 46, 47, 48, 51, 49, 50, 56, 318, 319,
	317, 320, 76, 0, 0, 0, 0, 0, 315, 0,
	83, 84, 93, 100, 0, 0, 0, 45, 46, 47,
	48, 51, 49, 50, 56, 87, 95, 86, 55, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 84, 93,
	100, 91, 0, 0, 0, 92, 0, 0, 0, 97,
	0, 0, 89, 85, 0, 0, 0, 0, 44, 77,
	78, 79, 94, 96, 81, 58, 0, 0, 0, 0,
	0, 167, 166, 168, 0, 0, 158, 0, 76, 0,
	0, 0, 0, 0, 271, 44, 77, 78, 79, 0,
	96, 81, 58, 45, 46, 47, 48, 51, 49, 50,
	56, 87, 95, 86, 55, 76, 0, 0, 0, 0,
	0, 0, 0, 83, 84, 93, 100, 91, 0, 0,
	0, 92, 0, 0, 0, 97, 0, 0, 89, 85,
	0, 0, 0, 156, 155, 0, 0, 0, 94, 163,
	157, 162, 161, 44, 91, 267, 164, 165, 92, 0,
	0, 0, 97, 0, 0, 89, 85, 0, 0, 0,
	0, 44, 77, 231, 79, 94, 96, 81, 58, 45,
	46, 47, 48, 51, 49, 50, 56, 87, 95, 86,
	55, 76, 0, 0, 0, 0, 0, 0, 0, 83,
	84, 93, 61, 0, 0, 0, 45, 46, 47, 48,
	51, 49, 50, 56, 318, 319, 317, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 84, 93, 100,
	91, 0, 0, 0, 92, 0, 0, 44, 97, 0,
	0, 89, 85, 0, 58, 0, 0, 0, 0, 35,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 24,
	0, 0, 25, 0, 45, 46, 47, 48, 51, 49,
	50, 56, 52, 53, 54, 55, 0, 0, 0, 0,
	0, 0, 45, 46, 47, 48, 51, 49, 50, 56,
	87, 95, 86, 55, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 84, 93, 100, 43, 764, 763, 0,
	662, 0, 0, 0, 0, 0, 27, 0, 0, 32,
	30, 31, 29, 0, 167, 166, 168, 0, 0, 158,
	0, 33, 34, 349, 350, 0, 37, 38, 39, 40,
	732, 0, 0, 663, 0, 0, 26, 36, 45, 46,
	47, 48, 51, 49, 50, 56, 52, 53, 54, 55,
	44, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 24, 0, 0, 25, 156, 155, 0, 0,
	0, 0, 163, 157, 162, 161, 0, 0, 0, 164,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 35, 0, 43,
	345, 344, 0, 41, 0, 0, 0, 24, 0, 27,
	25, 0, 32, 30, 31, 29, 0, 0, 0, 0,
	0, 0, 0, 0, 33, 34, 349, 350, 42, 37,
	38, 39, 40, 0, 0, 0, 0, 0, 0, 26,
	36, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55, 44, 43, 659, 658, 0, 662, 0,
	58, 0, 0, 0, 27, 35, 0, 32, 30, 31,
	29, 0, 0, 0, 0, 24, 0, 0, 25, 33,
	34, 0, 0, 0, 37, 38, 39, 40, 0, 0,
	0, 663, 0, 0, 26, 36, 45, 46, 47, 48,
	51, 49, 50, 56, 52, 53, 54, 55, 0, 0,
	0, 0, 0, 0, 0, 167, 166, 168, 0, 0,
	158, 0, 43, 19, 18, 0, 41, 0, 0, 786,
	0, 0, 27, 0, 0, 32, 30, 31, 29, 0,
	0, 0, 0, 0, 167, 166, 168, 33, 34, 158,
	0, 42, 37, 38, 39, 40, 0, 0, 740, 0,
	0, 0, 26, 36, 45, 46, 47, 48, 51, 49,
	50, 56, 52, 53, 54, 55, 0, 156, 155, 0,
	0, 0, 0, 163, 157, 162, 161, 167, 166, 168,
	164, 165, 158, 0, 0, 0, 0, 167, 166, 168,
	0, 729, 158, 0, 0, 0, 156, 155, 0, 0,
	0, 673, 163, 157, 162, 161, 167, 166, 168, 164,
	165, 158, 0, 0, 0, 0, 167, 166, 168, 0,
	560, 158, 0, 0, 0, 0, 0, 167, 166, 168,
	549, 0, 158, 0, 0, 0, 0, 0, 0, 156,
	155, 479, 0, 0, 0, 163, 157, 162, 161, 156,
	155, 0, 164, 165, 0, 163, 157, 162, 161, 167,
	166, 168, 164, 165, 158, 0, 0, 0, 156, 155,
	0, 0, 0, 390, 163, 157, 162, 161, 156, 155,
	0, 164, 165, 0, 163, 157, 162, 161, 0, 156,
	155, 164, 165, 0, 0, 163, 157, 162, 161, 167,
	166, 168, 164, 165, 158, 0, 0, 0, 0, 167,
	166, 168, 0, 0, 158, 232, 0, 44, 0, 0,
	0, 156, 155, 154, 0, 0, 0, 163, 157, 162,
	161, 167, 166, 168, 164, 165, 158, 76, 0, 44,
	0, 472, 166, 168, 0, 0, 158, 0, 0, 0,
	0, 167, 0, 168, 0, 0, 158, 420, 0, 0,
	0, 156, 155, 44, 0, 0, 0, 163, 157, 162,
	161, 156, 155, 0, 164, 165, 0, 163, 157, 162,
	161, 0, 0, 201, 164, 165, 0, 44, 0, 0,
	0, 0, 0, 156, 155, 0, 0, 0, 0, 163,
	157, 162, 161, 156, 155, 403, 164, 165, 44, 163,
	157, 162, 161, 156, 155, 58, 164, 165, 0, 163,
	157, 162, 161, 44, 0, 264, 164, 165, 45, 46,
	47, 48, 51, 49, 50, 56, 52, 53, 54, 55,
	44, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	45, 46, 47, 48, 51, 49, 50, 56, 52, 53,
	54, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 45, 46, 47, 48, 51, 49,
	50, 56, 52, 53, 54, 55, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 45, 46,
	47, 48, 51, 49, 50, 56, 52, 53, 54, 55,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 45,
	46, 47, 48, 51, 49, 50, 56, 52, 53, 54,
	55, 0, 0, 0, 45, 46, 47, 48, 51, 49,
	50, 56, 52, 53, 54, 55, 0, 0, 0, 0,
	0, 45, 46, 47, 48, 51, 49, 50, 56, 52,
	53, 54, 55,
}
var yyPact = [...]int{

	2489, -1000, 250, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2074, 1998,
	-1000, -1000, 211, 236, 734, 732, 802, 2854, -1000, 439,
	2886, 2886, 424, -1000, -1000, 796, 493, 1998, 1998, 1998,
	265, 1629, 808, 740, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 256, -1000, 2489,
	2694, 1922, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 256, -1000, -1000, -46, -54, -1000, -1000, -1000,
	-1000, -1000, -1000, 1998, 1998, 235, 234, 232, -1000, 1998,
	309, 231, 1998, 1998, 2886, 230, -1000, -1000, 511, 2716,
	1922, 710, 779, 2809, 1613, 789, 660, 578, -1000, 575,
	1998, 2886, 2809, -1000, 19, 254, -1000, 390, -1000, 2886,
	2886, -1000, -1000, 2886, -1000, -1000, -1000, -1000, 1998, 1998,
	243, -1000, -1000, -1000, -1000, -1000, 792, 2716, 1026, 2716,
	2177, 2684, 12, 605, 802, -1000, -1000, -1000, -1000, 18,
	2886, -1000, 1998, -1000, 2489, 1998, 1998, 1998, 586, 590,
	616, 1998, 1998, 1998, 1998, 1998, 1998, 1998, -1000, 1050,
	149, 157, 156, 273, 2869, 1819, 2159, -1000, -1000, 1998,
	578, 578, 513, 195, 195, 599, 614, -1000, 2, -1000,
	316, 578, 495, 1998, 149, 663, 697, 2809, 786, 6,
	-1000, -1000, 1281, 790, 782, 1281, 610, 610, 610, 1895,
	-1000, 145, -1000, 104, 277, 727, 802, 1998, 356, 276,
	223, 216, -1000, -1000, 766, 2716, 2716, 629, 2886, 1998,
	2716, 1998, 2366, 2886, 802, 2886, 14, 604, 740, 261,
	2716, 484, 115, -25, -25, 642, 1998, 195, 1998, 195,
	195, -8, -8, -1000, -1000, -1000, 2736, 2, -1000, 1998,
	-1000, -1000, -1000, -1000, -1000, 1998, -1000, -1000, 1998, 1716,
	494, 1998, -1000, 1922, -1000, -1000, 195, 215, 214, 213,
	586, -1000, 1998, 438, 2489, 2644, 641, 1998, 2101, 152,
	2833, 2763, 2809, 782, 30, -1000, 2785, -1000, -1000, 1551,
	-1000, 1281, 708, 1998, -1000, 273, -1000, 273, 273, -1000,
	-2, 769, -1000, 2716, -1000, -1000, -58, 212, 207, 206,
	204, -1000, 2886, 575, -1000, 1316, 898, 2763, -1000, 2716,
	575, 2886, 575, 123, 2886, 802, -1000, -1000, -1000, 2716,
	437, 249, -1000, -1000, 2074, 1998, -1000, -1000, -1000, -1000,
	-1000, 457, -1000, -14, 455, 2886, 2886, -1000, 203, 2886,
	436, 489, 2489, 1998, -1000, -1000, 2726, -1000, -25, -1000,
	-1000, -1000, 142, 137, 135, 133, 427, 1998, 2612, 596,
	198, -1000, 198, -1000, 198, -1000, 374, 131, 573, -1000,
	2489, -1000, 1998, 80, -1000, -16, 693, 2716, -1000, 195,
	2763, -1000, -1000, 2886, 789, -33, 241, -73, -1000, -1000,
	673, 668, 623, 623, 680, 1281, -1000, -1000, -1000, -1000,
	2886, 264, 782, 705, 685, 2716, 621, -1000, -1000, 621,
	1895, 2886, 1819, 578, 578, 578, 1998, 129, -35, -1000,
	764, 2886, 722, -1000, 2763, 713, -1000, 128, -1000, 763,
	126, -36, -1000, -1000, -41, 717, -51, -1000, 530, 2366,
	2601, 510, 2366, 2366, 443, 441, 575, 125, 565, 418,
	-1000, 2591, 1998, -1000, -1000, -1000, -1000, -1000, 2716, 1998,
	195, 122, -42, 121, 118, -1000, 343, 282, -1000, 511,
	2716, -1000, 576, 278, 2101, 274, -1000, -1000, -1000, 110,
	-44, -1000, 782, 2763, 1998, 1281, 1281, 664, -1000, 661,
	635, 623, -1000, -1000, -1000, -1000, -1000, 1998, 1998, -1000,
	-1000, 103, 1998, 1998, 1716, 1998, 102, 759, 2886, -1000,
	-1000, -1000, 2763, 2763, 96, -52, 1998, 84, 2886, 758,
	313, 754, 802, 802, 1998, 753, 802, -1000, -1000, 2366,
	487, 1998, 417, 414, 2366, 2366, 83, 752, -1000, 558,
	2489, 2, 2026, -1000, -1000, 195, -1000, -1000, -1000, 707,
	-1000, -1000, -1000, -1000, 728, 625, 2763, -1000, -1000, 2716,
	680, 650, 1281, 1281, 1281, 633, 2716, -1000, 337, 66,
	65, 63, 62, 61, 295, 575, -1000, -1000, -1000, 764,
	2886, 2716, -1000, -1000, 575, 2421, 310, -1000, -1000, -1000,
	717, 2716, 289, 60, 483, 412, 2366, 2572, 525, 523,
	411, 410, -1000, 202, -1000, 542, -1000, -1000, 196, -1000,
	-1000, -1000, 195, -1000, -1000, -1000, 1998, 191, 650, 639,
	680, 1281, 187, 336, 333, 332, 326, 308, 186, 272,
	-1000, -1000, -1000, -1000, 409, 248, -1000, -1000, 2074, 1998,
	-1000, -1000, 1998, 1998, 2421, 2421, 744, 408, 486, 2366,
	1998, 571, -1000, 2366, -1000, -1000, 521, 520, 575, -1000,
	710, -1000, 2716, 2886, -1000, 1998, 680, 339, 176, 172,
	171, 165, 163, 339, 321, -1000, 2421, 2562, 504, 2269,
	10, 600, 2716, 405, 404, 287, 554, 399, -1000, 2519,
	-1000, 510, -1000, -1000, 57, 51, 45, 2716, 44, 710,
	682, 339, 339, 339, 339, 339, 43, 53, -1000, 2421,
	477, 1998, 2243, 2886, 2886, -1000, -1000, 2421, -1000, 553,
	2366, -1000, -1000, -1000, -1000, -1000, -1000, 1998, 39, 37,
	26, 24, 23, -1000, 339, 473, 398, 2421, 2490, 389,
	247, -1000, -1000, 2074, 1998, -1000, -1000, -1000, 440, 391,
	388, -1000, 539, -1000, -1000, -1000, -1000, -1000, -1000, 5,
	377, 474, 2421, 1998, 570, -1000, 2421, 519, 2243, 1743,
	500, 2243, 2243, -1000, -1000, -1000, 551, 376, -1000, 1732,
	-1000, 504, -1000, -1000, 2243, 472, 1998, 375, 369, -1000,
	546, 2421, -1000, 471, 367, 2243, 1404, 517, 515, -1000,
	533, 366, 461, 2243, 1998, 567, -1000, 2243, -1000, -1000,
	-1000, 545, 362, -1000, 52, -1000, 500, -1000, 544, 2243,
	-1000, -1000, 532, -1000,
}
var yyPgo = [...]int{

	0, 26, 15, 252, 99, 468, 61, 940, 63, 938,
	34, 936, 935, 934, 932, 55, 18, 931, 928, 924,
	919, 916, 914, 52, 21, 25, 913, 912, 38, 911,
	910, 36, 29, 909, 907, 906, 903, 899, 1045, 73,
	56, 896, 48, 43, 894, 893, 5, 890, 42, 887,
	1027, 886, 67, 66, 62, 59, 39, 836, 37, 27,
	24, 30, 884, 882, 881, 880, 1279, 872, 870, 869,
	868, 219, 778, 867, 865, 49, 46, 863, 53, 68,
	54, 862, 20, 861, 16, 857, 852, 851, 12, 23,
	843, 22, 13, 57, 11, 45, 835, 829, 827, 44,
	822, 17, 51, 9, 10, 4, 8, 6, 3, 41,
	821, 14, 820, 7, 819, 2, 818, 0, 167, 19,
	482, 817, 65, 77, 58, 50, 33, 47, 71, 815,
	40, 446,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 26, 27, 27, 27,
	27, 28, 29, 29, 30, 31, 31, 32, 32, 32,
	33, 33, 33, 33, 34, 34, 34, 34, 34, 34,
	34, 35, 35, 35, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 37, 37, 37, 38, 39,
	39, 39, 39, 40, 40, 41, 42, 42, 43, 43,
	44, 44, 45, 45, 46, 46, 47, 47, 47, 48,
	48, 49, 49, 50, 50, 51, 51, 52, 52, 53,
	53, 53, 53, 53, 53, 54, 55, 56, 56, 56,
	56, 56, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 58, 59, 59, 60,
	60, 61, 61, 62, 62, 63, 63, 64, 64, 64,
	65, 65, 66, 67, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 69, 69, 69, 69, 69, 69, 69,
	70, 70, 70, 70, 71, 71, 72, 72, 73, 73,
	73, 73, 73, 74, 74, 75, 75, 75, 75, 75,
	75, 75, 75, 76, 77, 77, 78, 78, 79, 79,
	79, 81, 82, 82, 82, 82, 82, 82, 82, 83,
	83, 83, 83, 83, 83, 84, 84, 85, 85, 86,
	86, 86, 87, 88, 88, 89, 89, 90, 90, 91,
	91, 92, 92, 93, 93, 80, 80, 94, 94, 95,
	95, 96, 96, 96, 96, 97, 98, 99, 99, 100,
	100, 101, 101, 102, 102, 103, 103, 104, 104, 105,
	105, 106, 106, 107, 107, 108, 108, 109, 109, 110,
	110, 111, 111, 112, 112, 113, 113, 114, 114, 115,
	115, 116, 116, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 118, 119, 119, 120,
	121, 121, 122, 122, 123, 123, 124, 124, 125, 125,
	126, 126, 127, 127, 128, 128, 129, 129, 130, 130,
	131, 131,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 0, 1, 1, 1, 1, 2,
	2, 5, 6, 3, 4, 2, 2, 2, 4, 2,
	2, 2, 2, 2, 4, 2, 3, 4, 5, 5,
	4, 4, 4, 1, 1, 3, 0, 2, 0, 2,
	0, 3, 0, 2, 0, 3, 0, 3, 4, 0,
	2, 0, 2, 0, 2, 6, 9, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 3, 2, 4, 1, 1, 0, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 4, 4,
	6, 6, 4, 6, 4, 4, 4, 6, 4, 4,
	6, 4, 2, 3, 3, 3, 3, 3, 2, 2,
	3, 3, 2, 2, 0, 1, 4, 4, 5, 5,
	5, 5, 1, 5, 10, 8, 9, 9, 9, 9,
	9, 8, 10, 2, 0, 3, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 3, 1, 1, 3, 4,
	5, 6, 7, 5, 6, 2, 4, 1, 1, 1,
	3, 1, 5, 0, 1, 4, 5, 0, 2, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 6, 9, 5, 8, 7, 3, 1, 3, 5,
	6, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	1, 3, 1, 3, 0, 1, 0, 1, 0, 1,
	0, 1, 1, 1, 0, 1, 0, 1, 0, 1,
	1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -96, -97, -100, -72,
	-22, -20, -26, -27, -33, -21, -36, -37, 75, 74,
	-8, -10, -50, -117, 26, 29, 113, 83, -120, 89,
	87, 88, 86, 98, 99, 16, 114, 103, 104, 105,
	106, 77, 102, 73, 4, 115, 116, 117, 118, 120,
	121, 119, 123, 124, 125, 126, 122, -118, 11, 132,
	-57, 138, -56, -53, -69, -67, -66, -72, -73, -87,
	-68, -70, -118, -120, -35, -117, 24, 5, 6, 7,
	-54, 10, -55, 135, 136, 75, 125, 123, -74, 74,
	-59, 63, 67, 137, 84, 124, 9, 71, -88, -57,
	138, -39, 19, 15, 17, -41, -40, 13, -66, 138,
	138, 30, 30, -122, -121, -118, -122, -117, -118, 84,
	38, -117, -117, -34, 90, 91, 31, 32, 92, 93,
	12, 12, 117, 118, 120, 121, 119, -57, -57, -57,
	122, -57, -118, -119, -9, 113, 83, 6, -52, -51,
	-129, 25, 129, -1, 79, 128, 127, 134, 70, -124,
	-131, 136, 135, 133, 140, 141, 66, 65, 67, -57,
	-92, -38, -71, -50, 143, 138, 143, -57, -57, 138,
	138, 138, -88, 127, 134, -124, -131, -66, -57, -57,
	-117, 138, -109, 78, -92, -46, 39, 20, -80, -78,
	-117, 24, 14, -80, -42, 14, 58, 59, 60, -123,
	72, -71, -92, -57, -117, -78, 142, 129, 84, 38,
	107, 108, -117, -117, -117, -57, -57, 134, 14, 142,
	-57, 6, 81, 64, 142, 64, -118, -119, 142, -117,
	-57, -1, -57, -57, -57, -124, 68, 64, 69, 62,
	61, -57, -57, -57, -57, -57, -57, -57, 139, 142,
	139, 139, 139, -117, 6, -123, -117, 6, -123, -123,
	-89, 78, -59, 138, -66, -59, 68, 64, 62, 61,
	70, 123, -123, -110, 80, -57, -47, 45, 42, -79,
	-78, 16, 142, -93, -82, -79, -81, -83, 23, 138,
	-66, 14, -43, 18, -93, -128, 61, -128, -128, -95,
	-86, -85, -58, -57, -75, 133, -117, 125, 123, 124,
	126, 139, 138, -130, 22, 27, 28, 36, -122, -57,
	85, 138, 22, 138, 138, 20, -53, -117, -92, -57,
	-2, -12, -5, -13, 75, 74, -8, -10, -6, 100,
	101, -117, -119, -118, -117, 64, 64, -52, 22, 138,
	-102, -101, 80, 76, -54, -55, -57, -59, -57, -59,
	-59, -92, -71, -71, -71, -58, -90, 80, -57, -59,
	138, -66, 138, -66, 138, -66, -124, -71, 82, -1,
	79, -49, 46, -57, -61, -62, -63, -57, -75, 21,
	138, -38, -117, 22, -99, -98, -56, -117, -80, -43,
	54, -125, -127, 53, 57, 142, 49, 51, 52, -117,
	22, -82, -93, -44, 40, -57, -40, -39, -40, -40,
	142, 22, 138, 138, 138, 138, 138, -94, -117, -38,
	-23, 138, -117, -56, 138, -56, -38, -94, -38, 139,
	-32, -29, -31, -28, -30, -118, -117, -119, 82, 132,
	-57, -88, 81, 81, -117, -117, 138, -94, 82, -102,
	-1, -57, 65, 139, 139, 139, 139, 82, -57, 79,
	65, -60, -59, -60, -60, 87, 64, 139, 74, -1,
	-57, -48, 47, 73, 142, -64, 43, 44, -60, -91,
	-56, -117, -42, 142, 134, 48, 48, -126, 50, -126,
	-125, -127, -93, -117, 139, -43, -45, 41, 42, -95,
	-117, -71, -123, -123, -123, -123, -71, 139, 142, -25,
	31, 32, 33, 34, -24, -23, 35, -91, 37, 139,
	22, 139, 142, 142, 35, 139, 142, 77, -2, 79,
	-111, 78, -2, -2, 81, 81, -38, 139, 75, 82,
	79, -57, -57, -59, 139, 142, 139, 139, 94, 112,
	-109, -48, 115, -61, 116, 139, 142, -43, -99, -57,
	-82, -82, 48, 48, 48, -126, -57, -92, 139, -71,
	-71, -71, -58, -71, 139, -130, -94, -56, -56, 139,
	142, -57, 139, -117, 22, 109, 22, -28, -31, -31,
	-118, -57, 22, -32, -2, -112, 80, -57, 82, 82,
	-2, -2, 139, 22, 75, -1, -89, -60, 40, -65,
	31, 32, 21, -38, -91, -84, 55, 56, -82, -82,
	-82, 48, 97, 139, 139, 139, 139, 139, 97, 111,
	-38, -25, -24, -38, -3, -14, -5, -18, 75, 74,
	-15, -16, 77, 110, 109, 109, 139, -104, -103, 80,
	76, 82, -2, 79, 77, 77, 82, 82, 138, -101,
	138, -60, -57, 138, -84, 55, -82, 138, 97, 97,
	97, 97, 97, 138, 116, 82, 132, -57, -88, -57,
	-118, -119, -57, -3, -3, 22, 82, -104, -2, -57,
	74, -2, 77, 77, -38, -46, -94, -57, -76, -77,
	96, 138, 138, 138, 138, 138, -76, 97, -3, 79,
	-113, 78, 81, 64, 64, 82, 82, 109, 75, 82,
	79, -111, 139, 139, 139, 139, -46, 42, -76, -76,
	-76, -76, -76, 139, 138, -3, -114, 80, -57, -4,
	-17, -5, -19, 75, 74, -15, -16, -6, -117, -117,
	-3, 75, -2, -92, 139, 139, 139, 139, 139, -76,
	-106, -105, 80, 76, 82, -3, 79, 82, 132, -57,
	-88, 81, 81, 82, -103, 139, 82, -106, -3, -57,
	74, -3, 77, -4, 79, -115, 78, -4, -4, 75,
	82, 79, -113, -4, -116, 80, -57, 82, 82, 75,
	-3, -108, -107, 80, 76, 82, -4, 79, 77, 77,
	-105, 82, -108, -4, -57, 74, -4, 75, 82, 79,
	-115, 75, -4, -107,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 293,
	41, 42, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 114, 73, 74, 0, 0, 0, 0, 0,
	0, 0, 34, 386, 353, 354, 355, 356, 357, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, -2,
	376, -2, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 177, 0, 169, 170, 171,
	172, 173, 174, 0, 0, 0, 363, 361, 252, 293,
	376, 0, 0, 0, 0, 362, 175, 176, 0, -2,
	163, -2, 0, 0, 0, 146, 0, 374, 144, 163,
	244, 0, 0, 69, 372, 370, 70, 0, 72, 0,
	0, 93, 94, 0, 115, 116, 117, 118, 0, 0,
	0, 125, 130, 131, 132, 133, 0, -2, -2, -2,
	135, 376, 192, 0, 0, 32, 33, 35, 164, 167,
	0, 387, 0, 3, -2, 0, 390, 391, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 376,
	0, 0, 0, 0, 0, 244, 0, 238, 239, 244,
	374, 374, 0, 390, 391, 0, 0, 232, 242, 243,
	0, 374, 339, 0, 0, 156, 0, 0, 0, 305,
	266, 267, 0, 0, 148, 0, 384, 384, 384, 0,
	375, 0, 245, -2, 388, 0, 0, 0, 0, 0,
	0, 0, 95, 100, 0, -2, -2, 0, 0, 0,
	-2, 170, -2, 0, 0, 0, 0, 0, 386, 0,
	369, 323, 213, -2, -2, 0, 0, 0, 0, 0,
	0, 233, 234, 235, 236, 237, 240, 241, 195, 0,
	197, 212, 247, 178, 180, 244, 179, 181, 244, 244,
	297, 0, 215, 163, 198, 217, 0, 0, 0, 0,
	376, 123, 244, 0, -2, 376, 161, 0, 0, 163,
	268, 0, 0, 148, -2, 272, 273, 276, 277, 163,
	271, 0, 150, 0, 147, 0, 385, 0, 0, 145,
	309, 289, 291, -2, 288, 196, 177, 363, 361, 362,
	364, 246, 0, 163, 389, 0, 0, 0, 373, -2,
	163, 0, 163, 0, 0, 0, 124, 134, 128, -2,
	0, 0, 36, 37, 0, 293, 46, 47, 48, 23,
	24, 0, 368, 367, 0, 0, 0, 168, 0, 0,
	0, 323, -2, 0, 218, 219, 376, 222, -2, 226,
	229, 302, 0, 0, 0, 0, 0, 0, 376, 0,
	163, 224, 163, 228, 163, 231, 0, 0, 0, 340,
	-2, 138, 0, -2, 155, 201, 207, -2, 206, 0,
	0, 313, 269, 0, 146, 317, 0, 177, 306, 319,
	0, 0, 380, 380, 378, 0, 379, 382, 383, 274,
	0, 378, 148, 152, 0, -2, 140, 143, 141, 142,
	0, 0, 244, 374, 374, 374, 244, 0, 307, 77,
	87, 0, 83, 80, 0, 0, 92, 0, 99, 0,
	0, 107, 108, 102, 105, 101, 0, 96, 0, -2,
	376, 0, -2, -2, 0, 0, 163, 0, 0, 0,
	324, 376, 0, 248, 249, 250, 251, 292, -2, 0,
	0, 0, 199, 0, 0, 121, 0, 253, 40, 337,
	-2, 157, 159, 0, 0, 203, 208, 209, 311, 0,
	299, 270, 148, 0, 0, 0, 0, 0, 381, 0,
	0, 380, 304, 275, 278, 320, 139, 0, 0, 310,
	290, 0, 244, 244, 244, 244, 0, -2, 0, 78,
	88, 89, 0, 0, 0, 85, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 27, 5, -2,
	343, 0, 0, 0, -2, -2, 0, 0, 38, 0,
	-2, 220, -2, 221, 223, 0, 227, 230, 122, 0,
	338, 158, 160, 202, 0, 163, 0, 315, 318, -2,
	279, 378, 0, 0, 0, 0, -2, 151, 246, 0,
	0, 0, 0, 0, 0, 163, 308, 90, 91, 87,
	0, -2, 81, 82, 163, -2, 0, 103, 109, 106,
	0, -2, 0, 0, 327, 0, -2, 376, 0, 0,
	0, 0, 165, 0, 39, 321, 296, 200, 0, 204,
	210, 211, 0, 314, 300, 280, 0, 0, 378, 378,
	283, 0, 0, 248, 249, 250, 251, 253, 0, 0,
	76, 79, 86, 98, 0, 0, 49, 50, 0, 293,
	61, 62, 0, 54, -2, -2, 0, 0, 327, -2,
	0, 0, 344, -2, 28, 29, 0, 0, 163, 322,
	154, 312, -2, 0, 281, 0, 284, 264, 0, 0,
	0, 0, 0, 264, 0, 110, -2, 376, 0, 376,
	192, 0, -2, 0, 0, 0, 0, 0, 328, 376,
	45, 341, 30, 31, 0, 0, 0, -2, 0, 154,
	0, 264, 264, 264, 264, 264, 0, 0, 7, -2,
	347, 0, -2, 0, 0, 111, 112, -2, 43, 0,
	-2, 342, 166, 254, 286, 255, 263, 0, 0, 0,
	0, 0, 0, 261, 264, 331, 0, -2, 376, 0,
	0, 56, 57, 0, 293, 66, 67, 68, 0, 0,
	0, 44, 325, 265, 256, 257, 258, 259, 260, 0,
	0, 331, -2, 0, 0, 348, -2, 0, -2, 376,
	0, -2, -2, 113, 326, 262, 0, 0, 332, 376,
	60, 345, 51, 9, -2, 351, 0, 0, 0, 58,
	0, -2, 346, 335, 0, -2, 376, 0, 0, 59,
	329, 0, 335, -2, 0, 0, 352, -2, 52, 53,
	330, 0, 0, 336, 376, 65, 349, 63, 0, -2,
	350, 64, 333, 334,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 137, 3, 3, 3, 141, 3, 3,
	138, 139, 133, 136, 142, 135, 143, 140, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 132,
	3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:209
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:214
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:219
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:230
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:236
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:240
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:246
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:250
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:256
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:260
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:264
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:268
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:272
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:276
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:280
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:284
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:288
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:292
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:314
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:320
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:330
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:334
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:338
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:346
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:352
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:356
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:362
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:372
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:382
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:386
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:390
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:394
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:398
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:404
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:408
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:412
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:416
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:420
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:430
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:440
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:444
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:448
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:454
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:458
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:464
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:468
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:474
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:478
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:482
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:490
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:500
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:504
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:508
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:512
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:516
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:522
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:526
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:530
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:540
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:544
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:550
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:554
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:558
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:562
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:566
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:570
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:574
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:578
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:584
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:588
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:594
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:598
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:604
		{
			yyVAL.expression = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:608
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:612
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:616
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:620
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:630
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:634
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:638
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:642
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 97:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:648
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:652
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:656
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:660
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:666
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:672
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:676
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:682
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:688
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:692
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:698
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:702
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:706
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:712
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 111:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:716
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:720
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:724
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:730
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:734
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:738
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:742
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:746
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:750
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:754
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:760
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 122:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:764
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:768
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:774
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:778
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:782
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:786
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:790
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:794
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:798
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:802
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:806
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:810
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].token.Token}
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:814
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[4].identifier}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:820
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:824
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:828
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:834
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:846
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:856
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:865
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:874
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:885
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:889
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:895
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:901
		{
			yyVAL.queryexpr = nil
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:905
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:911
		{
			yyVAL.queryexpr = nil
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:915
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:921
		{
			yyVAL.queryexpr = nil
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:925
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:931
		{
			yyVAL.queryexpr = nil
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:935
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:941
		{
			yyVAL.queryexpr = nil
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:945
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:951
		{
			yyVAL.queryexpr = nil
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:955
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:959
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:965
		{
			yyVAL.queryexpr = nil
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:969
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:975
		{
			yyVAL.queryexpr = nil
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:979
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:985
		{
			yyVAL.queryexpr = nil
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:989
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:995
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 166:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:999
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1015
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1019
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1023
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1027
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1031
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1035
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1041
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1047
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1053
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1057
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1061
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1065
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1069
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1075
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1079
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1083
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1087
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1091
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1095
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1099
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1103
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1107
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1111
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1115
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1119
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1123
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1127
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1133
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1139
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1143
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1149
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1159
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1169
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1179
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1189
		{
			yyVAL.token = Token{}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1197
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1203
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1207
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1213
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1219
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1242
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1246
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1254
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1262
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1270
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1274
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1278
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: RowValueList{RowValues: yyDollar[5].queryexprs}, Negation: yyDollar[2].token}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1282
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1286
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1290
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1298
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1302
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1306
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: RowValueList{RowValues: yyDollar[5].queryexprs}}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1310
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1314
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1320
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1324
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1328
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1332
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1336
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1340
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1344
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1350
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1354
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1358
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1362
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1368
		{
			yyVAL.queryexprs = nil
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1378
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1397
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1401
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1405
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 254:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = ListAgg{BaseExpr: NewBaseExpr(yyDollar[1].token), ListAgg: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 255:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 256:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 257:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 258:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1433
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 259:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1437
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 260:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 261:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 262:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1449
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = AnalyticClause{Partition: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1461
		{
			yyVAL.queryexpr = nil
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1465
		{
			yyVAL.queryexpr = Partition{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1471
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1475
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1481
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1485
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1489
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1495
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1501
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1505
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1509
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1517
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1521
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1525
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1531
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1535
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1539
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1543
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 284:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1557
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1561
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1567
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1571
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1577
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1581
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1585
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1591
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1597
		{
			yyVAL.queryexpr = nil
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1607
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1611
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1617
		{
			yyVAL.queryexpr = nil
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1621
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1627
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1631
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1637
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1641
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1647
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1651
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1657
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1661
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1667
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1671
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1677
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1681
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1687
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 312:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1691
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1695
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1699
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1705
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1711
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1717
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1721
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1727
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1732
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1739
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1743
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1749
		{
			yyVAL.elseexpr = Else{}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1759
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1763
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1769
		{
			yyVAL.elseexpr = Else{}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1773
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1779
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1783
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1789
		{
			yyVAL.elseexpr = Else{}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1793
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1799
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1803
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1809
		{
			yyVAL.elseexpr = Else{}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1813
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1819
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1823
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1829
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1833
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1839
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1843
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1849
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1853
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1859
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1869
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1873
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1879
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1883
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1889
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1899
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1903
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1907
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1911
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1915
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1919
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1923
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1927
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1931
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1935
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1939
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1943
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1947
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1953
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1959
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1969
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1975
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1979
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1985
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1989
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1995
		{
			yyVAL.token = Token{}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1999
		{
			yyVAL.token = yyDollar[1].token
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2005
		{
			yyVAL.token = Token{}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2009
		{
			yyVAL.token = yyDollar[1].token
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2015
		{
			yyVAL.token = Token{}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2019
		{
			yyVAL.token = yyDollar[1].token
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2025
		{
			yyVAL.token = Token{}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2029
		{
			yyVAL.token = yyDollar[1].token
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2035
		{
			yyVAL.token = yyDollar[1].token
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2039
		{
			yyVAL.token = yyDollar[1].token
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2045
		{
			yyVAL.token = Token{}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2049
		{
			yyVAL.token = yyDollar[1].token
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2055
		{
			yyVAL.token = Token{}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2059
		{
			yyVAL.token = yyDollar[1].token
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2065
		{
			yyVAL.token = Token{}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2069
		{
			yyVAL.token = yyDollar[1].token
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2075
		{
			yyVAL.token = yyDollar[1].token
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2079
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
