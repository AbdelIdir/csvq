// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const SELECT = 57358
const FROM = 57359
const UPDATE = 57360
const SET = 57361
const UNSET = 57362
const DELETE = 57363
const WHERE = 57364
const INSERT = 57365
const INTO = 57366
const VALUES = 57367
const AS = 57368
const DUAL = 57369
const STDIN = 57370
const RECURSIVE = 57371
const CREATE = 57372
const ADD = 57373
const DROP = 57374
const ALTER = 57375
const TABLE = 57376
const FIRST = 57377
const LAST = 57378
const AFTER = 57379
const BEFORE = 57380
const DEFAULT = 57381
const RENAME = 57382
const TO = 57383
const VIEW = 57384
const ORDER = 57385
const GROUP = 57386
const HAVING = 57387
const BY = 57388
const ASC = 57389
const DESC = 57390
const LIMIT = 57391
const OFFSET = 57392
const PERCENT = 57393
const JOIN = 57394
const INNER = 57395
const OUTER = 57396
const LEFT = 57397
const RIGHT = 57398
const FULL = 57399
const CROSS = 57400
const ON = 57401
const USING = 57402
const NATURAL = 57403
const UNION = 57404
const INTERSECT = 57405
const EXCEPT = 57406
const ALL = 57407
const ANY = 57408
const EXISTS = 57409
const IN = 57410
const AND = 57411
const OR = 57412
const NOT = 57413
const BETWEEN = 57414
const LIKE = 57415
const IS = 57416
const NULL = 57417
const DISTINCT = 57418
const WITH = 57419
const RANGE = 57420
const UNBOUNDED = 57421
const PRECEDING = 57422
const FOLLOWING = 57423
const CURRENT = 57424
const ROW = 57425
const CASE = 57426
const IF = 57427
const ELSEIF = 57428
const WHILE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const DO = 57433
const END = 57434
const DECLARE = 57435
const CURSOR = 57436
const FOR = 57437
const FETCH = 57438
const OPEN = 57439
const CLOSE = 57440
const DISPOSE = 57441
const NEXT = 57442
const PRIOR = 57443
const ABSOLUTE = 57444
const RELATIVE = 57445
const SEPARATOR = 57446
const PARTITION = 57447
const OVER = 57448
const COMMIT = 57449
const ROLLBACK = 57450
const CONTINUE = 57451
const BREAK = 57452
const EXIT = 57453
const ECHO = 57454
const PRINT = 57455
const PRINTF = 57456
const SOURCE = 57457
const EXECUTE = 57458
const CHDIR = 57459
const PWD = 57460
const TRIGGER = 57461
const FUNCTION = 57462
const AGGREGATE = 57463
const BEGIN = 57464
const RETURN = 57465
const IGNORE = 57466
const WITHIN = 57467
const VAR = 57468
const SHOW = 57469
const TIES = 57470
const NULLS = 57471
const ROWS = 57472
const JSON_ROW = 57473
const JSON_TABLE = 57474
const COUNT = 57475
const JSON_OBJECT = 57476
const AGGREGATE_FUNCTION = 57477
const LIST_FUNCTION = 57478
const ANALYTIC_FUNCTION = 57479
const FUNCTION_NTH = 57480
const FUNCTION_WITH_INS = 57481
const COMPARISON_OP = 57482
const STRING_OP = 57483
const SUBSTITUTION_OP = 57484
const UMINUS = 57485
const UPLUS = 57486

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2269

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 177,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 29,
	1, 73,
	86, 73,
	88, 73,
	90, 73,
	92, 73,
	145, 73,
	-2, 207,
	-1, 95,
	16, 177,
	18, 177,
	21, 177,
	23, 177,
	-2, 1,
	-1, 113,
	152, 264,
	-2, 177,
	-1, 119,
	62, 157,
	63, 157,
	64, 157,
	-2, 168,
	-1, 156,
	1, 140,
	86, 140,
	88, 140,
	90, 140,
	92, 140,
	145, 140,
	-2, 191,
	-1, 159,
	1, 146,
	86, 146,
	88, 146,
	90, 146,
	92, 146,
	145, 146,
	-2, 191,
	-1, 199,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	140, 0,
	147, 0,
	-2, 234,
	-1, 200,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	140, 0,
	147, 0,
	-2, 236,
	-1, 209,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	140, 0,
	147, 0,
	-2, 246,
	-1, 219,
	86, 1,
	90, 1,
	92, 1,
	-2, 177,
	-1, 270,
	92, 4,
	-2, 177,
	-1, 318,
	68, 0,
	72, 0,
	73, 0,
	74, 0,
	140, 0,
	147, 0,
	-2, 247,
	-1, 325,
	92, 1,
	-2, 177,
	-1, 337,
	52, 414,
	-2, 346,
	-1, 370,
	1, 76,
	86, 76,
	88, 76,
	90, 76,
	92, 76,
	145, 76,
	-2, 191,
	-1, 371,
	1, 132,
	86, 132,
	88, 132,
	90, 132,
	92, 132,
	145, 132,
	-2, 191,
	-1, 429,
	92, 1,
	-2, 177,
	-1, 436,
	88, 1,
	90, 1,
	92, 1,
	-2, 177,
	-1, 501,
	86, 4,
	88, 4,
	90, 4,
	92, 4,
	-2, 177,
	-1, 504,
	92, 4,
	-2, 177,
	-1, 505,
	92, 4,
	-2, 177,
	-1, 572,
	16, 424,
	77, 424,
	151, 424,
	-2, 80,
	-1, 595,
	86, 4,
	90, 4,
	92, 4,
	-2, 177,
	-1, 600,
	92, 4,
	-2, 177,
	-1, 601,
	92, 4,
	-2, 177,
	-1, 622,
	86, 1,
	90, 1,
	92, 1,
	-2, 177,
	-1, 655,
	1, 88,
	86, 88,
	88, 88,
	90, 88,
	92, 88,
	145, 88,
	-2, 191,
	-1, 658,
	92, 6,
	-2, 177,
	-1, 669,
	92, 4,
	-2, 177,
	-1, 724,
	92, 6,
	-2, 177,
	-1, 725,
	92, 6,
	-2, 177,
	-1, 729,
	92, 4,
	-2, 177,
	-1, 733,
	88, 4,
	90, 4,
	92, 4,
	-2, 177,
	-1, 753,
	88, 1,
	90, 1,
	92, 1,
	-2, 177,
	-1, 765,
	86, 6,
	88, 6,
	90, 6,
	92, 6,
	-2, 177,
	-1, 805,
	86, 6,
	90, 6,
	92, 6,
	-2, 177,
	-1, 808,
	92, 8,
	-2, 177,
	-1, 813,
	92, 6,
	-2, 177,
	-1, 816,
	86, 4,
	90, 4,
	92, 4,
	-2, 177,
	-1, 839,
	92, 6,
	-2, 177,
	-1, 867,
	92, 6,
	-2, 177,
	-1, 871,
	88, 6,
	90, 6,
	92, 6,
	-2, 177,
	-1, 873,
	86, 8,
	88, 8,
	90, 8,
	92, 8,
	-2, 177,
	-1, 876,
	92, 8,
	-2, 177,
	-1, 877,
	92, 8,
	-2, 177,
	-1, 880,
	88, 4,
	90, 4,
	92, 4,
	-2, 177,
	-1, 892,
	86, 8,
	90, 8,
	92, 8,
	-2, 177,
	-1, 901,
	86, 6,
	90, 6,
	92, 6,
	-2, 177,
	-1, 906,
	92, 8,
	-2, 177,
	-1, 920,
	92, 8,
	-2, 177,
	-1, 924,
	88, 8,
	90, 8,
	92, 8,
	-2, 177,
	-1, 936,
	88, 6,
	90, 6,
	92, 6,
	-2, 177,
	-1, 950,
	86, 8,
	90, 8,
	92, 8,
	-2, 177,
	-1, 961,
	88, 8,
	90, 8,
	92, 8,
	-2, 177,
}

const yyPrivate = 57344

const yyLast = 3613

var yyAct = [...]int{

	18, 919, 893, 918, 929, 292, 865, 866, 806, 728,
	784, 440, 942, 117, 786, 821, 889, 282, 478, 114,
	29, 112, 118, 596, 428, 727, 24, 169, 780, 337,
	579, 700, 525, 5, 574, 492, 494, 387, 23, 225,
	153, 154, 155, 157, 158, 160, 550, 785, 221, 386,
	22, 495, 450, 558, 47, 224, 427, 721, 356, 542,
	347, 57, 163, 167, 290, 458, 457, 287, 236, 382,
	3, 580, 333, 230, 181, 182, 174, 540, 1, 164,
	350, 336, 192, 193, 338, 72, 188, 241, 166, 132,
	132, 70, 135, 130, 124, 165, 87, 198, 199, 200,
	178, 202, 180, 475, 209, 809, 212, 213, 214, 215,
	216, 217, 218, 416, 163, 29, 179, 118, 720, 341,
	233, 178, 133, 388, 168, 271, 762, 405, 119, 763,
	223, 220, 178, 23, 462, 227, 463, 464, 459, 456,
	166, 651, 460, 179, 760, 22, 591, 165, 178, 592,
	257, 258, 632, 395, 166, 615, 589, 588, 573, 96,
	554, 165, 263, 265, 107, 3, 106, 105, 545, 64,
	272, 108, 109, 197, 107, 403, 106, 105, 335, 162,
	283, 108, 109, 883, 291, 462, 201, 463, 464, 459,
	456, 276, 272, 460, 231, 231, 235, 312, 275, 162,
	245, 87, 244, 83, 316, 882, 318, 107, 283, 555,
	862, 125, 272, 121, 108, 109, 122, 64, 120, 861,
	88, 89, 90, 283, 344, 164, 860, 328, 280, 859,
	87, 858, 274, 125, 166, 836, 461, 398, 835, 29,
	272, 165, 291, 342, 445, 834, 832, 363, 830, 829,
	820, 819, 726, 341, 233, 369, 372, 23, 682, 681,
	680, 283, 283, 283, 679, 378, 94, 281, 283, 22,
	119, 94, 301, 302, 678, 675, 653, 650, 375, 376,
	377, 631, 283, 311, 565, 379, 207, 314, 614, 3,
	29, 207, 366, 313, 612, 611, 64, 321, 610, 380,
	392, 604, 283, 283, 603, 587, 585, 132, 572, 354,
	530, 523, 283, 522, 332, 521, 425, 87, 510, 349,
	352, 353, 419, 402, 431, 88, 89, 90, 435, 400,
	401, 439, 443, 322, 393, 268, 357, 444, 269, 362,
	833, 66, 417, 873, 491, 29, 127, 831, 482, 473,
	412, 413, 792, 397, 88, 89, 90, 791, 344, 166,
	423, 790, 399, 23, 789, 788, 447, 414, 127, 166,
	446, 756, 467, 751, 748, 22, 165, 342, 746, 745,
	739, 738, 527, 166, 489, 502, 118, 508, 79, 452,
	480, 166, 469, 166, 468, 3, 422, 455, 488, 503,
	490, 499, 411, 433, 291, 410, 283, 409, 231, 454,
	283, 283, 283, 408, 484, 486, 407, 365, 509, 406,
	368, 420, 421, 367, 222, 531, 196, 532, 470, 497,
	481, 536, 195, 127, 185, 393, 184, 539, 183, 541,
	255, 88, 89, 90, 166, 474, 254, 476, 477, 29,
	765, 165, 501, 190, 513, 309, 29, 95, 518, 519,
	520, 355, 246, 162, 485, 898, 749, 23, 747, 566,
	567, 511, 630, 628, 23, 618, 813, 725, 549, 22,
	87, 724, 658, 744, 798, 534, 22, 87, 787, 248,
	686, 206, 684, 514, 515, 516, 517, 796, 743, 3,
	234, 551, 618, 742, 66, 741, 3, 535, 687, 740,
	685, 233, 87, 560, 310, 283, 283, 283, 283, 553,
	683, 29, 186, 677, 29, 29, 562, 561, 616, 187,
	594, 568, 582, 598, 599, 166, 233, 364, 623, 877,
	551, 247, 602, 563, 949, 529, 443, 937, 922, 909,
	908, 444, 900, 884, 878, 872, 635, 629, 869, 815,
	812, 811, 775, 605, 606, 607, 609, 249, 250, 920,
	764, 644, 283, 737, 528, 303, 304, 736, 731, 624,
	87, 608, 652, 87, 672, 656, 636, 637, 87, 645,
	83, 664, 647, 317, 671, 621, 625, 533, 670, 319,
	320, 87, 466, 627, 88, 89, 90, 634, 500, 452,
	449, 88, 89, 90, 633, 29, 641, 434, 432, 921,
	29, 29, 876, 920, 667, 661, 662, 693, 666, 673,
	674, 646, 648, 649, 601, 868, 88, 89, 90, 867,
	660, 730, 29, 708, 87, 729, 285, 600, 688, 505,
	497, 663, 504, 87, 497, 279, 906, 83, 166, 867,
	23, 839, 729, 624, 669, 698, 952, 430, 703, 704,
	705, 429, 22, 166, 921, 714, 429, 327, 29, 699,
	710, 325, 712, 903, 166, 711, 894, 551, 137, 29,
	750, 713, 3, 818, 415, 807, 626, 597, 732, 323,
	692, 226, 755, 926, 88, 89, 90, 88, 89, 90,
	925, 890, 88, 89, 90, 782, 781, 752, 735, 766,
	118, 147, 148, 768, 771, 88, 89, 90, 716, 87,
	754, 778, 734, 767, 539, 757, 759, 151, 593, 868,
	136, 772, 773, 730, 29, 29, 430, 956, 948, 29,
	770, 915, 899, 29, 776, 853, 814, 795, 777, 802,
	794, 691, 620, 794, 283, 166, 138, 800, 88, 89,
	90, 941, 783, 29, 888, 801, 930, 88, 89, 90,
	779, 538, 804, 947, 769, 29, 145, 146, 149, 150,
	934, 23, 959, 793, 716, 716, 797, 944, 930, 824,
	825, 826, 827, 22, 817, 617, 526, 794, 840, 945,
	946, 933, 803, 932, 104, 697, 64, 544, 242, 855,
	190, 841, 837, 3, 283, 29, 913, 204, 29, 943,
	852, 203, 205, 29, 526, 716, 29, 91, 524, 306,
	828, 857, 863, 305, 810, 854, 874, 118, 794, 954,
	396, 273, 931, 88, 89, 90, 870, 443, 351, 29,
	875, 239, 444, 559, 879, 706, 848, 64, 881, 887,
	640, 928, 539, 885, 931, 716, 308, 307, 843, 211,
	210, 864, 639, 716, 886, 51, 891, 29, 638, 895,
	896, 29, 911, 29, 189, 907, 29, 29, 902, 912,
	29, 557, 914, 92, 917, 904, 238, 239, 240, 716,
	126, 556, 29, 613, 462, 438, 463, 464, 916, 923,
	330, 29, 940, 938, 935, 539, 29, 847, 547, 548,
	856, 848, 849, 939, 848, 848, 823, 716, 571, 331,
	29, 716, 570, 843, 29, 951, 843, 843, 955, 690,
	848, 472, 228, 958, 822, 584, 29, 583, 590, 960,
	581, 129, 843, 957, 848, 128, 191, 695, 696, 177,
	29, 716, 361, 774, 676, 665, 843, 58, 848, 373,
	659, 29, 848, 657, 358, 359, 357, 586, 208, 65,
	843, 404, 847, 360, 843, 847, 847, 849, 229, 237,
	849, 849, 348, 334, 526, 346, 716, 259, 848, 139,
	141, 847, 575, 576, 577, 578, 849, 84, 134, 848,
	843, 140, 84, 142, 143, 847, 83, 173, 152, 176,
	849, 843, 156, 59, 159, 131, 161, 905, 838, 847,
	668, 324, 8, 847, 849, 451, 7, 6, 849, 326,
	54, 462, 126, 463, 464, 459, 456, 701, 702, 460,
	462, 288, 463, 464, 459, 456, 758, 289, 460, 847,
	340, 339, 208, 208, 849, 953, 194, 927, 910, 897,
	847, 78, 53, 52, 56, 849, 526, 49, 55, 50,
	208, 694, 546, 442, 441, 48, 208, 208, 175, 102,
	111, 110, 101, 100, 103, 99, 437, 329, 569, 471,
	123, 232, 232, 17, 16, 60, 144, 14, 243, 232,
	343, 496, 493, 343, 13, 12, 251, 252, 253, 9,
	15, 11, 10, 844, 256, 717, 842, 715, 383, 381,
	87, 67, 68, 69, 4, 91, 71, 83, 170, 84,
	85, 2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 277, 0, 278, 0,
	284, 97, 96, 294, 0, 0, 0, 107, 98, 106,
	105, 0, 0, 266, 108, 109, 267, 0, 0, 0,
	0, 208, 418, 418, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 0, 81, 0, 0,
	0, 92, 0, 0, 0, 0, 0, 0, 0, 232,
	116, 115, 0, 0, 345, 0, 0, 345, 343, 0,
	86, 294, 343, 0, 0, 0, 126, 0, 126, 126,
	0, 0, 0, 0, 370, 371, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 391, 0, 394, 88, 89, 90, 94, 0, 296,
	75, 295, 297, 298, 299, 300, 0, 0, 0, 0,
	0, 0, 293, 0, 73, 74, 82, 61, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 448, 453, 232, 0, 0, 0, 465,
	0, 208, 345, 0, 102, 111, 345, 101, 100, 103,
	99, 0, 0, 0, 0, 479, 0, 343, 483, 453,
	453, 487, 0, 0, 0, 479, 0, 0, 498, 0,
	87, 67, 68, 69, 0, 91, 71, 83, 0, 84,
	85, 0, 0, 0, 102, 111, 110, 101, 100, 103,
	99, 0, 0, 0, 66, 506, 507, 0, 0, 479,
	0, 0, 0, 294, 512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 96, 0, 0,
	208, 0, 107, 98, 106, 105, 0, 0, 0, 108,
	109, 0, 0, 80, 0, 0, 0, 81, 0, 0,
	0, 92, 0, 0, 0, 0, 453, 0, 0, 552,
	116, 115, 343, 343, 0, 0, 97, 96, 0, 0,
	86, 345, 107, 98, 106, 105, 564, 0, 0, 108,
	109, 689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 453, 102, 111, 110, 101,
	100, 103, 99, 0, 88, 89, 90, 94, 0, 296,
	75, 295, 297, 298, 299, 300, 0, 961, 0, 0,
	0, 208, 293, 0, 73, 74, 82, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 343, 343, 0, 0, 0,
	0, 0, 0, 102, 0, 294, 101, 100, 103, 99,
	0, 0, 0, 0, 453, 0, 345, 345, 97, 96,
	0, 0, 0, 0, 107, 98, 106, 105, 0, 0,
	0, 108, 109, 479, 0, 0, 0, 453, 453, 0,
	0, 0, 0, 654, 655, 87, 67, 68, 69, 0,
	91, 71, 83, 208, 84, 85, 19, 0, 0, 0,
	31, 32, 343, 0, 0, 0, 0, 0, 0, 66,
	0, 25, 0, 0, 26, 97, 96, 0, 0, 0,
	0, 107, 98, 106, 105, 0, 0, 0, 108, 109,
	0, 0, 453, 0, 0, 0, 0, 0, 345, 345,
	345, 0, 707, 709, 0, 0, 0, 0, 80, 0,
	0, 483, 81, 0, 0, 0, 92, 0, 64, 0,
	0, 0, 0, 0, 0, 846, 845, 0, 722, 0,
	0, 0, 0, 0, 28, 86, 0, 35, 33, 34,
	30, 0, 0, 0, 0, 0, 0, 0, 36, 37,
	389, 390, 0, 39, 40, 41, 42, 43, 44, 45,
	46, 0, 0, 0, 723, 0, 345, 27, 38, 88,
	89, 90, 94, 0, 77, 75, 76, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	74, 82, 61, 0, 0, 87, 67, 68, 69, 0,
	91, 71, 83, 0, 84, 85, 19, 0, 0, 0,
	31, 32, 0, 0, 0, 0, 479, 0, 0, 66,
	0, 25, 0, 0, 26, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 81, 0, 0, 0, 92, 0, 64, 850,
	851, 0, 0, 0, 0, 385, 384, 0, 62, 0,
	0, 0, 0, 0, 28, 86, 0, 35, 33, 34,
	30, 0, 0, 0, 0, 0, 0, 0, 36, 37,
	389, 390, 63, 39, 40, 41, 42, 43, 44, 45,
	46, 0, 0, 0, 0, 0, 294, 27, 38, 88,
	89, 90, 94, 0, 77, 75, 76, 93, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	74, 82, 61, 87, 67, 68, 69, 0, 91, 71,
	83, 0, 84, 85, 19, 0, 0, 0, 31, 32,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 25,
	0, 0, 26, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	81, 0, 0, 0, 92, 0, 64, 0, 0, 0,
	0, 0, 0, 719, 718, 0, 722, 0, 0, 0,
	0, 0, 28, 86, 0, 35, 33, 34, 30, 0,
	0, 0, 0, 0, 0, 0, 36, 37, 0, 0,
	0, 39, 40, 41, 42, 43, 44, 45, 46, 0,
	0, 0, 723, 0, 0, 27, 38, 88, 89, 90,
	94, 0, 77, 75, 76, 93, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 74, 82,
	61, 87, 67, 68, 69, 0, 91, 71, 83, 0,
	84, 85, 19, 0, 0, 0, 31, 32, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 25, 0, 0,
	26, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 0, 81, 0,
	0, 0, 92, 0, 64, 0, 0, 0, 0, 0,
	0, 21, 20, 0, 62, 0, 0, 0, 0, 0,
	28, 86, 0, 35, 33, 34, 30, 0, 0, 0,
	0, 0, 0, 0, 36, 37, 0, 0, 63, 39,
	40, 41, 42, 43, 44, 45, 46, 0, 0, 0,
	0, 0, 0, 27, 38, 88, 89, 90, 94, 0,
	77, 75, 76, 93, 87, 67, 68, 69, 0, 91,
	71, 83, 0, 84, 85, 73, 74, 82, 61, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	87, 67, 68, 69, 0, 91, 71, 83, 0, 84,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 81, 0, 0, 0, 92, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 115, 0, 0, 0, 0,
	0, 0, 0, 80, 86, 0, 0, 81, 0, 0,
	0, 92, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 115, 0, 0, 0, 0, 0, 0, 0, 172,
	86, 0, 0, 0, 0, 0, 0, 0, 88, 89,
	90, 94, 0, 296, 75, 295, 297, 298, 299, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 74,
	82, 61, 171, 0, 88, 89, 90, 94, 0, 77,
	75, 76, 93, 87, 67, 68, 69, 0, 91, 71,
	83, 0, 84, 85, 73, 74, 82, 61, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 87, 67,
	68, 69, 0, 91, 71, 83, 0, 84, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	81, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 115, 0, 0, 0, 0, 0,
	0, 80, 0, 86, 0, 81, 0, 0, 0, 92,
	242, 0, 0, 0, 0, 0, 0, 0, 116, 115,
	0, 0, 0, 0, 87, 67, 68, 69, 86, 91,
	71, 83, 0, 84, 85, 0, 0, 88, 89, 90,
	94, 0, 77, 75, 76, 93, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 293, 0, 73, 74, 82,
	61, 0, 88, 89, 90, 94, 0, 77, 75, 76,
	93, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 74, 82, 61, 0, 80, 0, 0,
	0, 81, 0, 0, 0, 92, 0, 64, 0, 0,
	0, 0, 0, 0, 116, 115, 0, 0, 0, 0,
	87, 67, 68, 69, 86, 91, 71, 83, 0, 84,
	85, 87, 67, 68, 69, 0, 91, 71, 83, 0,
	84, 85, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 88, 89,
	90, 94, 0, 77, 75, 76, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 74,
	82, 61, 0, 80, 0, 0, 0, 81, 0, 0,
	0, 92, 0, 0, 80, 0, 0, 0, 81, 0,
	116, 115, 92, 0, 0, 0, 0, 0, 0, 0,
	86, 116, 115, 0, 0, 0, 0, 87, 67, 264,
	69, 86, 91, 71, 83, 261, 84, 85, 0, 0,
	0, 0, 0, 102, 111, 110, 101, 100, 103, 99,
	0, 66, 0, 0, 88, 89, 90, 94, 0, 77,
	75, 76, 93, 0, 0, 88, 89, 90, 94, 0,
	77, 75, 76, 93, 73, 74, 82, 61, 0, 0,
	0, 0, 0, 0, 0, 73, 74, 82, 113, 0,
	80, 0, 0, 0, 81, 0, 0, 0, 92, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 115, 0,
	0, 0, 0, 0, 0, 97, 96, 86, 0, 0,
	0, 107, 98, 106, 105, 0, 0, 0, 108, 109,
	260, 102, 111, 110, 101, 100, 103, 99, 0, 0,
	0, 102, 111, 110, 101, 100, 103, 99, 0, 0,
	0, 88, 89, 90, 94, 0, 77, 75, 76, 93,
	543, 102, 111, 110, 101, 100, 103, 99, 0, 0,
	0, 73, 74, 82, 61, 0, 0, 102, 111, 110,
	101, 100, 103, 99, 0, 0, 544, 102, 111, 110,
	101, 100, 103, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 96, 0, 0, 0, 0, 107,
	98, 106, 105, 97, 96, 0, 108, 109, 643, 107,
	98, 106, 105, 0, 0, 0, 108, 109, 642, 0,
	0, 0, 0, 97, 96, 0, 0, 0, 0, 107,
	98, 106, 105, 0, 0, 0, 108, 109, 424, 97,
	96, 0, 0, 0, 0, 107, 98, 106, 105, 97,
	96, 0, 108, 109, 0, 107, 98, 106, 105, 0,
	0, 0, 108, 109, 267, 102, 111, 110, 101, 100,
	103, 99, 0, 0, 0, 102, 111, 110, 101, 100,
	103, 99, 0, 0, 0, 0, 950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 936, 102, 111, 110,
	101, 100, 103, 99, 0, 0, 0, 102, 111, 110,
	101, 100, 103, 99, 0, 0, 0, 0, 924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 96, 0,
	0, 0, 0, 107, 98, 106, 105, 97, 96, 0,
	108, 109, 0, 107, 98, 106, 105, 0, 0, 0,
	108, 109, 0, 0, 0, 0, 0, 0, 0, 97,
	96, 0, 0, 0, 0, 107, 98, 106, 105, 97,
	96, 0, 108, 109, 0, 107, 98, 106, 105, 0,
	0, 0, 108, 109, 102, 111, 110, 101, 100, 103,
	99, 0, 0, 0, 102, 111, 110, 101, 100, 103,
	99, 0, 0, 0, 0, 892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 880, 102, 111, 110, 101,
	100, 103, 99, 0, 0, 0, 102, 111, 110, 101,
	100, 103, 99, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 816, 102, 111,
	110, 101, 100, 103, 99, 0, 97, 96, 0, 0,
	0, 0, 107, 98, 106, 105, 97, 96, 0, 108,
	109, 808, 107, 98, 106, 105, 0, 0, 0, 108,
	109, 102, 111, 110, 101, 100, 103, 99, 97, 96,
	0, 0, 0, 0, 107, 98, 106, 105, 97, 96,
	0, 108, 109, 0, 107, 98, 106, 105, 0, 0,
	0, 108, 109, 102, 111, 110, 101, 100, 103, 99,
	97, 96, 0, 0, 0, 0, 107, 98, 106, 105,
	0, 0, 0, 108, 109, 102, 111, 110, 101, 100,
	103, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 96, 0, 805, 0, 0, 107,
	98, 106, 105, 0, 0, 799, 108, 109, 102, 111,
	110, 101, 100, 103, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 96, 0, 0, 753,
	0, 107, 98, 106, 105, 0, 0, 761, 108, 109,
	102, 111, 110, 101, 100, 103, 99, 97, 96, 0,
	0, 0, 0, 107, 98, 106, 105, 0, 0, 0,
	108, 109, 102, 111, 110, 101, 100, 103, 99, 0,
	0, 0, 102, 111, 110, 101, 100, 103, 99, 0,
	97, 96, 0, 733, 0, 0, 107, 98, 106, 105,
	0, 0, 323, 108, 109, 102, 111, 110, 101, 100,
	103, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 96, 0, 0, 622, 0, 107, 98,
	106, 105, 0, 0, 619, 108, 109, 0, 0, 0,
	0, 0, 0, 0, 97, 96, 0, 0, 0, 0,
	107, 98, 106, 105, 97, 96, 0, 108, 109, 0,
	107, 98, 106, 105, 0, 0, 0, 108, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 96, 0,
	0, 0, 0, 107, 98, 106, 105, 0, 0, 0,
	108, 109, 102, 111, 110, 101, 100, 103, 99, 0,
	0, 0, 102, 111, 110, 101, 100, 103, 99, 0,
	0, 0, 0, 595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 102, 111, 110, 101, 100, 103,
	99, 0, 0, 0, 102, 111, 110, 101, 100, 103,
	99, 262, 0, 0, 0, 436, 0, 0, 0, 102,
	111, 110, 101, 100, 103, 99, 0, 270, 0, 0,
	0, 0, 0, 0, 97, 96, 0, 0, 0, 0,
	107, 98, 106, 105, 97, 96, 0, 108, 109, 0,
	107, 98, 106, 105, 0, 0, 0, 108, 109, 102,
	111, 110, 101, 100, 103, 99, 97, 96, 0, 0,
	0, 0, 107, 98, 106, 105, 97, 96, 0, 108,
	109, 0, 107, 98, 106, 105, 0, 0, 0, 108,
	109, 97, 96, 0, 0, 0, 0, 107, 98, 106,
	105, 0, 0, 0, 108, 109, 102, 111, 110, 101,
	100, 103, 99, 0, 0, 0, 102, 426, 110, 101,
	100, 103, 99, 0, 0, 0, 0, 219, 0, 0,
	0, 97, 96, 0, 0, 0, 0, 107, 98, 106,
	105, 0, 0, 0, 108, 109, 102, 315, 110, 101,
	100, 103, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 96,
	0, 0, 0, 0, 107, 98, 106, 105, 97, 96,
	0, 108, 109, 0, 107, 98, 106, 105, 0, 0,
	0, 108, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 96,
	0, 0, 0, 0, 107, 98, 106, 105, 0, 0,
	0, 108, 109,
}
var yyPact = [...]int{

	2017, -1000, 312, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3371, -1000,
	2517, 2506, -1000, -1000, 195, 931, 927, 1015, 579, -1000,
	646, 1009, 1004, 597, 597, 686, -1000, -1000, 725, 2506,
	2506, 2506, 2506, 2506, 2506, -1000, 597, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 321, -1000, -1000,
	-1000, 2420, 2176, 1021, 940, -35, -54, -1000, -1000, -1000,
	-1000, -1000, -1000, 2506, 2506, 287, 285, 283, -1000, 382,
	282, 2506, 2506, -1000, -1000, -1000, 597, -1000, -1000, -1000,
	-1000, -1000, -1000, 281, 275, 2017, 2506, 2506, 2506, 749,
	2506, 759, 135, 2506, 814, 2506, 2506, 2506, 2506, 2506,
	2506, 2506, 3418, 2420, -1000, 273, 2506, 613, 3371, 909,
	974, 508, 483, 982, 844, 742, -1000, 739, 597, 508,
	-1000, 45, 320, -1000, 447, -1000, 597, 597, 597, 299,
	293, -1000, -1000, -1000, 597, -1000, -1000, -1000, -1000, 2506,
	2506, -1000, 990, 3371, 3371, 2555, -35, 3371, 3331, -35,
	3371, 2603, 2506, 1031, 183, 186, 217, 3316, 57, 783,
	1015, -1000, -1000, -1000, -1000, 36, 597, -1000, 649, 2334,
	640, -1000, -1000, 1136, 742, 742, 135, 135, 771, 811,
	-1000, -1000, 1465, -1000, 381, 742, 2506, -1000, 28, 18,
	18, 828, 3458, 2506, 135, 2506, -1000, 2420, -1000, 18,
	135, 135, 61, 61, -1000, -1000, -1000, 1266, 1465, 2017,
	183, 181, 2506, 611, 591, 587, 2506, 871, 893, 508,
	984, 23, -1000, -1000, 226, 988, 980, 226, 793, 793,
	793, 1356, -1000, 310, 953, 1015, 2506, 442, 266, 272,
	269, -1000, -1000, -1000, 2506, 2506, 955, 3371, 3371, 597,
	2506, 2506, 2506, 3371, 2506, 3371, -1000, 2506, -1000, -1000,
	1721, 597, 1015, 597, 85, 782, 940, 211, -1000, -1000,
	177, 2506, -1000, 2699, -1000, -1000, -1000, 171, 20, 965,
	-1000, 3371, -1000, -1000, -24, 268, 265, 262, 256, 254,
	251, 2506, 2309, -1000, -1000, 135, 191, 191, 191, 749,
	-1000, 2506, 2673, -1000, -1000, 2506, 3428, -1000, 18, -1000,
	-1000, 581, -1000, 2506, 526, 2017, 525, 2506, 3306, 865,
	2506, 2150, 219, 584, 476, 508, 980, 81, -1000, 576,
	-1000, -1000, 92, -1000, 243, 241, 226, 907, 2506, -1000,
	217, -1000, 217, 217, -1000, 597, 739, -1000, 197, 313,
	476, 597, -1000, 3371, 739, 597, 739, 192, 597, 3371,
	-35, -35, 3371, 1015, -1000, -1000, -1000, -1000, 3371, -1000,
	516, 307, -1000, -1000, 2517, 2506, -1000, -1000, -1000, -1000,
	-1000, 561, -1000, 15, 558, 597, 597, -1000, 236, 597,
	-1000, 166, -1000, 1356, 597, 2334, 742, 742, 742, 2506,
	2506, 2506, 163, 161, 159, 769, -1000, 140, -1000, 231,
	-1000, -1000, 477, 158, 2506, 1465, 2506, 505, 586, 2017,
	2506, 3284, 697, -1000, -1000, 3371, 2017, -1000, 2506, 2689,
	-1000, 13, 881, 3371, -1000, 135, 476, -1000, -1000, 597,
	982, 5, 62, -56, -1000, -1000, 859, 849, 809, 809,
	861, 226, -1000, -1000, -1000, -1000, 597, 132, 2506, 2506,
	980, 897, 892, 3371, 798, -1000, -1000, 798, 156, 3,
	-1000, 977, 597, 921, -1000, 476, 916, 914, -1000, 154,
	-1000, 961, 153, 2, -1000, -1000, 1, 919, -6, -1000,
	651, 1721, 3274, 609, 1721, 1721, 556, 543, 739, 152,
	-1000, -1000, -1000, 149, 2506, 2506, 2309, 2506, 146, 143,
	142, -1000, -1000, -1000, 135, 136, 0, 2506, -1000, 727,
	350, 3132, 1465, 677, 503, -1000, 3187, 2506, -1000, 3164,
	608, 3371, -1000, 740, 345, 2150, 343, -1000, -1000, -1000,
	129, -3, -1000, 980, 476, 2506, 226, 226, 836, -1000,
	830, 818, 809, -1000, -1000, -1000, 2653, 2643, -1000, -1000,
	2506, 2506, 960, 597, -1000, -1000, -1000, 476, 476, 125,
	-14, 2506, 124, 597, 2506, 957, 360, 954, 1015, 1015,
	2506, 949, 1015, -1000, -1000, 1721, 574, 2506, 502, 492,
	1721, 1721, 123, 948, 417, 122, 112, 108, 107, 106,
	414, 386, 384, -1000, -1000, 135, 1306, -1000, 905, -1000,
	-1000, 676, 2017, 3164, -1000, -1000, 2506, -1000, -1000, -1000,
	932, 790, 476, -1000, -1000, 3371, 861, 998, 226, 226,
	226, 813, 2506, 597, 3371, -1000, 739, -1000, -1000, -1000,
	977, 597, 3371, -1000, -1000, -35, 3371, 739, 1869, 359,
	-1000, -1000, -1000, 919, 3371, 355, 100, 555, 486, 1721,
	3154, 645, 631, 485, 481, -1000, 230, 229, 403, 399,
	397, 392, 377, 228, 227, 339, 223, 337, -1000, 2506,
	222, -1000, 660, 3100, -1000, -1000, -1000, 135, -1000, -1000,
	-1000, 2506, 220, 998, 1007, 861, 226, -8, 3045, -26,
	-1000, -1000, -1000, -1000, 478, 305, -1000, -1000, 2517, 2506,
	-1000, -1000, 2506, 2506, 1869, 1869, 947, 470, 572, 1721,
	2506, 696, -1000, 1721, -1000, -1000, 629, 628, 739, 383,
	214, 213, 210, 206, 201, 383, 383, 391, 383, 378,
	3013, 909, -1000, 2017, -1000, 3371, 597, -1000, 2506, 861,
	-1000, -1000, -1000, 2506, -1000, 1869, 3067, 607, 2980, 37,
	776, 3371, 469, 468, 354, 671, 467, -1000, 2958, -1000,
	605, -1000, -1000, 99, 98, -1000, 911, 890, 383, 383,
	383, 383, 383, 97, 909, 96, 196, 94, 189, -1000,
	93, 86, 3371, 83, -1000, 1869, 571, 2506, 1571, 597,
	597, -1000, -1000, 1869, -1000, 670, 1721, -1000, 2506, -1000,
	-1000, -1000, 884, 2506, 79, 77, 74, 67, 58, -1000,
	-1000, 383, -1000, 383, -1000, -1000, -1000, 549, 466, 1869,
	2948, 463, 198, -1000, -1000, 2517, 2506, -1000, -1000, -1000,
	531, 448, 462, -1000, 657, 2926, 2150, -1000, -1000, -1000,
	-1000, -1000, -1000, 53, 31, 461, 569, 1869, 2506, 690,
	-1000, 1869, 624, 1571, 2916, 598, 1571, 1571, -1000, -1000,
	1721, 335, -1000, -1000, 667, 460, -1000, 2829, -1000, 595,
	-1000, -1000, 1571, 566, 2506, 458, 457, -1000, 820, -1000,
	666, 1869, -1000, 2506, 533, 456, 1571, 2819, 623, 616,
	-1000, 792, 733, 731, 707, -1000, 653, 2797, 455, 479,
	1571, 2506, 687, -1000, 1571, -1000, -1000, 760, 717, -1000,
	729, 700, -1000, -1000, -1000, -1000, 1869, 663, 452, -1000,
	2787, -1000, 578, 770, -1000, -1000, -1000, -1000, -1000, 662,
	1571, -1000, 2506, -1000, 711, -1000, -1000, 588, 1408, -1000,
	-1000, 1571,
}
var yyPgo = [...]int{

	0, 77, 28, 16, 12, 69, 123, 1151, 49, 1148,
	37, 1144, 1139, 1138, 1137, 118, 57, 1136, 1135, 1133,
	1132, 1131, 1130, 1129, 71, 30, 34, 1125, 1124, 51,
	1122, 1121, 36, 35, 1117, 1116, 1115, 1114, 1113, 33,
	103, 94, 1110, 68, 60, 1109, 1108, 15, 1107, 59,
	1106, 26, 1098, 76, 1095, 91, 85, 54, 0, 64,
	388, 32, 11, 1094, 1093, 1092, 1091, 885, 1089, 113,
	1088, 1087, 1084, 48, 1083, 1082, 1081, 5, 47, 10,
	14, 1079, 1078, 4, 1077, 1075, 72, 84, 73, 1071,
	29, 1070, 31, 1067, 1061, 1050, 13, 39, 1049, 46,
	17, 81, 18, 67, 1047, 1046, 1045, 52, 1042, 24,
	56, 9, 25, 7, 6, 1, 3, 55, 1041, 23,
	1040, 8, 1038, 2, 1037, 989, 61, 27, 19, 1035,
	93, 977, 1033, 87, 86, 66, 53, 65, 80, 1029,
	58, 814,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 7, 7, 8,
	8, 8, 8, 8, 9, 9, 10, 10, 12, 12,
	11, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	13, 14, 14, 15, 15, 15, 16, 16, 17, 17,
	18, 18, 18, 18, 18, 19, 19, 19, 19, 19,
	19, 20, 20, 20, 20, 21, 21, 21, 22, 22,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	24, 24, 25, 25, 26, 26, 26, 26, 26, 27,
	27, 27, 27, 27, 28, 28, 28, 28, 29, 30,
	30, 31, 32, 32, 33, 33, 33, 34, 34, 34,
	34, 34, 35, 35, 35, 35, 35, 35, 35, 36,
	36, 36, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 38,
	38, 38, 39, 40, 40, 40, 40, 41, 41, 42,
	43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
	48, 48, 48, 49, 49, 50, 50, 51, 51, 52,
	52, 53, 53, 54, 54, 54, 54, 54, 54, 55,
	56, 57, 57, 57, 57, 57, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 59, 60, 60, 60, 61, 61, 62, 62,
	63, 63, 64, 64, 65, 65, 65, 66, 66, 67,
	68, 69, 69, 69, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 71, 71, 71, 71, 71, 71, 71,
	72, 72, 72, 72, 73, 73, 74, 74, 74, 74,
	75, 75, 75, 75, 75, 76, 76, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 78, 79,
	79, 80, 80, 81, 81, 82, 82, 82, 83, 83,
	83, 84, 84, 85, 85, 86, 86, 87, 87, 87,
	89, 89, 89, 89, 89, 90, 90, 90, 90, 90,
	90, 90, 91, 91, 91, 91, 91, 91, 92, 92,
	93, 93, 94, 94, 94, 95, 96, 96, 97, 97,
	98, 98, 99, 99, 100, 100, 101, 101, 88, 88,
	102, 102, 103, 103, 104, 104, 104, 104, 105, 106,
	107, 107, 108, 108, 109, 109, 110, 110, 111, 111,
	112, 112, 113, 113, 114, 114, 115, 115, 116, 116,
	117, 117, 118, 118, 119, 119, 120, 120, 121, 121,
	122, 122, 123, 123, 124, 124, 125, 125, 125, 125,
	126, 127, 127, 128, 129, 129, 130, 130, 131, 132,
	133, 133, 134, 134, 135, 135, 136, 136, 137, 137,
	138, 138, 139, 139, 140, 140, 141, 141,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	8, 8, 9, 9, 1, 1, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 1, 1, 6, 8, 8, 1, 2, 1, 1,
	7, 8, 6, 1, 1, 7, 8, 6, 1, 1,
	1, 2, 2, 1, 2, 4, 4, 2, 1, 1,
	6, 8, 5, 6, 8, 5, 7, 7, 7, 7,
	1, 3, 1, 3, 0, 1, 1, 2, 2, 5,
	2, 2, 3, 5, 6, 8, 5, 3, 1, 1,
	3, 3, 1, 3, 1, 1, 3, 9, 10, 10,
	12, 3, 0, 1, 1, 1, 1, 2, 2, 5,
	6, 3, 4, 4, 2, 2, 2, 2, 4, 4,
	2, 2, 2, 4, 2, 4, 2, 2, 1, 2,
	3, 4, 5, 5, 4, 4, 4, 1, 1, 3,
	0, 2, 0, 2, 0, 3, 0, 2, 0, 3,
	0, 3, 4, 0, 2, 0, 2, 0, 2, 6,
	9, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 6, 1, 3, 1, 3,
	2, 4, 1, 1, 0, 1, 1, 1, 1, 3,
	3, 3, 1, 6, 3, 3, 3, 3, 4, 4,
	5, 6, 6, 3, 4, 4, 3, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 3, 2, 2,
	3, 3, 2, 2, 0, 1, 4, 3, 4, 4,
	5, 5, 5, 5, 1, 5, 10, 8, 9, 9,
	9, 9, 9, 8, 8, 10, 8, 10, 2, 1,
	5, 0, 3, 2, 5, 2, 2, 2, 2, 2,
	2, 2, 1, 2, 1, 1, 1, 1, 2, 3,
	1, 6, 6, 6, 8, 1, 1, 2, 3, 1,
	1, 3, 4, 5, 6, 7, 5, 6, 2, 4,
	1, 1, 1, 3, 1, 5, 0, 1, 4, 5,
	0, 2, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 6, 9, 5, 8, 7, 3,
	1, 3, 5, 6, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
	0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -39, -104, -105, -108, -23,
	-20, -21, -27, -28, -34, -22, -37, -38, -58, 15,
	85, 84, -8, -10, -51, 30, 33, 126, 93, -128,
	99, 19, 20, 97, 98, 96, 107, 108, 127, 112,
	113, 114, 115, 116, 117, 118, 119, -57, -54, -71,
	-68, -67, -74, -75, -95, -70, -72, -126, -131, -132,
	-36, 151, 87, 111, 77, -125, 28, 5, 6, 7,
	-55, 10, -56, 148, 149, 134, 135, 133, -76, -60,
	67, 71, 150, 11, 13, 14, 94, 4, 128, 129,
	130, 9, 75, 136, 131, 145, 141, 140, 147, 74,
	72, 71, 68, 73, -141, 149, 148, 146, 153, 154,
	70, 69, -58, 151, -128, 85, 84, -96, -58, -40,
	23, 18, 21, -42, -41, 16, -67, 151, 34, 34,
	-130, -129, -126, -130, -125, -126, 94, 42, 120, -131,
	12, -131, -125, -125, -35, 100, 101, 35, 36, 102,
	103, 12, -125, -58, -58, -58, -125, -58, -58, -125,
	-58, -125, 142, -58, -100, -39, -51, -58, -126, -127,
	-9, 126, 93, 6, -53, -52, -139, 29, 156, 151,
	156, -58, -58, 151, 151, 151, 140, 147, -134, -141,
	71, -67, -58, -58, -125, 151, 151, -1, -58, -58,
	-58, -134, -58, 72, 68, 73, -60, 151, -67, -58,
	66, 65, -58, -58, -58, -58, -58, -58, -58, 89,
	-100, -73, 151, -96, -117, -97, 88, -47, 43, 24,
	-88, -86, -125, 28, 17, -88, -43, 17, 62, 63,
	64, -133, 76, -125, -86, 155, 142, 94, 42, 120,
	121, -125, -125, -125, 147, 147, -125, -58, -58, 17,
	155, 60, 60, -58, 6, -58, 152, 155, 152, 152,
	91, 68, 155, 68, -126, -127, 155, -125, -125, 6,
	-73, -133, -100, -58, -125, 6, 152, -103, -94, -93,
	-59, -58, -77, 146, -125, 135, 133, 136, 137, 138,
	139, -133, -133, -60, -60, 72, 68, 66, 65, 74,
	133, -133, -58, -55, -56, 69, -58, -60, -58, -60,
	-60, -1, 152, 88, -118, 90, -98, 90, -58, -48,
	49, 46, -87, -86, 19, 155, -101, -90, -87, -89,
	-91, 27, 151, -67, 132, -125, 17, -44, 22, -101,
	-138, 65, -138, -138, -103, 151, -140, 26, 31, 32,
	40, 19, -130, -58, 95, 151, 26, 151, 151, -58,
	-125, -125, -58, 24, -125, -100, -100, -100, -58, -100,
	-2, -12, -5, -13, 85, 84, -8, -10, -6, 109,
	110, -125, -127, -126, -125, 68, 68, -53, 26, 151,
	152, -73, 152, 155, 26, 151, 151, 151, 151, 151,
	151, 151, -73, -73, -59, -60, -69, 151, -67, 131,
	-69, -69, -134, -73, 155, -58, 69, -110, -109, 90,
	86, -58, 92, -1, 92, -58, 89, -50, 50, -58,
	-62, -63, -64, -58, -77, 25, 151, -39, -125, 26,
	-107, -106, -57, -125, -88, -44, 58, -135, -137, 57,
	61, 155, 53, 55, 56, -125, 26, -90, 151, 151,
	-101, -45, 44, -58, -41, -40, -41, -41, -102, -125,
	-39, -24, 151, -125, -57, 151, -57, -125, -39, -102,
	-39, 152, -33, -30, -32, -29, -31, -126, -125, -127,
	92, 145, -58, -96, 91, 91, -125, -125, 151, -102,
	152, -103, -125, -73, -133, -133, -133, -133, -73, -73,
	-73, 152, 152, 152, 69, -61, -60, 151, 97, 68,
	152, -58, -58, 92, -110, -1, -58, 89, 84, -58,
	-1, -58, -49, 51, 77, 155, -65, 47, 48, -61,
	-99, -57, -125, -43, 155, 147, 52, 52, -136, 54,
	-136, -135, -137, -101, -125, 152, -58, -58, -44, -46,
	45, 46, 152, 155, -26, 35, 36, 37, 38, -25,
	-24, 39, -99, 41, 41, 152, 26, 152, 155, 155,
	39, 152, 155, 87, -2, 89, -119, 88, -2, -2,
	91, 91, -39, 152, 152, -73, -73, -73, -59, -73,
	152, 152, 152, -60, 152, 155, -58, 78, 125, 152,
	85, 92, 89, -58, -97, -117, 88, -49, 128, -62,
	129, 152, 155, -44, -107, -58, -90, -90, 52, 52,
	52, -136, 155, 155, -58, -100, -140, -102, -57, -57,
	152, 155, -58, 152, -125, -125, -58, 26, 122, 26,
	-29, -32, -32, -126, -58, 26, -33, -2, -120, 90,
	-58, 92, 92, -2, -2, 152, 26, 106, 152, 152,
	152, 152, 152, 106, 106, 124, 106, 124, -61, 155,
	44, 85, -1, -58, -66, 35, 36, 25, -39, -99,
	-92, 59, 60, -90, -90, -90, 52, -125, -58, -125,
	-39, -26, -25, -39, -3, -14, -5, -18, 85, 84,
	-15, -16, 87, 123, 122, 122, 152, -112, -111, 90,
	86, 92, -2, 89, 87, 87, 92, 92, 151, 151,
	106, 106, 106, 106, 106, 151, 151, 129, 151, 129,
	-58, 151, -109, 89, -61, -58, 151, -92, 59, -90,
	152, 152, 152, 155, 92, 145, -58, -96, -58, -126,
	-127, -58, -3, -3, 26, 92, -112, -2, -58, 84,
	-2, 87, 87, -39, -79, -78, -80, 105, 151, 151,
	151, 151, 151, -78, -80, -79, 106, -78, 106, 152,
	-47, -102, -58, -73, -3, 89, -121, 88, 91, 68,
	68, 92, 92, 122, 85, 92, 89, -119, 88, 152,
	152, -47, 43, 46, -79, -79, -79, -79, -78, 152,
	152, 151, 152, 151, 152, 152, 152, -3, -122, 90,
	-58, -4, -17, -5, -19, 85, 84, -15, -16, -6,
	-125, -125, -3, 85, -2, -58, 46, -100, 152, 152,
	152, 152, 152, -79, -78, -114, -113, 90, 86, 92,
	-3, 89, 92, 145, -58, -96, 91, 91, 92, -111,
	89, -62, 152, 152, 92, -114, -3, -58, 84, -3,
	87, -4, 89, -123, 88, -4, -4, -81, 130, 85,
	92, 89, -121, 88, -4, -124, 90, -58, 92, 92,
	-82, 72, 79, 6, 82, 85, -3, -58, -116, -115,
	90, 86, 92, -4, 89, 87, 87, -84, 79, -83,
	6, 82, 80, 80, 83, -113, 89, 92, -116, -4,
	-58, 84, -4, 69, 80, 80, 81, 83, 85, 92,
	89, -123, 88, -85, 79, -83, 85, -4, -58, 81,
	-115, 89,
}
var yyDef = [...]int{

	-2, -2, 2, 27, 28, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	0, 336, 43, 44, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 122, 78, 79, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 208, 209,
	210, 177, 0, 36, 422, 191, 0, 183, 184, 185,
	186, 187, 188, 0, 0, 0, 0, 0, 274, 412,
	0, 0, 0, 400, 408, 409, 0, 396, 397, 398,
	399, 189, 190, 0, 0, -2, 0, 426, 427, 412,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 207, 0, 336, 0, 337, -2,
	0, 0, 0, 160, 0, 410, 158, 177, 0, 0,
	71, 406, 404, 72, 0, 74, 0, 0, 0, 0,
	0, 77, 100, 101, 0, 123, 124, 125, 126, 0,
	0, 134, 144, 135, 136, 137, -2, 141, 142, -2,
	147, 149, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 34, 35, 37, 178, 181, 0, 423, 0, 264,
	0, 258, 259, 0, 410, 410, 426, 427, 0, 0,
	413, 252, 262, 263, 0, 410, 0, 3, 230, -2,
	-2, 0, 0, 0, 0, 0, 243, 177, 214, -2,
	0, 0, 253, 254, 255, 256, 257, 260, 261, -2,
	0, 0, 264, 0, 382, 340, 0, 170, 0, 0,
	0, 348, 305, 306, 0, 0, 162, 0, 420, 420,
	420, 0, 411, 424, 0, 0, 0, 0, 0, 0,
	0, 102, 107, 121, 0, 0, 0, 127, 128, 0,
	0, 0, 0, 150, 184, 403, 211, 0, 213, 229,
	-2, 0, 0, 0, 0, 0, 422, 0, 192, 194,
	0, 264, 265, 344, 193, 195, 267, 0, 352, 332,
	334, 330, 331, 212, 191, 0, 0, 0, 0, 0,
	0, 264, 264, 235, 237, 0, 0, 0, 0, 412,
	131, 264, 0, 238, 239, 0, 0, 244, -2, 248,
	250, 366, 269, 0, 0, -2, 0, 0, 0, 175,
	0, 0, 177, 307, 0, 0, 162, -2, 315, 316,
	319, 320, 177, 310, 0, 305, 0, 164, 0, 161,
	0, 421, 0, 0, 159, 0, 177, 425, 0, 0,
	0, 0, 407, 405, 177, 0, 177, 0, 0, 75,
	-2, -2, 133, 0, 145, 138, 139, 143, 151, 345,
	0, 0, 38, 39, 0, 336, 48, 49, 50, 25,
	26, 0, 402, 401, 0, 0, 0, 182, 0, 0,
	266, 0, 268, 0, 0, 264, 410, 410, 410, 264,
	264, 264, 0, 0, 0, 0, 245, 177, 232, 0,
	249, 251, 0, 0, 0, 240, 0, 0, 366, -2,
	0, 0, 0, 383, 335, 341, -2, 152, 0, 173,
	169, 218, 224, 222, 223, 0, 0, 356, 308, 0,
	160, 360, 0, 191, 349, 362, 0, 0, 416, 416,
	414, 0, 415, 418, 419, 317, 0, 414, 0, 0,
	162, 166, 0, 163, 154, 157, 155, 156, 0, 350,
	82, 94, 0, 90, 85, 0, 0, 0, 99, 0,
	106, 0, 0, 114, 115, 109, 112, 108, 0, 103,
	0, -2, 0, 0, -2, -2, 0, 0, 177, 0,
	270, 353, 333, 0, 264, 264, 264, 264, 0, 0,
	0, 271, 272, 273, 0, 0, 216, 0, 129, 0,
	275, 0, 241, 0, 0, 367, 0, 0, 42, 23,
	380, 176, 171, 173, 0, 0, 220, 225, 226, 354,
	0, 342, 309, 162, 0, 0, 0, 0, 0, 417,
	0, 0, 416, 347, 318, 321, 0, 0, 363, 153,
	0, 0, -2, 0, 83, 95, 96, 0, 0, 0,
	92, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 29, 5, -2, 386, 0, 0, 0,
	-2, -2, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 231, 0, 0, 130, 0, 215,
	40, 0, -2, 338, 339, 381, 0, 172, 174, 219,
	0, 177, 0, 358, 361, 359, 322, 414, 0, 0,
	0, 0, 0, 0, 167, 165, 177, 351, 97, 98,
	94, 0, 91, 86, 87, -2, 89, 177, -2, 0,
	110, 116, 113, 0, 111, 0, 0, 370, 0, -2,
	0, 0, 0, 0, 0, 179, 0, 0, 270, 271,
	272, 273, 275, 0, 0, 0, 0, 0, 217, 0,
	0, 41, 364, 0, 221, 227, 228, 0, 357, 343,
	323, 0, 0, 414, 414, 326, 0, 191, 0, 0,
	81, 84, 93, 105, 0, 0, 51, 52, 0, 336,
	63, 64, 0, 56, -2, -2, 0, 0, 370, -2,
	0, 0, 387, -2, 30, 31, 0, 0, 177, 291,
	0, 0, 0, 0, 0, 291, 291, 0, 291, 0,
	0, 168, 365, -2, 355, 328, 0, 324, 0, 327,
	311, 312, 313, 264, 117, -2, 0, 0, 0, 206,
	0, 57, 0, 0, 0, 0, 0, 371, 0, 47,
	384, 32, 33, 0, 0, 289, 168, 0, 291, 291,
	291, 291, 291, 0, 168, 0, 0, 0, 0, 233,
	0, 0, 325, 0, 7, -2, 390, 0, -2, 0,
	0, 118, 119, -2, 45, 0, -2, 385, 0, 180,
	277, 288, 0, 0, 0, 0, 0, 0, 0, 283,
	284, 291, 286, 291, 276, 329, 314, 374, 0, -2,
	0, 0, 0, 58, 59, 0, 336, 68, 69, 70,
	0, 0, 0, 46, 368, 0, 0, 292, 278, 279,
	280, 281, 282, 0, 0, 0, 374, -2, 0, 0,
	391, -2, 0, -2, 0, 0, -2, -2, 120, 369,
	-2, 169, 285, 287, 0, 0, 375, 0, 62, 388,
	53, 9, -2, 394, 0, 0, 0, 290, 0, 60,
	0, -2, 389, 0, 378, 0, -2, 0, 0, 0,
	293, 0, 0, 0, 0, 61, 372, 0, 0, 378,
	-2, 0, 0, 395, -2, 54, 55, 0, 0, 302,
	0, 0, 295, 296, 297, 373, -2, 0, 0, 379,
	0, 67, 392, 0, 301, 298, 299, 300, 65, 0,
	-2, 393, 0, 294, 0, 304, 66, 376, 0, 303,
	377, -2,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 150, 3, 3, 3, 154, 3, 3,
	151, 152, 146, 149, 155, 148, 156, 153, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 145,
	3, 147,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:226
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:231
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:236
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:247
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:257
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:267
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:321
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:325
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:329
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:345
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:349
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 31:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 32:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:367
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 33:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:371
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:377
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:381
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:387
		{
			yyVAL.statement = Exit{}
		}
	case 37:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:391
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 40:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 41:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:415
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:419
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:423
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:455
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:459
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:465
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:469
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:473
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 61:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:533
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:537
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:551
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:555
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:559
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:565
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:569
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:573
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:593
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:597
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:601
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:605
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:609
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:613
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:617
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 88:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:621
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:625
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:631
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:635
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:641
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:645
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:651
		{
			yyVAL.expression = nil
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:655
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:659
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:663
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:667
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:673
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:677
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:681
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:685
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:689
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 104:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:695
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:699
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:703
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:707
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:713
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:719
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:723
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:729
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:735
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:739
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:745
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:749
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:753
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 117:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:759
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 118:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:763
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 119:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:767
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 120:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:771
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:775
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:781
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:785
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:789
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:793
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:797
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:801
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:805
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:811
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:815
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:819
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:825
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].identifier}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:829
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:833
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:841
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:845
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:849
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:853
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:857
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:861
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:865
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:869
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:873
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:877
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:881
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:885
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:889
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:895
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:899
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:903
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:909
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:921
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:931
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:940
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:949
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:964
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:970
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:976
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:980
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:986
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:990
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:996
		{
			yyVAL.queryexpr = nil
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1006
		{
			yyVAL.queryexpr = nil
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1010
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.queryexpr = nil
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1020
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.queryexpr = nil
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1034
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = nil
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = nil
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1060
		{
			yyVAL.queryexpr = nil
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1064
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 180:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1080
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1090
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1094
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1098
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1106
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1110
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1122
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1140
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1158
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1162
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1166
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1178
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1182
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1186
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1198
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1202
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1206
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1216
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1222
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1226
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1230
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1236
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1240
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1246
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1250
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1256
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1260
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1270
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1276
		{
			yyVAL.token = Token{}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1280
		{
			yyVAL.token = yyDollar[1].token
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1284
		{
			yyVAL.token = yyDollar[1].token
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1290
		{
			yyVAL.token = yyDollar[1].token
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1294
		{
			yyVAL.token = yyDollar[1].token
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1300
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1306
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1343
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1347
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1351
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1355
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 242:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1383
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1387
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1391
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1421
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1425
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1429
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1433
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1437
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1441
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1445
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1459
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1463
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1469
		{
			yyVAL.queryexprs = nil
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1491
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1498
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1506
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1510
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1514
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 276:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1530
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 278:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1534
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 279:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 280:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1542
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 281:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1546
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 282:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1550
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1554
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 284:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1558
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 285:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1562
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 286:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1566
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 287:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1576
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1582
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1586
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1593
		{
			yyVAL.queryexpr = nil
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1597
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1603
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1607
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1613
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1617
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1628
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1633
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1638
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1654
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1658
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1688
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1700
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1704
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1710
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1714
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1718
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1722
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1734
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 327:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1766
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1770
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1786
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1790
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1800
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.queryexpr = nil
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1810
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.queryexpr = nil
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1836
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1850
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1866
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1876
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1886
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 354:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1896
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 355:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1900
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 357:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1914
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1920
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1926
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1930
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1936
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1941
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1952
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.elseexpr = Else{}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1968
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1978
		{
			yyVAL.elseexpr = Else{}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1988
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1992
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1998
		{
			yyVAL.elseexpr = Else{}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2002
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2008
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.elseexpr = Else{}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2028
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2032
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2038
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2048
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2052
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2068
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2072
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2088
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2092
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2112
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2120
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2126
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2132
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2136
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2142
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2174
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2180
		{
			yyVAL.token = Token{}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2184
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2190
		{
			yyVAL.token = Token{}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2194
		{
			yyVAL.token = yyDollar[1].token
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2200
		{
			yyVAL.token = Token{}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2204
		{
			yyVAL.token = yyDollar[1].token
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2210
		{
			yyVAL.token = Token{}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2214
		{
			yyVAL.token = yyDollar[1].token
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2220
		{
			yyVAL.token = yyDollar[1].token
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2224
		{
			yyVAL.token = yyDollar[1].token
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2230
		{
			yyVAL.token = Token{}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2234
		{
			yyVAL.token = yyDollar[1].token
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2240
		{
			yyVAL.token = Token{}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2244
		{
			yyVAL.token = yyDollar[1].token
		}
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2250
		{
			yyVAL.token = Token{}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2254
		{
			yyVAL.token = yyDollar[1].token
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2260
		{
			yyVAL.token = yyDollar[1].token
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2264
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
