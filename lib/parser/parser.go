// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const SELECT = 57355
const FROM = 57356
const UPDATE = 57357
const SET = 57358
const DELETE = 57359
const WHERE = 57360
const INSERT = 57361
const INTO = 57362
const VALUES = 57363
const AS = 57364
const DUAL = 57365
const STDIN = 57366
const RECURSIVE = 57367
const CREATE = 57368
const ADD = 57369
const DROP = 57370
const ALTER = 57371
const TABLE = 57372
const FIRST = 57373
const LAST = 57374
const AFTER = 57375
const BEFORE = 57376
const DEFAULT = 57377
const RENAME = 57378
const TO = 57379
const VIEW = 57380
const ORDER = 57381
const GROUP = 57382
const HAVING = 57383
const BY = 57384
const ASC = 57385
const DESC = 57386
const LIMIT = 57387
const OFFSET = 57388
const PERCENT = 57389
const JOIN = 57390
const INNER = 57391
const OUTER = 57392
const LEFT = 57393
const RIGHT = 57394
const FULL = 57395
const CROSS = 57396
const ON = 57397
const USING = 57398
const NATURAL = 57399
const UNION = 57400
const INTERSECT = 57401
const EXCEPT = 57402
const ALL = 57403
const ANY = 57404
const EXISTS = 57405
const IN = 57406
const AND = 57407
const OR = 57408
const NOT = 57409
const BETWEEN = 57410
const LIKE = 57411
const IS = 57412
const NULL = 57413
const DISTINCT = 57414
const WITH = 57415
const RANGE = 57416
const UNBOUNDED = 57417
const PRECEDING = 57418
const FOLLOWING = 57419
const CURRENT = 57420
const ROW = 57421
const CASE = 57422
const IF = 57423
const ELSEIF = 57424
const WHILE = 57425
const WHEN = 57426
const THEN = 57427
const ELSE = 57428
const DO = 57429
const END = 57430
const DECLARE = 57431
const CURSOR = 57432
const FOR = 57433
const FETCH = 57434
const OPEN = 57435
const CLOSE = 57436
const DISPOSE = 57437
const NEXT = 57438
const PRIOR = 57439
const ABSOLUTE = 57440
const RELATIVE = 57441
const SEPARATOR = 57442
const PARTITION = 57443
const OVER = 57444
const COMMIT = 57445
const ROLLBACK = 57446
const CONTINUE = 57447
const BREAK = 57448
const EXIT = 57449
const PRINT = 57450
const PRINTF = 57451
const SOURCE = 57452
const TRIGGER = 57453
const FUNCTION = 57454
const AGGREGATE = 57455
const BEGIN = 57456
const RETURN = 57457
const IGNORE = 57458
const WITHIN = 57459
const VAR = 57460
const SHOW = 57461
const TIES = 57462
const NULLS = 57463
const ROWS = 57464
const ERROR = 57465
const JSON_ROW = 57466
const JSON_TABLE = 57467
const COUNT = 57468
const JSON_OBJECT = 57469
const AGGREGATE_FUNCTION = 57470
const LIST_FUNCTION = 57471
const ANALYTIC_FUNCTION = 57472
const FUNCTION_NTH = 57473
const FUNCTION_WITH_INS = 57474
const COMPARISON_OP = 57475
const STRING_OP = 57476
const SUBSTITUTION_OP = 57477
const UMINUS = 57478
const UPLUS = 57479

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ERROR",
	"JSON_ROW",
	"JSON_TABLE",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'*'",
	"'='",
	"'-'",
	"'+'",
	"'!'",
	"'('",
	"')'",
	"'/'",
	"'%'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2203

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string) ([]Statement, error) {
	l := new(Lexer)
	l.Init(s, sourceFile)
	yyParse(l)
	return l.program, l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 162,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 55,
	13, 162,
	15, 162,
	17, 162,
	19, 162,
	144, 162,
	-2, 1,
	-1, 57,
	145, 247,
	-2, 162,
	-1, 98,
	58, 142,
	59, 142,
	60, 142,
	-2, 153,
	-1, 135,
	1, 130,
	82, 130,
	84, 130,
	86, 130,
	88, 130,
	138, 130,
	-2, 176,
	-1, 151,
	82, 1,
	86, 1,
	88, 1,
	-2, 162,
	-1, 249,
	88, 4,
	-2, 162,
	-1, 260,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 217,
	-1, 261,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 219,
	-1, 271,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 229,
	-1, 306,
	88, 1,
	-2, 162,
	-1, 316,
	48, 400,
	-2, 329,
	-1, 385,
	88, 1,
	-2, 162,
	-1, 392,
	64, 0,
	68, 0,
	69, 0,
	70, 0,
	133, 0,
	140, 0,
	-2, 230,
	-1, 415,
	84, 1,
	86, 1,
	88, 1,
	-2, 162,
	-1, 489,
	82, 4,
	84, 4,
	86, 4,
	88, 4,
	-2, 162,
	-1, 492,
	88, 4,
	-2, 162,
	-1, 493,
	88, 4,
	-2, 162,
	-1, 561,
	13, 410,
	73, 410,
	144, 410,
	-2, 75,
	-1, 583,
	82, 4,
	86, 4,
	88, 4,
	-2, 162,
	-1, 588,
	88, 4,
	-2, 162,
	-1, 589,
	88, 4,
	-2, 162,
	-1, 594,
	82, 1,
	86, 1,
	88, 1,
	-2, 162,
	-1, 645,
	88, 6,
	-2, 162,
	-1, 656,
	88, 4,
	-2, 162,
	-1, 711,
	88, 6,
	-2, 162,
	-1, 712,
	88, 6,
	-2, 162,
	-1, 716,
	88, 4,
	-2, 162,
	-1, 720,
	84, 4,
	86, 4,
	88, 4,
	-2, 162,
	-1, 755,
	82, 6,
	84, 6,
	86, 6,
	88, 6,
	-2, 162,
	-1, 794,
	82, 6,
	86, 6,
	88, 6,
	-2, 162,
	-1, 797,
	88, 8,
	-2, 162,
	-1, 802,
	88, 6,
	-2, 162,
	-1, 805,
	82, 4,
	86, 4,
	88, 4,
	-2, 162,
	-1, 822,
	88, 6,
	-2, 162,
	-1, 843,
	88, 6,
	-2, 162,
	-1, 847,
	84, 6,
	86, 6,
	88, 6,
	-2, 162,
	-1, 849,
	82, 8,
	84, 8,
	86, 8,
	88, 8,
	-2, 162,
	-1, 852,
	88, 8,
	-2, 162,
	-1, 853,
	88, 8,
	-2, 162,
	-1, 866,
	82, 8,
	86, 8,
	88, 8,
	-2, 162,
	-1, 878,
	82, 6,
	86, 6,
	88, 6,
	-2, 162,
	-1, 882,
	88, 8,
	-2, 162,
	-1, 898,
	88, 8,
	-2, 162,
	-1, 902,
	84, 8,
	86, 8,
	88, 8,
	-2, 162,
	-1, 922,
	82, 8,
	86, 8,
	88, 8,
	-2, 162,
}

const yyPrivate = 57344

const yyLast = 3188

var yyAct = [...]int{

	71, 23, 897, 896, 867, 213, 888, 795, 841, 842,
	708, 715, 95, 363, 780, 419, 221, 467, 584, 707,
	714, 676, 384, 512, 568, 140, 563, 293, 371, 115,
	482, 741, 121, 122, 538, 483, 86, 316, 132, 739,
	193, 135, 530, 346, 740, 480, 429, 522, 58, 370,
	21, 326, 171, 383, 205, 219, 23, 216, 437, 315,
	569, 199, 436, 169, 210, 404, 184, 312, 78, 76,
	111, 59, 145, 329, 317, 173, 737, 378, 103, 738,
	369, 20, 824, 1, 441, 454, 442, 443, 438, 435,
	579, 190, 439, 580, 640, 174, 735, 175, 181, 114,
	173, 201, 201, 195, 798, 21, 610, 338, 98, 223,
	230, 201, 173, 196, 599, 577, 250, 174, 152, 238,
	239, 240, 173, 163, 241, 162, 161, 163, 576, 562,
	164, 165, 424, 534, 164, 165, 20, 525, 441, 150,
	442, 443, 438, 435, 251, 336, 439, 163, 256, 162,
	161, 314, 23, 255, 164, 165, 840, 232, 381, 839,
	212, 251, 817, 204, 816, 44, 815, 254, 200, 200,
	54, 814, 365, 3, 286, 149, 289, 45, 231, 813,
	849, 810, 809, 440, 44, 701, 808, 149, 251, 807,
	791, 789, 788, 779, 713, 267, 320, 202, 270, 201,
	251, 21, 662, 642, 324, 639, 629, 324, 628, 158,
	167, 223, 157, 156, 159, 155, 270, 627, 268, 295,
	296, 626, 262, 625, 609, 598, 591, 212, 3, 575,
	573, 561, 20, 560, 545, 258, 268, 755, 559, 288,
	558, 552, 518, 507, 291, 292, 360, 506, 505, 504,
	23, 374, 361, 377, 335, 425, 407, 304, 98, 334,
	283, 104, 104, 100, 285, 101, 328, 99, 333, 284,
	792, 790, 747, 311, 195, 746, 405, 375, 153, 152,
	382, 745, 331, 332, 163, 154, 162, 161, 395, 535,
	355, 164, 165, 46, 47, 48, 52, 49, 323, 51,
	116, 347, 391, 351, 479, 744, 743, 23, 731, 393,
	394, 223, 728, 427, 432, 201, 359, 321, 725, 444,
	695, 693, 324, 692, 3, 686, 324, 423, 380, 514,
	496, 388, 387, 448, 403, 447, 191, 223, 458, 357,
	356, 396, 344, 343, 397, 398, 468, 342, 399, 472,
	432, 432, 341, 340, 339, 468, 21, 412, 486, 446,
	192, 106, 431, 180, 179, 408, 409, 434, 410, 178,
	108, 107, 477, 244, 186, 489, 433, 55, 233, 494,
	495, 491, 200, 468, 487, 449, 23, 20, 149, 301,
	414, 459, 106, 106, 457, 464, 465, 466, 473, 475,
	497, 137, 857, 460, 461, 462, 463, 696, 453, 470,
	455, 456, 354, 694, 608, 606, 23, 691, 603, 802,
	633, 353, 631, 345, 712, 711, 432, 645, 753, 532,
	751, 690, 603, 45, 634, 21, 632, 235, 499, 689,
	182, 324, 513, 203, 688, 302, 544, 183, 529, 687,
	630, 624, 742, 202, 68, 53, 921, 516, 911, 900,
	885, 513, 126, 127, 54, 21, 20, 884, 877, 500,
	858, 854, 472, 540, 531, 432, 848, 845, 804, 3,
	801, 853, 113, 113, 533, 117, 515, 898, 800, 234,
	23, 119, 765, 23, 23, 754, 20, 139, 542, 520,
	543, 548, 541, 582, 724, 723, 586, 587, 69, 29,
	53, 236, 237, 553, 554, 555, 557, 571, 556, 868,
	718, 659, 658, 531, 593, 508, 223, 124, 125, 128,
	129, 498, 488, 22, 413, 432, 899, 324, 324, 852,
	898, 607, 423, 118, 589, 588, 493, 492, 597, 46,
	47, 48, 52, 49, 50, 51, 116, 623, 3, 882,
	160, 604, 844, 468, 29, 120, 843, 432, 432, 843,
	822, 605, 717, 643, 614, 615, 716, 619, 386, 716,
	636, 612, 385, 431, 23, 611, 656, 385, 3, 23,
	23, 172, 401, 306, 796, 23, 253, 654, 585, 194,
	294, 904, 660, 661, 903, 635, 53, 648, 649, 214,
	864, 432, 647, 772, 771, 637, 638, 324, 324, 324,
	722, 683, 685, 667, 666, 721, 653, 581, 56, 96,
	899, 172, 844, 717, 386, 925, 513, 920, 63, 9,
	172, 472, 894, 876, 21, 836, 23, 185, 133, 134,
	136, 803, 138, 675, 679, 680, 681, 23, 664, 531,
	29, 592, 915, 862, 769, 699, 698, 168, 519, 909,
	719, 893, 924, 889, 906, 20, 907, 908, 665, 874,
	892, 889, 891, 324, 601, 44, 524, 113, 726, 176,
	177, 211, 673, 92, 9, 96, 298, 729, 188, 189,
	297, 732, 186, 905, 53, 511, 376, 168, 799, 379,
	513, 265, 23, 23, 252, 264, 266, 23, 220, 757,
	734, 23, 300, 299, 749, 273, 272, 749, 208, 330,
	767, 539, 468, 750, 770, 760, 766, 748, 242, 243,
	752, 872, 918, 775, 44, 890, 682, 247, 873, 776,
	887, 875, 618, 890, 617, 93, 23, 616, 29, 257,
	537, 53, 259, 260, 261, 536, 263, 3, 309, 271,
	417, 274, 275, 276, 277, 278, 279, 280, 811, 749,
	207, 208, 209, 783, 784, 785, 786, 550, 812, 806,
	9, 778, 787, 782, 441, 23, 442, 443, 23, 833,
	834, 303, 172, 23, 307, 551, 23, 310, 831, 527,
	528, 485, 223, 376, 669, 29, 451, 830, 703, 837,
	220, 197, 781, 23, 749, 572, 832, 838, 423, 578,
	818, 570, 348, 349, 671, 672, 45, 819, 110, 109,
	53, 350, 851, 352, 23, 172, 148, 764, 23, 855,
	23, 859, 663, 23, 23, 172, 72, 652, 362, 646,
	831, 644, 347, 831, 831, 574, 337, 23, 358, 830,
	53, 879, 830, 830, 390, 198, 392, 831, 832, 23,
	172, 832, 832, 23, 703, 703, 830, 172, 9, 172,
	327, 313, 206, 831, 29, 832, 325, 762, 763, 23,
	245, 912, 830, 23, 402, 910, 130, 54, 144, 831,
	147, 832, 919, 831, 564, 565, 566, 567, 830, 418,
	422, 923, 830, 23, 29, 112, 881, 832, 703, 927,
	821, 832, 865, 831, 655, 869, 870, 452, 305, 172,
	8, 793, 830, 430, 53, 9, 220, 53, 53, 880,
	7, 832, 46, 47, 48, 52, 49, 50, 51, 116,
	6, 400, 65, 217, 218, 901, 319, 703, 318, 917,
	826, 886, 871, 856, 84, 703, 474, 490, 96, 64,
	820, 913, 73, 74, 75, 916, 92, 77, 835, 67,
	60, 66, 61, 670, 526, 703, 501, 421, 29, 502,
	420, 29, 29, 146, 416, 926, 308, 549, 846, 450,
	102, 509, 17, 16, 70, 123, 703, 14, 484, 481,
	703, 517, 826, 13, 9, 826, 826, 521, 12, 860,
	172, 485, 650, 863, 10, 485, 15, 11, 53, 826,
	827, 704, 825, 53, 53, 702, 366, 364, 93, 53,
	4, 703, 141, 2, 9, 826, 0, 546, 547, 0,
	0, 5, 0, 523, 895, 0, 0, 0, 0, 0,
	0, 826, 0, 0, 0, 826, 0, 0, 0, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 524,
	0, 0, 29, 0, 0, 826, 0, 29, 29, 0,
	53, 0, 441, 29, 442, 443, 438, 435, 677, 678,
	439, 53, 0, 595, 0, 0, 0, 0, 45, 170,
	596, 0, 0, 0, 600, 0, 0, 0, 9, 0,
	0, 9, 9, 0, 0, 422, 158, 167, 166, 157,
	156, 159, 155, 172, 0, 613, 0, 0, 0, 153,
	152, 0, 0, 0, 29, 163, 154, 162, 161, 170,
	622, 0, 164, 165, 759, 29, 53, 53, 170, 172,
	0, 53, 0, 0, 0, 53, 0, 0, 172, 441,
	641, 442, 443, 438, 435, 733, 0, 439, 651, 0,
	0, 0, 0, 0, 0, 657, 0, 158, 167, 166,
	157, 156, 159, 155, 0, 153, 152, 0, 0, 0,
	53, 163, 154, 162, 161, 0, 0, 774, 164, 165,
	29, 29, 9, 0, 0, 29, 0, 9, 9, 29,
	684, 0, 0, 9, 46, 47, 48, 52, 49, 50,
	51, 116, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 53, 0, 0, 0, 0, 53, 471, 172,
	53, 0, 0, 0, 29, 0, 153, 152, 0, 0,
	0, 0, 163, 154, 162, 161, 62, 53, 727, 164,
	165, 668, 45, 0, 9, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 9, 0, 0, 53, 105,
	445, 0, 53, 29, 53, 0, 29, 53, 53, 0,
	0, 29, 0, 0, 29, 756, 96, 0, 0, 758,
	761, 53, 0, 0, 0, 0, 0, 768, 0, 0,
	170, 29, 0, 53, 0, 0, 0, 53, 0, 0,
	0, 0, 0, 777, 0, 0, 0, 0, 0, 0,
	9, 9, 29, 53, 0, 9, 29, 53, 29, 9,
	0, 29, 29, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 426, 0, 29, 0, 53, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 29, 0, 0,
	0, 29, 0, 0, 9, 0, 0, 0, 46, 47,
	48, 52, 49, 50, 51, 116, 823, 29, 469, 0,
	0, 29, 0, 0, 0, 476, 0, 478, 0, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 29, 0, 9, 0, 269, 9, 0, 850, 96,
	0, 9, 0, 0, 9, 0, 0, 0, 45, 105,
	0, 0, 0, 0, 861, 0, 0, 0, 0, 269,
	269, 9, 0, 0, 0, 0, 0, 170, 72, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 883, 0,
	322, 0, 9, 322, 0, 0, 9, 0, 9, 0,
	0, 9, 9, 0, 0, 0, 45, 73, 74, 75,
	0, 92, 77, 54, 0, 9, 0, 0, 0, 914,
	0, 0, 0, 0, 0, 0, 72, 9, 0, 0,
	0, 9, 0, 0, 45, 73, 74, 75, 0, 92,
	77, 54, 0, 0, 0, 0, 0, 9, 0, 153,
	152, 9, 269, 0, 72, 163, 154, 162, 161, 269,
	269, 281, 164, 165, 282, 87, 0, 0, 590, 88,
	0, 9, 0, 93, 46, 47, 48, 52, 49, 50,
	51, 116, 85, 81, 269, 406, 406, 406, 0, 0,
	0, 0, 90, 87, 0, 0, 0, 88, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 0, 322, 0,
	85, 81, 322, 0, 0, 0, 105, 0, 105, 105,
	90, 0, 46, 47, 48, 52, 91, 50, 225, 24,
	224, 226, 227, 228, 229, 0, 0, 0, 0, 0,
	45, 222, 290, 79, 80, 89, 97, 215, 0, 0,
	46, 47, 48, 52, 91, 50, 225, 24, 224, 226,
	227, 228, 229, 0, 0, 0, 0, 0, 0, 222,
	0, 79, 80, 89, 97, 0, 0, 0, 0, 0,
	0, 674, 0, 0, 0, 0, 0, 0, 45, 73,
	74, 75, 269, 92, 77, 54, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 72, 0,
	0, 269, 0, 0, 0, 0, 700, 45, 73, 74,
	75, 0, 92, 77, 54, 0, 0, 322, 0, 0,
	45, 0, 0, 0, 0, 0, 0, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 320,
	202, 88, 0, 0, 0, 93, 46, 47, 48, 52,
	49, 50, 51, 116, 85, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 87, 0, 0, 45,
	88, 287, 0, 0, 93, 0, 0, 0, 0, 0,
	0, 0, 45, 85, 81, 0, 0, 773, 269, 44,
	131, 0, 143, 90, 46, 47, 48, 52, 91, 50,
	225, 24, 224, 226, 227, 228, 229, 0, 0, 0,
	45, 0, 0, 322, 322, 79, 80, 89, 97, 0,
	0, 142, 0, 46, 47, 48, 52, 91, 50, 83,
	24, 82, 94, 0, 0, 0, 46, 47, 48, 52,
	49, 323, 51, 116, 79, 80, 89, 97, 45, 73,
	74, 75, 0, 92, 77, 54, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 269, 45, 73, 74,
	75, 0, 92, 77, 54, 46, 47, 48, 52, 49,
	50, 51, 116, 322, 322, 322, 0, 72, 46, 47,
	48, 52, 49, 50, 51, 116, 0, 87, 0, 0,
	0, 88, 0, 0, 0, 93, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 81, 46, 47, 48, 52,
	49, 50, 51, 116, 90, 0, 87, 0, 0, 0,
	88, 0, 0, 158, 93, 211, 157, 156, 159, 155,
	269, 0, 0, 85, 81, 0, 0, 0, 0, 322,
	0, 0, 0, 90, 46, 47, 48, 52, 91, 50,
	83, 24, 82, 94, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 222, 0, 79, 80, 89, 97, 0,
	0, 0, 0, 46, 47, 48, 52, 91, 50, 83,
	24, 82, 94, 45, 73, 74, 75, 0, 92, 77,
	54, 0, 153, 152, 79, 80, 89, 97, 163, 154,
	162, 161, 0, 72, 0, 164, 165, 0, 45, 73,
	74, 75, 0, 92, 77, 54, 0, 0, 0, 0,
	0, 0, 0, 153, 152, 0, 0, 0, 72, 163,
	154, 162, 161, 0, 0, 0, 164, 165, 621, 0,
	0, 0, 87, 0, 0, 0, 88, 0, 0, 0,
	93, 0, 44, 0, 0, 0, 0, 0, 0, 85,
	81, 0, 0, 0, 0, 0, 0, 87, 0, 90,
	0, 88, 0, 0, 0, 93, 45, 73, 74, 75,
	0, 92, 77, 54, 85, 81, 0, 0, 0, 45,
	0, 0, 0, 0, 90, 0, 72, 0, 0, 46,
	47, 48, 52, 91, 50, 83, 24, 82, 94, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 80, 89, 97, 46, 47, 48, 52, 91, 50,
	83, 24, 82, 94, 0, 87, 0, 0, 0, 88,
	0, 0, 0, 93, 0, 79, 80, 89, 97, 0,
	0, 0, 85, 81, 0, 0, 0, 0, 45, 73,
	248, 75, 90, 92, 77, 54, 0, 0, 0, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 72, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	0, 0, 46, 47, 48, 52, 91, 50, 83, 24,
	82, 94, 0, 0, 0, 46, 47, 48, 52, 49,
	50, 51, 116, 79, 80, 89, 57, 87, 0, 0,
	0, 88, 0, 0, 0, 93, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 81, 0, 0, 0, 153,
	152, 0, 0, 0, 90, 163, 154, 162, 161, 153,
	152, 0, 164, 165, 620, 163, 154, 162, 161, 0,
	0, 0, 164, 165, 411, 158, 167, 166, 157, 156,
	159, 155, 0, 0, 46, 47, 48, 52, 91, 50,
	83, 24, 82, 94, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 0, 79, 80, 89, 97, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	0, 922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 902, 45, 0, 153, 152, 0, 0, 0, 0,
	163, 154, 162, 161, 0, 0, 0, 164, 165, 282,
	428, 0, 0, 153, 152, 0, 0, 0, 0, 163,
	154, 162, 161, 0, 0, 0, 164, 165, 246, 153,
	152, 0, 0, 0, 0, 163, 154, 162, 161, 153,
	152, 0, 164, 165, 0, 163, 154, 162, 161, 0,
	0, 0, 164, 165, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 0, 878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 866, 158, 167, 166, 157,
	156, 159, 155, 0, 0, 0, 158, 167, 166, 157,
	156, 159, 155, 0, 0, 0, 0, 847, 46, 47,
	48, 52, 49, 50, 51, 116, 0, 805, 0, 0,
	0, 0, 0, 153, 152, 0, 0, 0, 0, 163,
	154, 162, 161, 153, 152, 0, 164, 165, 0, 163,
	154, 162, 161, 0, 0, 0, 164, 165, 158, 167,
	166, 157, 156, 159, 155, 153, 152, 0, 0, 0,
	0, 163, 154, 162, 161, 153, 152, 0, 164, 165,
	0, 163, 154, 162, 161, 0, 0, 0, 164, 165,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	0, 0, 0, 797, 0, 0, 0, 0, 0, 0,
	0, 794, 0, 0, 0, 0, 0, 153, 152, 0,
	0, 0, 0, 163, 154, 162, 161, 0, 0, 736,
	164, 165, 158, 167, 166, 157, 156, 159, 155, 0,
	0, 0, 158, 167, 166, 157, 156, 159, 155, 153,
	152, 0, 0, 720, 0, 163, 154, 162, 161, 153,
	152, 0, 164, 165, 0, 163, 154, 162, 161, 0,
	0, 0, 164, 165, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 158, 167, 166, 157, 156, 159,
	155, 0, 0, 0, 294, 0, 0, 0, 0, 0,
	0, 153, 152, 0, 0, 594, 0, 163, 154, 162,
	161, 153, 152, 0, 164, 165, 0, 163, 154, 162,
	161, 0, 0, 602, 164, 165, 158, 167, 166, 157,
	156, 159, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 152, 0, 0, 583, 0, 163,
	154, 162, 161, 153, 152, 0, 164, 165, 0, 163,
	154, 162, 161, 0, 0, 0, 164, 165, 158, 167,
	166, 157, 156, 159, 155, 0, 0, 0, 158, 167,
	166, 157, 156, 159, 155, 0, 0, 0, 0, 510,
	0, 0, 0, 0, 0, 153, 152, 0, 0, 415,
	0, 163, 154, 162, 161, 0, 0, 0, 164, 165,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	158, 167, 166, 157, 156, 159, 155, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 153, 152, 0,
	0, 151, 45, 163, 154, 162, 161, 153, 152, 54,
	164, 165, 0, 163, 154, 162, 161, 0, 0, 0,
	164, 165, 158, 167, 166, 157, 156, 159, 155, 0,
	0, 0, 158, 503, 166, 157, 156, 159, 155, 153,
	152, 0, 0, 0, 0, 163, 154, 162, 161, 153,
	152, 0, 164, 165, 0, 163, 154, 162, 161, 0,
	0, 0, 164, 165, 158, 389, 166, 157, 156, 159,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 54, 0,
	0, 153, 152, 36, 0, 0, 0, 163, 154, 162,
	161, 153, 152, 25, 164, 165, 26, 163, 154, 162,
	161, 0, 0, 0, 164, 165, 0, 0, 46, 47,
	48, 52, 49, 50, 51, 116, 0, 0, 0, 0,
	0, 0, 0, 153, 152, 0, 0, 45, 0, 163,
	154, 162, 161, 0, 54, 0, 164, 165, 0, 36,
	44, 0, 0, 0, 0, 0, 0, 829, 828, 25,
	709, 0, 26, 0, 0, 0, 28, 0, 0, 33,
	31, 32, 30, 0, 0, 0, 0, 0, 0, 0,
	34, 35, 372, 373, 0, 38, 39, 40, 41, 0,
	0, 0, 710, 0, 0, 27, 37, 46, 47, 48,
	52, 49, 50, 51, 24, 0, 44, 0, 45, 0,
	0, 0, 0, 368, 367, 54, 42, 0, 0, 0,
	36, 0, 28, 0, 0, 33, 31, 32, 30, 0,
	25, 0, 0, 26, 0, 0, 34, 35, 372, 373,
	43, 38, 39, 40, 41, 0, 0, 0, 0, 0,
	0, 27, 37, 46, 47, 48, 52, 49, 50, 51,
	24, 0, 0, 0, 45, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 0, 0, 36, 44, 0, 0,
	0, 0, 0, 0, 706, 705, 25, 709, 0, 26,
	0, 0, 0, 28, 0, 0, 33, 31, 32, 30,
	0, 0, 0, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 38, 39, 40, 41, 0, 0, 0, 710,
	0, 0, 27, 37, 46, 47, 48, 52, 49, 50,
	51, 24, 0, 44, 0, 0, 0, 0, 0, 0,
	19, 18, 0, 42, 0, 0, 0, 0, 0, 28,
	0, 0, 33, 31, 32, 30, 0, 0, 0, 0,
	0, 0, 0, 34, 35, 0, 0, 43, 38, 39,
	40, 41, 0, 0, 0, 0, 0, 0, 27, 37,
	46, 47, 48, 52, 49, 50, 51, 24,
}
var yyPact = [...]int{

	3060, -1000, 239, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2092, 2024,
	-1000, -1000, 248, 227, 226, 809, 808, 896, 2798, -1000,
	453, 1806, 1806, 431, -1000, -1000, 894, 1778, 2024, 2024,
	2024, 278, 1703, 902, 821, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 253, -1000, 3060, 2716, 1999, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 253, -1000,
	-1000, -27, -52, -1000, -1000, -1000, -1000, -1000, -1000, 2024,
	2024, 225, 220, 219, -1000, 2024, 307, 217, 2024, 2024,
	1806, 192, -1000, -1000, 216, 515, 2758, 1999, 782, 855,
	2105, 429, 878, 722, 619, -1000, 612, 2024, 1492, 1806,
	2105, -1000, 9, 243, -1000, 399, -1000, -1000, 1806, 1806,
	1806, -1000, -1000, 1806, -1000, -1000, -1000, -1000, 2024, 2024,
	233, -1000, 886, 2758, 2240, -27, 2758, 2174, 2706, 52,
	650, 896, -1000, -1000, -1000, -1000, 5, 1806, -1000, 2024,
	-1000, 3060, 2024, 2024, 2024, 635, 2024, 647, 74, 2024,
	664, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 1406, 115,
	124, 119, 249, 1765, 1873, 1626, -1000, -1000, 2024, 619,
	619, 516, 74, 74, 632, 661, -1000, -1000, 1879, -1000,
	319, 2024, 619, 507, 2024, 115, 723, 765, 2105, 875,
	3, -1000, -1000, 173, 882, 872, 173, 668, 668, 668,
	1520, -1000, 114, -1000, 2221, -1000, 109, -3, 844, -1000,
	2758, -1000, -1000, -37, 210, 209, 208, 203, 199, 198,
	279, 805, 896, 2024, 330, 268, 196, 195, -1000, -1000,
	-1000, 848, 2758, 2758, 977, 1806, 2024, 2758, 2024, 2933,
	1806, 896, 1806, 13, 645, 821, 136, 2758, 496, 8,
	-16, -16, 684, 2800, 2024, 74, 2024, -1000, 1999, -1000,
	192, -16, 74, 74, -12, -12, -1000, -1000, -1000, 145,
	1879, -1000, 2024, -1000, -1000, -1000, -1000, -1000, 2024, -1000,
	-1000, 2024, 1844, 506, 2024, -1000, -1000, 74, 132, 132,
	132, 635, -1000, 2136, 2024, 446, 3060, 2674, 724, 2024,
	1674, 111, 2348, 1444, 2105, 872, 35, -1000, 1278, -1000,
	-1000, 1716, -1000, 191, 189, 173, 776, 2024, -1000, 249,
	-1000, 249, 249, -1000, -1000, -1000, 1520, 1806, 1873, 619,
	619, 619, 2024, 2024, 2024, 1806, 612, -1000, 1114, 832,
	1444, -1000, 2758, 612, 1806, 612, 159, 1806, 896, -1000,
	-1000, -1000, 2758, 444, 237, -1000, -1000, 2092, 2024, -1000,
	-1000, -1000, -1000, -1000, 460, -1000, -4, 459, 1806, 1806,
	-1000, 186, 1806, 443, 501, 3060, 2024, -1000, -1000, 2024,
	2768, -1000, -16, -1000, -1000, -1000, 104, 103, 102, 98,
	437, 2024, 2664, 640, -1000, 92, -1000, 185, -1000, -1000,
	393, 2024, 97, 588, -1000, 3060, -1000, 2024, 1016, -1000,
	-11, 766, 2758, -1000, 74, 1444, -1000, -1000, 1806, 878,
	-15, 149, -74, -1000, -1000, 717, 712, 681, 681, 745,
	173, -1000, -1000, -1000, -1000, 1806, 89, 2024, 2024, 872,
	746, 763, 2758, 669, -1000, -1000, 669, -1000, -1000, 96,
	2024, 2024, 1844, 2024, 95, 93, 88, 86, -19, -1000,
	883, 1806, 796, -1000, 1444, 788, -1000, 85, -1000, 843,
	84, -20, -1000, -1000, -33, 794, -55, -1000, 544, 2933,
	2622, 514, 2933, 2933, 458, 457, 612, 81, 580, 436,
	-1000, 2580, 1879, 2024, -1000, -1000, -1000, -1000, -1000, 2758,
	2024, 74, 80, -34, 2024, -1000, 610, 2538, 301, -1000,
	515, 2758, -1000, 613, 295, 1674, 293, -1000, -1000, -1000,
	79, -42, -1000, 872, 1444, 2024, 173, 173, 709, -1000,
	706, 704, 681, -1000, -1000, -1000, 2126, 1910, -1000, -1000,
	2024, 2024, 349, 78, 76, 72, 63, 61, 348, 320,
	318, 840, 1806, -1000, -1000, -1000, 1444, 1444, 60, -54,
	2024, 58, 1806, 839, 313, 837, 896, 896, 2024, 835,
	896, -1000, -1000, 2933, 500, 2024, 434, 433, 2933, 2933,
	57, 830, -1000, 577, 3060, 1879, 2570, -1000, -1000, 74,
	1133, -1000, -1000, 774, -1000, -1000, -1000, -1000, 803, 671,
	1444, -1000, -1000, 2758, 745, 1053, 173, 173, 173, 698,
	2024, 1806, 2758, -1000, 181, 347, 342, 337, 329, 315,
	179, 177, 292, 176, 286, 612, -1000, -1000, -1000, 883,
	1806, 2758, -1000, -1000, 612, 3004, 311, -1000, -1000, -1000,
	794, 2758, 310, 49, 490, 432, 2933, 2528, 542, 537,
	417, 416, -1000, 174, -1000, 552, -1000, -1000, 2024, 168,
	-1000, -1000, -1000, 74, -1000, -1000, -1000, 2024, 164, 1053,
	1130, 745, 173, -49, 2444, -69, 351, 162, 161, 137,
	131, 128, 351, 351, 328, 351, 326, -1000, -1000, -1000,
	-1000, 407, 99, -1000, -1000, 2092, 2024, -1000, -1000, 2024,
	2024, 3004, 3004, 825, 404, 493, 2933, 2024, 584, -1000,
	2933, -1000, -1000, 531, 530, 612, -1000, 1072, 782, -1000,
	2758, 1806, -1000, 2024, 745, -1000, -1000, -1000, 2024, 48,
	-1000, 783, 751, 351, 351, 351, 351, 351, 47, 782,
	46, 127, 45, 126, -1000, 3004, 2486, 510, 2476, 40,
	644, 2758, 400, 392, 305, 570, 390, -1000, 2392, -1000,
	514, -1000, -1000, 44, -1000, 41, 37, 2758, 36, -1000,
	-1000, 736, 2024, 34, 26, 21, 19, 17, -1000, -1000,
	351, -1000, 351, -1000, 3004, 484, 2024, 2877, 1806, 1806,
	-1000, -1000, 3004, -1000, 564, 2933, -1000, -1000, -1000, -1000,
	-1000, 1674, -1000, -1000, -1000, -1000, -1000, -1000, 14, 11,
	480, 389, 3004, 2382, 388, 42, -1000, -1000, 2092, 2024,
	-1000, -1000, -1000, 452, 394, 383, -1000, 551, 280, -1000,
	-1000, 382, 483, 3004, 2024, 583, -1000, 3004, 527, 2877,
	2360, 435, 2877, 2877, -1000, -1000, -1000, 673, 562, 380,
	-1000, 2350, -1000, 510, -1000, -1000, 2877, 473, 2024, 379,
	372, -1000, 675, 606, 604, 592, -1000, 561, 3004, -1000,
	454, 371, 2877, 2266, 521, 518, 638, 598, -1000, 600,
	590, -1000, -1000, -1000, -1000, 550, 370, 401, 2877, 2024,
	582, -1000, 2877, -1000, -1000, 667, -1000, -1000, -1000, -1000,
	-1000, 556, 368, -1000, 2256, -1000, 435, -1000, 595, -1000,
	-1000, 554, 2877, -1000, -1000, -1000, 548, -1000,
}
var yyPgo = [...]int{

	0, 83, 13, 185, 82, 172, 28, 1053, 80, 1052,
	49, 1050, 1047, 1046, 1045, 19, 10, 1042, 1041, 1040,
	1037, 1036, 1034, 60, 24, 26, 1028, 1023, 35, 1019,
	1018, 30, 45, 1017, 1015, 1014, 1013, 1012, 1061, 85,
	78, 1010, 54, 51, 1009, 1007, 14, 1006, 47, 1004,
	533, 1003, 72, 71, 69, 68, 48, 609, 55, 36,
	23, 15, 1000, 997, 994, 993, 1276, 992, 65, 991,
	990, 989, 52, 638, 979, 974, 16, 44, 39, 31,
	973, 972, 6, 971, 969, 67, 74, 61, 968, 37,
	966, 21, 964, 963, 962, 12, 27, 961, 42, 5,
	59, 17, 57, 960, 950, 943, 46, 940, 22, 53,
	11, 20, 9, 8, 2, 3, 40, 938, 18, 934,
	7, 930, 4, 926, 0, 454, 25, 508, 925, 70,
	64, 66, 62, 34, 58, 73, 910, 43, 560,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 6, 6, 7, 7, 8, 8, 8,
	8, 8, 9, 9, 10, 10, 12, 12, 11, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 13, 14,
	14, 15, 15, 15, 16, 16, 17, 17, 18, 18,
	18, 18, 18, 19, 19, 19, 19, 19, 19, 20,
	20, 20, 20, 21, 21, 22, 22, 22, 22, 22,
	22, 22, 22, 23, 23, 24, 24, 25, 25, 25,
	25, 25, 26, 26, 26, 26, 26, 27, 27, 27,
	27, 28, 29, 29, 30, 31, 31, 32, 32, 32,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	34, 34, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 37, 37, 37, 38, 39, 39,
	39, 39, 40, 40, 41, 42, 42, 43, 43, 44,
	44, 45, 45, 46, 46, 47, 47, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	53, 53, 53, 53, 54, 55, 56, 56, 56, 56,
	56, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 58, 59, 59, 59, 60,
	60, 61, 61, 62, 62, 63, 63, 64, 64, 64,
	65, 65, 66, 67, 68, 68, 68, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 70, 70, 70, 70,
	70, 70, 70, 71, 71, 71, 71, 72, 72, 73,
	73, 73, 73, 74, 74, 74, 74, 74, 75, 75,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 77, 78, 78, 79, 79, 80, 80, 81, 81,
	81, 82, 82, 82, 83, 83, 84, 84, 85, 85,
	86, 86, 86, 88, 88, 88, 88, 88, 89, 89,
	89, 89, 89, 89, 89, 90, 90, 90, 90, 90,
	90, 91, 91, 92, 92, 93, 93, 93, 94, 95,
	95, 96, 96, 97, 97, 98, 98, 99, 99, 100,
	100, 87, 87, 101, 101, 102, 102, 103, 103, 103,
	103, 104, 105, 106, 106, 107, 107, 108, 108, 109,
	109, 110, 110, 111, 111, 112, 112, 113, 113, 114,
	114, 115, 115, 116, 116, 117, 117, 118, 118, 119,
	119, 120, 120, 121, 121, 122, 122, 123, 123, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 125, 126,
	126, 127, 128, 128, 129, 129, 130, 130, 131, 131,
	132, 132, 133, 133, 134, 134, 135, 135, 136, 136,
	137, 137, 138, 138,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 8, 8,
	9, 9, 1, 1, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 1,
	1, 6, 8, 8, 1, 2, 1, 1, 7, 8,
	6, 1, 1, 7, 8, 6, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 6, 8, 5, 6, 8,
	5, 7, 7, 1, 3, 1, 3, 0, 1, 1,
	2, 2, 5, 2, 2, 3, 5, 6, 8, 5,
	3, 1, 1, 3, 3, 1, 3, 1, 1, 3,
	9, 10, 10, 12, 3, 0, 1, 1, 1, 1,
	2, 2, 5, 6, 3, 4, 2, 2, 2, 4,
	2, 2, 2, 4, 2, 3, 4, 5, 5, 4,
	4, 4, 1, 1, 3, 0, 2, 0, 2, 0,
	3, 0, 2, 0, 3, 0, 3, 4, 0, 2,
	0, 2, 0, 2, 6, 9, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 6, 1,
	3, 1, 3, 2, 4, 1, 1, 0, 1, 1,
	1, 1, 3, 3, 3, 1, 6, 3, 3, 3,
	3, 4, 4, 5, 6, 6, 3, 4, 4, 3,
	4, 4, 4, 4, 4, 2, 3, 3, 3, 3,
	3, 2, 2, 3, 3, 2, 2, 0, 1, 4,
	3, 4, 4, 5, 5, 5, 5, 1, 5, 10,
	8, 9, 9, 9, 9, 9, 8, 8, 10, 8,
	10, 2, 1, 5, 0, 3, 2, 5, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 1, 1, 1,
	1, 2, 3, 1, 6, 6, 6, 8, 1, 1,
	2, 3, 1, 1, 3, 4, 5, 6, 7, 5,
	6, 2, 4, 1, 1, 1, 3, 1, 5, 0,
	1, 4, 5, 0, 2, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 6, 9, 5,
	8, 7, 3, 1, 3, 5, 6, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 1, 3, 1, 3, 0, 1, 0, 1,
	0, 1, 0, 1, 1, 1, 0, 1, 0, 1,
	0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -38, -103, -104, -107, -73,
	-22, -20, -26, -27, -33, -21, -36, -37, 81, 80,
	-8, -10, -50, -124, 127, 26, 29, 118, 89, -127,
	95, 93, 94, 92, 103, 104, 16, 119, 108, 109,
	110, 111, 83, 107, 73, 4, 120, 121, 122, 124,
	125, 126, 123, -125, 11, 138, -57, 144, -56, -53,
	-70, -67, -66, -73, -74, -94, -69, -71, -125, -127,
	-35, -124, 24, 5, 6, 7, -54, 10, -55, 141,
	142, 81, 128, 126, -75, 80, -59, 63, 67, 143,
	90, 124, 9, 71, 129, -95, -57, 144, -39, 19,
	15, 17, -41, -40, 13, -66, 144, 144, 144, 30,
	30, -129, -128, -125, -129, -124, 127, -125, 90, 38,
	112, -124, -124, -34, 96, 97, 31, 32, 98, 99,
	12, 12, -124, -57, -57, -124, -57, 123, -57, -125,
	-126, -9, 118, 89, 6, -52, -51, -136, 25, 135,
	-1, 85, 134, 133, 140, 70, 68, 67, 64, 69,
	-138, 142, 141, 139, 146, 147, 66, 65, -57, -99,
	-38, -72, -50, 149, 144, 149, -57, -57, 144, 144,
	144, -95, 133, 140, -131, -138, 67, -66, -57, -57,
	-124, 144, 144, -116, 84, -99, -46, 39, 20, -87,
	-85, -124, 24, 14, -87, -42, 14, 58, 59, 60,
	-130, 72, -72, -99, -57, 145, -102, -93, -92, -58,
	-57, -76, 139, -124, 128, 126, 129, 130, 131, 132,
	-124, -85, 148, 135, 90, 38, 112, 113, -124, -124,
	-124, -124, -57, -57, 140, 14, 148, -57, 6, 87,
	64, 148, 64, -125, -126, 148, -124, -57, -1, -57,
	-57, -57, -131, -57, 68, 64, 69, -59, 144, -66,
	124, -57, 62, 61, -57, -57, -57, -57, -57, -57,
	-57, 145, 148, 145, 145, 145, -124, 6, -130, -124,
	6, -130, -130, -96, 84, -59, -59, 68, 64, 62,
	61, 70, 126, -57, -130, -117, 86, -57, -47, 45,
	42, -86, -85, 16, 148, -100, -89, -86, -88, -90,
	23, 144, -66, 125, -124, 14, -43, 18, -100, -135,
	61, -135, -135, -102, 145, 145, 148, 22, 144, 144,
	144, 144, 144, 144, 144, 144, -137, 22, 27, 28,
	36, -129, -57, 91, 144, 22, 144, 144, 20, -53,
	-124, -99, -57, -2, -12, -5, -13, 81, 80, -8,
	-10, -6, 105, 106, -124, -126, -125, -124, 64, 64,
	-52, 22, 144, -109, -108, 86, 82, -54, -55, 65,
	-57, -59, -57, -59, -59, -99, -72, -72, -72, -58,
	-97, 86, -57, -59, -68, 144, -66, 124, -68, -68,
	-131, 148, -72, 88, -1, 85, -49, 46, -57, -61,
	-62, -63, -57, -76, 21, 144, -38, -124, 22, -106,
	-105, -56, -124, -87, -43, 54, -132, -134, 53, 57,
	148, 49, 51, 52, -124, 22, -89, 144, 144, -100,
	-44, 40, -57, -40, -39, -40, -40, -102, -124, -72,
	-130, -130, -130, -130, -72, -72, -72, -101, -124, -38,
	-23, 144, -124, -56, 144, -56, -38, -101, -38, 145,
	-32, -29, -31, -28, -30, -125, -124, -126, 88, 138,
	-57, -95, 87, 87, -124, -124, 144, -101, 88, -109,
	-1, -57, -57, 65, 145, 145, 145, 145, 88, -57,
	85, 65, -60, -59, 144, 93, 64, -57, 145, 80,
	-1, -57, -48, 47, 73, 148, -64, 43, 44, -60,
	-98, -56, -124, -42, 148, 140, 48, 48, -133, 50,
	-133, -132, -134, -100, -124, 145, -57, -57, -43, -45,
	41, 42, 145, -72, -72, -72, -58, -72, 145, 145,
	145, 145, 148, -25, 31, 32, 33, 34, -24, -23,
	35, -98, 37, 145, 22, 145, 148, 148, 35, 145,
	148, 83, -2, 85, -118, 84, -2, -2, 87, 87,
	-38, 145, 81, 88, 85, -57, -57, -59, 145, 148,
	-57, 74, 145, 117, -116, -48, 120, -61, 121, 145,
	148, -43, -106, -57, -89, -89, 48, 48, 48, -133,
	148, 148, -57, -99, 102, 145, 145, 145, 145, 145,
	102, 102, 116, 102, 116, -137, -101, -56, -56, 145,
	148, -57, 145, -124, 22, 114, 22, -28, -31, -31,
	-125, -57, 22, -32, -2, -119, 86, -57, 88, 88,
	-2, -2, 145, 22, 81, -1, -96, -60, 148, 40,
	-65, 31, 32, 21, -38, -98, -91, 55, 56, -89,
	-89, -89, 48, -124, -57, -124, 144, 102, 102, 102,
	102, 102, 144, 144, 121, 144, 121, -38, -25, -24,
	-38, -3, -14, -5, -18, 81, 80, -15, -16, 83,
	115, 114, 114, 145, -111, -110, 86, 82, 88, -2,
	85, 83, 83, 88, 88, 144, -108, -57, 144, -60,
	-57, 144, -91, 55, -89, 145, 145, 145, 148, -78,
	-77, -79, 101, 144, 144, 144, 144, 144, -77, -79,
	-78, 102, -77, 102, 88, 138, -57, -95, -57, -125,
	-126, -57, -3, -3, 22, 88, -111, -2, -57, 80,
	-2, 83, 83, -38, 145, -46, -101, -57, -72, 145,
	-46, 39, 42, -78, -78, -78, -78, -77, 145, 145,
	144, 145, 144, -3, 85, -120, 84, 87, 64, 64,
	88, 88, 114, 81, 88, 85, -118, 145, 145, 145,
	145, 42, -99, 145, 145, 145, 145, 145, -78, -77,
	-3, -121, 86, -57, -4, -17, -5, -19, 81, 80,
	-15, -16, -6, -124, -124, -3, 81, -2, -61, 145,
	145, -113, -112, 86, 82, 88, -3, 85, 88, 138,
	-57, -95, 87, 87, 88, -110, -80, 122, 88, -113,
	-3, -57, 80, -3, 83, -4, 85, -122, 84, -4,
	-4, -81, 68, 75, 6, 78, 81, 88, 85, -120,
	-4, -123, 86, -57, 88, 88, -83, 75, -82, 6,
	78, 76, 76, 79, 81, -3, -115, -114, 86, 82,
	88, -4, 85, 83, 83, 65, 76, 76, 77, 79,
	-112, 88, -115, -4, -57, 80, -4, -84, 75, -82,
	81, 88, 85, -122, 77, 81, -4, -114,
}
var yyDef = [...]int{

	-2, -2, 2, 25, 26, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 0, 319,
	41, 42, 0, 0, 386, 0, 0, 0, 0, 71,
	0, 0, 0, 115, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 34, 408, 379, 380, 381, 382, 383,
	384, 385, 387, 0, 388, -2, 0, -2, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 176, 0, 168, 169, 170, 171, 172, 173, 0,
	0, 0, 0, 385, 257, 319, 398, 0, 0, 0,
	0, 383, 174, 175, 0, 0, 320, 162, -2, 0,
	0, 0, 145, 0, 396, 143, 162, 247, 0, 0,
	0, 69, 394, 392, 70, 0, 386, 72, 0, 0,
	0, 93, 94, 0, 116, 117, 118, 119, 0, 0,
	0, 126, 132, 127, 128, -2, 131, 134, 0, 191,
	0, 0, 32, 33, 35, 163, 166, 0, 409, 0,
	3, -2, 0, 412, 413, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 241, 242, 247, 396,
	396, 0, 412, 413, 0, 0, 399, 235, 245, 246,
	0, 0, 396, 365, 0, 0, 155, 0, 0, 0,
	331, 288, 289, 0, 0, 147, 0, 406, 406, 406,
	0, 397, 0, 248, 327, 250, 0, 335, 315, 317,
	313, 314, 195, 176, 0, 385, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 0, 95, 100,
	114, 0, 120, 121, 0, 0, 0, 135, 169, -2,
	0, 0, 0, 0, 0, 408, 0, 391, 349, 213,
	-2, -2, 0, 0, 0, 0, 0, 226, 162, 197,
	0, -2, 0, 0, 236, 237, 238, 239, 240, 243,
	244, 194, 0, 196, 212, 252, 177, 179, 247, 178,
	180, 247, 247, 323, 0, 218, 220, 0, 0, 0,
	0, 398, 124, 0, 247, 0, -2, 0, 160, 0,
	0, 162, 290, 0, 0, 147, -2, 298, 299, 302,
	303, 162, 293, 384, 288, 0, 149, 0, 146, 0,
	407, 0, 0, 144, 249, 251, 0, 0, 247, 396,
	396, 396, 247, 247, 247, 0, 162, 411, 0, 0,
	0, 395, 393, 162, 0, 162, 0, 0, 0, 125,
	133, 129, 136, 0, 0, 36, 37, 0, 319, 46,
	47, 48, 23, 24, 0, 390, 389, 0, 0, 0,
	167, 0, 0, 0, 349, -2, 0, 221, 222, 0,
	0, 227, -2, 231, 233, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 162, 215, 0, 232, 234,
	0, 0, 0, 0, 366, -2, 137, 0, 158, 154,
	201, 207, 205, 206, 0, 0, 339, 291, 0, 145,
	343, 0, 176, 332, 345, 0, 0, 402, 402, 400,
	0, 401, 404, 405, 300, 0, 400, 0, 0, 147,
	151, 0, 148, 139, 142, 140, 141, 336, 316, 0,
	247, 247, 247, 247, 0, 0, 0, 0, 333, 77,
	87, 0, 83, 80, 0, 0, 92, 0, 99, 0,
	0, 107, 108, 102, 105, 101, 0, 96, 0, -2,
	0, 0, -2, -2, 0, 0, 162, 0, 0, 0,
	350, 0, 223, 0, 253, 254, 255, 256, 318, 324,
	0, 0, 0, 199, 0, 122, 0, 0, 258, 40,
	363, 161, 156, 158, 0, 0, 203, 208, 209, 337,
	0, 325, 292, 147, 0, 0, 0, 0, 0, 403,
	0, 0, 402, 330, 301, 304, 0, 0, 346, 138,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 78, 88, 89, 0, 0, 0, 85,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 27, 5, -2, 369, 0, 0, 0, -2, -2,
	0, 0, 38, 0, -2, 224, 321, 225, 214, 0,
	0, 123, 198, 0, 364, 157, 159, 202, 0, 162,
	0, 341, 344, 342, 305, 400, 0, 0, 0, 0,
	0, 0, 152, 150, 0, 253, 254, 255, 256, 258,
	0, 0, 0, 0, 0, 162, 334, 90, 91, 87,
	0, 84, 81, 82, 162, -2, 0, 103, 109, 106,
	0, 104, 0, 0, 353, 0, -2, 0, 0, 0,
	0, 0, 164, 0, 39, 347, 322, 200, 0, 0,
	204, 210, 211, 0, 340, 326, 306, 0, 0, 400,
	400, 309, 0, 176, 0, 0, 274, 0, 0, 0,
	0, 0, 274, 274, 0, 274, 0, 76, 79, 86,
	98, 0, 0, 49, 50, 0, 319, 61, 62, 0,
	54, -2, -2, 0, 0, 353, -2, 0, 0, 370,
	-2, 28, 29, 0, 0, 162, 348, 0, 153, 338,
	311, 0, 307, 0, 310, 294, 295, 296, 247, 0,
	272, 153, 0, 274, 274, 274, 274, 274, 0, 153,
	0, 0, 0, 0, 110, -2, 0, 0, 0, 191,
	0, 55, 0, 0, 0, 0, 0, 354, 0, 45,
	367, 30, 31, 0, 216, 0, 0, 308, 0, 260,
	271, 0, 0, 0, 0, 0, 0, 0, 266, 267,
	274, 269, 274, 7, -2, 373, 0, -2, 0, 0,
	111, 112, -2, 43, 0, -2, 368, 165, 259, 312,
	297, 0, 275, 261, 262, 263, 264, 265, 0, 0,
	357, 0, -2, 0, 0, 0, 56, 57, 0, 319,
	66, 67, 68, 0, 0, 0, 44, 351, 154, 268,
	270, 0, 357, -2, 0, 0, 374, -2, 0, -2,
	0, 0, -2, -2, 113, 352, 273, 0, 0, 0,
	358, 0, 60, 371, 51, 9, -2, 377, 0, 0,
	0, 276, 0, 0, 0, 0, 58, 0, -2, 372,
	361, 0, -2, 0, 0, 0, 0, 0, 285, 0,
	0, 278, 279, 280, 59, 355, 0, 361, -2, 0,
	0, 378, -2, 52, 53, 0, 284, 281, 282, 283,
	356, 0, 0, 362, 0, 65, 375, 277, 0, 287,
	63, 0, -2, 376, 286, 64, 359, 360,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 143, 3, 3, 3, 147, 3, 3,
	144, 145, 139, 142, 148, 141, 149, 146, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 138,
	3, 140,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:222
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:227
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:232
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:239
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:243
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:249
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:259
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:263
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:269
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:273
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:277
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:281
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:285
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:289
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:293
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:297
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:301
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:305
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:309
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:313
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:333
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:337
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 27:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 28:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 29:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 30:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 31:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:365
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:369
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:375
		{
			yyVAL.statement = Exit{}
		}
	case 35:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:385
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:395
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 39:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:399
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:403
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:407
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:417
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:429
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:433
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:437
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:443
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:447
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:461
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:477
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:481
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:487
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:491
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:495
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:509
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:513
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 65:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:517
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:529
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:539
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:543
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:547
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 75:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:575
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:587
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:591
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:597
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:601
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:607
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:611
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:617
		{
			yyVAL.expression = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:621
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:625
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:629
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:633
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:639
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:643
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:647
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:651
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:655
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 97:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:661
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 98:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:665
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:669
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:673
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].identifier}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:679
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:685
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:689
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:695
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:701
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:705
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:711
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:715
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:719
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:725
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 111:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:729
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:733
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:737
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:741
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:747
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:751
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:755
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:759
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:763
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:767
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:771
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:777
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[5].token.Token, TypeLit: yyDollar[5].token.Literal}
		}
	case 123:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:781
		{
			yyVAL.queryexpr = CursorStatus{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Is: yyDollar[3].token.Literal, Negation: yyDollar[4].token, Type: yyDollar[6].token.Token, TypeLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:785
		{
			yyVAL.queryexpr = CursorAttrebute{CursorLit: yyDollar[1].token.Literal, Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:791
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal, Value: yyDollar[4].queryexpr.(PrimitiveType).Value}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:795
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].token.Literal}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:799
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:803
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:807
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:811
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:815
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:819
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:823
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].identifier}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:829
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:833
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[3].queryexpr}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:837
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[2].token.Token, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:843
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				OffsetClause:  yyDollar[5].queryexpr,
			}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:855
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:865
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:874
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:883
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:894
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:898
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:904
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Select: yyDollar[1].token.Literal, Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:910
		{
			yyVAL.queryexpr = nil
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:914
		{
			yyVAL.queryexpr = FromClause{From: yyDollar[1].token.Literal, Tables: yyDollar[2].queryexprs}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:920
		{
			yyVAL.queryexpr = nil
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:924
		{
			yyVAL.queryexpr = WhereClause{Where: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:930
		{
			yyVAL.queryexpr = nil
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:934
		{
			yyVAL.queryexpr = GroupByClause{GroupBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:940
		{
			yyVAL.queryexpr = nil
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:944
		{
			yyVAL.queryexpr = HavingClause{Having: yyDollar[1].token.Literal, Filter: yyDollar[2].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:950
		{
			yyVAL.queryexpr = nil
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:954
		{
			yyVAL.queryexpr = OrderByClause{OrderBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Items: yyDollar[3].queryexprs}
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:960
		{
			yyVAL.queryexpr = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:964
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, With: yyDollar[3].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:968
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Limit: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr, Percent: yyDollar[3].token.Literal, With: yyDollar[4].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:974
		{
			yyVAL.queryexpr = nil
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:978
		{
			yyVAL.queryexpr = LimitWith{With: yyDollar[1].token.Literal, Type: yyDollar[2].token}
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:984
		{
			yyVAL.queryexpr = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:988
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Offset: yyDollar[1].token.Literal, Value: yyDollar[2].queryexpr}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:994
		{
			yyVAL.queryexpr = nil
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:998
		{
			yyVAL.queryexpr = WithClause{With: yyDollar[1].token.Literal, InlineTables: yyDollar[2].queryexprs}
		}
	case 164:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, As: yyDollar[3].token.Literal, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 165:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, As: yyDollar[6].token.Literal, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1014
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1018
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1024
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1028
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1032
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1040
		{
			yyVAL.queryexpr = NewDatetimeValueFromString(yyDollar[1].token.Literal)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1044
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1050
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1056
		{
			yyVAL.queryexpr = NewNullValueFromString(yyDollar[1].token.Literal)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1062
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1066
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1074
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1078
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1084
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1088
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1096
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1100
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1104
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1112
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1116
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1124
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1136
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1142
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1148
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1152
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1156
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1162
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1166
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1172
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1176
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1182
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1186
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, Nulls: yyDollar[3].token.Literal, Position: yyDollar[4].token}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1192
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1196
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1202
		{
			yyVAL.token = Token{}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1206
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1210
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1216
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1220
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1226
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1232
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1259
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 216:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1263
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1273
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, RHS: yyDollar[3].queryexpr}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1277
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1281
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: "=", RHS: yyDollar[3].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1285
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = Is{Is: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = Between{Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 224:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1297
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 225:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1301
		{
			yyVAL.queryexpr = Between{Between: yyDollar[3].token.Literal, And: yyDollar[5].token.Literal, LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1305
		{
			yyVAL.queryexpr = In{In: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = In{In: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1317
		{
			yyVAL.queryexpr = Like{Like: yyDollar[2].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1321
		{
			yyVAL.queryexpr = Like{Like: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1325
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = Any{Any: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = All{All: yyDollar[3].token.Literal, LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token.Literal, Values: yyDollar[4].queryexpr}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = Exists{Exists: yyDollar[1].token.Literal, Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1347
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('+'), RHS: yyDollar[3].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1351
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('-'), RHS: yyDollar[3].queryexpr}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1355
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('*'), RHS: yyDollar[3].queryexpr}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1359
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('/'), RHS: yyDollar[3].queryexpr}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: int('%'), RHS: yyDollar[3].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1377
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1381
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1395
		{
			yyVAL.queryexprs = nil
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1405
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1409
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1413
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1417
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1424
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1428
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 256:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1446
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 259:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1450
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, WithinGroup: yyDollar[6].token.Literal + " " + yyDollar[7].token.Literal, OrderBy: yyDollar[9].queryexpr}
		}
	case 260:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1456
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 261:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1460
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 262:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1464
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 263:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1468
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1472
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 265:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, Over: yyDollar[6].token.Literal, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 266:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 267:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 268:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1488
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 269:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1492
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, Over: yyDollar[5].token.Literal, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 270:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1496
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreNulls: true, IgnoreNullsLit: yyDollar[5].token.Literal + " " + yyDollar[6].token.Literal, Over: yyDollar[7].token.Literal, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1502
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1508
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1512
		{
			orderByClause := OrderByClause{OrderBy: yyDollar[2].token.Literal + " " + yyDollar[3].token.Literal, Items: yyDollar[4].queryexprs}
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: orderByClause, WindowingClause: yyDollar[5].queryexpr}
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1519
		{
			yyVAL.queryexpr = nil
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1523
		{
			yyVAL.queryexpr = PartitionClause{PartitionBy: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal, Values: yyDollar[3].queryexprs}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1529
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[2].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1533
		{
			yyVAL.queryexpr = WindowingClause{Rows: yyDollar[1].token.Literal, FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr, Between: yyDollar[2].token.Literal, And: yyDollar[4].token.Literal}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1539
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1543
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1554
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1559
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Offset: i, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1564
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token.Token, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1570
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1574
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1580
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token.Token, Unbounded: true, Literal: yyDollar[1].token.Literal + " " + yyDollar[2].token.Literal}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1584
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token), Stdin: yyDollar[1].token.Literal}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1600
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1614
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1618
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1622
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token.Literal, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1626
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1630
		{
			yyVAL.queryexpr = TableObject{BaseExpr: yyDollar[1].identifier.BaseExpr, Type: yyDollar[1].identifier, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = Table{Object: Dual{Dual: yyDollar[1].token.Literal}}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1666
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1670
		{
			yyVAL.queryexpr = Join{Join: yyDollar[3].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1674
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: JoinCondition{Literal: yyDollar[6].token.Literal, On: yyDollar[7].queryexpr}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Join{Join: yyDollar[4].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Join{Join: yyDollar[5].token.Literal, Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1692
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, On: yyDollar[2].queryexpr}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1696
		{
			yyVAL.queryexpr = JoinCondition{Literal: yyDollar[1].token.Literal, Using: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1706
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token.Literal, Alias: yyDollar[3].identifier}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexpr = CaseExpr{Case: yyDollar[1].token.Literal, End: yyDollar[5].token.Literal, Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1732
		{
			yyVAL.queryexpr = nil
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1736
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1742
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1746
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{When: yyDollar[1].token.Literal, Then: yyDollar[3].token.Literal, Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = nil
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexpr = CaseExprElse{Else: yyDollar[1].token.Literal, Result: yyDollar[2].queryexpr}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1762
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1766
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1772
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1782
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1786
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1792
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1796
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1802
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1806
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1822
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, ValuesList: yyDollar[6].queryexprs}
		}
	case 338:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1826
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1830
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 340:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1834
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: yyDollar[4].table, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1846
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1852
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1856
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1862
		{
			from := FromClause{From: yyDollar[3].token.Literal, Tables: yyDollar[4].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: from, WhereClause: yyDollar[5].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1867
		{
			from := FromClause{From: yyDollar[4].token.Literal, Tables: yyDollar[5].queryexprs}
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: from, WhereClause: yyDollar[6].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1878
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.elseexpr = Else{}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1888
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1894
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1898
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1904
		{
			yyVAL.elseexpr = Else{}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1908
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1914
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.elseexpr = Else{}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1938
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.elseexpr = Else{}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1964
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1968
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1974
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1978
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1984
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1988
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1998
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2008
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2024
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2028
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2038
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2054
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2062
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2072
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2088
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2104
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2114
		{
			yyVAL.token = Token{}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2118
		{
			yyVAL.token = yyDollar[1].token
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2124
		{
			yyVAL.token = Token{}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2128
		{
			yyVAL.token = yyDollar[1].token
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2134
		{
			yyVAL.token = Token{}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2138
		{
			yyVAL.token = yyDollar[1].token
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2144
		{
			yyVAL.token = Token{}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2148
		{
			yyVAL.token = yyDollar[1].token
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2154
		{
			yyVAL.token = yyDollar[1].token
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2158
		{
			yyVAL.token = yyDollar[1].token
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2164
		{
			yyVAL.token = Token{}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2168
		{
			yyVAL.token = yyDollar[1].token
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2174
		{
			yyVAL.token = Token{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2178
		{
			yyVAL.token = yyDollar[1].token
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2184
		{
			yyVAL.token = Token{}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.token = yyDollar[1].token
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2194
		{
			yyVAL.token = yyDollar[1].token
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2198
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
